#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	Если ПараметрыОтчета.Свойство("КонецПериодаОтчета") Тогда
		ДатаДляВерсииПостановления = ПараметрыОтчета.КонецПериодаОтчета;
		СтруктураПараметров.Вставить("КонецПериодаОтчета", ПараметрыОтчета.КонецПериодаОтчета); // Поддержка возможности формирования отчета за произвольный период
	Иначе
		ДатаДляВерсииПостановления = ПараметрыОтчета.НалоговыйПериод;
	КонецЕсли;
	
	ВерсияПостановленияНДС1137 = УправлениеПечатьюРТ.ВерсияПостановленияНДС1137(ДатаДляВерсииПостановления);
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур735");
	Иначе
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур1137");
	КонецЕсли; 
	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";

	СведенияОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ПараметрыОтчета.Организация, ПараметрыОтчета.НалоговыйПериод);
	НаименованиеОрганизацииДляПечатныхФорм = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОрганизации, "НаименованиеПолноеПоУчредительнымДокументам,");
	
	СписокОрганизацийОтбора = Новый СписокЗначений;
	СписокОрганизацийОтбора.Добавить(ПараметрыОтчета.Организация);
	
	СписокОрганизаций = Новый СписокЗначений;
	
	Для Каждого ОрганизацияСписка Из СписокОрганизацийОтбора Цикл
		СписокОрганизаций.Добавить(ОрганизацияСписка.Значение);
	КонецЦикла;
	
	Организация = ?(СписокОрганизаций.НайтиПоЗначению(ПараметрыОтчета.Организация) <> Неопределено, 
		ПараметрыОтчета.Организация, Справочники.Организации.ПустаяСсылка());
	
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("НалоговыйПериод", ПараметрыОтчета.НалоговыйПериод);
	СтруктураПараметров.Вставить("НаименованиеОрганизацииДляПечатныхФорм", НаименованиеОрганизацииДляПечатныхФорм);
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	
	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме",	ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме);
	СтруктураПараметров.Вставить("ГруппироватьПоКонтрагентам",			ПараметрыОтчета.ГруппироватьПоКонтрагентам);
	СтруктураПараметров.Вставить("ОтбиратьПоКонтрагенту",				ПараметрыОтчета.ОтбиратьПоКонтрагенту);
	СтруктураПараметров.Вставить("КонтрагентДляОтбора",					ПараметрыОтчета.КонтрагентДляОтбора);
	
	СтруктураПараметров.Вставить("ОткрыватьПомощникИзМакета");
	СтруктураПараметров.ОткрыватьПомощникИзМакета = Ложь;
	
	СтруктураПараметров.Вставить("ДанныеДляПроверкиКонтрагентов", 		ПараметрыОтчета.ДанныеДляПроверкиКонтрагентов);
	СтруктураПараметров.Вставить("ЭтоЖурналУчетаСчетовФактур", 			ПараметрыОтчета.ЭтоЖурналУчетаСчетовФактур);
	
	СтруктураПараметров.Вставить("ВерсияПостановленияНДС1137", ВерсияПостановленияНДС1137);
	
	СтруктураЗаписейЖурнала = Неопределено;
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	Если ПроверкаКонтрагентов.ФормироватьОтчетСтандартнымСпособом(СтруктураПараметров, СтруктураЗаписейЖурнала) Тогда
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
		СтруктураЗаписейЖурнала = ПолучитьЗаписиЖурналаСчетовФактур(СтруктураПараметров);
	КонецЕсли;
	
	Отступ = Макет.ПолучитьОбласть("Отступ");
	
	// ШАПКА
	
	Если ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	Шапка.Параметры.Организация = НаименованиеОрганизацииДляПечатныхФорм;
	Шапка.Параметры.ИННКПП  = "" + СведенияОрганизации.ИНН + ?(НЕ ЗначениеЗаполнено(СведенияОрганизации.КПП), "", ("/" + СведенияОрганизации.КПП));
	
	// Поддержка возможности формирования отчета за произвольный период	
	Если ПараметрыОтчета.Свойство("КонецПериодаОтчета") Тогда
		Шапка.Параметры.Квартал = "-";
		Шапка.Параметры.Год     = "----";
	Иначе
		Шапка.Параметры.Квартал = Формат(ПараметрыОтчета.НалоговыйПериод, "ДФ = к");
		Шапка.Параметры.Год     = Формат(ПараметрыОтчета.НалоговыйПериод, "ДФ = гггг");	
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Шапка);
	
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 1
	
	Часть1Заголовок = Макет.ПолучитьОбласть("Часть1Заголовок");
	ТабличныйДокумент.Вывести(Часть1Заголовок);
	
	Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
	
	СтрокиЧасть1 = СтруктураЗаписейЖурнала.ВыставленныеСчетаФактуры;
	
	НомерПП = 1;
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		
		// Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
					
				Если ВыводитьСтроку(СтруктураПараметров, ГруппировкаПоКонтрагенту, Истина) Тогда
			
					СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
					ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
					
					ГруппировкаПоСчетамФактурам = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
							
							СчетаФактурыЗаписи = ГруппировкаПоСчетамФактурам.Выбрать();
							КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
							
							НомерСтрокиВГруппировке = 1;
							//Итоговые данные по счету-фактуре
							СуммаПоСчетуФактуреИтоговая 				 = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреИтоговая;
							СуммаНДСИтоговая 							 = ГруппировкаПоСчетамФактурам.СуммаНДСИтоговая;
							СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
							СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
							СуммаНДСРазницаУменьшениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУменьшениеИтоговая;
							СуммаНДСРазницаУвеличениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУвеличениеИтоговая;
							
							Пока СчетаФактурыЗаписи.Следующий() Цикл
								Если ВыводитьСтроку(СтруктураПараметров, СчетаФактурыЗаписи) Тогда
									ВыводитьОстатокПоСчетуФактуре = Ложь;
									
									Если ВерсияПостановленияНДС1137 = 3 Тогда
										//пересчитаем остаток по счету-фактуре
										СуммаПоСчетуФактуреИтоговая 				 = СуммаПоСчетуФактуреИтоговая - СчетаФактурыЗаписи.СуммаДокумента;
										СуммаНДСИтоговая 							 = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
										СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
										СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
										СуммаНДСРазницаУменьшениеИтоговая 			 = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
										СуммаНДСРазницаУвеличениеИтоговая 			 = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
									КонецЕсли;
									
									Если КоличествоСгруппированных > 1 
										И ВерсияПостановленияНДС1137 = 3
										И НЕ СчетаФактурыЗаписи.СводныйКорректировочный Тогда
										
										//переопределим макет
										Если НомерСтрокиВГруппировке = 1 Тогда 
											Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
											Часть1Строка.Параметры.Ном = НомерПП;
											НомерПП = НомерПП + 1;
										Иначе
											Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
												Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");		
											Иначе
												//последняя строка
												Если СуммаПоСчетуФактуреИтоговая <> 0
													ИЛИ СуммаНДСИтоговая <> 0
													ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
													ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
													ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
													ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0 Тогда
													ВыводитьОстатокПоСчетуФактуре = Истина;
													Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
												Иначе
													Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
										
									Иначе
										
										Если ВерсияПостановленияНДС1137 = 3
											И НЕ СчетаФактурыЗаписи.СводныйКорректировочный
											И (СуммаПоСчетуФактуреИтоговая <> 0
											ИЛИ СуммаНДСИтоговая <> 0
											ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
											ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
											ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
											ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
											//Если пока только один СФ от комитента			
											ВыводитьОстатокПоСчетуФактуре = Истина;
											Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
										Иначе
											Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
										КонецЕсли;
										
										Часть1Строка.Параметры.Ном = НомерПП;
										НомерПП = НомерПП + 1;
										
									КонецЕсли;
									
									ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров);
									ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть1Строка, 2);
									ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
									
									Если ВыводитьОстатокПоСчетуФактуре Тогда 
										СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
										СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;	
										СтрокаОстаток.Параметры.СуммаДокумента = ?(СуммаПоСчетуФактуреИтоговая = 0, "", СуммаПоСчетуФактуреИтоговая);
										СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
										СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
										СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
										СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
										СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
										ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтрокаОстаток, 2);
										ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
									КонецЕсли;
									
									НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
								КонецЕсли;
							КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
		
	Иначе
		
		ГруппировкаПоСчетамФактурам = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
				
				СчетаФактурыЗаписи = ГруппировкаПоСчетамФактурам.Выбрать();
				КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
				
				НомерСтрокиВГруппировке = 1;
				//Итоговые данные по счету-фактуре
				СуммаПоСчетуФактуреИтоговая 				 = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреИтоговая;
				СуммаНДСИтоговая 							 = ГруппировкаПоСчетамФактурам.СуммаНДСИтоговая;
				СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
				СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоСчетамФактурам.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
				СуммаНДСРазницаУменьшениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУменьшениеИтоговая;
				СуммаНДСРазницаУвеличениеИтоговая 			 = ГруппировкаПоСчетамФактурам.СуммаНДСРазницаУвеличениеИтоговая;
				
				Пока СчетаФактурыЗаписи.Следующий() Цикл
					Если ВыводитьСтроку(СтруктураПараметров, СчетаФактурыЗаписи) Тогда
						
						ВыводитьОстатокПоСчетуФактуре = Ложь;
						
						Если ВерсияПостановленияНДС1137 = 3 Тогда
							//пересчитаем остаток по счету-фактуре
							СуммаПоСчетуФактуреИтоговая 				 = СуммаПоСчетуФактуреИтоговая - СчетаФактурыЗаписи.СуммаДокумента;
							СуммаНДСИтоговая 							 = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
							СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
							СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
							СуммаНДСРазницаУменьшениеИтоговая 			 = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
							СуммаНДСРазницаУвеличениеИтоговая 			 = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
						КонецЕсли;
						
						Если КоличествоСгруппированных > 1 
							И ВерсияПостановленияНДС1137 = 3
							И НЕ СчетаФактурыЗаписи.СводныйКорректировочный Тогда
							
							//переопределим макет
							Если НомерСтрокиВГруппировке = 1 Тогда 
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
								Часть1Строка.Параметры.Ном = НомерПП;
								НомерПП = НомерПП + 1;
							Иначе
								Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
									Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");		
								Иначе
									//последняя строка
									Если СуммаПоСчетуФактуреИтоговая <> 0
										ИЛИ СуммаНДСИтоговая <> 0
										ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
										ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
										ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
										ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0 Тогда
										ВыводитьОстатокПоСчетуФактуре = Истина;
										Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
									Иначе
										Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							
						Иначе
							
							Если ВерсияПостановленияНДС1137 = 3
								И НЕ СчетаФактурыЗаписи.СводныйКорректировочный
								И (СуммаПоСчетуФактуреИтоговая <> 0
								ИЛИ СуммаНДСИтоговая <> 0
								ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
								ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
								ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
								ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
								//Если пока только один СФ от комитента			
								ВыводитьОстатокПоСчетуФактуре = Истина;
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
							Иначе
								Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
							КонецЕсли;
							
							Часть1Строка.Параметры.Ном = НомерПП;
							НомерПП = НомерПП + 1;
						КонецЕсли;
						
						ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров);
						ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть1Строка);
						ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
						
						Если ВыводитьОстатокПоСчетуФактуре Тогда 
							СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
							СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;	
							СтрокаОстаток.Параметры.СуммаДокумента = ?(СуммаПоСчетуФактуреИтоговая = 0, "", СуммаПоСчетуФактуреИтоговая);
							СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
							СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
							СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
							СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
							СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
							ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтрокаОстаток);
							ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
						КонецЕсли;
						
						НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
					КонецЕсли;
				КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
		
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 2
	
	Часть2Заголовок = Макет.ПолучитьОбласть("Часть2Заголовок");
	ТабличныйДокумент.Вывести(Часть2Заголовок);
	
	Часть2Строка = Макет.ПолучитьОбласть("Часть2Строка");
	
	СтрокиЧасть2 = СтруктураЗаписейЖурнала.ПолученныеСчетаФактуры;
	
	НомерПП = 1;
	
	Если НЕ ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				Если ВыводитьСтроку(СтруктураПараметров, ГруппировкаПоКонтрагенту, Истина) Тогда
					СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
					ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
					ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
						Если ВыводитьСтроку(СтруктураПараметров, ГруппировкаПоСчетуФактуре) Тогда
							ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть2Строка.Параметры, ГруппировкаПоСчетуФактуре, СтруктураПараметров);
							ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть2Строка, 2);
							ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, ГруппировкаПоСчетуФактуре, ОбластьТабличногоДокумента);
							НомерПП = НомерПП + 1;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
	Иначе
		
		Выборка = СтрокиЧасть2.Выбрать();
		Пока Выборка.Следующий() Цикл

			Если ВыводитьСтроку(СтруктураПараметров, Выборка) Тогда 
				ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(Часть2Строка.Параметры, Выборка, СтруктураПараметров);
				Часть2Строка.Параметры.Ном = НомерПП;
				ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть2Строка);
				ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, Выборка, ОбластьТабличногоДокумента);
				НомерПП = НомерПП + 1;
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
		
	ТабличныйДокумент.Вывести(Отступ);
	
	// ПОДВАЛ
	
	ОтветственныеЛица = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(СтруктураПараметров.Организация, СтруктураПараметров.НалоговыйПериод);
	Если ЭтоЮрЛицо(СтруктураПараметров.Организация.ЮрФизЛицо) Тогда
		ИмяРук = ОтветственныеЛица.Руководитель;
		ИмяОрг = "";
		Свидетельство = "";
	Иначе
		ИмяРук = "";
		ИмяОрг = ОтветственныеЛица.Руководитель;
		СведенияОЮрФизЛице = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(СтруктураПараметров.Организация, СтруктураПараметров.НалоговыйПериод);
		Свидетельство = СведенияОЮрФизЛице.Свидетельство;
	КонецЕсли;
		
	Если ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме Тогда
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		Подвал.Параметры.ИмяРук = ИмяРук;
		Подвал.Параметры.ИмяОрг = ИмяОрг;
		Подвал.Параметры.Свидетельство = Свидетельство;

		ТабличныйДокумент.Вывести(Подвал);
	КонецЕсли;
	
	Результат = Новый Структура("СформированныйЖурнал, ОткрыватьПомощникИзМакета", 
		ТабличныйДокумент, СтруктураПараметров.ОткрыватьПомощникИзМакета);
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ДополнитьРезультатФормированияОтчетаДаннымиПоПроверкеКонтрагентов(Результат, СтруктураПараметров);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
		
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#Область СлужебныеПроцедурыФункции

Функция ПолучитьЗаписиЖурналаСчетовФактур(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",           НачалоДня(СтруктураПараметров.НалоговыйПериод));
	Запрос.УстановитьПараметр("Организация",             СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ЕстьОтборПоКонтрагентам", СтруктураПараметров.ОтбиратьПоКонтрагенту);
	Запрос.УстановитьПараметр("СписокКонтрагентов",      СтруктураПараметров.КонтрагентДляОтбора);
	Запрос.УстановитьПараметр("ПустаяСтрока",            "");
	Запрос.УстановитьПараметр("ПустаяДата",              Дата(1,1,1));
	Запрос.УстановитьПараметр("КодВалюты",               ОбщегоНазначенияРТКлиентСервер.КодВалюты());
	Запрос.УстановитьПараметр("ЧастьЖурнала",            "ВыставленныеСчетаФактуры");
	Запрос.УстановитьПараметр("НулеваяСумма",            0);
	Запрос.УстановитьПараметр("КонтрагентПустаяСсылка",  Справочники.Контрагенты.ПустаяСсылка());
	
	Если СтруктураПараметров.Свойство("КонецПериодаОтчета") Тогда
		Запрос.УстановитьПараметр("КонецПериода", СтруктураПараметров.КонецПериодаОтчета);
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(СтруктураПараметров.НалоговыйПериод));
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК СчетФактура,
	|	СчетФактураВыданный.Организация,
	|	СчетФактураВыданный.Номер,
	|	СчетФактураВыданный.Дата КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураВыданный.ДокументОснование.Контрагент, СчетФактураВыданный.ДокументОснование.ОрганизацияПолучатель) КАК Покупатель,
	|	ВЫБОР
	|	КОГДА СчетФактураВыданный.ДокументОснование.Контрагент ЕСТЬ NULL 
	|		ТОГДА СчетФактураВыданный.ДокументОснование.ОрганизацияПолучатель.НаименованиеПолное
	|	ИНАЧЕ ВЫБОР
	|			КОГДА (ПОДСТРОКА(СчетФактураВыданный.Контрагент.НаименованиеПолное,1, 250)) = &ПустаяСтрока
	|				ТОГДА СчетФактураВыданный.Контрагент.Наименование
	|			ИНАЧЕ ПОДСТРОКА(СчетФактураВыданный.Контрагент.НаименованиеПолное,1, 250)
	|		КОНЕЦ
	|	КОНЕЦ КАК КонтрагентНаименование,
	|	ВЫБОР
	|	КОГДА СчетФактураВыданный.ДокументОснование.Контрагент ЕСТЬ NULL 
	|		ТОГДА СчетФактураВыданный.ДокументОснование.ОрганизацияПолучатель.ИНН
	|	ИНАЧЕ СчетФактураВыданный.ДокументОснование.Контрагент.ИНН
	|	КОНЕЦ КАК КонтрагентИНН,
	|	ВЫБОР
	|	КОГДА СчетФактураВыданный.ДокументОснование.Контрагент ЕСТЬ NULL 
	|		ТОГДА СчетФактураВыданный.ДокументОснование.ОрганизацияПолучатель.КПП
	|	ИНАЧЕ СчетФактураВыданный.ДокументОснование.Контрагент.КПП
	|	КОНЕЦ КАК КонтрагентКПП,
	|	СчетФактураВыданный.ДокументОснование.СуммаДокумента КАК СуммаДокумента,
	|	СчетФактураВыданный.КодВидаОперации,
	|	СчетФактураВыданный.ДокументОснование,
	|	СчетФактураВыданный.ДатаВыставления,
	|	СчетФактураВыданный.Валюта,
	|	СчетФактураВыданный.ДокументОснование.УчитыватьНДС КАК УчитыватьНДС,
	|	ВЫБОР
	|		КОГДА ИсходныйСчетФактура.Ссылка ЕСТЬ NULL 
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ СчетФактураВыданный.Дата
	|	КОНЕЦ КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВыставленВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КодСпособаВыставления,
	|	СчетФактураВыданный.Дата КАК ДатаСоставления,
	|	СчетФактураВыданный.НомерИсправления,
	|	СчетФактураВыданный.Исправление
	|ПОМЕСТИТЬ ВыданныеСчета
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ИсходныйСчетФактура
	|		ПО (ИсходныйСчетФактура.Ссылка = СчетФактураВыданный.СчетФактураОснование)
	|ГДЕ
	|	СчетФактураВыданный.ДатаВыставления МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетФактураВыданный.Проведен
	|	И НЕ СчетФактураВыданный.ДатаВыставления = ДАТАВРЕМЯ(1, 1, 1)
	|	И СчетФактураВыданный.Организация = &Организация
	|	%ОтборПоКонтрагентам%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыданныеСчета.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ФильтрПоДокументам
	|ИЗ
	|	ВыданныеСчета КАК ВыданныеСчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Основание,
	|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ СуммыНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВозвратТоваровПоставщикуТовары.Ссылка КАК Ссылка,
	|		ВозвратТоваровПоставщикуТовары.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФильтрПоДокументам КАК ФильтрПоДокументам
	|			ПО ВозвратТоваровПоставщикуТовары.Ссылка = ФильтрПоДокументам.ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПередачаТоваровМеждуОрганизациямиТовары.Ссылка,
	|		ПередачаТоваровМеждуОрганизациямиТовары.СуммаНДС
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ПередачаТоваровМеждуОрганизациямиТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФильтрПоДокументам КАК ФильтрПоДокументам
	|			ПО ПередачаТоваровМеждуОрганизациямиТовары.Ссылка = ФильтрПоДокументам.ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеализацияТоваровТовары.Ссылка,
	|		РеализацияТоваровТовары.СуммаНДС
	|	ИЗ
	|		Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФильтрПоДокументам КАК ФильтрПоДокументам
	|			ПО РеализацияТоваровТовары.Ссылка = ФильтрПоДокументам.ДокументОснование) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыданныеСчета.СчетФактура КАК СчетФактура,
	|	ВыданныеСчета.СчетФактура КАК СчетФактураДокумент,
	|	ВыданныеСчета.Организация,
	|	ВыданныеСчета.Номер,
	|	ВыданныеСчета.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ВыданныеСчета.Номер КАК НомерСчетаФактуры,
	|	ВыданныеСчета.Покупатель КАК Контрагент,
	|	ВыданныеСчета.КонтрагентНаименование,
	|	ВыданныеСчета.КонтрагентИНН,
	|	ВыданныеСчета.КонтрагентКПП,
	|	ВыданныеСчета.СуммаДокумента,
	|	ВыданныеСчета.Валюта КАК НаименованиеВалюты,
	|	&КодВалюты КАК КодВалюты,
	|	ВыданныеСчета.КодВидаОперации,
	|	НЕ (ВыданныеСчета.ДокументОснование.УчитыватьНДС) КАК СчетФактураБезНДС,
	|	ВыданныеСчета.ДатаВыставления,
	|	ВыданныеСчета.ДатаВыставления КАК ДатаПередачиПолучения,
	|	ВыданныеСчета.УчитыватьНДС,
	|	ВыданныеСчета.ДатаИсправления,
	|	ВыданныеСчета.КодСпособаВыставления,
	|	ВыданныеСчета.ДатаСоставления,
	|	ВыданныеСчета.НомерИсправления,
	|	ВыданныеСчета.Исправление,
	|	ЕСТЬNULL(СуммыНДС.СуммаНДС, 0) КАК СуммаНДС,
	|	ЛОЖЬ КАК СводныйКорректировочный,
	|	&ЧастьЖурнала КАК ЧастьЖурнала,
	|	&НулеваяСумма КАК СуммаДокументаРазницаУменьшение,
	|	&НулеваяСумма КАК СуммаДокументаРазницаУвеличение,
	|	&НулеваяСумма КАК СуммаНДСРазницаУменьшение,
	|	&НулеваяСумма КАК СуммаНДСРазницаУвеличение,
	|	&ПустаяСтрока КАК НомерКорректировочногоСчетаФактуры,
	|	&ПустаяДата КАК ДатаКорректировочногоСчетаФактуры,
	|	&ПустаяСтрока КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	&ПустаяДата КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	&ПустаяСтрока КАК КодВидаСделки,
	|	&ПустаяСтрока КАК СубкомиссионерИНН,
	|	&ПустаяСтрока КАК СубкомиссионерКПП,
	|	&КонтрагентПустаяСсылка КАК Комитент,
	|	&ПустаяСтрока КАК КомитентИНН,
	|	&ПустаяСтрока КАК КомитентКПП,
	|	&ПустаяСтрока КАК НомерСчетаФактурыКомитента,
	|	&ПустаяДата КАК ДатаСчетаФактурыКомитента,
	|	ВыданныеСчета.СуммаДокумента КАК СуммаПоСчетуФактуреИтоговая,
	|	ЕСТЬNULL(СуммыНДС.СуммаНДС, 0) КАК СуммаНДСИтоговая,
	|	&НулеваяСумма КАК СуммаПоСчетуФактуреРазницаУменьшениеИтоговая,
	|	&НулеваяСумма КАК СуммаПоСчетуФактуреРазницаУвеличениеИтоговая,
	|	&НулеваяСумма КАК СуммаНДСРазницаУменьшениеИтоговая,
	|	&НулеваяСумма КАК СуммаНДСРазницаУвеличениеИтоговая,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	&ПустаяСтрока КАК КорректировочныйСчетФактура,
	|	ВыданныеСчета.Номер КАК НомерСчетаФактурыДляСортировки
	|ИЗ
	|	ВыданныеСчета КАК ВыданныеСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыНДС КАК СуммыНДС
	|		ПО ВыданныеСчета.ДокументОснование = СуммыНДС.Основание
	|УПОРЯДОЧИТЬ ПО
	|	ВыданныеСчета.ДатаВыставления,
	|	НомерСчетаФактурыДляСортировки
	|ИТОГИ
	|	СУММА(СуммаДокумента),
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаДокументаРазницаУменьшение),
	|	СУММА(СуммаДокументаРазницаУвеличение),
	|	СУММА(СуммаНДСРазницаУменьшение),
	|	СУММА(СуммаНДСРазницаУвеличение),
	|	МАКСИМУМ(СуммаПоСчетуФактуреИтоговая),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	МАКСИМУМ(СуммаНДСИтоговая),
	|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая),
	|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая),
	|	МАКСИМУМ(СуммаНДСРазницаУменьшениеИтоговая),
	|	МАКСИМУМ(СуммаНДСРазницаУвеличениеИтоговая),
	|	МАКСИМУМ(КонтрагентНаименование)
	|ПО
	|	СчетФактураДокумент";
	
	
	Если СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоКонтрагентам%", "И СчетФактураВыданный.ДокументОснование.Контрагент В(&СписокКонтрагентов)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоКонтрагентам%", "");
	КонецЕсли;
		
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		ЗаменяемыйСтандартныйТекст = "ПО
		|	СчетФактураДокумент";
		
		НовыйТекст = "ПО
		|	Контрагент,
		|	СчетФактураДокумент";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ЗаменяемыйСтандартныйТекст, НовыйТекст);
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
			|Контрагент, ");
			
	КонецЕсли;
	
	ВыставленныеСчетаФактуры = Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("ЧастьЖурнала", "ПолученныеСчетаФактуры");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка,
	|	СчетФактураПолученный.Валюта,
	|	СчетФактураПолученный.Номер,
	|	СчетФактураПолученный.Дата КАК ДатаВыставления,
	|	СчетФактураПолученный.Организация,
	|	СчетФактураПолученный.Исправление,
	|	СчетФактураПолученный.НомерИсправления,
	|	СчетФактураПолученный.ДатаИсправления,
	|	СчетФактураПолученный.СчетФактураОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ПолученВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КодСпособаВыставления,
	|	СчетФактураПолученный.КодВидаОперации,
	|	СчетФактураПолученный.Контрагент КАК Продавец,
	|	СчетФактураПолученный.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА (ПОДСТРОКА(СчетФактураПолученный.Контрагент.НаименованиеПолное,1, 250)) = &ПустаяСтрока
	|			ТОГДА СчетФактураПолученный.Контрагент.Наименование
	|		ИНАЧЕ ПОДСТРОКА(СчетФактураПолученный.Контрагент.НаименованиеПолное,1, 250)
	|	КОНЕЦ КАК КонтрагентНаименование,
	|	СчетФактураПолученный.Контрагент.ИНН КАК КонтрагентИНН,
	|	СчетФактураПолученный.Контрагент.КПП КАК КонтрагентКПП,
	|	СчетФактураПолученный.ДатаСоставления
	|ПОМЕСТИТЬ ПолученныеСчета
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Проведен
	|	И СчетФактураПолученный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетФактураПолученный.Организация = &Организация
	|	%ОтборПоКонтрагентам%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	ДокументыОснования.ДокументОснование.СуммаДокумента КАК СуммаДокумента,
	|	ДокументыОснования.ДокументОснование.УчитыватьНДС КАК УчитыватьНДС,
	|	ПолученныеСчета.Ссылка КАК СчетФактура
	|ПОМЕСТИТЬ ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПолученныеСчета КАК ПолученныеСчета
	|		ПО ДокументыОснования.Ссылка = ПолученныеСчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование
	|ПОМЕСТИТЬ ФильтрПоДокументам
	|ИЗ
	|	ДокументыОснования КАК ДокументыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Основание,
	|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ СуммыНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоступлениеТоваровТовары.Ссылка КАК Ссылка,
	|		ПоступлениеТоваровТовары.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФильтрПоДокументам КАК ФильтрПоДокументам
	|			ПО ПоступлениеТоваровТовары.Ссылка = ФильтрПоДокументам.ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтПокупателяТовары.Ссылка,
	|		ВозвратТоваровОтПокупателяТовары.СуммаНДС
	|	ИЗ
	|		Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФильтрПоДокументам КАК ФильтрПоДокументам
	|			ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ФильтрПоДокументам.ДокументОснование) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОснования.СчетФактура,
	|	СУММА(ДокументыОснования.СуммаДокумента) КАК СуммаДокумента,
	|	СУММА(СуммыНДС.СуммаНДС) КАК СуммаНДС,
	|	ДокументыОснования.УчитыватьНДС
	|ПОМЕСТИТЬ СуммыПоСчетам
	|ИЗ
	|	ДокументыОснования КАК ДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыНДС КАК СуммыНДС
	|		ПО ДокументыОснования.ДокументОснование = СуммыНДС.Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОснования.СчетФактура,
	|	ДокументыОснования.УчитыватьНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолученныеСчета.Ссылка,
	|	ПолученныеСчета.Валюта,
	|	ПолученныеСчета.Номер,
	|	ПолученныеСчета.ДатаВыставления,
	|	ПолученныеСчета.Организация,
	|	ПолученныеСчета.Исправление,
	|	ПолученныеСчета.НомерИсправления,
	|	ПолученныеСчета.ДатаИсправления,
	|	ПолученныеСчета.СчетФактураОснование,
	|	ПолученныеСчета.КодСпособаВыставления,
	|	ПолученныеСчета.КодВидаОперации,
	|	ПолученныеСчета.Продавец,
	|	ПолученныеСчета.Контрагент,
	|	ПолученныеСчета.КонтрагентИНН,
	|	ПолученныеСчета.КонтрагентКПП,
	|	ПолученныеСчета.КонтрагентНаименование,
	|	ПолученныеСчета.ДатаСоставления,
	|	СуммыПоСчетам.УчитыватьНДС,
	|	СуммыПоСчетам.СуммаДокумента,
	|	СуммыПоСчетам.СуммаНДС
	|ПОМЕСТИТЬ СчетаНаПоступление
	|ИЗ
	|	ПолученныеСчета КАК ПолученныеСчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СуммыПоСчетам КАК СуммыПоСчетам
	|		ПО ПолученныеСчета.Ссылка = СуммыПоСчетам.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка,
	|	СчетФактураВыданный.Валюта,
	|	СчетФактураВыданный.Организация,
	|	СчетФактураВыданный.Номер,
	|	СчетФактураВыданный.ДокументОснование.Организация КАК Продавец,
	|	СчетФактураВыданный.ДокументОснование.Организация.ИНН КАК КонтрагентИНН,
	|	СчетФактураВыданный.ДокументОснование.Организация.КПП КАК КонтрагентКПП,
	|	СчетФактураВыданный.ДокументОснование.Организация.НаименованиеПолное КАК КонтрагентНаименование,
	|	СчетФактураВыданный.ДокументОснование.СуммаДокумента КАК СуммаДокумента,
	|	СчетФактураВыданный.КодВидаОперации,
	|	СчетФактураВыданный.ДокументОснование,
	|	СчетФактураВыданный.ДатаВыставления,
	|	СчетФактураВыданный.ДокументОснование.УчитыватьНДС КАК УчитыватьНДС,
	|	ВЫБОР
	|		КОГДА ИсходныйСчетФактура.Ссылка ЕСТЬ NULL 
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ СчетФактураВыданный.Дата
	|	КОНЕЦ КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВыставленВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КодСпособаВыставления,
	|	СчетФактураВыданный.Дата КАК ДатаСоставления,
	|	СчетФактураВыданный.НомерИсправления,
	|	СчетФактураВыданный.Исправление,
	|	СчетФактураВыданный.СчетФактураОснование
	|ПОМЕСТИТЬ ВыданныеСчетаПередача
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ИсходныйСчетФактура
	|		ПО (ИсходныйСчетФактура.Ссылка = СчетФактураВыданный.СчетФактураОснование)
	|ГДЕ
	|	СчетФактураВыданный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетФактураВыданный.ДокументОснование.ОрганизацияПолучатель = &Организация
	|	И СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|	%ОтборПоКонтрагентамПередачи%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыданныеСчетаПередача.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ФильтрПоДокументамПередача
	|ИЗ
	|	ВыданныеСчетаПередача КАК ВыданныеСчетаПередача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациямиТовары.Ссылка КАК Основание,
	|	СУММА(ПередачаТоваровМеждуОрганизациямиТовары.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ СуммыНДСПередача
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ПередачаТоваровМеждуОрганизациямиТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФильтрПоДокументамПередача КАК ФильтрПоДокументамПередача
	|		ПО ПередачаТоваровМеждуОрганизациямиТовары.Ссылка = ФильтрПоДокументамПередача.ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваровМеждуОрганизациямиТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыданныеСчетаПередача.Ссылка,
	|	ВыданныеСчетаПередача.Валюта,
	|	ВыданныеСчетаПередача.Организация,
	|	ВыданныеСчетаПередача.Номер,
	|	ВыданныеСчетаПередача.Продавец,
	|	ВыданныеСчетаПередача.КонтрагентИНН КАК КонтрагентИНН,
	|	ВыданныеСчетаПередача.КонтрагентКПП КАК КонтрагентКПП,
	|	ВыданныеСчетаПередача.КонтрагентНаименование,
	|	ВыданныеСчетаПередача.СуммаДокумента,
	|	ВыданныеСчетаПередача.КодВидаОперации,
	|	ВыданныеСчетаПередача.ДокументОснование,
	|	ВыданныеСчетаПередача.ДатаВыставления,
	|	ВыданныеСчетаПередача.УчитыватьНДС,
	|	ВыданныеСчетаПередача.ДатаИсправления,
	|	ВыданныеСчетаПередача.КодСпособаВыставления,
	|	ВыданныеСчетаПередача.ДатаСоставления,
	|	ВыданныеСчетаПередача.НомерИсправления,
	|	ВыданныеСчетаПередача.Исправление,
	|	ВыданныеСчетаПередача.СчетФактураОснование,
	|	СуммыНДСПередача.СуммаНДС
	|ПОМЕСТИТЬ СчетаНаПередачу
	|ИЗ
	|	ВыданныеСчетаПередача КАК ВыданныеСчетаПередача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СуммыНДСПередача КАК СуммыНДСПередача
	|		ПО ВыданныеСчетаПередача.ДокументОснование = СуммыНДСПередача.Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаНаПоступление.Ссылка,
	|	СчетаНаПоступление.Валюта,
	|	СчетаНаПоступление.Номер,
	|	СчетаНаПоступление.ДатаВыставления,
	|	СчетаНаПоступление.Организация,
	|	СчетаНаПоступление.Исправление,
	|	СчетаНаПоступление.НомерИсправления,
	|	СчетаНаПоступление.ДатаИсправления,
	|	СчетаНаПоступление.СчетФактураОснование,
	|	СчетаНаПоступление.КонтрагентИНН,
	|	СчетаНаПоступление.КонтрагентКПП,
	|	СчетаНаПоступление.КодВидаОперации,
	|	СчетаНаПоступление.Продавец КАК Контрагент,
	|	СчетаНаПоступление.ДатаСоставления,
	|	СчетаНаПоступление.КонтрагентНаименование КАК КонтрагентНаименование,
	|	СчетаНаПоступление.УчитыватьНДС КАК УчитыватьНДС,
	|	СчетаНаПоступление.КодСпособаВыставления КАК КодСпособаВыставления,
	|	СчетаНаПоступление.СуммаДокумента,
	|	СчетаНаПоступление.СуммаНДС
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	СчетаНаПоступление КАК СчетаНаПоступление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНаПередачу.Ссылка,
	|	СчетаНаПередачу.Валюта,
	|	СчетаНаПередачу.Номер,
	|	СчетаНаПередачу.ДатаВыставления,
	|	СчетаНаПередачу.Организация,
	|	СчетаНаПередачу.Исправление,
	|	СчетаНаПередачу.НомерИсправления,
	|	СчетаНаПередачу.ДатаИсправления,
	|	СчетаНаПередачу.СчетФактураОснование,
	|	СчетаНаПередачу.КонтрагентИНН,
	|	СчетаНаПередачу.КонтрагентКПП,
	|	СчетаНаПередачу.КодВидаОперации,
	|	СчетаНаПередачу.Продавец,
	|	СчетаНаПередачу.ДатаСоставления,
	|	СчетаНаПередачу.КонтрагентНаименование,
	|	СчетаНаПередачу.УчитыватьНДС,
	|	СчетаНаПередачу.КодСпособаВыставления,
	|	СчетаНаПередачу.СуммаДокумента,
	|	СчетаНаПередачу.СуммаНДС
	|ИЗ
	|	СчетаНаПередачу КАК СчетаНаПередачу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.Ссылка КАК СчетФактураДокумент,
	|	Результат.Валюта КАК НаименованиеВалюты,
	|	&КодВалюты КАК КодВалюты,
	|	Результат.Номер,
	|	Результат.Номер КАК НомерСчетаФактуры,
	|	Результат.ДатаВыставления,
	|	Результат.ДатаВыставления КАК ДатаПередачиПолучения,
	|	Результат.ДатаВыставления КАК ДатаСчетаФактуры,
	|	Результат.Организация,
	|	НЕ (Результат.УчитыватьНДС) КАК СчетФактураБезНДС,
	|	Результат.Исправление,
	|	Результат.НомерИсправления,
	|	Результат.ДатаИсправления,
	|	Результат.СчетФактураОснование,
	|	Результат.КодВидаОперации,
	|	Результат.Контрагент,
	|	Результат.КонтрагентИНН,
	|	Результат.КонтрагентКПП,
	|	Результат.ДатаСоставления,
	|	Результат.КонтрагентНаименование,
	|	Результат.УчитыватьНДС,
	|	&ПустаяСтрока КАК НомерКорректировочногоСчетаФактуры,
	|	&ПустаяДата КАК ДатаКорректировочногоСчетаФактуры,
	|	&ПустаяСтрока КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	&ПустаяДата КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	Результат.КодСпособаВыставления,
	|	Результат.СуммаДокумента,
	|	&ЧастьЖурнала КАК ЧастьЖурнала,
	|	&НулеваяСумма КАК СуммаДокументаРазницаУменьшение,
	|	&НулеваяСумма КАК СуммаДокументаРазницаУвеличение,
	|	&НулеваяСумма КАК СуммаНДСРазницаУменьшение,
	|	&НулеваяСумма КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	&ПустаяСтрока КАК КорректировочныйСчетФактура,
	|	&КонтрагентПустаяСсылка КАК Субкомиссионер,
	|	&ПустаяСтрока КАК КодВидаСделки,
	|	&ПустаяСтрока КАК СубкомиссионерИНН,
	|	&ПустаяСтрока КАК СубкомиссионерКПП,
	|	&КонтрагентПустаяСсылка КАК Комитент,
	|	&ПустаяСтрока КАК КомитентИНН,
	|	&ПустаяСтрока КАК КомитентКПП,
	|	&ПустаяСтрока КАК НомерСчетаФактурыКомитента,
	|	&ПустаяДата КАК ДатаСчетаФактурыКомитента,
	|	Результат.СуммаДокумента КАК СуммаПоСчетуФактуреИтоговая,
	|	Результат.СуммаНДС КАК СуммаНДСИтоговая,
	|	&НулеваяСумма КАК СуммаПоСчетуФактуреРазницаУменьшениеИтоговая,
	|	&НулеваяСумма КАК СуммаПоСчетуФактуреРазницаУвеличениеИтоговая,
	|	&НулеваяСумма КАК СуммаНДСРазницаУменьшениеИтоговая,
	|	&НулеваяСумма КАК СуммаНДСРазницаУвеличениеИтоговая,
	|	Результат.СуммаНДС
	|ИЗ
	|	Результат КАК Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПередачиПолучения,
	|	НомерСчетаФактуры";
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		Запрос.Текст = Запрос.Текст + "
			|ИТОГИ
			|	СУММА(СуммаДокумента),
			|	СУММА(СуммаНДС),
			|	МАКСИМУМ(СуммаПоСчетуФактуреИтоговая),
			|	МАКСИМУМ(СуммаНДСИтоговая),
			|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая),
			|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая),
			|	МАКСИМУМ(СуммаНДСРазницаУменьшениеИтоговая),
			|	МАКСИМУМ(СуммаНДСРазницаУвеличениеИтоговая),
			|	МАКСИМУМ(КонтрагентНаименование)
			|ПО
			|	Контрагент";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
			|Контрагент, ");
	КонецЕсли;
	
	Если СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоКонтрагентам%", "И СчетФактураПолученный.Контрагент В(&СписокКонтрагентов)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоКонтрагентамПередачи%", "И Ложь");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоКонтрагентам%", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоКонтрагентамПередачи%", "");
	КонецЕсли;
	
	ПолученныеСчетаФактуры = Запрос.Выполнить();
	
	ДанныеОтчета = Новый Структура();
	ДанныеОтчета.Вставить("ВыставленныеСчетаФактуры", 	ВыставленныеСчетаФактуры);
	ДанныеОтчета.Вставить("ПолученныеСчетаФактуры", 	ПолученныеСчетаФактуры);
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ЗапомнитьДанныеОтчета(СтруктураПараметров, ДанныеОтчета);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
	
	Возврат Новый Структура("ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры", ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры);
	
КонецФункции

Процедура ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(ПараметрыСтроки, ЗаписьЖурналаУчетаСчетовФактур, СтруктураПараметров)
	
	ТекстБезНДС = НСтр("ru = 'без НДС'");
	
	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, ЗаписьЖурналаУчетаСчетовФактур);
	ПараметрыСтроки.ДатаПередачиПолучения = Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаВыставления, "ДФ=dd.MM.yyyy");
	Если СтруктураПараметров.ВерсияПостановленияНДС1137 = 3 Тогда
		ПараметрыСтроки.НомерДата = Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy")
									+ ";" + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ЗаписьЖурналаУчетаСчетовФактур.Номер, Истина, Истина);
									
		ПараметрыСтроки.НомерДатаКорректировки = "";
		
		Если ЗаписьЖурналаУчетаСчетовФактур.Исправление Тогда
			ПараметрыСтроки.НомерДатаИсправления = Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy")
													+ ";" + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления, Истина, Истина);
		Иначе
			ПараметрыСтроки.НомерДатаИсправления = "";
		КонецЕсли;
		
	Иначе
		ПараметрыСтроки.НомерСчетаФактуры     = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ЗаписьЖурналаУчетаСчетовФактур.Номер, Истина, Истина);
		ПараметрыСтроки.ДатаСчетаФактуры      = Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСоставления, "ДФ=dd.MM.yyyy");
		ПараметрыСтроки.ДатаИсправления       = Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy");
		
		ПараметрыСтроки.НомерКорректировочногоСчетаФактуры	= "";
		ПараметрыСтроки.ДатаКорректировочногоСчетаФактуры	= "";
		
	КонецЕсли;
		
	СведенияОЮрФизЛице = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ЗаписьЖурналаУчетаСчетовФактур.Контрагент, СтруктураПараметров.НалоговыйПериод);
	
	ПараметрыСтроки.КонтрагентИННКПП = СокрЛП(СведенияОЮрФизЛице.ИНН)
		+ ?(НЕ ПустаяСтрока(СведенияОЮрФизЛице.ИНН),"/", "") + СокрЛП(СведенияОЮрФизЛице.КПП);
	
	ПараметрыСтроки.Валюта = НСтр("ru = 'Российский рубль, 643'");
	
	Если НЕ ЗаписьЖурналаУчетаСчетовФактур.УчитыватьНДС Тогда
		
		ПараметрыСтроки.СуммаНДС = ТекстБезНДС;
		
	КонецЕсли;
	
	ПараметрыСтроки.СуммаДокументаРазницаУменьшение	= "";
	ПараметрыСтроки.СуммаДокументаРазницаУвеличение	= "";
	ПараметрыСтроки.СуммаНДСРазницаУменьшение	= "";
	ПараметрыСтроки.СуммаНДСРазницаУвеличение	= "";

КонецПроцедуры

Функция ВыводитьСтроку(Знач СтруктураПараметров, Строка, ЭтоИтог = Ложь) Экспорт
	
	// Если это детальные записи, то ИНН, КПП и контрагента берем из них
	// Если это итоговая запись, то ИНН, КПП и контрагента берем из их строк
	Если ТипЗнч(Строка) = Тип("СтрокаДереваЗначений") И Строка.Строки.Количество()>0  Тогда 
		ДанныеВСтроке = Строка.Строки[0];
	Иначе
		ДанныеВСтроке = Строка;
	КонецЕсли;
	
	ВыводитьСтроку = Истина;
	Если ЭтоИтог Тогда
		// В строке итога нет ИНН, КПП и даты, есть только контрагент 
		СтруктураПараметров.Вставить("ЭтоИтог", Истина);
		
		ВыводитьСтроку = ПроверкаКонтрагентов.ВыводитьСтрокуОтчета(
				СтруктураПараметров, 
				ДанныеВСтроке.Контрагент, 
				Неопределено, 
				Неопределено, 
				Неопределено);

	Иначе
		
		СтруктураПараметров.Вставить("ЭтоИтог", Ложь);
		
		ВыводитьСтроку = ПроверкаКонтрагентов.ВыводитьСтрокуОтчета(
			СтруктураПараметров, 
			ДанныеВСтроке.Контрагент, 
			ДанныеВСтроке.КонтрагентИНН, 
			ДанныеВСтроке.КонтрагентКПП, 
			ДанныеВСтроке.ДатаСчетаФактуры);
	КонецЕсли;
	
	Возврат ВыводитьСтроку;
	
КонецФункции

Процедура ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, Строка, ОбластьТабличногоДокумента) Экспорт
	
	// Если это не формирование отчета, а заполнение документа, тогда игнорируем
	Если СтруктураПараметров.Свойство("ЗаполнениеДокумента") И СтруктураПараметров.ЗаполнениеДокумента Тогда
		Возврат;
	КонецЕсли;
	
	ДатаСобытия	= Строка.ДатаСчетаФактуры;
	
	Если НЕ ЗначениеЗаполнено(ДатаСобытия) Тогда
		Возврат;
	КонецЕсли;
	
	// Если это детальные записи, то ИНН, КПП и контрагента берем из них
	// Если это итоговая запись, то ИНН, КПП и контрагента берем из их строк
	Если ТипЗнч(Строка) = Тип("СтрокаДереваЗначений") И Строка.Строки.Количество()> 0  Тогда 
		ДанныеВСтроке = Строка.Строки[0];
	Иначе
		ДанныеВСтроке = Строка;
	КонецЕсли;
	
	Контрагент 						= Строка.Контрагент;
	НомерСтрокиТабличногоДокумента 	= ОбластьТабличногоДокумента.Верх;
	Дата 							= НачалоДня(ДатаСобытия);
	Если СтруктураПараметров.Свойство("ЭтоКнигаПокупок") Тогда
		ИНН = ДанныеВСтроке.ПродавецИНН;
		КПП = ДанныеВСтроке.ПродавецКПП;
	ИначеЕсли СтруктураПараметров.Свойство("ЭтоКнигаПродаж") Тогда
		ИНН = ДанныеВСтроке.ПокупательИНН;
		КПП = ДанныеВСтроке.ПокупательКПП;
	ИначеЕсли СтруктураПараметров.Свойство("ЭтоЖурналУчетаСчетовФактур") Тогда
		ИНН = ДанныеВСтроке.КонтрагентИНН;
		КПП = ДанныеВСтроке.КонтрагентКПП;
	КонецЕсли;
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, НомерСтрокиТабличногоДокумента, Контрагент, ИНН, КПП, Дата);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
	
КонецПроцедуры

Функция ЭтоЮрЛицо(ЮрФизЛицо) 

	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо ИЛИ ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
		Возврат Истина;
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо ИЛИ ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции // ЭтоЮрЛицо()


#КонецОбласти

#КонецЕсли