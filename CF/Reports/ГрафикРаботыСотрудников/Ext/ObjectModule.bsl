#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ДатаОтчета					= ПараметрыОтчета.ПараметрыДанных.НайтиЗначениеПараметра(
	Новый ПараметрКомпоновкиДанных("ДатаОтчета")).Значение;
	Магазин					= ПараметрыОтчета.ПараметрыДанных.НайтиЗначениеПараметра(
	Новый ПараметрКомпоновкиДанных("Магазин")).Значение;
	
	Если НЕ ЗначениеЗаполнено(Магазин) Тогда
		ВызватьИсключение НСтр("ru = 'Не заполнено значение обязательного параметра ""Магазин""'");
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала", НачалоМесяца(ДатаОтчета));
	СтруктураПараметров.Вставить("ДатаОкончания", КонецМесяца(ДатаОтчета));
	СтруктураПараметров.Вставить("Магазин", Магазин);

	Макет = ПолучитьМакет("Макет");
	
	// Заголовок +
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Магазин = Магазин;
	ОбластьМакета.Параметры.Период = ПредставлениеПериода(НачалоМесяца(ДатаОтчета), КонецМесяца(ДатаОтчета));	
	ДокументРезультат.Вывести(ОбластьМакета);
	// Заголовок -
	
	ВыборкаПоСменам = ПланируемоеРабочееВремяСотрудников(СтруктураПараметров);
	Пока ВыборкаПоСменам.Следующий() Цикл
		
		Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
		СвойстваОбласти = Новый Структура;
		СвойстваОбласти.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложение.Центр);
		СвойстваОбласти.Вставить("ВертикальноеПоложение", ВертикальноеПоложение.Центр); 
		СвойстваОбласти.Вставить("ГраницаСверху", Линия);
		СвойстваОбласти.Вставить("ГраницаСнизу", Линия);
		СвойстваОбласти.Вставить("ГраницаСлева", Линия);
		СвойстваОбласти.Вставить("ГраницаСправа", Линия);
		СвойстваОбласти.Вставить("ШиринаКолонки", 5);
		
		КоличествоДнейВМесяце = Число(Сред(КонецМесяца(ДатаОтчета), 1, 2));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Смена");
		ОбластьМакета.Параметры.Смена = ВыборкаПоСменам.Смена;
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ШапкаВерх = Макет.ПолучитьОбласть("ШапкаВерх");
		ШапкаВерх.Область(1,5,1,4+КоличествоДнейВМесяце).Объединить();
		ЗаполнитьЗначенияСвойств(ШапкаВерх.Область(1,5,1,4+КоличествоДнейВМесяце), СвойстваОбласти,,"ШиринаКолонки");
		ШапкаВерх.Область(1,5+КоличествоДнейВМесяце).Текст = "Всего";
		ЗаполнитьЗначенияСвойств(ШапкаВерх.Область(1,5+КоличествоДнейВМесяце), СвойстваОбласти,,"ШиринаКолонки, ГраницаСнизу");
		ДокументРезультат.Вывести(ШапкаВерх);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаНиз|ШапкаКолонки");
		ДокументРезультат.Вывести(ОбластьМакета);
		
		Для К=1 По КоличествоДнейВМесяце Цикл
			Секция = Макет.ПолучитьОбласть("ШапкаНиз|Дни");
			Секция.Область().Текст = К;
			ЗаполнитьЗначенияСвойств(Секция.Область(), СвойстваОбласти);
			ДокументРезультат.Присоединить(Секция);
			Если К = КоличествоДнейВМесяце Тогда
				Секция = Макет.ПолучитьОбласть("ШапкаНиз|Всего");
				Секция.Область().Текст = "(часов)";
				ЗаполнитьЗначенияСвойств(Секция.Область(), СвойстваОбласти,,"ШиринаКолонки, ГраницаСверху");
				ДокументРезультат.Присоединить(Секция);
			КонецЕсли;
		КонецЦикла;
		
		СтрокиДляПовтора = Макет.ПолучитьОбласть("СтрокиДляПовтора");
		СтрокиДляПовтора.Область(1,5,1,4+КоличествоДнейВМесяце).Объединить();
		ЗаполнитьЗначенияСвойств(СтрокиДляПовтора.Область(1,5,1,4+КоличествоДнейВМесяце), СвойстваОбласти,,"ШиринаКолонки");
		СтрокиДляПовтора.Область(1,5+КоличествоДнейВМесяце).Текст = "5";
		ЗаполнитьЗначенияСвойств(СтрокиДляПовтора.Область(1,5+КоличествоДнейВМесяце), СвойстваОбласти,,"ШиринаКолонки");
		ДокументРезультат.Вывести(СтрокиДляПовтора);
		
		ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область("СтрокиДляПовтора");
		
		ДанныеОВремениПоСотруднику = Новый ТаблицаЗначений;
		ДанныеОВремениПоСотруднику.Колонки.Добавить("Сотрудник");
		ДанныеОВремениПоСотруднику.Колонки.Добавить("Работа");
		Для Д=1 По КоличествоДнейВМесяце Цикл
			ДанныеОВремениПоСотруднику.Колонки.Добавить("День"+Строка(Д));
		КонецЦикла;
		ДанныеОВремениПоСотруднику.Колонки.Добавить("Всего");
		
		НомерСтроки = 1;
		
		ВыборкаПланируемоеРабочееВремяСотрудников = ВыборкаПоСменам.Выбрать();
		
		Пока ВыборкаПланируемоеРабочееВремяСотрудников.СледующийПоЗначениюПоля("Сотрудник") Цикл
				
			Пока ВыборкаПланируемоеРабочееВремяСотрудников.Следующий() Цикл
				Отбор = Новый Структура();
				Отбор.Вставить("Сотрудник", ВыборкаПланируемоеРабочееВремяСотрудников.Сотрудник);
				Отбор.Вставить("Работа", ВыборкаПланируемоеРабочееВремяСотрудников.Работа);
				Если ДанныеОВремениПоСотруднику.НайтиСтроки(Отбор).Количество() = 0 Тогда
					СтрокаТаблицыДанныхОВремени = ДанныеОВремениПоСотруднику.Добавить();
					СтрокаТаблицыДанныхОВремени.Всего = 0;
				КонецЕсли;
				
				ДеньДляЗаполнения = Число(Формат(ВыборкаПланируемоеРабочееВремяСотрудников.Дата, "ДФ=д"))+1;
				Если ДеньДляЗаполнения = ДанныеОВремениПоСотруднику.Колонки.Количество() Тогда
					Прервать;
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыДанныхОВремени, ВыборкаПланируемоеРабочееВремяСотрудников);
				ЕстьМинуты = ?((ВыборкаПланируемоеРабочееВремяСотрудников.Часы - Дата("00010101"))%3600 = 0, Ложь, Истина);
				Если ЕстьМинуты Тогда
					ПланируемыеЧасы = Формат(ВыборкаПланируемоеРабочееВремяСотрудников.Часы, "ДФ=""Ч'-'мм""");
				Иначе
					ПланируемыеЧасы = Формат(ВыборкаПланируемоеРабочееВремяСотрудников.Часы, "ДФ=Ч");
				КонецЕсли;
				СтрокаТаблицыДанныхОВремени[ДеньДляЗаполнения] = ПланируемыеЧасы;
				СтрокаТаблицыДанныхОВремени.Всего = СтрокаТаблицыДанныхОВремени.Всего + Окр(Число((ВыборкаПланируемоеРабочееВремяСотрудников.Часы - Дата("00010101"))/3600),1);
			КонецЦикла;
		КонецЦикла;
		
		Для каждого ТекСтрока Из ДанныеОВремениПоСотруднику Цикл
				
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекСтрока);
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			
			Для Счетчик=1 По КоличествоДнейВМесяце Цикл
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Область(1, 4+Счетчик), СвойстваОбласти);
			КонецЦикла;
			
			ОбластьМакета.Область(1, 5+КоличествоДнейВМесяце).Параметр = Строка(ТекСтрока.Всего);
			ЗаполнитьЗначенияСвойств(ОбластьМакета.Область(1, 5+КоличествоДнейВМесяце), СвойстваОбласти);
			
			ДокументРезультат.Вывести(ОбластьМакета);
			
			НомерСтроки = НомерСтроки + 1;

		КонецЦикла;
	КонецЦикла;
	
	// Подвал +
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ДокументРезультат.Вывести(ОбластьМакета);
	// Подвал -
	
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТекстКолонтитула = НСтр("ru = '%ИмяОтчета%'");
	ТекстКолонтитула = СтрЗаменить(ТекстКолонтитула, "%ИмяОтчета%", ЭтотОбъект.Метаданные().Представление());
	ДокументРезультат.ВерхнийКолонтитул.Выводить = Истина;
	ДокументРезультат.ВерхнийКолонтитул.ТекстСправа = ТекстКолонтитула;
	
	ОбщегоНазначенияРТ.ВывестиДатуФормированияОтчета(ДокументРезультат);
	
КонецПроцедуры

Функция ПланируемоеРабочееВремяСотрудников(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Магазин", СтруктураПараметров.Магазин);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(СтруктураПараметров.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(СтруктураПараметров.ДатаОкончания));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГрафикиРаботыМагазинов.ДатаКалендаря КАК ДатаКалендаря,
	|	Интервалы.ДеньНедели КАК ДеньНедели,
	|	Интервалы.Ссылка.НачалоИнтервала КАК НачалоИнтервала,
	|	Интервалы.Ссылка.ОкончаниеИнтервала КАК ОкончаниеИнтервала,
	|	Интервалы.Ссылка.ДлинаРабочегоВремени КАК ДлинаРабочегоВремени,
	|	Интервалы.Ссылка КАК Смена,
	|	ГрафикиРаботыМагазинов.РабочийДень КАК РабочийДень,
	|	РаботыМагазинов.РаботаВыполняемаяСотрудниками КАК РаботаВыполняемаяСотрудниками
	|ПОМЕСТИТЬ Интервалы
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыМагазинов КАК ГрафикиРаботыМагазинов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИнтервалыРаботыМагазинов.ДниНедели КАК Интервалы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИнтервалыРаботыМагазинов.РаботыВыполняемыеСотрудниками КАК РаботыМагазинов
	|			ПО (РаботыМагазинов.Ссылка = Интервалы.Ссылка)
	|		ПО (ДЕНЬНЕДЕЛИ(ГрафикиРаботыМагазинов.ДатаКалендаря) = Интервалы.ДеньНедели.Порядок + 1)
	|			И ГрафикиРаботыМагазинов.Магазин = Интервалы.Ссылка.Магазин
	|ГДЕ
	|	ГрафикиРаботыМагазинов.Магазин = &Магазин
	|	И ГрафикиРаботыМагазинов.ДатаКалендаря >= &ДатаНачала
	|	И ГрафикиРаботыМагазинов.ДатаКалендаря <= &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботаСотрудников.Сотрудник.Магазин КАК Магазин,
	|	РаботаСотрудников.Сотрудник КАК Сотрудник,
	|	РаботаСотрудников.РаботаВыполняемаяСотрудниками КАК Работа
	|ПОМЕСТИТЬ РаботаСотрудники
	|ИЗ
	|	РегистрСведений.РаботаСотрудников КАК РаботаСотрудников
	|ГДЕ
	|	НЕ РаботаСотрудников.Сотрудник.ПометкаУдаления
	|	И РаботаСотрудников.Сотрудник.Сотрудник
	|	И РаботаСотрудников.Сотрудник.Магазин = &Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланируемоеВремя.Магазин КАК Магазин,
	|	ПланируемоеВремя.Смена КАК Смена,
	|	ПланируемоеВремя.Сотрудник КАК Сотрудник,
	|	ПланируемоеВремя.Работа КАК Работа,
	|	ПланируемоеВремя.ДатаКалендаря КАК Дата,
	|	ПланируемоеВремя.ДеньНедели КАК ДеньНедели,
	|	ПланируемоеРабочееВремяСотрудников.ДлинаРабочегоВремени КАК Часы,
	|	ПланируемоеВремя.РабочийДень КАК РабочийДень
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботаСотрудники.Магазин КАК Магазин,
	|		Интервалы.Смена КАК Смена,
	|		РаботаСотрудники.Работа КАК Работа,
	|		РаботаСотрудники.Сотрудник КАК Сотрудник,
	|		Интервалы.ДатаКалендаря КАК ДатаКалендаря,
	|		Интервалы.ДеньНедели КАК ДеньНедели,
	|		Интервалы.РабочийДень КАК РабочийДень
	|	ИЗ
	|		Интервалы КАК Интервалы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаботаСотрудники КАК РаботаСотрудники
	|			ПО Интервалы.Смена.Магазин = РаботаСотрудники.Магазин
	|				И Интервалы.РаботаВыполняемаяСотрудниками = РаботаСотрудники.Работа) КАК ПланируемоеВремя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемоеРабочееВремяСотрудников КАК ПланируемоеРабочееВремяСотрудников
	|		ПО ПланируемоеВремя.Сотрудник = ПланируемоеРабочееВремяСотрудников.Сотрудник
	|			И ПланируемоеВремя.Работа = ПланируемоеРабочееВремяСотрудников.РаботаВыполняемаяСотрудниками
	|			И ПланируемоеВремя.Смена = ПланируемоеРабочееВремяСотрудников.ИнтервалРаботыМагазинов
	|			И (НАЧАЛОПЕРИОДА(ПланируемоеВремя.ДатаКалендаря, ДЕНЬ) = НАЧАЛОПЕРИОДА(ПланируемоеРабочееВремяСотрудников.Период, ДЕНЬ))
	|ГДЕ
	|	ПланируемоеРабочееВремяСотрудников.ДлинаРабочегоВремени ЕСТЬ НЕ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Смена,
	|	Сотрудник,
	|	Работа,
	|	Дата
	|ИТОГИ ПО
	|	Смена
	|";
	
	Возврат Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

#КонецОбласти

#КонецЕсли
