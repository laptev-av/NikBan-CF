#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПеременныеМодуля

Перем ЦветГруппыА;
Перем ЦветГруппыБ;
Перем ЦветГруппыЦ;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	ТаблицаДанныхПоДням = Новый ТаблицаЗначений;
	
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных();
	
	ИспользуемыеНастройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	Макет = КомпоновщикМакетаКомпоновкиДанных.Выполнить(
				СхемаКомпоновкиДанных,
				ИспользуемыеНастройки,
				,
				,
				Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
				
	ВыводВКоллекциюЗначений = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений();
	ВыводВКоллекциюЗначений.УстановитьОбъект(ТаблицаДанныхПоДням);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(Макет,,, Истина);
	
	ВыводВКоллекциюЗначений.Вывести(ПроцессорКомпоновкиДанных);
	
	ТекстПараметров = "";
	
	Для Каждого ЭлементНастроек Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементНастроек) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			ИмяПараметра = СокрЛП(ЭлементНастроек.Параметр);
			ОписаниеТекущегоПараметра = "";
			Если ИмяПараметра = НСтр("ru = 'Период'") Тогда
				НачалоПериода = ЭлементНастроек.Значение.ДатаНачала;
				КонецПериода = ЭлементНастроек.Значение.ДатаОкончания;
				ОписаниеТекущегоПараметра = НСтр("ru = 'Период:'") + " " + ЭлементНастроек.Значение + Символы.ПС;
				
			ИначеЕсли ИмяПараметра = НСтр("ru = 'ГруппаА'") Тогда
				ПроцентГруппы_A = ЭлементНастроек.Значение;
				ОписаниеТекущегоПараметра = НСтр("ru = 'Процент группы A: %1'") + Символы.ПС;
				ОписаниеТекущегоПараметра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ОписаниеТекущегоПараметра,
												ПроцентГруппы_A);
				
			ИначеЕсли ИмяПараметра = НСтр("ru = 'ГруппаB'") Тогда
				ПроцентГруппы_B = ЭлементНастроек.Значение;
				ОписаниеТекущегоПараметра = НСтр("ru = 'Процент группы B: %1'") + Символы.ПС;
				ОписаниеТекущегоПараметра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ОписаниеТекущегоПараметра,
												ПроцентГруппы_B);
				ОписаниеТекущегоПараметра = ОписаниеТекущегоПараметра + НСтр("ru = 'Процент группы C: %1'") + Символы.ПС;
				ОписаниеТекущегоПараметра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ОписаниеТекущегоПараметра,
												(100 - ПроцентГруппы_A - ПроцентГруппы_B));
				
			ИначеЕсли ИмяПараметра = НСтр("ru = 'ГруппаX'") Тогда
				ПроцентГруппы_X = ЭлементНастроек.Значение;
				ОписаниеТекущегоПараметра = НСтр("ru = 'Процент группы X: до %1'") + Символы.ПС;
				ОписаниеТекущегоПараметра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ОписаниеТекущегоПараметра,
												ПроцентГруппы_X);
				
			ИначеЕсли ИмяПараметра = НСтр("ru = 'ГруппаY'") Тогда
				ПроцентГруппы_Y = ЭлементНастроек.Значение;
				ОписаниеТекущегоПараметра = НСтр("ru = 'Процент группы Y: от %1 до %2'") + Символы.ПС;
				ОписаниеТекущегоПараметра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ОписаниеТекущегоПараметра,
												ПроцентГруппы_X,
												ПроцентГруппы_Y);
				ОписаниеТекущегоПараметра = ОписаниеТекущегоПараметра + НСтр("ru = 'Процент группы Z: >%1'") + Символы.ПС;
				ОписаниеТекущегоПараметра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ОписаниеТекущегоПараметра,
												ПроцентГруппы_Y);
				
			ИначеЕсли ИмяПараметра = НСтр("ru = 'РежимСортировки'") Тогда
				РежимСортировки = ЭлементНастроек.Значение;
				
			ИначеЕсли ИмяПараметра = НСтр("ru = 'НаправлениеСортировки'") Тогда
				НаправлениеСортировки = ЭлементНастроек.Значение;
				ОписаниеТекущегоПараметра = НСтр("ru = 'Сортировка: %1 (%2)'") + Символы.ПС;
				ОписаниеТекущегоПараметра = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ОписаниеТекущегоПараметра,
												РежимСортировки,
												?(НаправлениеСортировки = НСтр("ru = 'УБЫВ'"), "Убывание", "Возрастание"));
				
			КонецЕсли;
			ТекстПараметров = ТекстПараметров + ОписаниеТекущегоПараметра;
		КонецЕсли;
	КонецЦикла;
	
	Если ПроцентГруппы_A + ПроцентГруппы_B >= 100 Тогда
		ТекстОшибки = НСтр("ru = 'Некорректно заполнены параметры ABC: значения A + B + C должны в сумме давать 100%'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ТаблицаДанных = ТаблицаДанныхПоДням.Скопировать();
	
	ТаблицаДанных.Свернуть("Номенклатура, 
							|КоличествоГруппа,
							|СуммаГруппа,
							|НаценкаГруппа,
							|ВариацияСпроса,
							|ВариацияСпросаГруппа",
							"Количество,
							|Сумма,
							|Себестоимость,
							|Наценка");

	СтрокаСортировкиКоличество = "Количество УБЫВ, Сумма УБЫВ, Наценка УБЫВ";
	СтрокаСортировкиСумма = "Сумма УБЫВ, Наценка УБЫВ, Количество УБЫВ";
	СтрокаСортировкиНаценка = "Наценка УБЫВ, Количество УБЫВ, Сумма УБЫВ";
	Если РежимСортировки = НСтр("ru = 'Количество'") Тогда
		СтрокаИтоговойСортировки = "Количество " + НаправлениеСортировки
									+ ", Сумма " + НаправлениеСортировки
									+ ", Наценка " + НаправлениеСортировки;
	ИначеЕсли РежимСортировки = НСтр("ru = 'Сумма'") Тогда
		СтрокаИтоговойСортировки = "Сумма " + НаправлениеСортировки
									+ ", Наценка " + НаправлениеСортировки
									+ ", Количество " + НаправлениеСортировки;
	ИначеЕсли РежимСортировки = НСтр("ru = 'Наценка'") Тогда
		СтрокаИтоговойСортировки = "Наценка " + НаправлениеСортировки
									+ ", Количество " + НаправлениеСортировки
									+ ", Сумма " + НаправлениеСортировки;
	ИначеЕсли РежимСортировки = НСтр("ru = 'ВариацияСпроса'") Тогда
		ОбратноеНаправление = ?(НаправлениеСортировки = НСтр("ru = 'УБЫВ'"), "ВОЗР", "УБЫВ");
		СтрокаИтоговойСортировки = "ВариацияСпроса " + НаправлениеСортировки
									+ ", Количество " + ОбратноеНаправление
									+ ", Наценка " + ОбратноеНаправление
									+ ", Сумма " + ОбратноеНаправление;
	Иначе
		СтрокаИтоговойСортировки = СтрокаСортировкиКоличество;
	КонецЕсли;
	
	РассчитатьРейтинг(ТаблицаДанных, "Количество", СтрокаСортировкиКоличество);
	РассчитатьРейтинг(ТаблицаДанных, "Сумма", СтрокаСортировкиСумма);
	РассчитатьРейтинг(ТаблицаДанных, "Наценка", СтрокаСортировкиНаценка);
	РассчитатьВариациюСпроса(ТаблицаДанных, ТаблицаДанныхПоДням);
	
	ТаблицаДанных.Сортировать(СтрокаИтоговойСортировки);
	
	Макет = ПолучитьМакет("Макет");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = НСтр("ru = 'ABC-XYZ анализ продаж'");
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	
	ОбластьПараметрыОтчета = Макет.ПолучитьОбласть("ПараметрыОтчета");
	ОбластьПараметрыОтчета.Параметры.ПараметрыОтчета = ТекстПараметров;
	ДокументРезультат.Вывести(ОбластьПараметрыОтчета, 1);
	
	ТекстОтбора = СокрЛП(ИспользуемыеНастройки.Отбор);
	Если НЕ ПустаяСтрока(ТекстОтбора) Тогда
		ОбластьОтборыОтчета = Макет.ПолучитьОбласть("ОтборыОтчета");
		ОбластьОтборыОтчета.Параметры.ОтборыОтчета = ТекстОтбора;
		ДокументРезультат.Вывести(ОбластьОтборыОтчета, 1);
	КонецЕсли;
	
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьШапка, 0);
	
	ОбластьНоменклатура = Макет.ПолучитьОбласть("ОбластьУровеньНоменклатура");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ЦветГруппыА = Новый Цвет(204, 255, 204);
	ЦветГруппыБ = Новый Цвет(255, 255, 153);
	ЦветГруппыЦ = Новый Цвет(255, 204, 153);
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		ЗаполнитьЗначенияСвойств(ОбластьНоменклатура.Параметры, СтрокаТаблицы);
		ОбластьНоменклатура.Параметры.Номенклатура = СтрокаТаблицы.Номенклатура;
		// % наценки отдельно
		Если СтрокаТаблицы.Себестоимость = 0 Тогда
			ОбластьНоменклатура.Параметры.ПроцентНаценки = 0;
		Иначе
			ОбластьНоменклатура.Параметры.ПроцентНаценки = Окр(СтрокаТаблицы.Наценка * 100 / СтрокаТаблицы.Себестоимость, 2);
		КонецЕсли;
		УстановитьЦветФонаОбласти(ОбластьНоменклатура, СтрокаТаблицы.КоличествоГруппа, "3");
		УстановитьЦветФонаОбласти(ОбластьНоменклатура, СтрокаТаблицы.СуммаГруппа, "5");
		УстановитьЦветФонаОбласти(ОбластьНоменклатура, СтрокаТаблицы.НаценкаГруппа, "8");
		УстановитьЦветФонаОбласти(ОбластьНоменклатура, СтрокаТаблицы.ВариацияСпросаГруппа, "10");
		
		ДокументРезультат.Вывести(ОбластьНоменклатура, 1);
	КонецЦикла;
	
	ОбластьИтого.Параметры.Количество = ТаблицаДанных.Итог("Количество");
	ОбластьИтого.Параметры.Наценка = ТаблицаДанных.Итог("Наценка");
	ОбластьИтого.Параметры.Сумма = ТаблицаДанных.Итог("Сумма");
	
	ДокументРезультат.Вывести(ОбластьИтого, 0);
	
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	
	ОбщегоНазначенияРТ.ВывестиДатуФормированияОтчета(ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РассчитатьРейтинг(ТаблицаДанных, ИмяКолонки, СтрокаСортировки)
	
	ОбщийИтог = ТаблицаДанных.Итог(ИмяКолонки);
	Если ОбщийИтог = 0 Тогда
		Возврат;
	КонецЕсли;
	ТаблицаДанных.Сортировать(СтрокаСортировки);
	СуммарныйПроцент = 0;
	МаксимальныйПроцент = ПроцентГруппы_A + ПроцентГруппы_B;
	ТекущаяГруппа = НСтр("ru = 'A'");
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		СтрокаТаблицы[ИмяКолонки + "Группа"] = ТекущаяГруппа;
		
		ПроцентСтроки = СтрокаТаблицы[ИмяКолонки] * 100 / ОбщийИтог;
		
		СуммарныйПроцент = СуммарныйПроцент + ПроцентСтроки;
		Если СуммарныйПроцент >= МаксимальныйПроцент Тогда
			Прервать;
		ИначеЕсли СуммарныйПроцент >= ПроцентГруппы_A Тогда
			ТекущаяГруппа = НСтр("ru = 'B'");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьВариациюСпроса(ТаблицаДанных, ТаблицаДанныхПоДням)
	
	КоличествоДнейПериода = 1 + (КонецПериода - НачалоПериода) / 86400;
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		Если СтрокаТаблицы.Количество > 0 Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
			СтрокиПоДням = ТаблицаДанныхПоДням.НайтиСтроки(СтруктураПоиска);
			Если СтрокиПоДням.Количество() > 0 Тогда
				Если КоличествоДнейПериода > 0 Тогда
					СреднедневныеПродажи = СтрокаТаблицы.Количество / КоличествоДнейПериода;
					Если СреднедневныеПродажи <> 0 Тогда
						СуммарноеДневноеОтклонение = 0;
						Для Каждого СтрокаДня Из СтрокиПоДням Цикл
							Если ЗначениеЗаполнено(СтрокаДня.День) Тогда
								СуммарноеДневноеОтклонение = СуммарноеДневноеОтклонение
																+ (СтрокаДня.Количество - СреднедневныеПродажи)
																* (СтрокаДня.Количество - СреднедневныеПродажи);
							КонецЕсли;
						КонецЦикла;
						СреднеквадратичноеОтклонение = Sqrt(СуммарноеДневноеОтклонение / КоличествоДнейПериода);
						КоэффициентВариации = Окр(СреднеквадратичноеОтклонение * 100 / СреднедневныеПродажи, 2);
						СтрокаТаблицы.ВариацияСпроса = КоэффициентВариации;
						Если КоэффициентВариации <= ПроцентГруппы_X Тогда
							СтрокаТаблицы.ВариацияСпросаГруппа = НСтр("ru = 'X'");
						ИначеЕсли КоэффициентВариации <= ПроцентГруппы_Y Тогда
							СтрокаТаблицы.ВариацияСпросаГруппа = НСтр("ru = 'Y'");
						КонецЕсли;
					КонецЕсли;
				Иначе
					СтрокаТаблицы.ВариацияСпроса = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЦветФонаОбласти(ОбластьНоменклатура, ЗначениеПоказателя, ЯчейкаГруппы)
	
	Область = ОбластьНоменклатура.Область("R1C" + ЯчейкаГруппы);
	Если ЗначениеПоказателя = НСтр("ru = 'A'")
		ИЛИ ЗначениеПоказателя = НСтр("ru = 'X'") Тогда
		Область.ЦветФона = ЦветГруппыА;
	ИначеЕсли ЗначениеПоказателя = НСтр("ru = 'B'")
		ИЛИ ЗначениеПоказателя = НСтр("ru = 'Y'") Тогда
		Область.ЦветФона = ЦветГруппыБ;
	Иначе
		Область.ЦветФона = ЦветГруппыЦ;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
