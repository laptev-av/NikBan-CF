#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	Период					= ПараметрыОтчета.ПараметрыДанных.НайтиЗначениеПараметра(
					Новый ПараметрКомпоновкиДанных("Период")).Значение;
	Организация 			= ПараметрыОтчета.ПараметрыДанных.НайтиЗначениеПараметра(
					Новый ПараметрКомпоновкиДанных("Организация")).Значение;
	Магазин					= ПараметрыОтчета.ПараметрыДанных.НайтиЗначениеПараметра(
					Новый ПараметрКомпоновкиДанных("Магазин")).Значение;
	НомерНачальнойСтроки 	= ПараметрыОтчета.ПараметрыДанных.НайтиЗначениеПараметра(
					Новый ПараметрКомпоновкиДанных("НомерНачальнойСтроки")).Значение;					
					
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ВызватьИсключение НСтр("ru = 'Не заполнено значение обязательного параметра ""Организация""'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Магазин) Тогда
		ВызватьИсключение НСтр("ru = 'Не заполнено значение обязательного параметра ""Магазин""'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НомерНачальнойСтроки) Тогда
		ВызватьИсключение НСтр("ru = 'Не заполнено значение обязательного параметра ""Номер начальной строки""'");
	КонецЕсли;
	
	МассивНастроек = Новый Массив;
	
	ДатаНачалаИспользованияНовойФормыЖурнала = Константы.ДатаНачалаПримененияПриказа164.Получить();
	
	Если Период.ДатаНачала>=ДатаНачалаИспользованияНовойФормыЖурнала Тогда
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("НовыйФормат", Истина);
		СтруктураНастроек.Вставить("Макет", ПолучитьМакет("ФормаЖурналаПоПриказуНомер164"));
		СтруктураНастроек.Вставить("ДатаНачала", Период.ДатаНачала);
		СтруктураНастроек.Вставить("ДатаОкончания", Период.ДатаОкончания);
		СтруктураНастроек.Вставить("СведенияОбОрганизации", ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Организация, Период.ДатаОкончания));
		СтруктураНастроек.Вставить("АдресМагазина", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Магазин, Справочники.ВидыКонтактнойИнформации.ФактАдресМагазина));
		
		МассивНастроек.Добавить(СтруктураНастроек);
		
	ИначеЕсли Период.ДатаОкончания<ДатаНачалаИспользованияНовойФормыЖурнала Тогда
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("НовыйФормат", Ложь);
		СтруктураНастроек.Вставить("Макет", ПолучитьМакет("Макет"));
		СтруктураНастроек.Вставить("ДатаНачала", Период.ДатаНачала);
		СтруктураНастроек.Вставить("ДатаОкончания", Период.ДатаОкончания);
		СтруктураНастроек.Вставить("СведенияОбОрганизации", ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Организация, Период.ДатаОкончания));
		
		МассивНастроек.Добавить(СтруктураНастроек);
		
	Иначе
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("НовыйФормат", Ложь);
		СтруктураНастроек.Вставить("Макет", ПолучитьМакет("Макет"));
		СтруктураНастроек.Вставить("ДатаНачала", Период.ДатаНачала);
		СтруктураНастроек.Вставить("ДатаОкончания", ДатаНачалаИспользованияНовойФормыЖурнала-86400);
		СтруктураНастроек.Вставить("СведенияОбОрганизации", ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Организация, ДатаНачалаИспользованияНовойФормыЖурнала-86400));
		
		МассивНастроек.Добавить(СтруктураНастроек);
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("НовыйФормат", Истина);
		СтруктураНастроек.Вставить("Макет", ПолучитьМакет("ФормаЖурналаПоПриказуНомер164"));
		СтруктураНастроек.Вставить("ДатаНачала",ДатаНачалаИспользованияНовойФормыЖурнала);
		СтруктураНастроек.Вставить("ДатаОкончания", Период.ДатаОкончания);
		СтруктураНастроек.Вставить("СведенияОбОрганизации", ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Организация, Период.ДатаОкончания));
		СтруктураНастроек.Вставить("АдресМагазина", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Магазин, Справочники.ВидыКонтактнойИнформации.ФактАдресМагазина));
		
		МассивНастроек.Добавить(СтруктураНастроек);
		
	КонецЕсли;
	
	ВыводитьГоризонтальныйРазделительСтраниц = Ложь;
	
	Для Каждого ТекНастройка Из МассивНастроек Цикл
		
		Если ВыводитьГоризонтальныйРазделительСтраниц Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Титульный лист +
		ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("ТитульныйЛист");
		
		ОбластьМакета.Параметры.НазваниеОрганизации = ТекНастройка.СведенияОбОрганизации.НаименованиеПолноеПоУчредительнымДокументам;
		
		Если НЕ ТекНастройка.НовыйФормат Тогда
			ОбластьМакета.Параметры.Магазин = Магазин;
			ОбластьМакета.Параметры.Период = ПредставлениеПериода(ТекНастройка.ДатаНачала, ТекНастройка.ДатаОкончания);	
		Иначе
			ОбластьМакета.Параметры.ИННКПП = ТекНастройка.СведенияОбОрганизации.ИНН + ?(Организация.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ЮрЛицо, " / " + ТекНастройка.СведенияОбОрганизации.КПП, "");
			ОбластьМакета.Параметры.Адрес = ТекНастройка.АдресМагазина;
		КонецЕсли;
				
		Если НЕ ТекНастройка.НовыйФормат Тогда
			ДокументРезультат.Вывести(ОбластьМакета);
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ИначеЕсли  НомерНачальнойСтроки = 1 Тогда
			ДокументРезультат.Вывести(ОбластьМакета);
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		// Титульный лист -
		
		// Шапка +
		ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Шапка");
		ДокументРезультат.Вывести(ОбластьМакета);
		ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область("СтрокиДляПовтора");
		// Шапка -
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Магазин", Магазин);
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекНастройка.ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекНастройка.ДатаОкончания));
		
		Если НЕ ТекНастройка.НовыйФормат Тогда
			
			Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
			Запрос.УстановитьПараметр("ПустаяСтрока", "");
			Запрос.УстановитьПараметр("ПоступлениеТоваров", Перечисления.ХозяйственныеОперации.ПоступлениеТоваров);
			Запрос.УстановитьПараметр("ПрочаяОперация", Перечисления.ХозяйственныеОперации.ПустаяСсылка());
			Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТоварыОрганизаций.Регистратор КАК Регистратор,
			|	ТоварыОрганизаций.Период КАК Период,
			|	ТоварыОрганизаций.Регистратор.Номер КАК Номер,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ТоварыОрганизаций.Регистратор.ДатаВходящегоДокумента
			|		ИНАЧЕ ТоварыОрганизаций.Период
			|	КОНЕЦ КАК ДатаВходящегоДокумента,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ТоварыОрганизаций.Регистратор.НомерВходящегоДокумента
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ КАК НомерВходящегоДокумента,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ЕСТЬNULL(ТоварыОрганизаций.Регистратор.Контрагент.Наименование, &ПустаяСтрока)
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ КАК НаименованиеКонтрагента,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ТоварыОрганизаций.Регистратор.Контрагент.НаименованиеПолное, &ПустаяСтрока) КАК СТРОКА(200))
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ КАК НаименованиеКонтрагентаПолное,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ЕСТЬNULL(ТоварыОрганизаций.Регистратор.Контрагент.ИНН, &ПустаяСтрока)
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ КАК ИНН,
			|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
			|	ЕСТЬNULL(ТоварыОрганизаций.Номенклатура.ВидАлкогольнойПродукцииЕГАИС, &ПустаяСтрока) КАК ВидПродукции,
			|	ЕСТЬNULL(ТоварыОрганизаций.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Код, &ПустаяСтрока) КАК КодВида,
			|	ЕСТЬNULL(ТоварыОрганизаций.Номенклатура.ОбъемДАЛ, 0) * 10 КАК Емкость,
			|	СУММА(ТоварыОрганизаций.Количество) КАК Количество,
			|	СУММА(ЕСТЬNULL(ТоварыОрганизаций.Номенклатура.ОбъемДАЛ, 0) * ТоварыОрганизаций.Количество) КАК Объем,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.ПоступлениеТоваров)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.РеализацияТоваров
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.РеализацияТоваров)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.РеализацияТоваров)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.ВозвратПоставщику)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.СписаниеТоваров
			|			ТОГДА ТоварыОрганизаций.Регистратор.АналитикаХозяйственнойОперации.ХозяйственнаяОперация
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
			|		ИНАЧЕ ТоварыОрганизаций.Регистратор.ХозяйственнаяОперация
			|	КОНЕЦ КАК ХозяйственнаяОперация,
			|	ТоварыОрганизаций.ВидДвижения КАК ВидДвижения
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И ТоварыОрганизаций.Склад.Магазин = &Магазин
			|	И ТоварыОрганизаций.Организация = &Организация
			|	И ТоварыОрганизаций.Номенклатура.АлкогольнаяПродукция
			|
			|СГРУППИРОВАТЬ ПО
			|	ТоварыОрганизаций.Регистратор,
			|	ТоварыОрганизаций.Период,
			|	ТоварыОрганизаций.Регистратор.Номер,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ТоварыОрганизаций.Регистратор.ДатаВходящегоДокумента
			|		ИНАЧЕ ТоварыОрганизаций.Период
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ТоварыОрганизаций.Регистратор.НомерВходящегоДокумента
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ЕСТЬNULL(ТоварыОрганизаций.Регистратор.Контрагент.Наименование, &ПустаяСтрока)
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ТоварыОрганизаций.Регистратор.Контрагент.НаименованиеПолное, &ПустаяСтрока) КАК СТРОКА(200))
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА ЕСТЬNULL(ТоварыОрганизаций.Регистратор.Контрагент.ИНН, &ПустаяСтрока)
			|		ИНАЧЕ &ПустаяСтрока
			|	КОНЕЦ,
			|	ТоварыОрганизаций.Номенклатура,
			|	ЕСТЬNULL(ТоварыОрганизаций.Номенклатура.ОбъемДАЛ, 0) * 10,
			|	ТоварыОрганизаций.ВидДвижения,
			|	ВЫБОР
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.ПоступлениеТоваров)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.РеализацияТоваров
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.РеализацияТоваров)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.РеализацияТоваров)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.ВозвратПоставщику)
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.СписаниеТоваров
			|			ТОГДА ТоварыОрганизаций.Регистратор.АналитикаХозяйственнойОперации.ХозяйственнаяОперация
			|		КОГДА ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
			|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
			|		ИНАЧЕ ТоварыОрганизаций.Регистратор.ХозяйственнаяОперация
			|	КОНЕЦ,
			|	ЕСТЬNULL(ТоварыОрганизаций.Номенклатура.ВидАлкогольнойПродукцииЕГАИС, &ПустаяСтрока),
			|	ЕСТЬNULL(ТоварыОрганизаций.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Код, &ПустаяСтрока)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаВходящегоДокумента,
			|	Период";
			
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ПродажиОбороты.Регистратор,
			|	ПродажиОбороты.Период КАК ДатаПродажи,
			|	ПродажиОбороты.Номенклатура.НаименованиеПолное КАК НаименованиеПродукции,
			|	ПродажиОбороты.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Код КАК КодВидаПродукции,
			|	ЕСТЬNULL(ПродажиОбороты.Номенклатура.ОбъемДАЛ, 0) * 10 КАК Емкость,
			|	ПродажиОбороты.Количество КАК Количество
			|ИЗ
			|	РегистрНакопления.Продажи КАК ПродажиОбороты
			|ГДЕ
			|	ПродажиОбороты.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И ПродажиОбороты.Магазин = &Магазин
			|	И ПродажиОбороты.Номенклатура.АлкогольнаяПродукция
			|	И НЕ ПродажиОбороты.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
			|	И (ПродажиОбороты.ДокументПродажи ССЫЛКА Документ.ЧекККМ
			|			ИЛИ ПродажиОбороты.ДокументПродажи ССЫЛКА Документ.ОтчетОРозничныхПродажах
			|			ИЛИ ПродажиОбороты.ДокументПродажи ССЫЛКА Документ.РеализацияТоваров)
			|	И ПродажиОбороты.ДокументПродажи.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДокументПродажи.Ссылка,
			|	ДокументПродажи.Дата,
			|	ТоварыПродажи.Номенклатура.НаименованиеПолное,
			|	ТоварыПродажи.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Код,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ТоварыПродажи.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЕСТЬNULL(ТоварыПродажи.Номенклатура.ОбъемДАЛ, 0) * 10
			|		ИНАЧЕ ЕСТЬNULL(ТоварыПродажи.Номенклатура.ОбъемДАЛ, 0) * 10 * ЕСТЬNULL(ТоварыПродажи.Упаковка.Коэффициент, 0)
			|	КОНЕЦ,
			|	ТоварыПродажи.КоличествоУпаковок
			|ИЗ
			|	Документ.ЧекЕГАИС КАК ДокументПродажи
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекЕГАИС.Товары КАК ТоварыПродажи
			|		ПО ДокументПродажи.Ссылка = ТоварыПродажи.Ссылка
			|			И (ДокументПродажи.Проведен)
			|ГДЕ
			|	ДокументПродажи.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И ДокументПродажи.ОрганизацияЕГАИС.ТорговыйОбъект = &Магазин
			|	И ДокументПродажи.ОрганизацияЕГАИС.Контрагент = &Организация
			|	И ДокументПродажи.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекаЕГАИС.ВскрытиеТары)
			|	И ТоварыПродажи.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
			|	И ТоварыПродажи.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДокументПродажи.Ссылка,
			|	ДокументПродажи.Дата,
			|	ТоварыПродажи.Номенклатура.НаименованиеПолное,
			|	ТоварыПродажи.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Код,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ТоварыПродажи.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЕСТЬNULL(ТоварыПродажи.Номенклатура.ОбъемДАЛ, 0) * 10
			|		ИНАЧЕ ЕСТЬNULL(ТоварыПродажи.Номенклатура.ОбъемДАЛ, 0) * 10 * ЕСТЬNULL(ТоварыПродажи.Упаковка.Коэффициент, 0)
			|	КОНЕЦ,
			|	ТоварыПродажи.КоличествоУпаковок
			|ИЗ
			|	Документ.АктСписанияЕГАИС КАК ДокументПродажи
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктСписанияЕГАИС.Товары КАК ТоварыПродажи
			|		ПО ДокументПродажи.Ссылка = ТоварыПродажи.Ссылка
			|			И (ДокументПродажи.Проведен)
			|ГДЕ
			|	ДокументПродажи.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И ДокументПродажи.ТорговыйОбъект = &Магазин
			|	И ДокументПродажи.Организация = &Организация
			|	И ДокументПродажи.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричиныСписанийЕГАИС.Реализация)
			|	И НЕ ТоварыПродажи.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
			|	И ТоварыПродажи.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаПродажи";
			
		КонецЕсли;
		
		Если ТекНастройка.НовыйФормат Тогда
			
			НомерСтроки = НомерНачальнойСтроки - 1;
			
			// Строки отчета +
			Выгрузка = Запрос.Выполнить().Выгрузить();
			
			Период = Выгрузка.Скопировать(,"ДатаПродажи");
			Период.Свернуть("ДатаПродажи");
			
			Для каждого День Из Период Цикл
				
				ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Строка");
				
				СтрокиДня = Выгрузка.Скопировать(Новый Структура("ДатаПродажи", День.ДатаПродажи));
				
				Для Каждого ТекСтрока Из СтрокиДня Цикл
					
					Если ЗначениеЗаполнено(ТекСтрока.НаименованиеПродукции) Тогда
						ТекСтрока.НаименованиеПродукции = СокрЛП(ТекСтрока.НаименованиеПродукции);
					КонецЕсли;
					
					НомерСтроки = НомерСтроки + 1;
					
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекСтрока);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					
					ДокументРезультат.Вывести(ОбластьМакета);
					
				КонецЦикла;
				
				// Итоги +
				ИтогиПоКоду = СтрокиДня.Скопировать();
				ИтогиПоКоду.Свернуть("КодВидаПродукции", "Количество");
				Для Каждого ТекСтрока Из ИтогиПоКоду Цикл
					ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("ИтогиПоКоду");
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекСтрока);
					ДокументРезультат.Вывести(ОбластьМакета);
				КонецЦикла;
				
				ИтогиПоНаименованию = СтрокиДня.Скопировать();
				ИтогиПоНаименованию.Свернуть("НаименованиеПродукции", "Количество");
				Для Каждого ТекСтрока Из ИтогиПоНаименованию Цикл
					ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("ИтогиПоНаименованию");
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекСтрока);
					ДокументРезультат.Вывести(ОбластьМакета);
				КонецЦикла;
				
				ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("ИтогиПоКоличеству");
				ОбластьМакета.Параметры.Количество = СтрокиДня.Итог("Количество");
				ДокументРезультат.Вывести(ОбластьМакета);
				// Итоги -
				
			КонецЦикла;
			// Строки отчета -
			
		Иначе
			
			НомерСтроки = 0;
			ИтогоОбъемПриход = 0;
			ИтогоОбъемРасход = 0;
			ИтогоКоличествоПриход = 0;
			ИтогоКоличествоРасход = 0;
			
			// Строки отчета +
			Выборка = Запрос.Выполнить().Выбрать();
			
			ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Строка");
			
			Пока Выборка.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Выборка);
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				ОбластьМакета.Параметры.Регистратор = Выборка.Регистратор;
				
				Если Выборка.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
					
					ОбластьМакета.Параметры.РегистраторПриход = Выборка.Регистратор;
					
					Если ЗначениеЗаполнено(Выборка.ДатаВходящегоДокумента) Тогда
						ОбластьМакета.Параметры.ДатаТТН = Выборка.ДатаВходящегоДокумента;
					Иначе
						ОбластьМакета.Параметры.ДатаТТН = Выборка.Период;
					КонецЕсли;
					Если ЗначениеЗаполнено(Выборка.НомерВходящегоДокумента) Тогда
						ОбластьМакета.Параметры.НомерТТН = Выборка.НомерВходящегоДокумента;
					Иначе
						ОбластьМакета.Параметры.НомерТТН = Выборка.Номер;
					КонецЕсли;
					Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеТоваров Тогда
						ОбластьМакета.Параметры.Поставщик = Выборка.НаименованиеКонтрагента;
						ОбластьМакета.Параметры.ИННПриход = Выборка.ИНН;
					Иначе
						ОбластьМакета.Параметры.Поставщик = ТекНастройка.СведенияОбОрганизации.ПолноеНаименование;
						ОбластьМакета.Параметры.ИННПриход = ТекНастройка.СведенияОбОрганизации.ИНН;
					КонецЕсли;
					ОбластьМакета.Параметры.ВидПродукцииПриход = "" + Выборка.ВидПродукции + ", " + Выборка.Номенклатура;
					ОбластьМакета.Параметры.КодВидаПриход = Выборка.КодВида;
					
					ОбластьМакета.Параметры.ЕмкостьПриход = Выборка.Емкость;
					ОбластьМакета.Параметры.КоличествоПриход = Выборка.Количество;
					
					ОбластьМакета.Параметры.РегистраторРасход = Неопределено;
					ОбластьМакета.Параметры.СодержаниеРасход = "";
					ОбластьМакета.Параметры.ВидПродукцииРасход = "";
					ОбластьМакета.Параметры.ЕмкостьРасход = 0;
					ОбластьМакета.Параметры.КоличествоРасход = 0;
					
					ИтогоОбъемПриход = ИтогоОбъемПриход + Выборка.Объем;
					ИтогоКоличествоПриход = ИтогоКоличествоПриход + Выборка.Количество;
					
				Иначе
					
					ОбластьМакета.Параметры.РегистраторПриход = Неопределено;
					ОбластьМакета.Параметры.ДатаТТН = "";
					ОбластьМакета.Параметры.НомерТТН = "";
					ОбластьМакета.Параметры.Поставщик = "";
					ОбластьМакета.Параметры.ИННПриход = "";
					ОбластьМакета.Параметры.ВидПродукцииПриход = "";
					ОбластьМакета.Параметры.КодВидаПриход = "";
					ОбластьМакета.Параметры.ЕмкостьПриход = 0;
					ОбластьМакета.Параметры.КоличествоПриход = 0;
					
					ОбластьМакета.Параметры.РегистраторРасход = Выборка.Регистратор;
					
					Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваров Тогда
						СодержаниеОперации = НСтр("ru = 'Проданная продукция'");
					ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоставщику Тогда
						СодержаниеОперации = НСтр("ru = 'Продукция, возвращенная поставщику'");
					ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеПоИнвентаризации Тогда
						СодержаниеОперации = НСтр("ru = 'Недостачи продукции'");
					ИначеЕсли Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров Тогда
						СодержаниеОперации = НСтр("ru = 'Продукция, переданная в другое подразделение'");
					Иначе
						СодержаниеОперации = НСтр("ru = 'Списанная продукция'");
					КонецЕсли;
					ОбластьМакета.Параметры.СодержаниеРасход = СодержаниеОперации;
					ОбластьМакета.Параметры.ВидПродукцииРасход = "" + Выборка.ВидПродукции + ", " + Выборка.Номенклатура;
					ОбластьМакета.Параметры.ЕмкостьРасход = Выборка.Емкость;
					ОбластьМакета.Параметры.КоличествоРасход = Выборка.Количество;
					
					ИтогоОбъемРасход = ИтогоОбъемРасход + Выборка.Объем;
					ИтогоКоличествоРасход = ИтогоКоличествоРасход + Выборка.Количество;
					
				КонецЕсли;
				
				ДокументРезультат.Вывести(ОбластьМакета);
			
			КонецЦикла;
			// Строки отчета -
			
			// Итоги +
			ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Итоги");
			
			ОбластьМакета.Параметры.ОбъемПриход = ИтогоОбъемПриход;
			ОбластьМакета.Параметры.ОбъемРасход = ИтогоОбъемРасход;
			ОбластьМакета.Параметры.КоличествоПриход = ИтогоКоличествоПриход;
			ОбластьМакета.Параметры.КоличествоРасход = ИтогоКоличествоРасход;
			
			ДокументРезультат.Вывести(ОбластьМакета);
			// Итоги -
			
		КонецЕсли;
		
		// Подвал +
		Если НЕ ТекНастройка.НовыйФормат Тогда
			ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Подписи");
			ДокументРезультат.Вывести(ОбластьМакета);
		КонецЕсли;
		// Подвал -
		
		ДокументРезультат.АвтоМасштаб = Истина;
		ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		Если ТекНастройка.НовыйФормат Тогда
		   	ТекстКолонтитула = НСтр("ru = '%ИмяОтчета%'");
			ТекстКолонтитула = СтрЗаменить(ТекстКолонтитула, "%ИмяОтчета%", ЭтотОбъект.Метаданные().Представление());
			ДокументРезультат.ВерхнийКолонтитул.Выводить = Истина;
			ДокументРезультат.ВерхнийКолонтитул.ТекстСправа = ТекстКолонтитула;
		КонецЕсли;
		
		ОбщегоНазначенияРТ.ВывестиДатуФормированияОтчета(ДокументРезультат);
		
		ВыводитьГоризонтальныйРазделительСтраниц = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
