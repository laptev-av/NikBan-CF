#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НомерОтчета = НомерОтчета + 1;
	
	ДокументРезультат.Вывести(СформироватьОтчетТОРГ29(
		ДатаНачала,
		ДатаОкончания,
		Склад,
		Организация,
		НомерОтчета
	));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция выполняет формирование табличного документа отчета Торг-29.
//
Функция СформироватьОтчетТОРГ29(ДатаНачала, ДатаОкончания, Склад, Организация, НомерОтчета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	УстановитьПривилегированныйРежим(Истина);
	Макет = ПолучитьМакет("Макет");
	
	// Выведем заголовок.
	СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Организация, ДатаОкончания);
	
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокРасширенный");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	КонецЕсли;
	
	ОбластьМакета.Параметры.ОрганизацияПредставление = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
	ОбластьМакета.Параметры.СтруктурноеПодразделениеПредставление = СокрЛП(Магазин.Наименование);
	ОбластьМакета.Параметры.ДатаСоставления = ТекущаяДатаСеанса();
	ОбластьМакета.Параметры.ДатаНачала = ДатаНачала;
	ОбластьМакета.Параметры.ДатаКонца = ДатаОкончания;
	ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОПокупателе.КодПоОКПО;
	
	ОбластьМакета.Параметры.Номер = НомерОтчета;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаРасширенная");
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Повторение шапки
	ПовторятьПриПечатиСтроки = ТабДокумент.Область(1 + ОбластьМакета.ВысотаТаблицы, ,2 + ОбластьМакета.ВысотаТаблицы);
	
	ИсходныеДанные = Новый ТаблицаЗначений;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала", ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания", ДатаОкончания);
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("Склад", Склад);
	СтруктураПараметров.Вставить("Магазин", Магазин);
	
	ЗапасыСервер.ПолучитьДанныеТОРГ29(СтруктураПараметров, ИсходныеДанные);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таблица.Регистратор                       КАК Документ,
	|	ЕСТЬNULL(Таблица.СуммаНачальныйОстаток,0) КАК НачОст,
	|	ЕСТЬNULL(Таблица.СуммаПриход,0)           КАК Приход,
	|	ЕСТЬNULL(Таблица.СуммаРасход,0)           КАК Расход,
	|	ЕСТЬNULL(Таблица.СуммаКонечныйОстаток,0)  КАК КонОст
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	&ИсходныеДанные КАК Таблица
	|ГДЕ Таблица.Регистратор <> Неопределено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Документ       КАК Документ,
	|	МИНИМУМ(ВЫБОР
	|		КОГДА ТаблицаДокументов.Документ ССЫЛКА Документ.ПоступлениеТоваров
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ОприходованиеТоваров
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ПеремещениеТоваров
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ОрдерНаПеремещениеТоваров
	|			ТОГДА ТаблицаДокументов.Документ.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаЗакупки,
	|	МИНИМУМ(ВЫБОР
	|		КОГДА ТаблицаДокументов.Документ ССЫЛКА Документ.РеализацияТоваров
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ПеремещениеТоваров
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.ОрдерНаПеремещениеТоваров
	|				ИЛИ ТаблицаДокументов.Документ ССЫЛКА Документ.СписаниеТоваров
	|			ТОГДА ТаблицаДокументов.Документ.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаПродажи,
	|	ТаблицаДокументов.Документ.Дата  КАК Дата,
	|	ТаблицаДокументов.Документ.Номер КАК Номер,
	|	СУММА(ТаблицаДокументов.Приход) КАК Приход,
	|	СУММА(ТаблицаДокументов.Расход) КАК Расход
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Документ
	|");
	
	Запрос.УстановитьПараметр("ИсходныеДанные", ИсходныеДанные);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ИсходныеДанные.Количество() = 0 Тогда
		
		НачОст = 0;
		КонОст = 0;
		
	Иначе
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(Таблица.СуммаНачальныйОстаток, 0) КАК НачОст,
		|	ЕСТЬNULL(Таблица.СуммаКонечныйОстаток, 0) КАК КонОст,
		|	Таблица.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ТаблицаСуммы
		|ИЗ
		|	&ИсходныеДанные КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ТаблицаСуммы.НачОст) КАК НачОст,
		|	СУММА(ТаблицаСуммы.КонОст) КАК КонОст,
		|	ТаблицаСуммы.Регистратор КАК Регистратор
		|ИЗ
		|	ТаблицаСуммы КАК ТаблицаСуммы
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСуммы.Регистратор");
		
		Запрос.УстановитьПараметр("ИсходныеДанные", ИсходныеДанные);
		
		РезультатЗапросаСуммы = Запрос.Выполнить().Выгрузить();
		
		Если РезультатЗапросаСуммы.Количество() = 1 Тогда 
			НачОст = РезультатЗапросаСуммы[0].НачОст;
			КонОст = РезультатЗапросаСуммы[0].КонОст;
		Иначе 
			НачОст = 0;
			КонОст = 0;
		КонецЕсли;
				
	КонецЕсли;
	
	ОбластьМакетаОстатокНачалаКолонкаОсновная    = Макет.ПолучитьОбласть("ОстатокНачала|КолонкаОсновная");
	ОбластьМакетаОстатокНачалаСуммаЗакупки       = Макет.ПолучитьОбласть("ОстатокНачала|СуммаЗакупки");
	ОбластьМакетаОстатокНачалаРозничнаяСумма     = Макет.ПолучитьОбласть("ОстатокНачала|РозничнаяСумма");
	ОбластьМакетаОстатокНачалаСуммаПродажи       = Макет.ПолучитьОбласть("ОстатокНачала|СуммаПродажи");
	ОбластьМакетаОстатокНачалаОтметкиБухгалтерии = Макет.ПолучитьОбласть("ОстатокНачала|ОтметкиБухгалтерии");
	
	ОбластьМакетаОстатокНачалаКолонкаОсновная.Параметры.ДатаНачала = НСтр("ru = 'Остаток на'") + " " + Формат(ДатаНачала, "ДЛФ=Д");
	ОбластьМакетаОстатокНачалаРозничнаяСумма.Параметры.НачСтоимостьВсего = ФорматСумм(НачОст,"");
	
	ТабДокумент.Вывести(ОбластьМакетаОстатокНачалаКолонкаОсновная);
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		ТабДокумент.Присоединить(ОбластьМакетаОстатокНачалаСуммаЗакупки);
		ТабДокумент.Присоединить(ОбластьМакетаОстатокНачалаРозничнаяСумма);
		ТабДокумент.Присоединить(ОбластьМакетаОстатокНачалаСуммаПродажи);
	Иначе
		ТабДокумент.Присоединить(ОбластьМакетаОстатокНачалаРозничнаяСумма);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьМакетаОстатокНачалаОтметкиБухгалтерии);
	
	
	ОбластьПриход                   = Макет.ПолучитьОбласть("Приход|КолонкаОсновная");
	ОбластьПриходРозничнойСуммы     = Макет.ПолучитьОбласть("Приход|РозничнаяСумма");
	ОбластьПриходСуммыЗакупки       = Макет.ПолучитьОбласть("Приход|СуммаЗакупки");
	ОбластьПриходСуммыПродажи       = Макет.ПолучитьОбласть("Приход|СуммаПродажи");
	ОбластьПриходОтметкиБухгалтерии = Макет.ПолучитьОбласть("Приход|ОтметкиБухгалтерии");
	
	ТабДокумент.Вывести(ОбластьПриход);
	
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		ТабДокумент.Присоединить(ОбластьПриходСуммыЗакупки);
		ТабДокумент.Присоединить(ОбластьПриходРозничнойСуммы);
		ТабДокумент.Присоединить(ОбластьПриходСуммыПродажи);
	Иначе
		ТабДокумент.Присоединить(ОбластьПриходРозничнойСуммы);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьПриходОтметкиБухгалтерии);
	
	ТипыКорректировок = Новый Массив;
	ТипыКорректировок.Добавить(Тип("ДокументСсылка.ВводНачальныхОстатковУзла"));
	ТипыКорректировок.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	
	ОбластьСтроки             = Макет.ПолучитьОбласть("Строка|КолонкаОсновная");
	ОбластьРозничнойСуммы     = Макет.ПолучитьОбласть("Строка|РозничнаяСумма");
	ОбластьСуммыЗакупки       = Макет.ПолучитьОбласть("Строка|СуммаЗакупки");
	ОбластьСуммыПродажи       = Макет.ПолучитьОбласть("Строка|СуммаПродажи");
	ОбластьОтметкиБухгалтерии = Макет.ПолучитьОбласть("Строка|ОтметкиБухгалтерии");
	
	СуммаЗакупкиИтого = 0;
	СуммаПродажиИтого = 0;
	
	Для Каждого СтрокаТЗ Из РезультатЗапроса Цикл
		
		Если СтрокаТЗ.Приход = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьСтроки.Параметры.Документ       = ПолучитьПредставлениеДокумента(СтрокаТЗ, ТипыКорректировок, "Приход");
		ОбластьСтроки.Параметры.Расшифровка    = СтрокаТЗ.Документ;
		ОбластьСтроки.Параметры.ДатаДокумента  = СтрокаТЗ.Дата;
		ОбластьСтроки.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТЗ.Номер, Ложь, Истина);
		ОбластьРозничнойСуммы.Параметры.СуммаТовара    = ФорматСумм(СтрокаТЗ.Приход,"","");
		ОбластьРозничнойСуммы.Параметры.СуммаТары      = ФорматСумм(0,"","");
		
		ТабДокумент.Вывести(ОбластьСтроки);
		
		Если ОтображатьСуммыЗакупкиПродажи Тогда
			
			ОбластьСуммыПродажи.Параметры.СуммаПродажи = ФорматСумм(СтрокаТЗ.СуммаПродажи,"","");
			ОбластьСуммыПродажи.Параметры.СуммаТары    = ФорматСумм(0,"","");
			ОбластьСуммыЗакупки.Параметры.СуммаЗакупки = ФорматСумм(СтрокаТЗ.СуммаЗакупки,"","");
			ОбластьСуммыЗакупки.Параметры.СуммаТары    = ФорматСумм(0,"","");
			
			ТабДокумент.Присоединить(ОбластьСуммыЗакупки);
			ТабДокумент.Присоединить(ОбластьРозничнойСуммы);
			ТабДокумент.Присоединить(ОбластьСуммыПродажи);
			
			СуммаЗакупкиИтого = СуммаЗакупкиИтого + СтрокаТЗ.СуммаЗакупки;
			СуммаПродажиИтого = СуммаПродажиИтого + СтрокаТЗ.СуммаПродажи;
			
		Иначе
			ТабДокумент.Присоединить(ОбластьРозничнойСуммы);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьОтметкиБухгалтерии);
	КонецЦикла;
	
	Приход = РезультатЗапроса.Итог("Приход");
	ОбластьПриход                   = Макет.ПолучитьОбласть("ИтогоПриход|КолонкаОсновная");
	ОбластьПриходРозничнойСуммы     = Макет.ПолучитьОбласть("ИтогоПриход|РозничнаяСумма");
	ОбластьПриходСуммыЗакупки       = Макет.ПолучитьОбласть("ИтогоПриход|СуммаЗакупки");
	ОбластьПриходСуммыПродажи       = Макет.ПолучитьОбласть("ИтогоПриход|СуммаПродажи");
	ОбластьПриходОтметкиБухгалтерии = Макет.ПолучитьОбласть("ИтогоПриход|ОтметкиБухгалтерии");
	
	ОбластьПриходРозничнойСуммы.Параметры.ПрихСтоимостьВсего = ФорматСумм(Приход,"");
	
	ТабДокумент.Вывести(ОбластьПриход);
	
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		
		ОбластьПриходСуммыЗакупки.Параметры.СуммаЗакупкиВсего = ФорматСумм(СуммаЗакупкиИтого, "");
		ОбластьПриходСуммыПродажи.Параметры.СуммаПродажиВсего = ФорматСумм(СуммаПродажиИтого, "");
		
		ТабДокумент.Присоединить(ОбластьПриходСуммыЗакупки);
		ТабДокумент.Присоединить(ОбластьПриходРозничнойСуммы);
		ТабДокумент.Присоединить(ОбластьПриходСуммыПродажи);
	Иначе
		ТабДокумент.Присоединить(ОбластьПриходРозничнойСуммы);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьПриходОтметкиБухгалтерии);
	
	
	ОбластьВсегоПриход                   = Макет.ПолучитьОбласть("ВсегоПриход|КолонкаОсновная");
	ОбластьВсегоПриходРозничнойСуммы     = Макет.ПолучитьОбласть("ВсегоПриход|РозничнаяСумма");
	ОбластьВсегоПриходСуммыЗакупки       = Макет.ПолучитьОбласть("ВсегоПриход|СуммаЗакупки");
	ОбластьВсегоПриходСуммыПродажи       = Макет.ПолучитьОбласть("ВсегоПриход|СуммаПродажи");
	ОбластьВсегоПриходОтметкиБухгалтерии = Макет.ПолучитьОбласть("ВсегоПриход|ОтметкиБухгалтерии");
	
	ОбластьВсегоПриходРозничнойСуммы.Параметры.ПриходСОстатком = ФорматСумм((Приход + НачОст),"");
	
	ТабДокумент.Вывести(ОбластьВсегоПриход);
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		
		ТабДокумент.Присоединить(ОбластьВсегоПриходСуммыЗакупки);
		ТабДокумент.Присоединить(ОбластьВсегоПриходРозничнойСуммы);
		ТабДокумент.Присоединить(ОбластьВсегоПриходСуммыПродажи);
	Иначе
		ТабДокумент.Присоединить(ОбластьВсегоПриходРозничнойСуммы);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьВсегоПриходОтметкиБухгалтерии);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьРасход                   = Макет.ПолучитьОбласть("Расход|КолонкаОсновная");
	ОбластьРасходРозничнойСуммы     = Макет.ПолучитьОбласть("Расход|РозничнаяСумма");
	ОбластьРасходСуммыЗакупки       = Макет.ПолучитьОбласть("Расход|СуммаЗакупки");
	ОбластьРасходСуммыПродажи       = Макет.ПолучитьОбласть("Расход|СуммаПродажи");
	ОбластьРасходОтметкиБухгалтерии = Макет.ПолучитьОбласть("Расход|ОтметкиБухгалтерии");
	
	ТабДокумент.Вывести(ОбластьРасход);
	
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		ТабДокумент.Присоединить(ОбластьРасходСуммыЗакупки);
		ТабДокумент.Присоединить(ОбластьРасходРозничнойСуммы);
		ТабДокумент.Присоединить(ОбластьРасходСуммыПродажи);
	Иначе
		ТабДокумент.Присоединить(ОбластьРасходРозничнойСуммы);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьРасходОтметкиБухгалтерии);

	
	ОбластьСтроки          = Макет.ПолучитьОбласть("Строка|КолонкаОсновная");
	ОбластьРозничнойСуммы  = Макет.ПолучитьОбласть("Строка|РозничнаяСумма");
	ОбластьСуммыЗакупки    = Макет.ПолучитьОбласть("Строка|СуммаЗакупки");
	ОбластьСуммыПродажи    = Макет.ПолучитьОбласть("Строка|СуммаПродажи");
	ОбластьОтметкиБухгалтерии = Макет.ПолучитьОбласть("Строка|ОтметкиБухгалтерии");

	СуммаЗакупкиРасходИтого = 0;
	СуммаПродажиРасходИтого = 0;

	
	Для Каждого СтрокаТЗ Из РезультатЗапроса Цикл
		
		Если СтрокаТЗ.Расход = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьСтроки.Параметры.Документ       = ПолучитьПредставлениеДокумента(СтрокаТЗ, ТипыКорректировок, "Расход");
		ОбластьСтроки.Параметры.Расшифровка    = СтрокаТЗ.Документ;
		ОбластьСтроки.Параметры.ДатаДокумента  = СтрокаТЗ.Дата;
		ОбластьСтроки.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТЗ.Номер, Ложь, Истина);
		ОбластьРозничнойСуммы.Параметры.СуммаТовара    = ФорматСумм(СтрокаТЗ.Расход, "","");
		ОбластьРозничнойСуммы.Параметры.СуммаТары      = ФорматСумм(0, "","");
		
		ТабДокумент.Вывести(ОбластьСтроки);
		
		Если ОтображатьСуммыЗакупкиПродажи Тогда
			
			ОбластьСуммыПродажи.Параметры.СуммаПродажи = ФорматСумм(СтрокаТЗ.СуммаПродажи,"","");
			ОбластьСуммыПродажи.Параметры.СуммаТары    = ФорматСумм(0,"","");
			ОбластьСуммыЗакупки.Параметры.СуммаЗакупки = ФорматСумм(СтрокаТЗ.СуммаЗакупки,"","");
			ОбластьСуммыЗакупки.Параметры.СуммаТары    = ФорматСумм(0,"","");
			
			СуммаЗакупкиРасходИтого = СуммаЗакупкиРасходИтого + СтрокаТЗ.СуммаЗакупки;
			СуммаПродажиРасходИтого = СуммаПродажиРасходИтого + СтрокаТЗ.СуммаПродажи;
			
			ТабДокумент.Присоединить(ОбластьСуммыЗакупки);
			ТабДокумент.Присоединить(ОбластьРозничнойСуммы);
			ТабДокумент.Присоединить(ОбластьСуммыПродажи);
		Иначе
			ТабДокумент.Присоединить(ОбластьРозничнойСуммы);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьОтметкиБухгалтерии);
	КонецЦикла;
	
	Расход = РезультатЗапроса.Итог("Расход");
	
	ОбластьПриход                   = Макет.ПолучитьОбласть("ИтогоРасход|КолонкаОсновная");
	ОбластьПриходРозничнойСуммы     = Макет.ПолучитьОбласть("ИтогоРасход|РозничнаяСумма");
	ОбластьПриходСуммыЗакупки       = Макет.ПолучитьОбласть("ИтогоРасход|СуммаЗакупки");
	ОбластьПриходСуммыПродажи       = Макет.ПолучитьОбласть("ИтогоРасход|СуммаПродажи");
	ОбластьПриходОтметкиБухгалтерии = Макет.ПолучитьОбласть("ИтогоРасход|ОтметкиБухгалтерии");
	
	ОбластьПриходРозничнойСуммы.Параметры.РасхСтоимостьВсего = ФорматСумм(Расход, "");
	
	ТабДокумент.Вывести(ОбластьПриход);
	
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		
		ОбластьПриходСуммыЗакупки.Параметры.СуммаЗакупкиРасходВсего = ФорматСумм(СуммаЗакупкиРасходИтого, "");
		ОбластьПриходСуммыПродажи.Параметры.СуммаПродажиРасходВсего = ФорматСумм(СуммаПродажиРасходИтого, "");
		
		ТабДокумент.Присоединить(ОбластьПриходСуммыЗакупки);
		ТабДокумент.Присоединить(ОбластьПриходРозничнойСуммы);
		ТабДокумент.Присоединить(ОбластьПриходСуммыПродажи);
	Иначе
		ТабДокумент.Присоединить(ОбластьПриходРозничнойСуммы);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьПриходОтметкиБухгалтерии);
	
	ОбластьМакетаОстатокКонецКолонкаОсновная    = Макет.ПолучитьОбласть("ОстатокКонец|КолонкаОсновная");
	ОбластьМакетаОстатокКонецСуммаЗакупки       = Макет.ПолучитьОбласть("ОстатокКонец|СуммаЗакупки");
	ОбластьМакетаОстатокКонецРозничнаяСумма     = Макет.ПолучитьОбласть("ОстатокКонец|РозничнаяСумма");
	ОбластьМакетаОстатокКонецСуммаПродажи       = Макет.ПолучитьОбласть("ОстатокКонец|СуммаПродажи");
	ОбластьМакетаОстатокКонецОтметкиБухгалтерии = Макет.ПолучитьОбласть("ОстатокКонец|ОтметкиБухгалтерии");
	
	ОбластьМакетаОстатокКонецКолонкаОсновная.Параметры.ДатаКонца = НСтр("ru = 'Остаток на'") + " "  + Формат(ДатаОкончания, "ДЛФ=Д");
	ОбластьМакетаОстатокКонецРозничнаяСумма.Параметры.КонСтоимостьВсего = ФорматСумм(КонОст, "");
	
	ТабДокумент.Вывести(ОбластьМакетаОстатокКонецКолонкаОсновная);
	Если ОтображатьСуммыЗакупкиПродажи Тогда
		ТабДокумент.Присоединить(ОбластьМакетаОстатокКонецСуммаЗакупки);
		ТабДокумент.Присоединить(ОбластьМакетаОстатокКонецРозничнаяСумма);
		ТабДокумент.Присоединить(ОбластьМакетаОстатокКонецСуммаПродажи);
	Иначе
		ТабДокумент.Присоединить(ОбластьМакетаОстатокКонецРозничнаяСумма);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьМакетаОстатокКонецОтметкиБухгалтерии);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ПовторятьПриПечатиСтроки = ПовторятьПриПечатиСтроки;
	
	ОбщегоНазначенияРТ.ВывестиДатуФормированияОтчета(ТабДокумент);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьПредставлениеДокумента(СтрокаТЗ, ТипыКорректировок, ТипДвижения = "Расход")
	
	ТипДокумента = ТипЗнч(СтрокаТЗ.Документ);
	Представление = Строка(СтрокаТЗ.Документ);
	Если ТипДокумента = Тип("ДокументСсылка.УстановкаЦенНоменклатуры") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Установка цен'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Возврат от покупателя'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Возврат поставщику'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Акт об оприходовании товаров'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Отчет о розничных продажах'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПеремещениеТоваров")
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Накладная на перемещение'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Приходная накладная'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Расходная накладная'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СборкаТоваров") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Сборка товаров'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Акт о списании товаров'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПрименениеЦенНоменклатуры") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Установка цен'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Пересортица товаров'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИзменениеАссортимента") Тогда
		Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Изменение ассортимента'"));
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		Если ТипДвижения = "Расход" Тогда
			Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Расходная накладная'"));
		Иначе // Приход
			Представление =  ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Приходная накладная'"));
		КонецЕсли;
	ИначеЕсли ТипыКорректировок.Найти(ТипДокумента) <> Неопределено Тогда
		Представление = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(СтрокаТЗ, НСтр("ru = 'Корректировка остатков'"));
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ФорматСумм(Знач Сумма, Валюта = "руб.", ЧН = "0,00", ЧРГ = " ") Экспорт
	
	ФорматнаяСтрока = "ЧЦ=15;ЧДЦ=2" +
					?(НЕ ЗначениеЗаполнено(ЧН), "", ";" + "ЧН=" + ЧН) +
					?(НЕ ЗначениеЗаполнено(ЧРГ),"", ";" + "ЧРГ=" + ЧРГ);
	РезультирующаяСтрока = СокрЛ(Формат(Сумма, ФорматнаяСтрока));
	
	РезультирующаяСтрока = РезультирующаяСтрока + " " + СокрП(Валюта);
	
	Возврат РезультирующаяСтрока;
	
КонецФункции

#КонецОбласти

#КонецЕсли
