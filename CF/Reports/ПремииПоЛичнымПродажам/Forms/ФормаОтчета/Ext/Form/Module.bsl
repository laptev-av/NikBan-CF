#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(ОтчетОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"), Новый УникальныйИдентификатор);

КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Перем ВыполненноеДействие;
	Перем ПараметрВыполненногоДействия;
	
	Если ЭтотОбъект.ПредставлениеТекущегоВарианта <> "Расшифровка" И СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ЭтоГлавныйУзел Тогда
		СтандартнаяОбработка = Ложь;
		
		ПолучитьДанныеРасшифровкиИзХранилища(Расшифровка, СтандартнаяОбработка);
		
		Если СтандартнаяОбработка = Ложь Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ЭтоРасшифровка");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
			ПараметрыФормы.Вставить("КлючВарианта", "Основной");
			ПараметрыФормы.Вставить("АдресХранилищаНастроекДляРасшифровки", АдресХранилищаНастроекДляРасшифровки);
		    ОткрытьФорму("Отчет.АнализПравилРасчетаПремий.Форма", ПараметрыФормы, ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеРасшифровкиИзХранилища(Расшифровка, СтандартнаяОбработка)
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД);
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, ИсточникНастроек);
	ДанныеРасшифровкиИзХранилища = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	НовыеДанныеДляРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	Для каждого ДанныеРасшифровкиЭлементОтбора Из ДанныеРасшифровкиИзХранилища.Настройки.Отбор.Элементы Цикл
		Если ДанныеРасшифровкиЭлементОтбора.Использование Тогда
			ЭлементОтбора = НовыеДанныеДляРасшифровки.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(ЭлементОтбора, ДанныеРасшифровкиЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
		
	ЭлементРасшифровки = ДанныеРасшифровкиИзХранилища.Элементы.Получить(Расшифровка);
	ВыбранноеПоле = ЭлементРасшифровки.ПолучитьПоля()[0].Поле;
	Если ВыбранноеПоле <> "СуммаПродажОборот" И ВыбранноеПоле <> "КоличествоОборот" Тогда
	     СтандартнаяОбработка = Истина;
		 Возврат;
	КонецЕсли;

	Пока ЭлементРасшифровки.ПолучитьРодителей().Количество() <> 0 Цикл
		МассивРодителейЭлементаРасшифровки = ЭлементРасшифровки.ПолучитьРодителей();
		ИдентификаторРодителя = МассивРодителейЭлементаРасшифровки[0].Идентификатор;
		Если ИдентификаторРодителя = 0 Тогда
			Прервать;
		КонецЕсли;
		РодительЭлементаРасшифровки = ДанныеРасшифровкиИзХранилища.Элементы.Получить(ИдентификаторРодителя);
		Если ТипЗнч(РодительЭлементаРасшифровки) <> Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда
			ЗначенияПолейРодителяЭлементаРасшифровки = РодительЭлементаРасшифровки.ПолучитьПоля();
			Для каждого ЗначенияПоляРодителя Из ЗначенияПолейРодителяЭлементаРасшифровки Цикл
				ФлагПродолжить = Ложь;
				ПолеРодителя = ЗначенияПоляРодителя.Поле;
				ЭлементОтбораЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеРодителя);
				
				Для каждого ПолеОтбора Из НовыеДанныеДляРасшифровки.Настройки.Отбор.Элементы Цикл
					Если  ЭлементОтбораЛевоеЗначение = ПолеОтбора.ЛевоеЗначение Тогда
						ФлагПродолжить = Истина;
					КонецЕсли;
				КонецЦикла;
				
				Если ФлагПродолжить Тогда
					Продолжить;
				КонецЕсли;
				
				ЗначениеПоляРодителя = ЗначенияПоляРодителя.Значение;
				ЭлементОтбора = НовыеДанныеДляРасшифровки.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбора.ЛевоеЗначение = ЭлементОтбораЛевоеЗначение;
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбора.ПравоеЗначение = ЗначениеПоляРодителя;
				ЭлементОтбора.Использование = Истина;
			КонецЦикла;
		КонецЕсли;
		ЭлементРасшифровки = РодительЭлементаРасшифровки;
	КонецЦикла;
	
	Для каждого ЭлементПараметрыДанных Из ДанныеРасшифровкиИзХранилища.Настройки.ПараметрыДанных.Элементы Цикл
		
		НовыйЭлементПараметрыДанных = НовыеДанныеДляРасшифровки.Настройки.ПараметрыДанных.Элементы.Добавить();
		ЗаполнитьЗначенияСвойств (НовыйЭлементПараметрыДанных, ЭлементПараметрыДанных);
	КонецЦикла;
	
	АдресХранилищаНастроекДляРасшифровки = ПоместитьВоВременноеХранилище(НовыеДанныеДляРасшифровки.Настройки, УникальныйИдентификатор);
		
КонецПроцедуры

#КонецОбласти