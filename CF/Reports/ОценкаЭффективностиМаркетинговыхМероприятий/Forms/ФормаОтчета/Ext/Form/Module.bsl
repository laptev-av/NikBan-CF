
#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьОтборПоАкцииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Отчет.МаркетинговаяАкция = Результат;
		ПриИзмененииМаркетинговойАкцииСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(ОтчетОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"), Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
	
	СтандартнаяОбработка = Ложь;
	
	ИмяОтчета = ПолучитьЗначениеПоляРасшифровки(Расшифровка);
	
	Если ЗначениеЗаполнено(ИмяОтчета) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЭтоРасшифровка");
		ПараметрыФормы.Вставить("АдресХранилищаНастроекДляРасшифровки", АдресХранилищаНастроекДляРасшифровки);
		ПараметрыФормы.Вставить("Интервал", Отчет.Интервал);
		ПараметрыФормы.Вставить("МаркетинговаяАкция", Отчет.МаркетинговаяАкция);
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		ПараметрыФормы.Вставить("КлючВарианта", ИмяОтчета);
		
		ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьОтборПоАкции(Команда)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Документ.МаркетинговаяАкция.Форма.ФормаВыбора.Открытие");

	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ЗаполнитьОтборПоАкцииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Документ.МаркетинговаяАкция.ФормаВыбора", , ЭтаФорма, , , , ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриИзмененииМаркетинговойАкцииСервер()
	Перем НачалоПериода, КонецПериода, ДатаКонцаАкции, ДатаНачалаАкции;
	
	Если ЗначениеЗаполнено(Отчет.МаркетинговаяАкция) Тогда
		ДатаНачалаАкции = Отчет.МаркетинговаяАкция.ДатаНачалаДействия;
		ДатаКонцаАкции  = Отчет.МаркетинговаяАкция.ДатаОкончанияДействия;
		Если Не ЗначениеЗаполнено(ДатаКонцаАкции)  Тогда
			ДатаКонцаАкции = КонецДня(ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
	
	КонецПериода = ДатаКонцаАкции;
	
	Если ЗначениеЗаполнено(КонецПериода) И ЗначениеЗаполнено(ДатаНачалаАкции) И ДатаКонцаАкции >= ДатаНачалаАкции Тогда
		Если НачалоМесяца(ДатаНачалаАкции) = ДатаНачалаАкции
			И КонецМесяца(ДатаКонцаАкции) = КонецДня(ДатаКонцаАкции) Тогда
			КоличествоМесяцев = Год(ДатаКонцаАкции) * 12 + Месяц(ДатаКонцаАкции) - Год(ДатаНачалаАкции) * 12 - Месяц(ДатаНачалаАкции) + 1;
			НачалоПериода     = ДобавитьМесяц(ДатаНачалаАкции, -КоличествоМесяцев);
		Иначе
			КоличествоСекунд = (КонецДня(ДатаКонцаАкции) - ДатаНачалаАкции+1);
			НачалоПериода    = ДатаНачалаАкции - КоличествоСекунд;
		КонецЕсли;
	Иначе
		НачалоПериода = ДатаНачалаАкции;
	КонецЕсли;
	
	
	Периоды = Новый Структура;
	Периоды.Вставить("НачалоПериода"  , НачалоПериода);
	Периоды.Вставить("КонецПериода"   , КонецПериода);
	
	МаркетинговыеАкцииСервер.УстановитьОтборСегментовПоМаркетинговойАкции(Отчет.КомпоновщикНастроек, Отчет.МаркетинговаяАкция, Периоды);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеПоляРасшифровки(Расшифровка)
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД);
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, ИсточникНастроек);
		
	ДанныеРасшифровкиИзХранилища = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	// Создадим и инициализируем обработчик расшифровки.
	СтруктураРасшифровки = Новый Структура;
	МассивПолейРасшифровки = Новый Массив();
	ЭлементРасшифровки = ДанныеРасшифровкиИзХранилища.Элементы.Получить(Расшифровка);
	ИмяОтчета = "";
	
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		
		ПоляРасшифровки =ЭлементРасшифровки.ПолучитьПоля();
		
		Если НЕ ПоляРасшифровки.Найти("СтоимостьОборотАкции") = Неопределено Тогда
			ИмяОтчета = "ОценкаПродвиженияТовара";
		ИначеЕсли НЕ ПоляРасшифровки.Найти("СуммаВходящий") = Неопределено Тогда
			ИмяОтчета = "ОценкаРаспродажи";
		ИначеЕсли НЕ ПоляРасшифровки.Найти("КоличествоЧековАкции") = Неопределено Тогда
			ИмяОтчета = "ОценкаПродаж";
		ИначеЕсли НЕ ПоляРасшифровки.Найти("СкидкаАкции")  = Неопределено Тогда
			ИмяОтчета = "ОценкаПримененияСкидок";
		КонецЕсли;
		
		АдресХранилищаНастроекДляРасшифровки = ПоместитьВоВременноеХранилище(Отчет.КомпоновщикНастроек.ПолучитьНастройки(), УникальныйИдентификатор);
		
	КонецЕсли;
	
	Возврат ИмяОтчета;
	
КонецФункции

#КонецОбласти
