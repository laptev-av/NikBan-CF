
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ДанныеЗаполнения", ПараметрКоманды);
	
	МассивСкладовОРП = СписокСкладовДляКоторыхНужноСоздаватьАктыСписания(ПараметрКоманды, ДополнительныеПараметры);
	
	Если МассивСкладовОРП.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'В документе %1 нет данных для создания Акта списания'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ДополнительныеПараметры.ДанныеЗаполнения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	ИначеЕсли МассивСкладовОРП.Количество() = 1 Тогда
		
		СоздатьактСписанияНаОснованииОРП(МассивСкладовОРП[0], ДополнительныеПараметры);
		
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеВыбораСклада", ЭтотОбъект, ДополнительныеПараметры);
		
		СписокВыбора = Новый СписокЗначений();
		Для Каждого СкладОРП Из МассивСкладовОРП Цикл
			СписокВыбора.Добавить(СкладОРП);
		КонецЦикла;
		СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выберите склад", СписокВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОповещениеВыбораСклада(ПараметрКоманды, ДополнительныеПараметры) Экспорт
	
	Если ПараметрКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьактСписанияНаОснованииОРП(ПараметрКоманды.Значение, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАктСписанияНаОснованииОРП(СкладСписания, ДополнительныеПараметры)
	
	Форма = ПолучитьФорму("Документ.АктСписанияЕГАИС.ФормаОбъекта");
	
	ДанныеФормы = Форма.Объект;
	
	ДополнительныеПараметры.Вставить("ДанныеФормы", ДанныеФормы);
	ДанныеФормы = СоздатьактСписанияНаОснованииОРПНаСервере(СкладСписания, ДополнительныеПараметры);
	
	Если Не ДанныеФормы = Неопределено Тогда
		
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
		
		ВидимостьСправки2 = Форма.Объект.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.АктСписанияИзРегистра1");
		
		Форма.Элементы.ТоварыСправка2.Видимость = ВидимостьСправки2;
		Форма.Элементы.ПодобратьСправки2ПоОстаткамРегистра1.Видимость = ВидимостьСправки2;
		
		ОткрытьФорму(Форма);
		
	Иначе
		
		ТекстОшибки = Нстр("ru = 'По документу %1 (склад %2) уже создан Акт списания ЕГАИС'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДополнительныеПараметры.ДанныеЗаполнения, СкладСписания);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьАктСписанияНаОснованииОРПНаСервере(СкладСписания, ДополнительныеПараметры)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АктСписанияЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
	|ГДЕ
	|	АктСписанияЕГАИС.ДокументОснование = &ОРП
	|	И НЕ АктСписанияЕГАИС.ПометкаУдаления
	|	И АктСписанияЕГАИС.ТорговыйОбъект = &ТорговыйОбъект";
	Запрос.УстановитьПараметр("ОРП", ДополнительныеПараметры.ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ТорговыйОбъект", СкладСписания.Магазин);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	АктСписанияОбъект = ДанныеФормыВЗначение(ДополнительныеПараметры.ДанныеФормы, Тип("ДокументОбъект.АктСписанияЕГАИС"));
	ИнтеграцияЕГАИСРТ.ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(
			АктСписанияОбъект,
			ДополнительныеПараметры.ДанныеЗаполнения,
			ДополнительныеПараметры.ДобавитьМаркируемуюПродукцию,
			ДополнительныеПараметры.ДобавитьНеМаркируемуюПродукцию);
	ЗначениеВДанныеФормы(АктСписанияОбъект, ДополнительныеПараметры.ДанныеФормы);
	
	Возврат ДополнительныеПараметры.ДанныеФормы;
	
КонецФункции

&НаСервере
Функция СписокСкладовДляКоторыхНужноСоздаватьАктыСписания(ПараметрКоманды, ДополнительныеПараметры)
	
	РеквизитыОРП = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрКоманды, "Организация, Магазин, Дата");
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОРП.Организация, РеквизитыОРП.Магазин);
	
	ДобавитьМаркируемуюПродукцию = Ложь;
	
	Если ЗначениеЗаполнено(ОрганизацияЕГАИС) Тогда
		НаходитсяВСельскойМестности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияЕГАИС, "НаходитсяВСельскойМестности");
		Если НаходитсяВСельскойМестности
			И Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() > РеквизитыОРП.Дата Тогда
			ДобавитьМаркируемуюПродукцию = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ДобавитьНеМаркируемуюПродукцию = Истина;
	
	ДополнительныеПараметры.Вставить("ДобавитьНеМаркируемуюПродукцию", ДобавитьНеМаркируемуюПродукцию);
	ДополнительныеПараметры.Вставить("ДобавитьМаркируемуюПродукцию", ДобавитьМаркируемуюПродукцию);
	
	Возврат ИнтеграцияЕГАИСРТ.СписокСкладовДляКоторыхНужноСоздаватьАктыСписания(ПараметрКоманды, ДобавитьМаркируемуюПродукцию, ДобавитьНеМаркируемуюПродукцию);
	
КонецФункции

#КонецОбласти
