
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийПодключаемогоОборудования

&НаКлиенте
Процедура ОповещениеПоискаПоНаименованию(Результат, ДополнительныеПараметры) Экспорт
		
	Если Результат <> Неопределено Тогда
		ОбработатьДанныеПоКодуСервер(Результат);
		Если Результат.Свойство("ТекстПредупреждения") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ТекстПредупреждения);
		Иначе
			ЗавершитьОбработкуДанныхПоКодуКлиент(Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоМагнитномуКоду(ТекКод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(ТекКод) Тогда
		СтруктураПараметровКлиента = ПолученМагнитныйКод(ТекКод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораДанныхПоиска(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОбработатьДанныеПоКодуСервер(Результат);
		ОбработатьДанныеПоКодуКлиент(Результат)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолученМагнитныйКод(МагнитныйКод) Экспорт 
	
	СтруктураРезультат = ПодключаемоеОборудованиеРТВызовСервера.ПолученМагнитныйКод(МагнитныйКод, ЭтотОбъект);
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Функция ПолученШтрихкодИзСШК(Штрихкод) Экспорт
	
	СтруктураРезультат = ПодключаемоеОборудованиеРТВызовСервера.ПолученШтрихкодИзСШК(Штрихкод, ЭтотОбъект);
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Процедура ОбработатьДанныеПоКодуСервер(СтруктураРезультат) Экспорт
	
	СтрокаРезультата = СтруктураРезультат.ЗначенияПоиска[0];
	
	Если СтрокаРезультата.Свойство("Карта") Тогда
		
		ПодключаемоеОборудованиеРТВызовСервера.ВставитьПредупреждениеОНевозможностиОбработкиКарт(СтруктураРезультат, СтрокаРезультата);
		
	Иначе
		
		ИдентификаторСтроки = НайтиСтрокуВТаблице(СтрокаРезультата);
		Если ИдентификаторСтроки = Неопределено Тогда
			ТекстПредупреждения = НСтр("ru = 'Номенклатура ""%1"" не найдена в табличной части ""Товары""'");
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, СтрокаРезультата.Номенклатура);
			СтруктураРезультат.Вставить("ТекстПредупреждения", ТекстПредупреждения);
		Иначе
			СтруктураРезультат.Вставить("АктивизироватьСтроку", ИдентификаторСтроки);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента) Экспорт
	
	ОткрытаБлокирующаяФорма = Ложь;
	
	ПодключаемоеОборудованиеРТКлиент.ОбработатьДанныеПоКоду(ЭтотОбъект, СтруктураПараметровКлиента, ОткрытаБлокирующаяФорма);
	
	Если НЕ ОткрытаБлокирующаяФорма Тогда
		ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбработкаВопросаОНачалеВыбораОбъектаЦенообразования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СтруктураОтбора = Новый Структура("ИспользоватьПрименениеЦен", Истина);
		ПараметрыОткрытия = Новый Структура("Отбор", СтруктураОтбора);
		ОткрытьФорму(
			"Справочник.Магазины.ФормаВыбора",
			ПараметрыОткрытия,
			ДополнительныеПараметры.Элемент,
			,
			,
			,
			,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоНазначеннымЦенамЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ДополнительныеПараметры.ОчищатьТаблицу Тогда
			Объект.Товары.Очистить();
		КонецЕсли;
		ЗаполнитьЦены();
		
		
		ТекстОповещения = НСтр("ru = 'Заполнено %1 строк по ценам номенклатуры в таблице ""Товары""'");
		ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ТекстОповещения,
							Объект.Товары.Количество());
		
		ПоказатьОповещениеПользователя(
				НСтр("ru = 'Заполнение:'"),
				,
				ТекстОповещения,
				БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(
		Объект,
		КартинкаСостоянияДокумента,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		РазрешеноПроведение);
	
	СтруктураОбъектаЦенообразования                = ЦенообразованиеПереопределяемый.ИспользуемыйОбъектЦенообразования();
	ИмяОбъектаЦенообразования                      = СтруктураОбъектаЦенообразования.ПредставлениеОбъекта;
	МассивОграниченияТипов                         = Новый Массив;
	МассивОграниченияТипов.Добавить(ТипЗнч(СтруктураОбъектаЦенообразования.Ссылка));
	Элементы.ОбъектЦенообразования.ОграничениеТипа = Новый ОписаниеТипов(МассивОграниченияТипов);
	Элементы.ОбъектЦенообразования.Заголовок       = ИмяОбъектаЦенообразования;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		Элементы.ДокументОснование.Видимость = Ложь;
		
	КонецЕсли;
		
	ЗаполнитьСтарыеЦены();
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
		ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	КонецЕсли;
	
	НастроитьФормуПоДополнительнымПравам();
	
	УстановитьДоступностьКомандБуфераОбмена();
	
	ПодключаемоеОборудованиеРТВызовСервера.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
	ЗаполнитьСтарыеЦены();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.Товары.Количество() = 0 Тогда
		
		ТекстОшибки = НСтр("ru='Не введено ни одной строки в список ""Товары"".'");
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Объект,
			"Товары",
			,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КопированиеСтрокВБуферОбмена" Или ИмяСобытия = "ВставкаСтрокИзБуфераОбмена" Тогда
		УстановитьДоступностьКомандБуфераОбмена();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// &ЗамерПроизводительности
	Замер = ОценкаПроизводительностиРТКлиент.НачатьЗамер(Ложь, 
	                                            "Документ.ПрименениеЦенНоменклатуры.ФормаДокумента.Запись",
                                                          Ложь);
	
	ПараметрыЗаписи.Вставить("Замер", Замер);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.ЗакончитьЗамер(ПараметрыЗаписи.Замер);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЗаполнитьСтарыеЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектЦенообразованияПриИзменении(Элемент)
	
	ЗаполнитьЦены(ЗначениеЗаполнено(Объект.ДокументОснование));
	ТекстОповещения = НСтр("ru = 'Заполнено %1 строк по назначенным ценам в таблице ""Товары""'");
	ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ТекстОповещения,
						Объект.Товары.Количество());
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Заполнение:'"),
		,
		ТекстОповещения,
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектЦенообразованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.Товары.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ТекстВопроса = НСтр("ru = 'Табличная часть будет перезаполнена.
								  |Продолжить редактирование?'");
			
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Элемент", Элемент);
		ОбработчикОповещения = Новый ОписаниеОповещения(
										"ОбработкаВопросаОНачалеВыбораОбъектаЦенообразования",
										ЭтотОбъект,
										ДополнительныеПараметры);
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиКомандПодключаемогоОборудования

&НаКлиенте
Процедура ВыгрузитьДанныеВТСД(Команда)
	
	ПодключаемоеОборудованиеРТКлиент.ВыгрузитьДокументВТСД(ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоМагнитномуКоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиМагнитныйКод(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоНаименованию(Команда)
	
	ПараметрыПоиска = Новый Структура;
	РаботаСПравиламиИменованияКлиент.ПоискПоНаименованию(ЭтаФорма,ПараметрыПоиска);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьПоНазначеннымЦенам(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ОбъектЦенообразования) Тогда
		
		ТекстОшибки = НСтр("ru='Поле ""%1"" не заполнено'");
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				ИмяОбъектаЦенообразования),
				Объект.Ссылка,
				"Объект.ОбъектЦенообразования");
			
		Возврат;
			
	КонецЕсли;
		
	ДополнительныеПараметры = Новый Структура;
	
	Если Объект.Товары.Количество() = 0 Тогда
		ДополнительныеПараметры.Вставить("ОчищатьТаблицу", Ложь);
		ЗаполнитьПоНазначеннымЦенамЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
	Иначе
		ТекстВопроса = НСтр("ru = 'Табличная часть будет очищена.
								  |Продолжить выполнение операции?'");
								  
		ДополнительныеПараметры.Вставить("ОчищатьТаблицу", Истина);
		ОбработчикОповещения = Новый ОписаниеОповещения(
										"ЗаполнитьПоНазначеннымЦенамЗавершение",
										ЭтотОбъект,
										ДополнительныеПараметры);
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеЦен(Команда)
	
	Элементы.ФормаРазрешитьРедактированиеЦен.Пометка = НЕ Элементы.ФормаРазрешитьРедактированиеЦен.Пометка;
	Элементы.ТоварыЦена.ТолькоПросмотр = НЕ Элементы.ФормаРазрешитьРедактированиеЦен.Пометка; 
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСвернутьТЧ(Команда)
	РазвернутьСвернутьТЧНаСервере();
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура СкопироватьСтроки(Команда)
	
	Если КопированиеСтрокКлиент.ВозможноКопированиеСтрок(Элементы.Товары.ТекущаяСтрока) Тогда
		СкопироватьСтрокиНаСервере();
		КопированиеСтрокКлиент.ОповеститьПользователяОКопированииСтрок(Элементы.Товары.ВыделенныеСтроки.Количество());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСтроки(Команда)

	КоличествоТоваровДоВставки = Объект.Товары.Количество();
	ПолучитьСтрокиИзБуфераОбмена();
	КоличествоВставленных = Объект.Товары.Количество() - КоличествоТоваровДоВставки;
	КопированиеСтрокКлиент.ОповеститьПользователяОВставкеСтрок(КоличествоВставленных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РазвернутьСвернутьТЧНаСервере()
	
	РазвернутаТЧ = НЕ РазвернутаТЧ;
	
	ВидимостьЭлементов = НЕ РазвернутаТЧ;
	
	Элементы.ГруппаОснование.Видимость = ВидимостьЭлементов;
	Элементы.ГруппаВерх.Видимость = ВидимостьЭлементов;
	Элементы.ГруппаОтветственный.Видимость = ВидимостьЭлементов;
	
	Если ВидимостьЭлементов Тогда
		ЭтаФорма.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Авто;
		Картинка = БиблиотекаКартинок.РазвернутьТабличнуюЧасть
	Иначе
		ЭтаФорма.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
		Картинка = БиблиотекаКартинок.СвернутьТабличнуюЧасть;
	КонецЕсли;
	Элементы.РазвернутьСвернутьТЧ.Картинка = Картинка;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтарыеЦены()
	
	Если Объект.Товары.Количество() > 0 Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ТаблицаЦен.Номенклатура КАК Номенклатура,
		|	ТаблицаЦен.Характеристика КАК Характеристика,
		|	ТаблицаЦен.Упаковка КАК Упаковка,
		|	ТаблицаЦен.Цена КАК Цена,
		|	ТаблицаЦен.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ПрименениеЦенТовары
		|ИЗ
		|	&ТаблицаЦен КАК ТаблицаЦен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ДействующиеЦены.Цена, 0) КАК ТекущаяДействующаяЦена,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДействующиеЦены.Цена, 0) > 0
		|			ТОГДА (ПрименениеЦенТовары.Цена / ДействующиеЦены.Цена - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
		|	ПрименениеЦенТовары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ПрименениеЦенТовары КАК ПрименениеЦенТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
		|				&ДатаДокумента,
		|				(Номенклатура, Упаковка, Характеристика) В
		|						(ВЫБРАТЬ
		|							Товары.Номенклатура КАК Номенклатура,
		|							Товары.Упаковка КАК Упаковка,
		|							Товары.Характеристика КАК Характеристика
		|						ИЗ
		|							ПрименениеЦенТовары КАК Товары)
		|					И ОбъектЦенообразования = &ОбъектЦенообразования
		|					И Регистратор <> &Документ) КАК ДействующиеЦены
		|		ПО (ДействующиеЦены.Номенклатура = ПрименениеЦенТовары.Номенклатура)
		|			И (ДействующиеЦены.Характеристика = ПрименениеЦенТовары.Характеристика)
		|			И (ДействующиеЦены.Упаковка = ПрименениеЦенТовары.Упаковка)");
		
		Запрос.УстановитьПараметр("ТаблицаЦен", Объект.Товары.Выгрузить());
		Запрос.УстановитьПараметр("Документ", Объект.Ссылка);
		Запрос.УстановитьПараметр("ОбъектЦенообразования", Объект.ОбъектЦенообразования);
		Запрос.УстановитьПараметр("ДатаДокумента", ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаТабличнойЧасти = Объект.Товары[Выборка.НомерСтроки - 1];
			СтрокаТабличнойЧасти.ОтношениеЦенВПроцентах = Выборка.ОтношениеЦенВПроцентах;
			СтрокаТабличнойЧасти.ТекущаяДействующаяЦена = Выборка.ТекущаяДействующаяЦена;
			
		КонецЦикла;	
			
	КонецЕсли;	
		
КонецПроцедуры

// Заполняет табличную часть по данным РС "ЦеныНоменклатуры" и по списку позиций из документа-основания.
//
// Параметры:
// ПоДокументуОснованию - Булево - признак заполнения списка товаров из документа основания.
&НаСервере
Процедура ЗаполнитьЦены(ПоДокументуОснованию = Ложь)
		 
	СтруктураРеквизитовМагазина = Новый Структура;
	
	Если ТипЗнч(Объект.ОбъектЦенообразования) = Тип("СправочникСсылка.Магазины") Тогда
		СтруктураРеквизитовМагазина.Вставить("ФорматМагазина", "ФорматМагазина");
		СтруктураРеквизитовМагазина.Вставить("ПравилоЦенообразования", "ПравилоЦенообразования");
	ИначеЕсли ТипЗнч(Объект.ОбъектЦенообразования) = Тип("СправочникСсылка.Склады") Тогда
		СтруктураРеквизитовМагазина.Вставить("ФорматМагазина", "Магазин.ФорматМагазина");
		СтруктураРеквизитовМагазина.Вставить("ПравилоЦенообразования", "Магазин.ПравилоЦенообразования");
	Иначе
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = Документы.ПрименениеЦенНоменклатуры.ТекстЗапросаЗаполненияЦен(
						ПоДокументуОснованию,
						Объект.ОбъектЦенообразования);
	
	Если ПоДокументуОснованию Тогда
		Запрос.УстановитьПараметр("ОграниченияЗапроса", Объект.ДокументОснование);
	КонецЕсли;
	
	РеквизитыМагазина = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
							Объект.ОбъектЦенообразования,
							СтруктураРеквизитовМагазина);
		
	Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования", РеквизитыМагазина.ФорматМагазина);
	Запрос.УстановитьПараметр("ПравилоЦенообразования", РеквизитыМагазина.ПравилоЦенообразования);
	Запрос.УстановитьПараметр("ОбъектЦенообразования", Объект.ОбъектЦенообразования);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	ДатаСеанса = ТекущаяДатаСеанса();
	Если ЗначениеЗаполнено(Объект.Дата) И НачалоДня(Объект.Дата) <> НачалоДня(ДатаСеанса) Тогда
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Иначе
		Запрос.УстановитьПараметр("Дата", ДатаСеанса);
	КонецЕсли;
	
	Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметровКлиента)
	
	ИдентификаторСтроки = ПодключаемоеОборудованиеРТКлиент.ЗавершитьОбработкуДанныхПоКодуКлиент(ЭтотОбъект, СтруктураПараметровКлиента);
	
КонецПроцедуры

&НаСервере
Функция НайтиСтрокуВТаблице(СтруктураРезультат)
	
	ИдентификаторСтроки = Неопределено;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", СтруктураРезультат.Номенклатура);
	Если СтруктураРезультат.Свойство("Характеристика") Тогда
		СтруктураПоиска.Вставить("Характеристика", СтруктураРезультат.Характеристика);
	КонецЕсли;
	Если СтруктураРезультат.Свойство("Упаковка") Тогда
		СтруктураПоиска.Вставить("Упаковка", СтруктураРезультат.Упаковка);
	КонецЕсли;
	СтрокиТаблицы = Объект.Товары.НайтиСтроки(СтруктураПоиска);
	Если СтрокиТаблицы.Количество() > 0 Тогда
		ИдентификаторСтроки = СтрокиТаблицы[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	Возврат ИдентификаторСтроки;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
КонецПроцедуры

#Область РаботаСБуферомОбмена
	
&НаСервере
Процедура СкопироватьСтрокиНаСервере()
	
	КопированиеСтрокСервер.ПоместитьВыделенныеСтрокиВБуферОбмена(Элементы.Товары.ВыделенныеСтроки, Объект.Товары);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСтрокиИзБуфераОбмена()
	
	ТаблицаТоваров = КопированиеСтрокСервер.ПолучитьСтрокиИзБуфераОбмена();
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущаяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
		
	КонецЦикла;
	
	КопированиеСтрокСервер.ОчиститьБуферОбмена();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКомандБуфераОбмена()
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТоварыВставитьСтроки");
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Доступность", 
		НЕ ОбщегоНазначения.ПустойБуферОбмена("Строки"));
		
КонецПроцедуры


#КонецОбласти

#КонецОбласти

