#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УстановкаЦенНоменклатуры") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		
		Если Не ДокументОснование.Проведен Тогда
			
			ТекстОшибки = НСтр("ru='Документ %1 не проведен. Ввод на основании непроведенного документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЧ_ВидыЦен.ВидЦены КАК ВидЦен
		|ПОМЕСТИТЬ ВидыЦенДокумента
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК ТЧ_ВидыЦен
		|ГДЕ
		|	ТЧ_ВидыЦен.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ПодЗапрос.ПравилоЦенообразования
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ЦеновыеГруппы.ВидЦен КАК ВидЦен,
		|		ЦеновыеГруппы.Ссылка КАК ПравилоЦенообразования
		|	ИЗ
		|		Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ЦеновыеГруппы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВидЦеныПравила.ВидЦен,
		|		ВидЦеныПравила.Ссылка
		|	ИЗ
		|		Справочник.ПравилаЦенообразования КАК ВидЦеныПравила
		|	ГДЕ
		|		(НЕ ВидЦеныПравила.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))) КАК ПодЗапрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыЦенДокумента КАК ДоступныеВидыЦен
		|		ПО (ДоступныеВидыЦен.ВидЦен = ПодЗапрос.ВидЦен)");
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			
			ТекстОшибки = НСтр("ru='По документу %1 нет доступных видов цен для применения цен'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование);
			
			ВызватьИсключение ТекстОшибки;
         			
		КонецЕсли;	
				
	КонецЕсли;
	
	ЦенообразованиеПереопределяемый.ОбработкаЗаполненияПримененияЦенНоменклатуры(
		ЭтотОбъект,
		ДанныеЗаполнения,
		СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Ценообразование.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	Документы.ПрименениеЦенНоменклатуры.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	Ценообразование.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Ценообразование.ОтразитьПрименениеЦенНоменклатуры(ДополнительныеСвойства, Движения, Отказ);

	Ценообразование.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ Пользователи.РолиДоступны("ПрименениеЦенНоменклатуры") 
	И НЕ Пользователи.РолиДоступны("ЧтениеЦенНоменклатуры") 
	И НЕ Пользователи.РолиДоступны("ПолныеПрава") Тогда
		
		ТекстОшибки = НСтр("ru='Нет прав на применение цен номенклатуры, чтение цен номенклатуры'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			,
			,
			Отказ);
			
	КонецЕсли;

	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Цена КАК Цена
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	КОЛИЧЕСТВО(1) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ПовторыСтрок
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Цена КАК Цена
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПовторыСтрок КАК ПовторыСтрок
	|		ПО Товары.Номенклатура = ПовторыСтрок.Номенклатура
	|			И Товары.Характеристика = ПовторыСтрок.Характеристика
	|			И Товары.Упаковка = ПовторыСтрок.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки");
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстОшибки = НСтр("ru = 'Повтор номенклатуры, характеристики и упаковки в строке %1'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ТекстОшибки,
						Выборка.НомерСтроки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"Товары",
				Выборка.НомерСтроки,
				"Номенклатура"),
			,
			Отказ);
	КонецЦикла;
		
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(
		ЭтотОбъект,
		МассивНепроверяемыхРеквизитов,
		Отказ);	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты,
		МассивНепроверяемыхРеквизитов);
	 
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	Ценообразование.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	Ценообразование.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Ценообразование.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ИнициализироватьДокумент();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует применение цен номенклатуры.
//
Процедура ИнициализироватьДокумент()

	Ответственный     = Пользователи.ТекущийПользователь();
	ДокументОснование = Документы.УстановкаЦенНоменклатуры.ПустаяСсылка();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
