#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,,Организация);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НачалоДня(Дата) <> НачалоДня(ТекущаяДатаСеанса()) Тогда
		ТекстОшибки = НСтр("ru = 'Не допускается коррекция датой, отличной от текущей'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Дата",, Отказ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КассаККМ)  Тогда
		
		СтруктураСостояниеКассовойСмены = РозничныеПродажиСервер.ПолучитьСостояниеКассовойСмены(КассаККМ);
		
		КассоваяСмена = СтруктураСостояниеКассовойСмены.КассоваяСмена;
		
		ТекстОшибки = НСтр("ru = 'Кассовая смена не открыта'");
		Если НЕ РозничныеПродажиСервер.СменаОткрыта(КассоваяСмена, Дата, ТекстОшибки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "КассаККМ",, Отказ);
		КонецЕсли;
		
		ТипОборудования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КассаККМ, "ПодключаемоеОборудование.ТипОборудования");
		Если ТипОборудования <> Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
			ТекстОшибки = НСтр("ru = 'Коррекция допускается только при использовании ККТ'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "КассаККМ",, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Оплата.Итог("Сумма") <> ПозицииЧека.Итог("СуммаСоСкидками") Тогда
		ТекстОшибки = НСтр("ru = 'Сумма оплат не совпадает с итоговой суммой по позициям чека'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Оплата",, Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПробитЧекПоСсылке = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПробитЧек");
	
	Если ПробитЧекПоСсылке = Истина Тогда
		Текст = НСтр("ru = 'Чек коррекции пробит. Операции над этим документом запрещены'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,ЭтотОбъект,,,Отказ);
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Если чек пробит, тогда в любом случае вносим данные в РС СкорректированныеФискальныеОперации
	// независомо от проведения. Данные после пробития не редактируются.
	Если ПробитЧек И НЕ НеприменениеККТ Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СкорректированныеФискальныеОперации.СкорректированныеДокумент КАК СкорректированныеДокумент
		|ИЗ
		|	РегистрСведений.СкорректированныеФискальныеОперации КАК СкорректированныеФискальныеОперации
		|ГДЕ
		|	СкорректированныеФискальныеОперации.СкорректированныеДокумент = &СкорректированныеДокумент";
		
		Запрос.УстановитьПараметр("СкорректированныеДокумент", ДокументОснование);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			
			Менеджер = РегистрыСведений.СкорректированныеФискальныеОперации.СоздатьМенеджерЗаписи();
			
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Магазин", ДокументОснование.Метаданные()) Тогда
				Менеджер.Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Магазин");
			Иначе
				Менеджер.Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "КассаККМ.Магазин");
			КонецЕсли;
			
			Менеджер.СкорректированныеДокумент 				= ДокументОснование;
			Менеджер.ПредставлениеКорректирующегоДокумента 	= Строка(ЭтотОбъект);
			
			Менеджер.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбъектКопирования.НеприменениеККТ Тогда
		
		Текст = НСтр("ru = 'Можно копировать документы только с признаком ""Неприменение ККТ""'");
		
		ВызватьИсключение(Текст);
		
	КонецЕсли;
	
	НомерСмены = 0;
	НомерЧека  = 0;
	ПробитЧек = Ложь;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("КассирНаименование", "ФизическоеЛицо.Наименование");
	СтруктураРеквизитов.Вставить("КассирИНН", "ФизическоеЛицо.ИНН");
	РеквизитыКассира = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ответственный, СтруктураРеквизитов);
	
	Кассир 		= РеквизитыКассира.КассирНаименование;
	КассирИНН 	= РеквизитыКассира.КассирИНН;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("КассаККМ") Тогда
			КассаККМ      = ДанныеЗаполнения.КассаККМ;
			Магазин       = КассаККМ.Магазин;
			Организация   = КассаККМ.Владелец;
		Иначе
			ЗаполнитьЗначенияПоУмолчанию();
		КонецЕсли;
		
	Иначе
		
		ЗаполнитьЗначенияПоУмолчанию();
		
	КонецЕсли;
	
	НеприменениеККТ = Истина;
	ОписаниеКоррекции = НСтр("ru = 'Неприменение ККТ'");
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию()
	
	Магазин       = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация, Ответственный);
	КассаККМ      = ЗначениеНастроекПовтИсп.ПолучитьКассуККМПоУмолчанию(Организация, Магазин, КассаККМ, Ответственный);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
