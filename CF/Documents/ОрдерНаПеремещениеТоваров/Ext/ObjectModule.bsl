#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ОрдерНаПеремещениеТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийныхНомеров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);


КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Справочники.СерийныеНомера.ОчиститьВДокументеНеиспользуемыеСерийныеНомера(Товары, СерийныеНомера);
	ОбщегоНазначенияРТ.УдалитьНеиспользуемыеСтрокиСерий(ЭтотОбъект, 
																Документы.ОрдерНаПеремещениеТоваров.ПараметрыУказанияСерий(ЭтотОбъект));
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияРТ.УстановитьНовоеЗначениеРеквизита(
		ЭтотОбъект,
		ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСуммуДокумента(Товары, Истина),
		"СуммаДокумента");
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		Магазин           = ДанныеЗаполнения.Магазин;
		СкладОтправитель  = ДанныеЗаполнения.Склад;
		Организация       = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения;
		
		Если Магазин.СкладУправляющейСистемы Тогда
			
			ТекстОшибки = НСтр("ru='Документ %1 оформлен как поступление товаров в магазин %2, который является складом управляющей системы.
			|Ввод ордера на перемещение товаров на основании документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование, Магазин);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Для каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
			Если СтрокаТЧ.Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			КонецЕсли;
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.СерийныеНомера, СерийныеНомера);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		Магазин           = ДанныеЗаполнения.МагазинПолучатель;
		СкладОтправитель  = ДанныеЗаполнения.СкладПолучатель;
		Организация       = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения;
		
		Если Магазин.СкладУправляющейСистемы Тогда
			
			ТекстОшибки = НСтр("ru='Документ %1 оформлен как перемещение товаров в магазин %2, который является складом управляющей системы.
			|Ввод ордера на перемещение товаров на основании документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование, Магазин);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Для каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
			Если СтрокаТЧ.Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			КонецЕсли;
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.СерийныеНомера, СерийныеНомера);
				
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		Магазин           = ДанныеЗаполнения.Магазин;
		СкладОтправитель  = ДанныеЗаполнения.Склад;
		Организация       = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения;
		
		Если Магазин.СкладУправляющейСистемы Тогда
			
			ТекстОшибки = НСтр("ru='Документ %1 оформлен как оприходование товаров в магазин %2, который является складом управляющей системы.
			|Ввод ордера на перемещение товаров на основании документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование, Магазин);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.Товары, Товары);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.СерийныеНомера, СерийныеНомера);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Статус = Перечисления.СтатусыЗаказовПокупателей.НеСогласован Тогда
			ТекстОшибки = НСтр("ru='Заказ не согласован.
			|Заполнение документа не выполнено.'");
			
			ВызватьИсключение ТекстОшибки;
		ИначеЕсли ДанныеЗаполнения.Статус = Перечисления.СтатусыЗаказовПокупателей.Закрыт Тогда
			ТекстОшибки = НСтр("ru='Заказ закрыт.
			|Заполнение документа не выполнено.'");
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Магазин           = ДанныеЗаполнения.Магазин;
		СкладПолучатель   = ДанныеЗаполнения.Склад;
		Организация       = ДанныеЗаполнения.Организация;
		ЗаказПокупателя   = ДанныеЗаполнения.Ссылка;
		
		Если Магазин.СкладУправляющейСистемы Тогда
			
			ТекстОшибки = НСтр("ru='Документ %1 оформлен как оприходование товаров в магазин %2, который является складом управляющей системы.
			|Ввод ордера на перемещение товаров на основании документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование, Магазин);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		РозничныеПродажиСервер.ЗаполнитьТабличнуюЧастьПоОстаткамЗаказаБезРезерва(ЭтотОбъект, "Товары", ЗаказПокупателя);
		
		КоличествоЭлементов = Товары.Количество();
		Для ОбратныйИндекс = 1 По КоличествоЭлементов Цикл
			ЭлементКоллекции = Товары[КоличествоЭлементов - ОбратныйИндекс];

			Если ЭлементКоллекции.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				Товары.Удалить(ЭлементКоллекции);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	Если Товары.Количество() > 0 Тогда 
		ЗапасыСервер.ЗаполнитьЦеныПоРозничнымЦенам(ЭтотОбъект, "Товары", Магазин, ЗапасыСервер.ДатаДляЦенообразованияДляДокумента(ЭтотОбъект), Ложь);
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,,Организация);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Серии.Очистить();
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(СкладОтправитель)
		И ЗначениеЗаполнено(СкладПолучатель)
		И СкладОтправитель = СкладПолучатель Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Один склад не может быть как отправителем, так и получателем.
			|Измените один из складов'"),
			ЭтотОбъект,,,
			Отказ);

	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,Документы.ОрдерНаПеремещениеТоваров.ПараметрыУказанияСерий(ЭтотОбъект),Отказ);

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
		
	МаркетинговыеАкцииСервер.ПроверитьЗаполнениеТабличнойЧастиСерийныеНомера(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);
	
	МаркетинговыеАкцииСервер.ПроверитьДвиженияСерийныхНомеров(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();
	Магазин       = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация,Ответственный);
	СкладОтправитель = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(
		Магазин,,
		СкладОтправитель,
		Ответственный);
	
	СкладПолучатель  = ЗначениеНастроекПовтИсп.ПолучитьСкладПродажиПоУмолчанию(Магазин,,СкладПолучатель, Ответственный);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Магазин")
			И НЕ ЗначениеЗаполнено(Магазин) Тогда
			СкладОтправитель = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(
				ДанныеЗаполнения.Магазин,,
				СкладОтправитель,
				Ответственный);
			
			СкладПолучатель  = ЗначениеНастроекПовтИсп.ПолучитьСкладПродажиПоУмолчанию(
				ДанныеЗаполнения.Магазин,
				,
				СкладПолучатель,
				Ответственный);
		КонецЕсли;
	КонецЕсли;

	Если СкладОтправитель = СкладПолучатель Тогда
		СкладПолучатель = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

// Процедура формирует массив имен регистров для контроля проведения.
//
Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	
	// При проведении выполняется контроль превышения остатков на складах.
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Массив.Добавить(Движения.ТоварыНаСкладах);
		Массив.Добавить(Движения.ДвиженияСерийныхНомеров);
		
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
