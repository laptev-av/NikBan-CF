#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает информацию по платежной ведомости:
// - результат запроса 1, содержит информацию выплаченной зарплаты работнику (оформлен расходный кассовый ордер).
// - Результат запроса 2, содержит информацию, что ведомость оплачена полностью и признак, что ведомость оплачена
// частично.
//
Функция ДанныеОВыплатеПоВедомости(Объект) Экспорт
	Запрос = Новый Запрос();
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗарплатаТаблицаФормы.НомерСтроки КАК НомерСтроки,
	|	ЗарплатаТаблицаФормы.ФизЛицо     КАК ФизЛицо
	|ПОМЕСТИТЬ ЗарплатаТаблицаФормы
	|ИЗ
	|	&ЗарплатаТаблицаФормы КАК ЗарплатаТаблицаФормы
	|;
	|ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизацийЗарплата.НомерСтроки           КАК НомерСтроки,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.ФизЛицо               КАК ФизЛицо,
	|	ЗарплатаКВыплатеОрганизацийЗарплата.ОтметкаОВыплатеЗарплаты КАК ОтметкаОВыплатеЗарплаты,
	|	ВЫБОР	КОГДА ВыплаченнаяЗарплата.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                                     КАК ФлагРКО,
	|	ЕСТЬNULL(ВыплаченнаяЗарплата.Регистратор, ЗНАЧЕНИЕ(Документ.РасходныйКассовыйОрдер.ПустаяСсылка)) КАК РКО,
	|	ПРЕДСТАВЛЕНИЕ(ВыплаченнаяЗарплата.Регистратор)            КАК ПредставлениеРКО
	|ИЗ
	|	ЗарплатаТаблицаФормы КАК ЗарплатаТаблицаФормы
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
	|ПО
	|	ЗарплатаКВыплатеОрганизацийЗарплата.НомерСтроки = ЗарплатаТаблицаФормы.НомерСтроки
	|	И ЗарплатаКВыплатеОрганизацийЗарплата.ФизЛицо = ЗарплатаТаблицаФормы.ФизЛицо
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВыплаченнаяЗарплата КАК ВыплаченнаяЗарплата
	|ПО
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = ВыплаченнаяЗарплата.ПлатежнаяВедомость
	|	И ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо = ВыплаченнаяЗарплата.Работник
	|	И ЗарплатаКВыплатеОрганизацийЗарплата.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Выплачено)
	|ГДЕ
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка КАК Ссылка,
	|	ВЫБОР	КОГДА СУММА(ЕСТЬNULL(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма, 0.00)) = СУММА(ЕСТЬNULL(ВыплаченнаяЗарплата.Сумма, 0.00))
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                      КАК ВедомостьОплаченаПолностью,
	|	ВЫБОР	КОГДА СУММА(ЕСТЬNULL(ВыплаченнаяЗарплата.Сумма, 0.00)) > 0.00
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                      КАК ВедомостьОплаченаНеПолностью
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВыплаченнаяЗарплата КАК ВыплаченнаяЗарплата
	|ПО
	|	ВыплаченнаяЗарплата.ПлатежнаяВедомость = &Ссылка
	|	И ВыплаченнаяЗарплата.Работник = ЗарплатаКВыплатеОрганизацийЗарплата.ФизЛицо
	|ГДЕ
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &Ссылка
	|	И (ЗарплатаКВыплатеОрганизацийЗарплата.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Выплачено)
	|	ИЛИ ЗарплатаКВыплатеОрганизацийЗарплата.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.НеВыплачено))
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка
	|";
	
	Запрос.УстановитьПараметр("ЗарплатаТаблицаФормы", Объект.Зарплата.Выгрузить());
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	МассивРезультатовЗапросов = Запрос.ВыполнитьПакет();
	Возврат МассивРезультатовЗапросов;
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Платежная ведомость
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьТ53";
	КомандаПечати.Представление = НСтр("ru = 'Платежная ведомость'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТ53") Тогда
	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПечатьТ53",
				ПараметрыПечати.Представление,
				СформироватьПечатнуюФормуТ53(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает результат запроса с данными для печати Т-53.
//
// Параметры:
//  Режим - Строка - выборка данных для печати шапки документа либо выборка для печати данных по работникам ведомости.
//
// Возвращаемое значение:
//  Результат запроса - данные для печати Т-53.
//
Функция РезультатЗапросаДанныхВедомостиДляПечатиТ53(Режим, ДанныеПечати)

	Запрос = Новый Запрос;

	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка", ДанныеПечати.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ДанныеПечати.Дата);
	Запрос.УстановитьПараметр("Депонировано", Перечисления.ВариантыОтметокОВыплатеЗарплаты.Депонировано);
	Запрос.УстановитьПараметр("Выплачено", Перечисления.ВариантыОтметокОВыплатеЗарплаты.Выплачено);
	Запрос.УстановитьПараметр("ТекстПробел", " ");
	Запрос.УстановитьПараметр("ТекстТочка" , ".");

	Если Режим = "ПоРеквизитамДокумента" Тогда

		Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
		Запрос.УстановитьПараметр("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		Запрос.УстановитьПараметр("НомерДок", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, ПустаяСтрока(ПолучитьФункциональнуюОпцию("ПрефиксИнформационнойБазы")), Истина));
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&НомерДок                                                  КАК НомерДок,
		|	ЗарплатаКВыплатеОрганизаций.Дата                           КАК ДатаДок,
		|	ЗарплатаКВыплатеОрганизаций.Организация                    КАК Организация,
		|	ЗарплатаКВыплатеОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
		|	ЗарплатаКВыплатеОрганизаций.Организация.КодПоОКПО          КАК КодПоОКПО,
		|	ЕСТЬNULL(СправочникМагазины.Наименование, """")            КАК Подразделение,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследнихРуководитель.Фамилия
		|			+ ВЫБОР	КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Имя, 1, 1) <> """"
		|					ТОГДА &ТекстПробел + ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Имя, 1, 1) + &ТекстТочка
		|					ИНАЧЕ """"
		|			КОНЕЦ
		|			+ ВЫБОР	КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Отчество, 1, 1) <> """"
		|					ТОГДА &ТекстПробел + ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Отчество, 1, 1) + &ТекстТочка
		|					ИНАЧЕ """"
		|			КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо.Наименование) КАК ФИОРуководителя,
		|	ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.Должность.Наименование КАК ДолжностьРуководителя,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследнихГлБух.Фамилия
		|			+ ВЫБОР	КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Имя, 1, 1) <> """"
		|					ТОГДА &ТекстПробел + ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Имя, 1, 1) + &ТекстТочка
		|					ИНАЧЕ """"
		|			КОНЕЦ
		|			+ ВЫБОР	КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Отчество, 1, 1) <> """"
		|					ТОГДА &ТекстПробел + ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Отчество, 1, 1) + &ТекстТочка
		|					ИНАЧЕ """"
		|			КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо.Наименование) КАК ФИОГлБуха,
		|	ЕСТЬNULL(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма, 0.00)             КАК Сумма,
		|	ЕСТЬNULL(ЗарплатаКВыплатеОрганизацийЗарплата.ВсегоВыплачено, 0.00)    КАК ВсегоВыплачено,
		|	ЕСТЬNULL(ЗарплатаКВыплатеОрганизацийЗарплата.ВсегоДепонировано, 0.00) КАК ВсегоДепонировано,
		|	ВЫБОР	КОГДА ЕСТЬNULL(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма, 0.00) = ЕСТЬNULL(ЗарплатаКВыплатеОрганизацийЗарплата.ОплаченныеСуммы, 0.00)
		|			ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                                 КАК ОплаченоПолностью,
		|	ЗарплатаКВыплатеОрганизацийЗарплата.КоличествоРКО                     КАК КоличествоРКО
		|ИЗ
		|	Документ.ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.Магазины КАК СправочникМагазины
		|ПО
		|	СправочникМагазины.Ссылка = ЗарплатаКВыплатеОрганизаций.Магазин
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихРуководитель
		|ПО
		|	ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо = ФИОФизЛицСрезПоследнихРуководитель.ФизЛицо
		|ПО
		|	ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.СтруктурнаяЕдиница
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &ГлавныйБухгалтер) КАК ОтветственныеЛицаОрганизацийСрезПоследнихГлБух
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихГлБух
		|ПО
		|	ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо = ФИОФизЛицСрезПоследнихГлБух.ФизЛицо
		|ПО
		|	ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.СтруктурнаяЕдиница
		|ЛЕВОЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка КАК Ссылка,
		|			СУММА(ЗарплатаКВыплатеОрганизацийЗарплата.Сумма) КАК Сумма,
		|			СУММА(	ВЫБОР	КОГДА ЗарплатаКВыплатеОрганизацийЗарплата.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Депонировано)
		|							ТОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Сумма
		|							ИНАЧЕ 0.00
		|					КОНЕЦ) КАК ВсегоДепонировано,
		|			СУММА(	ВЫБОР	КОГДА ЗарплатаКВыплатеОрганизацийЗарплата.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Выплачено)
		|							ТОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Сумма
		|							ИНАЧЕ 0.00
		|					КОНЕЦ) КАК ВсегоВыплачено,
		|			СУММА(	ВЫБОР	КОГДА СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Регистратор ЕСТЬ НЕ NULL 
		|							ТОГДА ЗарплатаКВыплатеОрганизацийЗарплата.Сумма
		|							ИНАЧЕ 0.00
		|					КОНЕЦ) КАК ОплаченныеСуммы,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Регистратор КАК Документ.РасходныйКассовыйОрдер)) КАК КоличествоРКО
		|		ИЗ
		|			Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.ВыплаченнаяЗарплата КАК СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям
		|		ПО
		|			ЗарплатаКВыплатеОрганизацийЗарплата.Физлицо = СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Работник
		|			И ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.ПлатежнаяВедомость
		|		ГДЕ
		|			ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &ДокументСсылка
		|		СГРУППИРОВАТЬ ПО
		|			ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка
		|	) КАК ЗарплатаКВыплатеОрганизацийЗарплата
		|		ПО ЗарплатаКВыплатеОрганизаций.Ссылка = ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка
		|ГДЕ
		|	ЗарплатаКВыплатеОрганизаций.Ссылка = &ДокументСсылка";

	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.УстановитьПараметр("Организация"      , ДанныеПечати.Организация);
		Запрос.УстановитьПараметр("ТекстДепонировано", НСтр("ru = 'Депонировано'"));
		Запрос.УстановитьПараметр("ТекстВыплачено"   , НСтр("ru = 'Выплачено'"));
	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходныйКассовыйОрдер.Ссылка,
		|	РасходныйКассовыйОрдер.Номер,
		|	РасходныйКассовыйОрдер.Дата,
		|	РасходныйКассовыйОрдер.Представление
		|ПОМЕСТИТЬ ТаблицаРКО
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
		|ГДЕ
		|	РасходныйКассовыйОрдер.Проведен
		|	И РасходныйКассовыйОрдер.Организация = &Организация
		|	И (РасходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗаработнойПлатыПоВедомостям)
		|			ИЛИ РасходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗаработнойПлатыРаботнику))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗарплатаКВыплатеОрганизацийЗарплата.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|				ТОГДА &ТекстПробел + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + &ТекстТочка
		|			ИНАЧЕ """"
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|				ТОГДА &ТекстПробел + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + &ТекстТочка
		|			ИНАЧЕ """"
		|		КОНЕЦ, ЗарплатаКВыплатеОрганизацийЗарплата.ФизЛицо.Наименование) КАК ФизЛицо,
		|	ЗарплатаКВыплатеОрганизацийЗарплата.ТабельныйНомер КАК ТабельныйНомер,
		|	ЗарплатаКВыплатеОрганизацийЗарплата.Сумма КАК Сумма,
		|	СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Регистратор,
		|	ЗарплатаКВыплатеОрганизацийЗарплата.ОтметкаОВыплатеЗарплаты
		|ПОМЕСТИТЬ ТаблицаПоДокументу
		|ИЗ
		|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				Физлицо В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ЗарплатаКВыплатеОрганизацийЗарплата.ФизЛицо КАК Физлицо
		|					ИЗ
		|						Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийЗарплата
		|					ГДЕ
		|						ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &ДокументСсылка)) КАК ФИОФизЛицСрезПоследних
		|		ПО ЗарплатаКВыплатеОрганизацийЗарплата.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыплаченнаяЗарплата КАК СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям
		|		ПО ЗарплатаКВыплатеОрганизацийЗарплата.ФизЛицо = СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Работник
		|			И ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.ПлатежнаяВедомость
		|ГДЕ
		|	ЗарплатаКВыплатеОрганизацийЗарплата.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПоДокументу.НомерСтроки,
		|	ТаблицаПоДокументу.ФизЛицо,
		|	ТаблицаПоДокументу.ТабельныйНомер,
		|	ТаблицаПоДокументу.Сумма,
		|	ВЫБОР
		|		КОГДА ТаблицаПоДокументу.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Выплачено)
		|				И ТаблицаРКО.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА ТаблицаРКО.Представление
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПредставлениеДокумента,
		|	ВЫБОР
		|		КОГДА ТаблицаПоДокументу.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Выплачено)
		|				И ТаблицаРКО.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА ТаблицаРКО.Номер
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НомерРКО,
		|	ВЫБОР
		|		КОГДА ТаблицаПоДокументу.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Выплачено)
		|				И ТаблицаРКО.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА ТаблицаРКО.Дата
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ДатаРКО,
		|	ВЫБОР
		|		КОГДА ТаблицаПоДокументу.ОтметкаОВыплатеЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОтметокОВыплатеЗарплаты.Депонировано)
		|			ТОГДА &ТекстДепонировано
		|		КОГДА ТаблицаРКО.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА &ТекстВыплачено
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ЗаписьОДепонировании
		|ИЗ
		|	ТаблицаПоДокументу КАК ТаблицаПоДокументу
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРКО КАК ТаблицаРКО
		|		ПО ТаблицаПоДокументу.Регистратор = ТаблицаРКО.Ссылка";

	Иначе
		Возврат Неопределено
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции

// Возвращает табличный документ печатной формы Т-53.
//
// Возвращаемое значение:
//   Табличный документ - печатная форма Т-53.
//
Функция СформироватьПечатнуюФормуТ53(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗарплатаКВыплатеОрганизаций_Т53";
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗарплатаКВыплатеОрганизаций.Ссылка                   КАК Ссылка,
	|	ЗарплатаКВыплатеОрганизаций.Дата                     КАК Дата,
	|	ЗарплатаКВыплатеОрганизаций.Организация              КАК Организация,
	|	ЗарплатаКВыплатеОрганизаций.ПериодРегистрации        КАК ПериодРегистрации,
	|	ЕСТЬNULL(СправочникМагазины.Наименование, """")      КАК ПодразделениеОрганизации,
	|	ЗарплатаКВыплатеОрганизаций.Номер                    КАК Номер
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Магазины КАК СправочникМагазины
	|ПО
	|	СправочникМагазины.Ссылка = ЗарплатаКВыплатеОрганизаций.Магазин
	|ГДЕ
	|	ЗарплатаКВыплатеОрганизаций.Ссылка В (&МассивОбъектов)
	|";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Макет = ПолучитьМакет("ПФ_MXL_ПлатежнаяВедомость");
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	Пока ДанныеПечати.Следующий() Цикл
		// получаем данные для печати
		ВыборкаДляШапки   = РезультатЗапросаДанныхВедомостиДляПечатиТ53("ПоРеквизитамДокумента", ДанныеПечати).Выбрать();
		ВыборкаРаботники = РезультатЗапросаДанныхВедомостиДляПечатиТ53("ПоТабличнойЧастиДокумента", ДанныеПечати).Выбрать();
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаРаботники.Количество();
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка          = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока         = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал         = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакетаПодвал.Параметры.РКО = НСтр("ru = 'Расходный кассовый ордер № _______ от  ""___"" ___________ 20 ___ г.'");
		
		// Массив с двумя строками - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		ВывестиДанныеРКО = Ложь;
		
		// Выводим данные о руководителях организации.
		Пока ВыборкаДляШапки.Следующий() Цикл
			СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			
			ОбластьМакетаШапкаДокумента.Параметры.Подразделение = Строка(ДанныеПечати.ПодразделениеОрганизации);
			ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
			ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
			ОбластьМакетаШапкаДокумента.Параметры.ОтчетныйПериодС  = ДанныеПечати.ПериодРегистрации;
			ОбластьМакетаШапкаДокумента.Параметры.ОтчетныйПериодПо = ?(НЕ ЗначениеЗаполнено(ДанныеПечати.ПериодРегистрации),ДанныеПечати.ПериодРегистрации,КонецМесяца(ДанныеПечати.ПериодРегистрации));
			
			Если ВыборкаДляШапки.Сумма <> 0 Тогда
				ОбластьМакетаШапкаДокумента.Параметры.СуммаДок = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ВыборкаДляШапки.Сумма);
				ОбластьМакетаШапкаДокумента.Параметры.СуммаДокРублей = Цел(ВыборкаДляШапки.Сумма);
				ОбластьМакетаШапкаДокумента.Параметры.СуммаДокКопеек = (ВыборкаДляШапки.Сумма - Цел(ВыборкаДляШапки.Сумма)) * 100
			КонецЕсли;
			Если ВыборкаДляШапки.ОплаченоПолностью Тогда
				Если ВыборкаДляШапки.ВсегоДепонировано > 0 Тогда
					ОбластьМакетаПодвал.Параметры.ВсегоДепонировано = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ВыборкаДляШапки.ВсегоДепонировано);
				Иначе
					ОбластьМакетаПодвал.Параметры.ВсегоДепонировано = "---";
				КонецЕсли;
				Если ВыборкаДляШапки.ВсегоВыплачено > 0 Тогда
					ОбластьМакетаПодвал.Параметры.ВсегоВыплачено = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ВыборкаДляШапки.ВсегоВыплачено);
				Иначе
					ОбластьМакетаПодвал.Параметры.ВсегоВыплачено = "---";
				КонецЕсли;
				ВывестиДанныеРКО = ВыборкаДляШапки.КоличествоРКО = 1;
			КонецЕсли;
			
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0;
		// Выводим данные по строкам документа.
		Пока ВыборкаРаботники.Следующий() Цикл
		
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаРаботники);
			СокращенноеПредставлениеДокумента = "";
			Если ЗначениеЗаполнено(ВыборкаРаботники.НомерРКО) Тогда
				СокращенноеПредставлениеДокумента = "№" + ВыборкаРаботники.НомерРКО + " от " + Формат(ВыборкаРаботники.ДатаРКО, "ДЛФ=Д");
			КонецЕсли;
			ОбластьМакетаСтрока.Параметры.СокращенноеПредставлениеДокумента = СокращенноеПредставлениеДокумента;
			Если ВывестиДанныеРКО И Не ПустаяСтрока(ВыборкаРаботники.ПредставлениеДокумента) Тогда
				ОбластьМакетаПодвал.Параметры.РКО = ВыборкаРаботники.ПредставлениеДокумента;
				ВывестиДанныеРКО = Ложь;
			КонецЕсли;
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу.
			ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаШапка);
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаРаботники.Сумма;
			
		КонецЦикла;
		
		ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		ОбластьМакетаПодвал.Параметры.КоличествоЛистов = ?(ВыведеноСтрок = 0,"",ВыведеноСтраниц + 1);
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
		Для Сч = 1 По ОбластьМакетаСтрока.Параметры.Количество() Цикл
			ОбластьМакетаСтрока.Параметры.Установить(Сч - 1,""); 
		КонецЦикла;
		ОбластьМакетаСтрока.Параметры.Физлицо = " " + Символы.ПС + " ";
		
		Пока ТабДокумент.ПроверитьВывод(ВыводимыеОбласти) Цикл
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
