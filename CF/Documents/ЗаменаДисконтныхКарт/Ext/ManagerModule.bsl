#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Замена владельца для карт
//
// Параметры:
//  Объект - ДокументОбъект.ЗаменаДисконтныхКарт
//  Замещать - Булево , Если Истина, то владелец перезаписывается.
//
Процедура ЗаменитьВладельца(Объект, Замещать) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(КартыПокупателей.КартаИсточник КАК Справочник.ИнформационныеКарты) КАК КартаИсточник,
	|	ВЫРАЗИТЬ(КартыПокупателей.КартаПриемник КАК Справочник.ИнформационныеКарты) КАК КартаПриемник
	|ПОМЕСТИТЬ ТаблицаЗапроса
	|ИЗ
	|	&КартыПокупателей КАК КартыПокупателей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапроса.КартаИсточник,
	|	ТаблицаЗапроса.КартаПриемник,
	|	ТаблицаЗапроса.КартаИсточник.ВладелецКарты КАК ВладелецКарты
	|ИЗ
	|	ТаблицаЗапроса КАК ТаблицаЗапроса
	|ГДЕ
	|	ТаблицаЗапроса.КартаИсточник.ВладелецКарты <> ТаблицаЗапроса.КартаПриемник.ВладелецКарты
	|	И (НЕ ТаблицаЗапроса.КартаИсточник.ВладелецКарты = НЕОПРЕДЕЛЕНО)
	|	И (&Замещать
	|			ИЛИ ТаблицаЗапроса.КартаПриемник.ВладелецКарты = НЕОПРЕДЕЛЕНО)";
	
	Запрос.УстановитьПараметр("КартыПокупателей", Объект.КартыПокупателей.Выгрузить());
	Запрос.УстановитьПараметр("Замещать"        , Замещать);
	
	Результат = Запрос.Выполнить();
	ТаблицаЗапроса = Результат.Выгрузить();
	
	Если ТаблицаЗапроса.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Обработка заполнения не потребовалась'"), Объект);
		Возврат;
	КонецЕсли;
	
	Количество = 0;
	Для каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		ОбъектИнформационнаяКарта = СтрокаТаблицыЗапроса.КартаПриемник.ПолучитьОбъект();
		ОбъектИнформационнаяКарта.ВладелецКарты = СтрокаТаблицыЗапроса.ВладелецКарты;
		ОбъектИнформационнаяКарта.Записать();
		Количество = Количество + 1;
		
	КонецЦикла;
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Заполнено владельцев: %1'"),
		Строка(Количество));
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект);
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	//
	ТекстЗапроса = ТекстЗапросаТаблицаРегистрацияЗаменыКартПокупателей();
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	//
	ТаблицыДляДвижений = СтруктураДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаРегистрацияЗаменыКартПокупателей", МассивРезультатов[0].Выгрузить());
	
КонецПроцедуры

// Замена владельца для карт
//
// Параметры:
//  Объект - ДокументОбъект.ЗаменаДисконтныхКарт
//  Замещать - Булево , Если Истина, то владелец перезаписывается.
//
Процедура ПеренестиДанныеОБонуснойПрограмме(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(КартыПокупателей.КартаИсточник КАК Справочник.ИнформационныеКарты) КАК КартаИсточник,
	|	ВЫРАЗИТЬ(КартыПокупателей.КартаПриемник КАК Справочник.ИнформационныеКарты) КАК КартаПриемник
	|ПОМЕСТИТЬ ТаблицаЗапроса
	|ИЗ
	|	&КартыПокупателей КАК КартыПокупателей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапроса.КартаИсточник,
	|	ТаблицаЗапроса.КартаПриемник,
	|	ТаблицаЗапроса.КартаИсточник.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ТаблицаЗапроса.КартаИсточник.КартаДляНакоплений КАК КартаДляНакоплений
	|ИЗ
	|	ТаблицаЗапроса КАК ТаблицаЗапроса
	|ГДЕ
	|	ТаблицаЗапроса.КартаИсточник.БонуснаяПрограммаЛояльности <> ТаблицаЗапроса.КартаПриемник.БонуснаяПрограммаЛояльности
	|	ИЛИ ТаблицаЗапроса.КартаИсточник.КартаДляНакоплений <> ТаблицаЗапроса.КартаПриемник.КартаДляНакоплений
	|";
	
	Запрос.УстановитьПараметр("КартыПокупателей", Объект.КартыПокупателей.Выгрузить());
	
	Результат = Запрос.Выполнить();
	ТаблицаЗапроса = Результат.Выгрузить();
	
	Если ТаблицаЗапроса.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Обработка заполнения не потребовалась'"), Объект);
		Возврат;
	КонецЕсли;
	
	Количество = 0;
	Для каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		ОбъектИнформационнаяКарта = СтрокаТаблицыЗапроса.КартаПриемник.ПолучитьОбъект();
		ОбъектИнформационнаяКарта.БонуснаяПрограммаЛояльности = СтрокаТаблицыЗапроса.БонуснаяПрограммаЛояльности;
		ОбъектИнформационнаяКарта.КартаДляНакоплений = СтрокаТаблицыЗапроса.КартаДляНакоплений;
		ОбъектИнформационнаяКарта.Записать();
		Количество = Количество + 1;
		
	КонецЦикла;
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Обработано карт: %1'"),
		Строка(Количество));
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект);
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует текст запроса для таблицы Регистрация замены карт покупателей.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстЗапросаТаблицаРегистрацияЗаменыКартПокупателей()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаменаДисконтныхКартКартыПокупателей.Ссылка        КАК Ссылка,
	|	ЗаменаДисконтныхКарт.Дата                          КАК Период,
	|	ЗаменаДисконтныхКартКартыПокупателей.КартаИсточник КАК КартаИсточник,
	|	ЗаменаДисконтныхКартКартыПокупателей.КартаПриемник КАК КартаПриемник
	|	
	|ИЗ
	|	Документ.ЗаменаДисконтныхКарт.КартыПокупателей КАК ЗаменаДисконтныхКартКартыПокупателей
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ЗаменаДисконтныхКарт КАК ЗаменаДисконтныхКарт
	|ПО
	|	ЗаменаДисконтныхКартКартыПокупателей.Ссылка = ЗаменаДисконтныхКарт.Ссылка
	|ГДЕ
	|	ЗаменаДисконтныхКартКартыПокупателей.Ссылка = &Ссылка
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
