
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийПодключаемогоОборудования

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоМагнитномуКоду(ТекКод, ДополнительныеПараметры) Экспорт
	
	Если Не ПустаяСтрока(ТекКод) Тогда
		СтруктураПараметровКлиента = ПолученМагнитныйКод(ТекКод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораДанныхПоиска(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОбработатьДанныеПоКодуСервер(Результат);
		ОбработатьДанныеПоКодуКлиент(Результат)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолученМагнитныйКод(МагнитныйКод) Экспорт 
	
	СтруктураРезультат = ПодключаемоеОборудованиеРТВызовСервера.ПолученМагнитныйКод(МагнитныйКод, ЭтотОбъект);
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Функция ПолученШтрихкодИзСШК(Штрихкод) Экспорт
	
	СтруктураРезультат = ПодключаемоеОборудованиеРТВызовСервера.ПолученШтрихкодИзСШК(Штрихкод, ЭтотОбъект);
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Процедура ОбработатьДанныеПоКодуСервер(СтруктураРезультат) Экспорт
	
	СтрокаРезультата = СтруктураРезультат.ЗначенияПоиска[0];
	Если СтрокаРезультата.Свойство("Карта") Тогда
		Если СтрокаРезультата.ЭтоРегистрационнаяКарта Тогда
			ПодключаемоеОборудованиеРТВызовСервера.ВставитьПредупреждениеОНевозможностиОбработкиКарт(СтруктураРезультат, СтрокаРезультата);
		Иначе
			ИдентификаторСтроки = ДобавитьНайденнуюКарту(СтрокаРезультата);
			Если ИдентификаторСтроки <> Неопределено Тогда
				СтруктураРезультат.Вставить("НайденаДисконтнаяКарта", СтрокаРезультата.Карта);
				СтруктураРезультат.Вставить("АктивизироватьСтроку", ИдентификаторСтроки);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СтрокаРезультата.Свойство("СерийныйНомер") Тогда
		
		ТекстПредупреждения = НСтр("ru = 'По коду ""%1"" найден номер подарочного сертификата. Обработка сертификатов в документе не предусмотрена'");
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, СтруктураРезультат.ДанныеПО);
		СтруктураРезультат.Вставить("ТекстПредупреждения", ТекстПредупреждения);
		
	Иначе // Номенклатура.
		
		ТекстПредупреждения = НСтр("ru = 'По коду ""%1"" найдена номенклатура. Обработка номенклатуры в документе не предусмотрена'");
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, СтруктураРезультат.ДанныеПО);
		СтруктураРезультат.Вставить("ТекстПредупреждения", ТекстПредупреждения);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента) Экспорт
	
	ОткрытаБлокирующаяФорма = Ложь;
	
	Если СтруктураПараметровКлиента.Свойство("НайденаДисконтнаяКарта") Тогда
		
		Если ЗначениеЗаполнено(СтруктураПараметровКлиента.НайденаДисконтнаяКарта) Тогда
			
			ИнформационныеКартыКлиент.ПровестиОпросВладельца(СтруктураПараметровКлиента.НайденаДисконтнаяКарта, ТекущаяДата());
			
		КонецЕсли;
		
	Иначе
		
		ПодключаемоеОборудованиеРТКлиент.ОбработатьДанныеПоКоду(ЭтотОбъект, СтруктураПараметровКлиента, ОткрытаБлокирующаяФорма);
	
	КонецЕсли;
	
	Если НЕ ОткрытаБлокирующаяФорма Тогда
		ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьДанныеИзТСДСервер(СтруктураПараметров) Экспорт
	
	Результат = ПодключаемоеОборудованиеРТВызовСервера.ОбработатьДанныеПоДисконтнымКартамИзТСДСервер(ЭтотОбъект, СтруктураПараметров);
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ДобавитьНайденнуюКарту(СтрокаРезультата) Экспорт
	
	ИдентификаторСтроки = Неопределено;
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("КартаИсточник", СтрокаРезультата.Карта);
	НайденныеСтроки = Объект.КартыПокупателей.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ИдентификаторСтроки = НайденныеСтроки[0].ПолучитьИдентификатор();
	Иначе
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("КартаПриемник", СтрокаРезультата.Карта);
		НайденныеСтроки = Объект.КартыПокупателей.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ИдентификаторСтроки = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Если ИдентификаторСтроки = Неопределено Тогда
		Модифицированность = Истина;
		
		ИмяКолонки = "КартаИсточник";
		ТекущаяКолонка = Элементы.КартыПокупателей.ТекущийЭлемент;
		Если ТекущаяКолонка = Элементы.КартыПокупателейКартаПриемник Тогда
			ИмяКолонки = "КартаПриемник";
		КонецЕсли;
		
		ТекущаяСтрока = Неопределено;
		ДобавлятьНовуюСтроку = Истина;
		Если Объект.КартыПокупателей.Количество() > 0
			И Элементы.КартыПокупателей.ТекущаяСтрока <> Неопределено Тогда
			ТекущаяСтрока = Объект.КартыПокупателей.НайтиПоИдентификатору(Элементы.КартыПокупателей.ТекущаяСтрока);
			Если ТекущаяСтрока <> Неопределено Тогда
				Если НЕ ЗначениеЗаполнено(ТекущаяСтрока[ИмяКолонки]) Тогда
					ДобавлятьНовуюСтроку = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ДобавлятьНовуюСтроку ИЛИ ТекущаяСтрока = Неопределено Тогда
			ТекущаяСтрока = Объект.КартыПокупателей.Добавить();
		КонецЕсли;
		ТекущаяСтрока[ИмяКолонки] = СтрокаРезультата.Карта;
		
		ИдентификаторСтроки = ТекущаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
	Возврат ИдентификаторСтроки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ПодключаемоеОборудование
	МассивКомандПО = Новый Массив;
	МассивКомандПО.Добавить("КартыПокупателейЗагрузитьДанныеИзТСД");
	ПодключаемоеОборудованиеРТВызовСервера.НастроитьПодключаемоеОборудование(ЭтотОбъект, МассивКомандПО);
	ПараметрыСобытийПО = Новый Структура;
	ПараметрыСобытийПО.Вставить("РегистрацияНовойКарты", Истина);
	// Конец ПодключаемоеОборудование
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(
		Объект,
		КартинкаСостоянияДокумента,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		РазрешеноПроведение);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	НастроитьФормуПоДополнительнымПравам();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
		
	// &ЗамерПроизводительности	
    ОценкаПроизводительностиРТКлиент.ЗакончитьЗамер(ПараметрыЗаписи.Замер);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// &ЗамерПроизводительности 
	Замер = ОценкаПроизводительностиРТКлиент.НачатьЗамер(Ложь, 
	                                            "Документ.ЗаменаДисконтныхКарт.ФормаДокумента.Запись",
                                                          Ложь);
	
	ПараметрыЗаписи.Вставить("Замер", Замер);

КонецПроцедуры

&НаКлиенте
Процедура МагазинНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.Магазины.Форма.ФормаВыбора.Открытие");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиКомандПодключаемогоОборудования

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЕстьКоличество", Ложь);
	ПодключаемоеОборудованиеРТКлиент.ПолучитьДанныеИзТСД(ЭтотОбъект, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоМагнитномуКоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиМагнитныйКод(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьПустыхВладельцев(Команда)
	
	ЗаменитьВладельцаКлиент(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВладельцев(Команда)
	
	ЗаменитьВладельцаКлиент(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиДанныеОБонуснойПрограмме(Команда)
	ПеренестиДанныеОБонуснойПрограммеНаСервере();
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура КартыПокупателейКартаИсточникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.ИнформационныеКарты.Форма.ФормаВыбора.Открытие");
                
КонецПроцедуры

&НаКлиенте
Процедура КартыПокупателейКартаПриемникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.ИнформационныеКарты.Форма.ФормаВыбора.Открытие");
                
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);

КонецПроцедуры

&НаСервере
Процедура ЗаменитьВладельцаСервер(ЗаменитьВладельца)
	
	Документы.ЗаменаДисконтныхКарт.ЗаменитьВладельца(Объект, ЗаменитьВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьВладельцаКлиент(ЗаменитьВладельца)
	Перем Отказ;
	Отказ = Ложь;
	Если Объект.КартыПокупателей.Количество() > 0.00 Тогда
		СтруктураПроверяемыхРеквизитов = Новый Структура;
		СтруктураПроверяемыхРеквизитов.Вставить("КартаИсточник", НСтр("ru = 'Карта источник'"));
		СтруктураПроверяемыхРеквизитов.Вставить("КартаПриемник", НСтр("ru = 'Карта приемник'"));
		СтруктураТабличнойЧасти = Новый Структура("КартыПокупателей", НСтр("ru = 'Карты покупателей'"));
		ОбщегоНазначенияРТКлиент.ПроверитьЗаполнениеРеквизитовТабличнойЧасти(
			Объект,
			СтруктураТабличнойЧасти,
			СтруктураПроверяемыхРеквизитов,
			Отказ);
		Если НЕ Отказ Тогда
			ЗаменитьВладельцаСервер(ЗаменитьВладельца)
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПеренестиДанныеОБонуснойПрограммеНаСервере()
	
	Документы.ЗаменаДисконтныхКарт.ПеренестиДанныеОБонуснойПрограмме(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметровКлиента)
	
	ИдентификаторСтроки = ПодключаемоеОборудованиеРТКлиент.ЗавершитьОбработкуДанныхПоКодуКлиент(ЭтотОбъект, СтруктураПараметровКлиента, "КартыПокупателей");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
КонецПроцедуры

#КонецОбласти
