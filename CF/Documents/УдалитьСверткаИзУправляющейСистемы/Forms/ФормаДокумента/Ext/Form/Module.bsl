
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийПодключаемогоОборудования

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоМагнитномуКоду(ТекКод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(ТекКод) Тогда
		СтруктураПараметровКлиента = ПолученМагнитныйКод(ТекКод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораДанныхПоиска(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОбработатьДанныеПоКодуСервер(Результат);
		ОбработатьДанныеПоКодуКлиент(Результат)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолученМагнитныйКод(МагнитныйКод) Экспорт 
	
	СтруктураРезультат = ПодключаемоеОборудованиеРТВызовСервера.ПолученМагнитныйКод(МагнитныйКод, ЭтотОбъект);
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Функция ПолученШтрихкодИзСШК(Штрихкод) Экспорт
	
	СтруктураРезультат = ПодключаемоеОборудованиеРТВызовСервера.ПолученШтрихкодИзСШК(Штрихкод, ЭтотОбъект);
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Процедура ОбработатьДанныеПоКодуСервер(СтруктураРезультат) Экспорт
	
	ИдентификаторСтроки = Неопределено;
	СтруктураСтроки = Неопределено;
	СтрокаРезультата = СтруктураРезультат.ЗначенияПоиска[0];
	
	Если СтрокаРезультата.Свойство("Карта") Тогда
		
		Если СтрокаРезультата.ЭтоРегистрационнаяКарта Тогда
			ПодключаемоеОборудованиеРТВызовСервера.ВставитьПредупреждениеОНевозможностиОбработкиКарт(СтруктураРезультат, СтрокаРезультата);
		Иначе
			Если ИмяТаблицыВыборки = "ПродажиПоДисконтнымКартам" Тогда
				СтруктураСтроки = НайтиСтрокуВТаблице(СтрокаРезультата);
			Иначе
				ТекстПредупреждения = НСтр("ru = 'По коду ""%1"" найдена дисконтная карта. Обработка дисконтных карт в таблице ""%2"" не предусмотрена'");
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, СтруктураРезультат.ДанныеПО, ИмяТаблицыВыборки);
				СтруктураРезультат.Вставить("ТекстПредупреждения", ТекстПредупреждения);
			КонецЕсли;
		КонецЕсли;
	Иначе
		
		Если ИмяТаблицыВыборки = "ПродажиПоДисконтнымКартам" Тогда
			ТекстПредупреждения = НСтр("ru = 'По коду ""%1"" найдена номенклатура. Обработка номенклатуры в таблице ""%2"" не предусмотрена'");
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, СтруктураРезультат.ДанныеПО, ИмяТаблицыВыборки);
			СтруктураРезультат.Вставить("ТекстПредупреждения", ТекстПредупреждения);
		Иначе
			СтруктураСтроки = НайтиСтрокуВТаблице(СтрокаРезультата);
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураСтроки <> Неопределено Тогда
		Если СтруктураСтроки.Свойство("ИдентификаторСтроки") Тогда
			СтруктураРезультат.Вставить("АктивизироватьСтроку", СтруктураСтроки);
		Иначе
			Если СтрокаРезультата.Свойство("Карта") Тогда
				ТекстПредупреждения = НСтр("ru = 'Карта ""%1"" не найдена в табличной части ""%2""'");
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ТекстПредупреждения, СтрокаРезультата.Карта, СтруктураСтроки.ТабличнаяЧасть);
			Иначе
				Если СтрокаРезультата.Свойство("Характеристика")
					И ЗначениеЗаполнено(СтрокаРезультата.Характеристика)
					И ИмяТаблицыВыборки <> "Ассортимент" Тогда
					ТекстПредупреждения = НСтр("ru = 'Номенклатура ""%1"" с характеристикой ""%2"" не найдена в табличной части ""%3""'");
					ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											ТекстПредупреждения,
											СтрокаРезультата.Номенклатура,
											СтрокаРезультата.Характеристика,
											СтруктураСтроки.ТабличнаяЧасть);
				Иначе
					ТекстПредупреждения = НСтр("ru = 'Номенклатура ""%1"" не найдена в табличной части ""%2""'");
					ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											ТекстПредупреждения, СтрокаРезультата.Номенклатура, СтруктураСтроки.ТабличнаяЧасть);
				КонецЕсли;
			КонецЕсли;
			СтруктураРезультат.Вставить("ТекстПредупреждения", ТекстПредупреждения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента) Экспорт
	
	ОткрытаБлокирующаяФорма = Ложь;
	
	ПодключаемоеОборудованиеРТКлиент.ОбработатьДанныеПоКоду(ЭтотОбъект, СтруктураПараметровКлиента, ОткрытаБлокирующаяФорма);
	
	Если НЕ ОткрытаБлокирующаяФорма Тогда
		ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МассивКомандПО = Новый Массив;
	МассивКомандПО.Добавить("ФормаВыгрузитьДанныеВТСД");
	ПодключаемоеОборудованиеРТВызовСервера.НастроитьПодключаемоеОборудование(ЭтотОбъект, МассивКомандПО);
	ИмяТаблицыВыборки = ИмяТаблицыВыборки(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,КартинкаСостоянияДокумента,СостояниеДокумента,РазрешеноПроведение);
	
	ОбновитьПоказателиТабличныхЧастей();
	
	НастроитьФормуПоДополнительнымПравам();
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ПоказатьПредупреждение(,НСтр("ru='Интерактивный ввод нового документа не предусмотрен'"));
		Отказ = Истина;
			
	КонецЕсли;	
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен()
		И ЗначениеЗаполнено(ИмяТаблицыВыборки) Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ИмяТаблицыВыборки = ИмяТаблицыВыборки(ТекущаяСтраница.Имя);
	ДоступностьКомандПО = ЗначениеЗаполнено(ИмяТаблицыВыборки);
	Элементы.ФормаПоискПоШтрихкоду.Доступность = ДоступностьКомандПО;
	Элементы.ФормаПоискПоМагнитномуКоду.Доступность = ДоступностьКомандПО;
	Элементы.ФормаВыгрузитьДанныеВТСД.Доступность = ДоступностьКомандПО И ИмяТаблицыВыборки <> "ПродажиПоДисконтнымКартам";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиКомандПодключаемогоОборудования

&НаКлиенте
Процедура ПоискПоМагнитномуКоду(Команда)
	
	Если ЗначениеЗаполнено(ИмяТаблицыВыборки) Тогда
		ОбработкаТабличнойЧастиТоварыКлиент.ВвестиМагнитныйКод(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	Если ЗначениеЗаполнено(ИмяТаблицыВыборки) Тогда
		ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеВТСД(Команда)
	
	Если ЗначениеЗаполнено(ИмяТаблицыВыборки) Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяТаблицыВыборки", ИмяТаблицыВыборки);
		ВыгружатьЦены = ИмяТаблицыВыборки = "ЦеныНоменклатуры";
		ПодключаемоеОборудованиеРТКлиент.ВыгрузитьДокументВТСД(ЭтотОбъект, ВыгружатьЦены, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПоказателиТабличныхЧастей()
	
	Для каждого СтрокаТЧ Из Объект.ТоварыНаСкладах Цикл
		
		СтрокаТЧ.Разница = СтрокаТЧ.Количество - СтрокаТЧ.КоличествоДоСвертки;
		
	КонецЦикла;	
	
	Для каждого СтрокаТЧ Из Объект.ДенежныеСредстваККМ Цикл
		
		СтрокаТЧ.Разница = СтрокаТЧ.Сумма - СтрокаТЧ.СуммаДоСвертки;
		
	КонецЦикла;	
	
	Для каждого СтрокаТЧ Из Объект.ДенежныеСредстваНаличные Цикл
		
		СтрокаТЧ.Разница = СтрокаТЧ.Сумма - СтрокаТЧ.СуммаДоСвертки;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);

КонецПроцедуры

&НаСервере
Функция НайтиСтрокуВТаблице(СтруктураРезультат)
	
	СтруктураСтроки = Новый Структура;
	
	Если ЗначениеЗаполнено(ИмяТаблицыВыборки) Тогда
		СтруктураСтроки.Вставить("ТабличнаяЧасть", ИмяТаблицыВыборки);
		ТабличнаяЧасть = Объект[ИмяТаблицыВыборки];
		СтруктураПоиска = Новый Структура;
		Если ИмяТаблицыВыборки = "ПродажиПоДисконтнымКартам" Тогда
			Если СтруктураРезультат.Свойство("Карта") Тогда
				СтруктураПоиска.Вставить("ДисконтнаяКарта", СтруктураРезультат.Карта);
			КонецЕсли;
		ИначеЕсли ИмяТаблицыВыборки = "Ассортимент" Тогда
			Если СтруктураРезультат.Свойство("Номенклатура") Тогда
				СтруктураПоиска.Вставить("Номенклатура", СтруктураРезультат.Номенклатура);
			КонецЕсли;
		Иначе
			
			Если СтруктураРезультат.Свойство("Номенклатура") Тогда
				СтруктураПоиска.Вставить("Номенклатура", СтруктураРезультат.Номенклатура);
			КонецЕсли;
			Если СтруктураРезультат.Свойство("Характеристика") Тогда
				СтруктураПоиска.Вставить("Характеристика", СтруктураРезультат.Характеристика);
			КонецЕсли;
		КонецЕсли;
		Если СтруктураПоиска.Количество() > 0 Тогда
			СтрокиТаблицы = ТабличнаяЧасть.НайтиСтроки(СтруктураПоиска);
			Если СтрокиТаблицы.Количество() > 0 Тогда
				СтруктураСтроки.Вставить("ИдентификаторСтроки", СтрокиТаблицы[0].ПолучитьИдентификатор());
			КонецЕсли;
		КонецЕсли;
			
	КонецЕсли;
	
	Возврат СтруктураСтроки;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметров)
	
	Если СтруктураПараметров.Свойство("АктивизироватьСтроку") Тогда
		Элементы[СтруктураПараметров.АктивизироватьСтроку.ТабличнаяЧасть].ТекущаяСтрока = СтруктураПараметров.АктивизироватьСтроку.ИдентификаторСтроки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяТаблицыВыборки(ИмяСтраницы)
	
	ИмяТаблицы = Неопределено;
	МассивСтраниц = Новый Массив;
	МассивСтраниц.Добавить("СтраницаТоварыНаСкладах");
	МассивСтраниц.Добавить("СтраницаТоварыОрганизаций");
	МассивСтраниц.Добавить("СтраницаДействующиеЦеныНоменклатуры");
	МассивСтраниц.Добавить("СтраницаЦеныНоменклатуры");
	МассивСтраниц.Добавить("СтраницаПродажиПоДисконтнымКартам");
	МассивСтраниц.Добавить("СтраницаАссортимент");
	Если МассивСтраниц.Найти(ИмяСтраницы) <> Неопределено Тогда
		ИмяТаблицы = СтрЗаменить(ИмяСтраницы, "Страница", "");
	КонецЕсли;

	Возврат ИмяТаблицы;
	
КонецФункции


#КонецОбласти