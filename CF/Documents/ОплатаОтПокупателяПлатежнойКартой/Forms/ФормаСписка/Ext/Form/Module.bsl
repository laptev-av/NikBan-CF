
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация", Организация, ЗначениеЗаполнено(Организация));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин));
	ЗаполнитьСписокХозяйственныхОпераций();
	
	ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	ОбщегоНазначенияРТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "Дата");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Документ.ОплатаОтПокупателяПлатежнойКартой.Форма.ФормаСписка.Открытие");
             
    УстановитьДоступностьТерминала();
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Организация = Настройки.Получить("Организация");
	Иначе
		Организация = Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();
	КонецЕсли;
	
	ХозяйственнаяОперация = Настройки.Получить("ЭквайринговыйТерминал");
	Магазин               = Настройки.Получить("Магазин");
	
	УстановитьОтборДинамическогоСписка("ЭквайринговыйТерминал");
	УстановитьОтборДинамическогоСписка("Организация");
	УстановитьОтборДинамическогоСписка("Магазин");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Документ.ОплатаОтПокупателяПлатежнойКартой.Форма.ФормаДокумента.Открытие");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация", Организация, ЗначениеЗаполнено(Организация));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	УстановитьДоступностьТерминала();
КонецПроцедуры

&НаКлиенте
Процедура ОтборЭквайринговыйТерминалПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМагазинПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	УстановитьДоступностьТерминала();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НовыйДокументОперацияВозвратОплатыКлиенту(Команда)
	
	НовыйДокументОплатаОтПокупателяПлатежнойКартой(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НовыйДокументОплатаОтПокупателяПлатежнойКартой(ХозяйственнаяОперацияИндекс, Основание = Неопределено)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Документ.ОплатаОтПокупателяПлатежнойКартой.Форма.ФормаДокумента.СозданиеНового");

	СтруктураПараметры = Новый Структура;
	Если Основание = Неопределено Тогда
		ХозяйственнаяОперация = СписокХозяйственныхОпераций[ХозяйственнаяОперацияИндекс].Значение;
		ПараметрыОснования = Новый Структура;
		ПараметрыОснования.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
		ПараметрыОснования.Вставить("Организация", Организация);
		ПараметрыОснования.Вставить("ЭквайринговыйТерминал", ЭквайринговыйТерминал);
		ПараметрыОснования.Вставить("Магазин", Магазин);
		
		СтруктураПараметры.Вставить("Основание", ПараметрыОснования);
	Иначе
		СтруктураПараметры.Вставить("Основание", Основание);
	КонецЕсли;
	
	ОткрытьФорму("Документ.ОплатаОтПокупателяПлатежнойКартой.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокХозяйственныхОпераций()
	
	СписокХозяйственныхОпераций.Очистить();
	СписокХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента); // 0
	СписокХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту); // 1
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическогоСписка(ИмяРеквизита)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		ИмяРеквизита,
		ЭтаФорма[ИмяРеквизита],
		ЗначениеЗаполнено(ЭтаФорма[ИмяРеквизита]));
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Настройки

&НаКлиенте
Процедура УстановитьДоступностьТерминала()
	
	Если ЗначениеЗаполнено(Магазин) И (ЗначениеЗаполнено(Организация) ИЛИ НЕ ИспользоватьНесколькоОрганизаций) Тогда
		Элементы.ОтборЭквайринговыйТерминал.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ОтборЭквайринговыйТерминал.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти