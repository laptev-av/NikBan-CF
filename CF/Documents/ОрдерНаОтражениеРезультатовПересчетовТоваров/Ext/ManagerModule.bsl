#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Отражение результатов пересчетов.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОрдерНаОтражениеРезультатовПересчетовТоваров";
	КомандаПечати.Представление = НСтр("ru = 'Отражение результатов пересчетов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
// Параметры:
//			Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
// Возвращаемое значение
//			Тип Структура
//				Состав полей определяется требованиями функции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
Функция ПараметрыУказанияСерий(Объект)Экспорт
	ПоляСвязи = Новый Массив;
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтражениеРезультатовПересчетов);
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоОрдер", Истина);
	ПараметрыУказанияСерий.Вставить("ИмяТЧСерии", "Товары");
	ПараметрыУказанияСерий.Вставить("ИмяПоляКоличество", "Количество");
	ПараметрыУказанияСерий.Вставить("Склад", Объект.Склад);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
                    
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата КАК Период,
	|	ДанныеШапки.Склад КАК Склад,
	|	ДанныеШапки.ДокументОснование КАК ДокументОснование,
	|	ДанныеШапки.Ссылка КАК Ссылка,
	|	ДанныеШапки.Магазин,
	|	ДанныеШапки.Организация,
	|	(НЕ ДанныеШапки.Магазин.СкладУправляющейСистемы) КАК ФормироватьДвижения
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	Запрос.Текст = "
	// 0 ТаблицаТоварыКОформлениюИзлишковНедостач
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки)    КАК НомерСтроки,
	|	- СУММА(ТаблицаТовары.Количество)      КАК КОформлениюАктов,
	|	0                                      КАК КОформлениюОрдеров,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&ДокументОснование                     КАК ДокументОснование
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество < 0
	|   И &ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки)    КАК НомерСтроки,
	|	0                                      КАК КОформлениюАктов,
	|	- СУММА(ТаблицаТовары.Количество)      КАК КОформлениюОрдеров,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&ДокументОснование                     КАК ДокументОснование
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество < 0
	|   И &ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|   ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	СУММА(ТаблицаТовары.Количество),
	|	0,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&ДокументОснование
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество > 0
	|   И &ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|   ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	0,
	|	СУММА(ТаблицаТовары.Количество),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	&ДокументОснование
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество > 0
	|   И &ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаТоварыНаСкладах
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Номенклатура КАК Номенклатура,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Характеристика КАК Характеристика,
	|	- СУММА(ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Количество) КАК Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Склад КАК Склад,
	|	МАКСИМУМ(ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.НомерСтроки) КАК НомерСтроки,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ОрдерНаОтражениеРезультатовПересчетовТоваровТовары
	|ГДЕ
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Ссылка = &Ссылка
	|	И ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Количество < 0
	|   И &ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Номенклатура,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Номенклатура,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Характеристика,
	|	СУММА(ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Количество),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Склад,
	|	МАКСИМУМ(ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.НомерСтроки) КАК НомерСтроки,
	|	&Организация
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ОрдерНаОтражениеРезультатовПересчетовТоваровТовары
	|ГДЕ
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Ссылка = &Ссылка
	|	И ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Количество > 0
	|   И &ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Номенклатура,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваровТовары.Характеристика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура             КАК Номенклатура,
	|	ТаблицаСерии.Характеристика           КАК Характеристика,
	|	ТаблицаСерии.Серия                    КАК Серия,
	|	ТаблицаСерии.Количество               КАК Количество,
	|	&Магазин                              КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеРезультатовПересчетов) КАК СкладскаяОперация,
	|	&Ссылка                               КАК Документ,
	|	&Период                               КАК Период,
	|	&Ссылка                               КАК Регистратор,
	|	&Склад                                КАК Склад,
	|	ТаблицаСерии.НомерСтроки              КАК НомерСтроки
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|   И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результат = Запрос.ВыполнитьПакет();
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач", Результат[0].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах",                   Результат[1].Выгрузить());
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров",              Результат[2].Выгрузить());
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Сформировать печатные формы объектов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОрдерНаОтражениеРезультатовПересчетовТоваров") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОрдерНаОтражениеРезультатовПересчетовТоваров",
			НСтр("ru = 'Отражение результатов пересчетов'"),
			ПечатьОтраженияИзлишковИНедостачНаСкладе(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПечатьОтраженияИзлишковИНедостачНаСкладе(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОрдерНаОтражениеРезультатовПересчетовТоваров_ОтражениеРезультатовПересчетов";
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Ссылка,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Дата,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Номер,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Ответственный.ФизическоеЛицо КАК Кладовщик,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаОтражениеРезультатовПересчетовТоваров.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаОтражениеРезультатовПересчетовТоваров.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаОтражениеРезультатовПересчетовТоваров.Организация) КАК ОрганизацияПредставление,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.ДокументОснование КАК Приказ
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров КАК ОрдерНаОтражениеРезультатовПересчетовТоваров
	|ГДЕ
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Ссылка КАК Ссылка,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.НомерСтроки КАК НомерСтроки,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	" + ?(ВыводитьКоды, "ОрдерНаОтражениеРезультатовПересчетовТоваров.Номенклатура." + КолонкаКодов +" КАК ДопКолонка,", "") + "
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаОтражениеРезультатовПересчетовТоваров.Характеристика) КАК ПредставлениеХарактеристики,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Серия.Наименование КАК ПредставлениеСерии,
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаОтражениеРезультатовПересчетовТоваров.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения
	|ИЗ
	|	Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.Товары КАК ОрдерНаОтражениеРезультатовПересчетовТоваров
	|ГДЕ
	|	ОрдерНаОтражениеРезультатовПересчетовТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	СинонимДокумента = "";
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		// Макет получаем в цикле,т.к. ширина колонок зависит от склада и помещения в документе.
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОрдерНаОтражениеРезультатовПересчетовТоваров.ПФ_MXL_ОрдерНаОтражениеРезультатовПересчетов");
		
		ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
		ОбластьПриказ 			= Макет.ПолучитьОбласть("Приказ");
		
		ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
		ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
		ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
		
		ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
		ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
		
		ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 

		ОбластьПодписей = Макет.ПолучитьОбласть("Подписи");
		
		ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
		
		Если НЕ ВыводитьКоды Тогда
			ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
		ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
		ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
		
		ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
		ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
		ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента,ВыборкаПоДокументам);
		
		Если Не ЗначениеЗаполнено(СинонимДокумента) Тогда
			МетаданныеДокумента = ВыборкаПоДокументам.Ссылка.Метаданные();
			Если Не ЗначениеЗаполнено(МетаданныеДокумента.ПредставлениеОбъекта) Тогда
				СинонимДокумента = МетаданныеДокумента.Синоним;
			Иначе
				СинонимДокумента = МетаданныеДокумента.ПредставлениеОбъекта;
			КонецЕсли;
		КонецЕсли;
		
		Заголовок = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = Заголовок;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.Приказ) Тогда
			
			СинонимПриказа = НСтр("ru='Приказ на пересчет товаров'");
			РеквизитыДокумента.Номер = ВыборкаПоДокументам.Приказ.Номер;
			РеквизитыДокумента.Дата  = ВыборкаПоДокументам.Приказ.Дата;
			ОбластьПриказ.Параметры.ПриказПредставление = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимПриказа);
			ТабличныйДокумент.Вывести(ОбластьПриказ);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);

		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ.ДопКолонка;
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокамТЧ.ПредставлениеНоменклатуры,
				ВыборкаПоСтрокамТЧ.ПредставлениеХарактеристики,
				, // Упаковка
				ВыборкаПоСтрокамТЧ.ПредставлениеСерии);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		// Вывод подписей.
		ФамилияИмяОтчествоОтветственный = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ВыборкаПоДокументам.Ответственный, ТекущаяДатаСеанса());
		ОбластьПодписей.Параметры.Ответственный = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФамилияИмяОтчествоОтветственный);
		
		ФамилияИмяОтчествоКладовщик = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ВыборкаПоДокументам.Кладовщик, ТекущаяДатаСеанса());
		ОбластьПодписей.Параметры.Кладовщик = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФамилияИмяОтчествоКладовщик);

		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
