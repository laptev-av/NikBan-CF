#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// КМ6
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КМ6";
	КомандаПечати.Представление = НСтр("ru = 'КМ6'");
	КомандаПечати.ДополнительныеПараметры.Вставить("СРасшифровкой", Ложь);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 60;
	
	// КМ6
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КМ6";
	КомандаПечати.Представление = НСтр("ru = 'КМ6 (с расшифровкой)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("СРасшифровкой", Истина);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 75;
	
	// Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Расходная накладная'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 50;
	
	// Опись номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОписьНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Опись номенклатуры'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 55;

КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоОрдер", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаВРозницу);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	ИспользоватьКомиссионнуюТорговлю = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссионнуюТорговлю");
	ИспользоватьУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Номер КАК Номер,
	|	ОтчетОРозничныхПродажах.Дата КАК Период,
	|	ОтчетОРозничныхПродажах.Проведен КАК Проведен,
	|	ОтчетОРозничныхПродажах.КассаККМ КАК КассаККМ,
	|	ОтчетОРозничныхПродажах.Комментарий КАК Комментарий,
	|	ОтчетОРозничныхПродажах.Ответственный КАК Ответственный,
	|	ОтчетОРозничныхПродажах.СуммаДокумента КАК СуммаДокумента,
	|	ОтчетОРозничныхПродажах.СуммаВозвратов КАК СуммаВозвратов,
	|	ОтчетОРозничныхПродажах.Магазин КАК Магазин,
	|	ОтчетОРозничныхПродажах.Эквайрер КАК Эквайрер,
	|	ОтчетОРозничныхПродажах.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ОтчетОРозничныхПродажах.УчитыватьНДС КАК УчитыватьНДС,
	|	ОтчетОРозничныхПродажах.ОплатаПодарочнымиСертификатами КАК ОплатаПодарочнымиСертификатами,
	|	ОтчетОРозничныхПродажах.Магазин.СкладПродажи КАК СкладПродажи,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	НЕ ОтчетОРозничныхПродажах.Магазин.СкладУправляющейСистемы КАК ФормироватьДвижения,
	|	ОтчетОРозничныхПродажах.СуммаОплатыНаличных КАК СуммаОплатыНаличных
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперации", Справочники.АналитикаХозяйственныхОпераций.РеализацияТоваров);
	Запрос.УстановитьПараметр("ФормироватьДвиженияРИБ", НЕ ПланыОбмена.ПоРабочемуМесту.ЭтоРабочееМесто());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахТовары.Ссылка         КАК Ссылка,
	|	ОтчетОРозничныхПродажахТовары.НомерСтроки    КАК НомерСтроки,
	|	ОтчетОРозничныхПродажахТовары.Номенклатура   КАК Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика КАК Характеристика,
	|	ОтчетОРозничныхПродажахТовары.Количество     КАК Количество,
	|	ОтчетОРозничныхПродажахТовары.Цена           КАК Цена,
	|	ОтчетОРозничныхПродажахТовары.Сумма          КАК Сумма,
	|	ОтчетОРозничныхПродажахТовары.СтавкаНДС      КАК СтавкаНДС,
	|	ОтчетОРозничныхПродажахТовары.СуммаНДС       КАК СуммаНДС,
	|	ОтчетОРозничныхПродажахТовары.Склад          КАК Склад,
	|	ОтчетОРозничныхПродажахТовары.Продавец       КАК Продавец,
	|	ОтчетОРозничныхПродажахТовары.ДисконтнаяКарта    КАК ДисконтнаяКарта,
	|	ОтчетОРозничныхПродажахТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ОтчетОРозничныхПродажахТовары.Упаковка  КАК Справочник.УпаковкиНоменклатуры) КАК Упаковка,
	|	ОтчетОРозничныхПродажахТовары.КлючСвязи          КАК КлючСвязи,
	|	ОтчетОРозничныхПродажахТовары.КодСтроки          КАК КодСтроки,
	|	ОтчетОРозничныхПродажахТовары.ЗаказПокупателя    КАК ЗаказПокупателя,
	|	ОтчетОРозничныхПродажахТовары.Резервировать      КАК Резервировать,
	|	ОтчетОРозничныхПродажахТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ОтчетОРозничныхПродажахТовары.НомерГТД       КАК НомерГТД,
	|	ОтчетОРозничныхПродажахТовары.Поставщик      КАК Поставщик,
	|	ОтчетОРозничныхПродажахТовары.Договор        КАК Договор
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10) КАК СтавкаНДС,
	|	10 КАК ПроцентСтавки
	|ПОМЕСТИТЬ СтавкиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
	|	18
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20),
	|	20
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Магазин КАК Магазин,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя,
	|	&Ссылка КАК ДокументПродажи,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	(ТаблицаТовары.Количество * ТаблицаТовары.Цена + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.Количество * ТаблицаТовары.Цена * ЕСТЬNULL(СтавкиНДС.ПроцентСтавки, 0) / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ) / ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаТовары.Упаковка.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ КАК СтоимостьБезСкидок,
	|	ТаблицаТовары.СуммаНДС КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА &АналитикаХозяйственнойОперации
	|		ИНАЧЕ ТаблицаТовары.АналитикаХозяйственнойОперации
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.ДисконтнаяКарта.ВладелецКарты КАК ВладелецДисконтнойКарты,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	NULL КАК НомерСтроки1
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ДисконтнаяКарта <> ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.ДисконтнаяКарта,
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.ВладелецДисконтнойКарты,
	|	NULL,
	|	NULL,
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.Сумма,
	|	0,
	|	&Период,
	|	NULL,
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.НомерСтроки
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПродажиПоДисконтнымКартам КАК ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам
	|ГДЕ
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ВидОплаты КАК ВидОплаты,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма > 0
	|			ТОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОперацийПродажи,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма
	|	КОНЕЦ КАК СуммаОперацийВозврата,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии > 0
	|				И ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ПроцентКомиссии > 0
	|			ТОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НачисленнаяСуммаКомиссии,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии > 0
	|				И ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ПроцентКомиссии < 0
	|			ТОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтмененнаяСуммаКомиссии,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии < 0
	|				И ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ПроцентКомиссии > 0
	|			ТОГДА -ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВозвращаемаяСуммаКомиссии,
	|	&Магазин КАК Магазин,
	|	&Организация КАК Организация,
	|	&Период КАК Период,
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.НомерСтроки КАК НомерСтроки,
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ОтчетОРозничныхПродажахОплатаПлатежнымиКартами
	|ГДЕ
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ -ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Резервировать
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Резерв,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА &АналитикаХозяйственнойОперации
	|		ИНАЧЕ ТаблицаТовары.АналитикаХозяйственнойОперации
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&КассаККМ КАК КассаККМ,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыПлатежныхАгентов.ПустаяСсылка) КАК ДоговорПлатежногоАгента,
	|	&СуммаОплатыНаличных КАК Сумма
	|ГДЕ
	|	&СуммаОплатыНаличных <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&КассаККМ,
	|	ОплатаНаличнымиАгентскихПлатежей.ДоговорПлатежногоАгента,
	|	ОплатаНаличнымиАгентскихПлатежей.Сумма
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаНаличнымиАгентскихПлатежей КАК ОплатаНаличнымиАгентскихПлатежей
	|ГДЕ
	|	ОплатаНаличнымиАгентскихПлатежей.Ссылка = &Ссылка
	|	И ОплатаНаличнымиАгентскихПлатежей.Сумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ -ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Сумма > 0
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ -ТаблицаТовары.Сумма
	|	КОНЕЦ КАК СуммаПродажи,
	|	ТаблицаТовары.Склад КАК Склад,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаТовары.Поставщик                КАК Поставщик,
	|	ТаблицаТовары.Договор                  КАК Договор,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	&Период КАК Период
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаВРозницу) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвиженияРИБ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ТаблицаЗаказыПокупателей
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КлючСвязи КАК КлючСвязи,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ТаблицаТоварыПродажаПоЗаказу
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.КодСтроки > 0
	|	И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаТоварыПродажаПоЗаказу.ЗаказПокупателя КАК Заказ,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаТоварыПродажаПоЗаказу.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПродажаПоЗаказу.Характеристика КАК Характеристика,
	|	ТаблицаТоварыПродажаПоЗаказу.КодСтроки КАК КодСтроки,
	|	ТаблицаТоварыПродажаПоЗаказу.Количество КАК Заказано
	|ИЗ
	|	ТаблицаТоварыПродажаПоЗаказу КАК ТаблицаТоварыПродажаПоЗаказу";
	
	
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаТаблицаСерийныхНомеров();
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаБонусы();
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаТаблицаРасчетыСКлиентами();
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаАкцизныеМарки();
	
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	ПериодБонусов = НачалоДня(Реквизиты.Период);
	Запрос.УстановитьПараметр("ПериодБонусов", ПериодБонусов);
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
						Реквизиты.Организация,
						Реквизиты.Магазин);
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Запрос.Текст  = СтрЗаменить(Запрос.Текст ,"%ТаблицаТоваровВЗапросе%", "ТаблицаТовары");
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаПродажи"                  			, Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоДисконтнымКартам"			, Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоПлатежнымКартам" 			, Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"          			, Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваККМ"      			, Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"        			, Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"     			, Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПокупателей"        			, Результат[11].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"          			, Результат[16].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаОстаткиАлкогольнойПродукцииЕГАИС"  	, Результат[23].Выгрузить());
	
	ТаблицаОплатыБонусами = Результат[17].Выгрузить();
	ТаблицаБонусныеБаллы = Результат[19].Выгрузить();
	ТаблицаРасчетыСКлиентами = Результат[20].Выгрузить();
	
	Если ТаблицаОплатыБонусами.Количество() > 0 Тогда
		
		ЕстьЗамены = Ложь;
		ТаблицаСоответствийЗамен = ТаблицаОплатыБонусами.Скопировать();
		ТаблицаСоответствийЗамен.Свернуть("ДисконтнаяКарта");
		ТаблицаДляБлокировки = ТаблицаСоответствийЗамен.Скопировать();
		
		ТаблицаСоответствийЗамен.Колонки.Добавить("ПредокКарты", Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты"));
		
		МассивКарт = ТаблицаОплатыБонусами.ВыгрузитьКолонку("ДисконтнаяКарта");
		Запрос.Текст = "ВЫБРАТЬ
		|	ЗаменыКарт.КартаПриемник КАК КартаПриемник
		|ИЗ
		|	РегистрСведений.РегистрацияЗаменыКартПокупателей.СрезПоследних(&Период, ) КАК ЗаменыКарт
		|ГДЕ
		|	ЗаменыКарт.КартаПриемник В(&МассивКарт)";
		Запрос.УстановитьПараметр("МассивКарт", МассивКарт);
		ВыборкаЗамены = Запрос.Выполнить().Выбрать();
		Пока ВыборкаЗамены.Следующий() Цикл
			ЕстьЗамены = Истина;
			ИсторияКарты = МаркетинговыеАкцииСервер.ПолучитьИсториюДисконтнойКарты(Реквизиты.Период, ВыборкаЗамены.КартаПриемник, Истина);
			Для Каждого ПредокКарты Из ИсторияКарты Цикл
				Если ПредокКарты <> ВыборкаЗамены.КартаПриемник Тогда
					МассивКарт.Добавить(ПредокКарты);
					НоваяСтрока = ТаблицаСоответствийЗамен.Добавить();
					НоваяСтрока.ДисконтнаяКарта = ВыборкаЗамены.КартаПриемник;
					НоваяСтрока.ПредокКарты = ПредокКарты;
					
					НоваяСтрокаБлокировки = ТаблицаДляБлокировки.Добавить();
					НоваяСтрокаБлокировки.ДисконтнаяКарта = ПредокКарты;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.БонусныеБаллы");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = ТаблицаДляБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ДисконтнаяКарта", "ДисконтнаяКарта");
		Блокировка.Заблокировать();
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ТаблицаКарт.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	ТаблицаКарт.Ссылка КАК ДисконтнаяКарта
		|ПОМЕСТИТЬ ТаблицаКарт
		|ИЗ
		|	Справочник.ИнформационныеКарты КАК ТаблицаКарт
		|ГДЕ
		|	ТаблицаКарт.Ссылка В(&МассивКарт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	БонусныеБаллы.НачисленоОстаток - БонусныеБаллы.КСписаниюОстаток КАК ОстатокБаллов
		|ПОМЕСТИТЬ БонусныеБаллы
		|ИЗ
		|	РегистрНакопления.БонусныеБаллы.Остатки(
		|			&ПериодБонусов,
		|			(ДисконтнаяКарта, БонуснаяПрограммаЛояльности) В
		|				(ВЫБРАТЬ
		|					ТаблицаКарт.ДисконтнаяКарта,
		|					ТаблицаКарт.БонуснаяПрограммаЛояльности
		|				ИЗ
		|					ТаблицаКарт КАК ТаблицаКарт)) КАК БонусныеБаллы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БонусныеБаллы.ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
		|	ВЫБОР
		|		КОГДА БонусныеБаллы.ВидДвижения = &Приход
		|			ТОГДА БонусныеБаллы.Начислено - БонусныеБаллы.КСписанию
		|		ИНАЧЕ БонусныеБаллы.КСписанию - БонусныеБаллы.Начислено
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.БонусныеБаллы КАК БонусныеБаллы
		|ГДЕ
		|	БонусныеБаллы.Период = &ПериодБонусов
		|	И БонусныеБаллы.Регистратор <> &Ссылка
		|	И (БонусныеБаллы.ДисконтнаяКарта, БонусныеБаллы.БонуснаяПрограммаЛояльности) В
		|			(ВЫБРАТЬ
		|				ТаблицаКарт.ДисконтнаяКарта,
		|				ТаблицаКарт.БонуснаяПрограммаЛояльности
		|			ИЗ
		|				ТаблицаКарт КАК ТаблицаКарт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	СУММА(БонусныеБаллы.ОстатокБаллов) КАК ОстатокБаллов
		|ИЗ
		|	БонусныеБаллы КАК БонусныеБаллы
		|
		|СГРУППИРОВАТЬ ПО
		|	БонусныеБаллы.ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности
		|
		|ИМЕЮЩИЕ
		|	СУММА(БонусныеБаллы.ОстатокБаллов) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БонусныеБаллы.Период КАК Период,
		|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	БонусныеБаллы.ДатаПервоначальногоНачисления КАК ДатаПервоначальногоНачисления,
		|	СУММА(ВЫБОР
		|			КОГДА БонусныеБаллы.ВидДвижения = &Приход
		|				ТОГДА БонусныеБаллы.КСписанию
		|			ИНАЧЕ -БонусныеБаллы.КСписанию
		|		КОНЕЦ) КАК КСписанию
		|ИЗ
		|	РегистрНакопления.БонусныеБаллы КАК БонусныеБаллы
		|ГДЕ
		|	(БонусныеБаллы.ДисконтнаяКарта, БонусныеБаллы.БонуснаяПрограммаЛояльности) В
		|			(ВЫБРАТЬ
		|				ТаблицаКарт.ДисконтнаяКарта,
		|				ТаблицаКарт.БонуснаяПрограммаЛояльности
		|			ИЗ
		|				ТаблицаКарт КАК ТаблицаКарт)
		|	И БонусныеБаллы.ДатаПервоначальногоНачисления <= &ПериодБонусов
		|	И БонусныеБаллы.ДатаПервоначальногоНачисления <> &ПустаяДата
		|	И БонусныеБаллы.Период > &ПериодБонусов
		|	И БонусныеБаллы.КСписанию <> 0
		|	И БонусныеБаллы.Регистратор <> &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	БонусныеБаллы.Период,
		|	БонусныеБаллы.ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
		|	БонусныеБаллы.ДатаПервоначальногоНачисления
		|
		|ИМЕЮЩИЕ
		|	СУММА(БонусныеБаллы.КСписанию) > 0";
		
		Результат = Запрос.ВыполнитьПакет();
		
		БонусныеБаллыСервер.ОбъединитьТаблицыБонусовПриОплате(
			ТаблицаБонусныеБаллы,
			ТаблицаОплатыБонусами,
			Результат,
			ПериодБонусов,
			Истина,
			ЕстьЗамены,
			ТаблицаСоответствийЗамен);
		
	КонецЕсли;
	
	ТаблицыДляДвижений.Вставить("ТаблицаБонусныеБаллы"    , ТаблицаБонусныеБаллы);
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентами", ТаблицаРасчетыСКлиентами);
	
	Если ИспользоватьКомиссионнуюТорговлю Тогда
		ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюОтчетовКомитенту" , 
						   ПроведениеСервер.ТаблицаДвиженийРегистраТоварыКОформлениюОтчетовКомитенту(
						   ТаблицыДляДвижений.ТаблицаТоварыОрганизаций
						   ));
	КонецЕсли;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КМ6") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "КМ6", 
			НСтр("ru = 'Отчет о розничных продажах'") , 
			ПечатьОтчетаОПродажахККМ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати["СРасшифровкой"]));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная",
				ПараметрыПечати.Представление,
				ПечатьНакладная(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьНоменклатуры") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьНоменклатуры",
				ПараметрыПечати.Представление,
				ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
			
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

Функция ОбновитьСтатусПослеПередачиДанных(ДокументСсылка, Операция, СтатусОбработки) Экспорт
	
	НовыйСтатус     = Неопределено;
	ДальнейшееДействие = Неопределено;
	
	Если Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных Тогда
		
		Если СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Принято Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.Передано;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации;
			
		ИначеЕсли СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Отклонено
			ИЛИ СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Ошибка Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.ОтклоненоГИСМ;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	ИначеЕсли Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхПолучениеКвитанции Тогда
		
		Если СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Принято Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.ПринятоГИСМ;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
			
		ИначеЕсли СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Отклонено
			ИЛИ СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Ошибка Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.ОтклоненоГИСМ;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НовыйСтатус = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РегистрыСведений.СтатусыИнформированияГИСМ.ОбновитьСтатус(ДокументСсылка, НовыйСтатус, ДальнейшееДействие);
	
	Возврат НовыйСтатус;
	
КонецФункции

Функция ОбновитьСтатусПослеПодготовкиКПередачеДанных(ДокументСсылка, Операция) Экспорт
	
	НовыйСтатус        = Неопределено;
	ДальнейшееДействие = Неопределено;
	
	ИспользоватьАвтоматическийОбмен = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическуюОтправкуПолучениеДанныхГИСМ");
	
	Если Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных Тогда
		НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.КПередаче;
		Если ИспользоватьАвтоматическийОбмен Тогда
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием;
		Иначе
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен;
		КонецЕсли;
	КонецЕсли;
	
	Если НовыйСтатус = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РегистрыСведений.СтатусыИнформированияГИСМ.ОбновитьСтатус(
		ДокументСсылка,
		НовыйСтатус,
		ДальнейшееДействие);
	
	Возврат НовыйСтатус;
	
КонецФункции

#КонецОбласти

#Область СообщенияГИСМ

Функция СообщениеКПередачеXML(ДокументСсылка, Операция) Экспорт
	
	Если Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных Тогда
		Возврат ОтчетОРозничныхПродажахXML(ДокументСсылка);
	ИначеЕсли Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхПолучениеКвитанции Тогда
		Возврат ИнтеграцияГИСМВызовСервера.ЗапросКвитанцииОФиксацииПоСсылкеXML(ДокументСсылка, Перечисления.ОперацииОбменаГИСМ.ПередачаДанных);
	КонецЕсли;
	
КонецФункции

Функция ОтчетОРозничныхПродажахXML(ДокументСсылка) Экспорт
	
	Если ИнтеграцияГИСМ.ИспользоватьВозможностиВерсии("2.41") Тогда
		Возврат ОтчетОРозничныхПродажахXML2_41(ДокументСсылка);
	Иначе
		Возврат ОтчетОРозничныхПродажахXML2_40(ДокументСсылка);
	КонецЕсли;
	
КонецФункции

#Область Версия2_40

Функция ОтчетОРозничныхПродажахXML2_40(ДокументСсылка) Экспорт
	
	СообщенияXML = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла КАК Ссылка,
	|	КОЛИЧЕСТВО(ГИСМПрисоединенныеФайлы.Ссылка) КАК ПоследнийНомерВерсии
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	Справочник.ГИСМПрисоединенныеФайлы КАК ГИСМПрисоединенныеФайлы
	|ГДЕ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла = &Ссылка
	|	И ГИСМПрисоединенныеФайлы.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииОбменаГИСМ.ПередачаДанных)
	|	И ГИСМПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Исходящее)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Дата КАК Дата,
	|	ЕСТЬNULL(ВременнаяТаблица.ПоследнийНомерВерсии, 0) КАК ПоследнийНомерВерсии,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ОтчетОРозничныхПродажах.Номер КАК Номер
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица КАК ВременнаяТаблица
	|		ПО ОтчетОРозничныхПродажах.Ссылка = ВременнаяТаблица.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахТовары.Ссылка,
	|	ОтчетОРозничныхПродажахТовары.Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика,
	|	СУММА(ОтчетОРозничныхПродажахТовары.Сумма) КАК Сумма,
	|	СУММА(ОтчетОРозничныхПродажахТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОтчетОРозничныхПродажахТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажахТовары.Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика,
	|	ОтчетОРозничныхПродажахТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.КоличествоУпаковок <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ Товары.Ссылка.ЦенаВключаетНДС
	|						ТОГДА ВЫРАЗИТЬ((Товары.Сумма + Товары.СуммаНДС) / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫРАЗИТЬ(Товары.Сумма / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	Серии.Серия.НомерКиЗГИСМ КАК НомерКиЗ,
	|	Товары.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК Товары
	|		ПО (Товары.Ссылка = Серии.Ссылка)
	|			И (Товары.Номенклатура = Серии.Номенклатура)
	|			И (Товары.Характеристика = Серии.Характеристика)
	|ГДЕ
	|	Серии.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Серии.НомерСтроки");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	Шапка = Результат[1].Выбрать();
	Товары = Результат[3].Выгрузить();
	Если Не Шапка.Следующий()
		Или Товары.Количество() = 0 Тогда
		
		СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
		СообщениеXML.Документ = ДокументСсылка;
		СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
			Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка);
		СообщениеXML.ТекстОшибки = НСтр("ru = 'Нет данных для выгрузки.'");
		СообщенияXML.Добавить(СообщениеXML);
		Возврат СообщенияXML;
		
	КонецЕсли;
	
	НомерВерсии = Шапка.ПоследнийНомерВерсии + 1;
	
	РеквизитыОгранизации = ИнтеграцияГИСМВызовСервера.ИННКППGLNОрганизации(Шапка.Организация, Неопределено);
	
	СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
	СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
		Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка, НомерВерсии);
	
	ИмяТипа   = "query";
	ИмяПакета = "retail_sale";
	
	ПередачаДанных = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(Неопределено, ИмяТипа);
	
	ОтчетОРозничныхПродажах = ИнтеграцияГИСМ.ОбъектXDTO(ИмяПакета);
	ОтчетОРозничныхПродажах.action_id  = ОтчетОРозничныхПродажах.action_id;
	
	Попытка
		ОтчетОРозничныхПродажах.sender_gln = РеквизитыОгранизации.GLN;
	Исключение
		ИнтеграцияГИСМКлиентСервер.ДобавитьТекстОшибкиНеЗаполненGLNОрганизации(СообщениеXML, РеквизитыОгранизации.GLN, Шапка);
	КонецПопытки;
	
	ОтчетОРозничныхПродажах.sales = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах, "sales");
	
	ХранилищеВременныхДат = Новый Соответствие;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		НоваяСтрока = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах.sales, "detail");
		НоваяСтрока.sign_num = СтрокаТЧ.НомерКиЗ;
		НоваяСтрока.cost     = СтрокаТЧ.Стоимость;
		Если ЗначениеЗаполнено(СтрокаТЧ.СуммаНДС) Тогда
			НоваяСтрока.vat_value = СтрокаТЧ.СуммаНДС;
		КонецЕсли;
		
		НоваяСтрока.doc_type   = 4;
		НоваяСтрока.doc_name   = НСтр("ru = 'Отчет о розничных продажах'");
		НоваяСтрока.doc_number = Шапка.Номер;
		
		ИнтеграцияГИСМ.УстановитьДатуСЧасовымПоясом(
			НоваяСтрока,
			"sale_time",
			Шапка.Дата,
			ХранилищеВременныхДат);
		
		ОтчетОРозничныхПродажах.sales.detail.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	ПередачаДанных.version    = ПередачаДанных.version;
	ПередачаДанных[ИмяПакета] = ОтчетОРозничныхПродажах;
	
	ТекстСообщенияXML = ИнтеграцияГИСМ.ОбъектXDTOВXML(ПередачаДанных, ИмяТипа);
	ТекстСообщенияXML = ИнтеграцияГИСМ.ПреобразоватьВременныеДаты(ХранилищеВременныхДат, ТекстСообщенияXML);
	
	СообщениеXML.ТекстСообщенияXML  = ТекстСообщенияXML;
	СообщениеXML.КонвертSOAP = ИнтеграцияГИСМВызовСервера.ПоместитьТекстСообщенияXMLВКонвертSOAP(ТекстСообщенияXML);
	
	СообщениеXML.ТипСообщения = Перечисления.ТипыСообщенийГИСМ.Исходящее;
	СообщениеXML.Организация  = Шапка.Организация;
	СообщениеXML.Операция     = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных;
	СообщениеXML.Документ     = ДокументСсылка;
	СообщениеXML.Версия       = НомерВерсии;
	
	СообщенияXML.Добавить(СообщениеXML);
	
	Возврат СообщенияXML;
	
КонецФункции

#КонецОбласти

#Область Версия2_41

Функция ОтчетОРозничныхПродажахXML2_41(ДокументСсылка) Экспорт
	
	СообщенияXML = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла КАК Ссылка,
	|	КОЛИЧЕСТВО(ГИСМПрисоединенныеФайлы.Ссылка) КАК ПоследнийНомерВерсии
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	Справочник.ГИСМПрисоединенныеФайлы КАК ГИСМПрисоединенныеФайлы
	|ГДЕ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла = &Ссылка
	|	И ГИСМПрисоединенныеФайлы.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииОбменаГИСМ.ПередачаДанных)
	|	И ГИСМПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Исходящее)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Дата КАК Дата,
	|	ЕСТЬNULL(ВременнаяТаблица.ПоследнийНомерВерсии, 0) КАК ПоследнийНомерВерсии,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ОтчетОРозничныхПродажах.Номер КАК Номер
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица КАК ВременнаяТаблица
	|		ПО ОтчетОРозничныхПродажах.Ссылка = ВременнаяТаблица.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахТовары.Ссылка,
	|	ОтчетОРозничныхПродажахТовары.Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика,
	|	СУММА(ОтчетОРозничныхПродажахТовары.Сумма) КАК Сумма,
	|	СУММА(ОтчетОРозничныхПродажахТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОтчетОРозничныхПродажахТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажахТовары.Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика,
	|	ОтчетОРозничныхПродажахТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.КоличествоУпаковок <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ Товары.Ссылка.ЦенаВключаетНДС
	|						ТОГДА ВЫРАЗИТЬ((Товары.Сумма + Товары.СуммаНДС) / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫРАЗИТЬ(Товары.Сумма / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	Серии.Серия.НомерКиЗГИСМ КАК НомерКиЗ,
	|	Товары.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК Товары
	|		ПО (Товары.Ссылка = Серии.Ссылка)
	|			И (Товары.Номенклатура = Серии.Номенклатура)
	|			И (Товары.Характеристика = Серии.Характеристика)
	|ГДЕ
	|	Серии.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Серии.НомерСтроки");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	Шапка = Результат[1].Выбрать();
	Товары = Результат[3].Выгрузить();
	Если Не Шапка.Следующий()
		Или Товары.Количество() = 0 Тогда
		
		СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
		СообщениеXML.Документ = ДокументСсылка;
		СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
			Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка);
		СообщениеXML.ТекстОшибки = НСтр("ru = 'Нет данных для выгрузки.'");
		СообщенияXML.Добавить(СообщениеXML);
		Возврат СообщенияXML;
		
	КонецЕсли;
	
	НомерВерсии = Шапка.ПоследнийНомерВерсии + 1;
	
	РеквизитыОгранизации = ИнтеграцияГИСМВызовСервера.ИННКППGLNОрганизации(Шапка.Организация, Неопределено);
	
	СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
	СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
		Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка, НомерВерсии);
	
	ИмяТипа   = "query";
	ИмяПакета = "retail_sale";
	
	ПередачаДанных = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(Неопределено, ИмяТипа);
	
	ОтчетОРозничныхПродажах = ИнтеграцияГИСМ.ОбъектXDTO(ИмяПакета);
	ОтчетОРозничныхПродажах.action_id  = ОтчетОРозничныхПродажах.action_id;
	
	Попытка
		ОтчетОРозничныхПродажах.sender_gln = РеквизитыОгранизации.GLN;
	Исключение
		ИнтеграцияГИСМКлиентСервер.ДобавитьТекстОшибкиНеЗаполненGLNОрганизации(СообщениеXML, РеквизитыОгранизации.GLN, Шапка);
	КонецПопытки;
	
	ОтчетОРозничныхПродажах.sales = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах, "sales");
	
	ХранилищеВременныхДат = Новый Соответствие;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		НоваяСтрока = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах.sales, "detail");
		
		НоваяСтрока.sign_num   = СтрокаТЧ.НомерКиЗ;
		НоваяСтрока.cost       = СтрокаТЧ.Стоимость;
		Если ЗначениеЗаполнено(СтрокаТЧ.СуммаНДС) Тогда
			НоваяСтрока.vat_value = СтрокаТЧ.СуммаНДС;
		КонецЕсли;
		НоваяСтрока.sale_time  = Шапка.Дата;
		
		НоваяСтрока.sale_docs = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(НоваяСтрока, "sale_docs");
		doc = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(НоваяСтрока.sale_docs, "doc");
		doc.doc_type   = 1;
		doc.doc_name   = НСтр("ru = 'Чек'");
		doc.doc_number = НСтр("ru = 'б/н'");
		doc.doc_date   = Шапка.Дата;
		НоваяСтрока.sale_docs.doc.Добавить(doc);
		
		ОтчетОРозничныхПродажах.sales.detail.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	ПередачаДанных.version    = ПередачаДанных.version;
	ПередачаДанных[ИмяПакета] = ОтчетОРозничныхПродажах;
	
	ТекстСообщенияXML = ИнтеграцияГИСМ.ОбъектXDTOВXML(ПередачаДанных, ИмяТипа);
	ТекстСообщенияXML = ИнтеграцияГИСМ.ПреобразоватьВременныеДаты(ХранилищеВременныхДат, ТекстСообщенияXML);
	
	СообщениеXML.ТекстСообщенияXML  = ТекстСообщенияXML;
	СообщениеXML.КонвертSOAP = ИнтеграцияГИСМВызовСервера.ПоместитьТекстСообщенияXMLВКонвертSOAP(ТекстСообщенияXML);
	
	СообщениеXML.ТипСообщения = Перечисления.ТипыСообщенийГИСМ.Исходящее;
	СообщениеXML.Организация  = Шапка.Организация;
	СообщениеXML.Операция     = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных;
	СообщениеXML.Документ     = ДокументСсылка;
	СообщениеXML.Версия       = НомерВерсии;
	
	СообщенияXML.Добавить(СообщениеXML);
	
	Возврат СообщенияXML;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует текст запроса по серийным номерам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество,
	|	Товары.Склад
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество,
	|	ТабТовары.Склад
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер,
	|	ТабТовары.Склад КАК Отправитель,
	|	ТабТовары.Номенклатура,
	|	&АналитикаХозяйственнойОперации,
	|	1 КАК Количество,
	|	&Период КАК Период,
	|	NULL КАК Получатель
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	ТабТовары.Номенклатура.ИспользоватьСерийныеНомера
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ТабТовары.Склад,
	|	ТабТовары.Номенклатура,
	|	&АналитикаХозяйственнойОперации,
	|	ТабТовары.Количество,
	|	&Период,
	|	NULL
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|ГДЕ
	|	(НЕ ТабТовары.Номенклатура.ИспользоватьСерийныеНомера)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.СерийныйНомер,
	|	NULL,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПогашениеПодарочныхСертификатов),
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Количество,
	|	&Период,
	|	&СкладПродажи
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов КАК ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов
	|ГДЕ
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвижений.СерийныйНомер,
	|	ТаблицаДвижений.Отправитель,
	|	ТаблицаДвижений.Номенклатура,
	|	ТаблицаДвижений.АналитикаХозяйственнойОперации,
	|	&Организация КАК Организация,
	|	СУММА(ТаблицаДвижений.Количество) КАК Количество,
	|	ТаблицаДвижений.Период,
	|	ТаблицаДвижений.Получатель
	|ИЗ
	|	ТаблицаДвижений КАК ТаблицаДвижений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДвижений.СерийныйНомер,
	|	ТаблицаДвижений.Отправитель,
	|	ТаблицаДвижений.Номенклатура,
	|	ТаблицаДвижений.АналитикаХозяйственнойОперации,
	|	ТаблицаДвижений.Период,
	|	ТаблицаДвижений.Получатель";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса по бонусам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаБонусы()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	&ПериодБонусов КАК Период,
	|	&Расход КАК ВидДвижения,
	|	Оплаты.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА Оплаты.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА Оплаты.ДисконтнаяКарта
	|		ИНАЧЕ Оплаты.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ КАК ДисконтнаяКарта,
	|	СУММА(Оплаты.КоличествоБонусовВСкидках) КАК Начислено,
	|	0 КАК КСписанию,
	|	&ПустаяДата КАК ДатаПервоначальногоНачисления
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами КАК Оплаты
	|ГДЕ
	|	Оплаты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Оплаты.БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА Оплаты.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА Оплаты.ДисконтнаяКарта
	|		ИНАЧЕ Оплаты.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Оплаты.КоличествоБонусовВСкидках) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БонусныеБаллы.ДатаНачисления КАК Период,
	|	&Приход КАК ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	БонусныеБаллы.КоличествоБонусныхБаллов КАК Начислено,
	|	0 КАК КСписанию,
	|	&ПустаяДата КАК ДатаПервоначальногоНачисления
	|ПОМЕСТИТЬ БонусныеБаллы
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.БонусныеБаллыКНачислению КАК БонусныеБаллы
	|ГДЕ
	|	БонусныеБаллы.Ссылка = &Ссылка
	|	И БонусныеБаллы.ДатаНачисления <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БонусныеБаллы.ДатаСписания,
	|	&Приход,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
	|	БонусныеБаллы.ДисконтнаяКарта,
	|	0,
	|	БонусныеБаллы.КоличествоБонусныхБаллов,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.БонусныеБаллыКНачислению КАК БонусныеБаллы
	|ГДЕ
	|	БонусныеБаллы.Ссылка = &Ссылка
	|	И БонусныеБаллы.ДатаСписания <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПериодБонусов,
	|	&Расход,
	|	Оплаты.БонуснаяПрограммаЛояльности,
	|	Оплаты.ДисконтнаяКарта,
	|	СУММА(Оплаты.КоличествоБонусовВСкидках),
	|	0,
	|	&ПустаяДата
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами КАК Оплаты
	|ГДЕ
	|	Оплаты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Оплаты.БонуснаяПрограммаЛояльности,
	|	Оплаты.ДисконтнаяКарта
	|
	|ИМЕЮЩИЕ
	|	СУММА(Оплаты.КоличествоБонусовВСкидках) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БонусныеБаллы.Период КАК Период,
	|	БонусныеБаллы.ВидДвижения КАК ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА БонусныеБаллы.ДисконтнаяКарта
	|		ИНАЧЕ БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ КАК ДисконтнаяКарта,
	|	СУММА(БонусныеБаллы.Начислено) КАК Начислено,
	|	СУММА(БонусныеБаллы.КСписанию) КАК КСписанию,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления КАК ДатаПервоначальногоНачисления
	|ИЗ
	|	БонусныеБаллы КАК БонусныеБаллы
	|
	|СГРУППИРОВАТЬ ПО
	|	БонусныеБаллы.Период,
	|	БонусныеБаллы.ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА БонусныеБаллы.ДисконтнаяКарта
	|		ИНАЧЕ БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления
	|
	|ИМЕЮЩИЕ
	|	(СУММА(БонусныеБаллы.Начислено) <> 0
	|		ИЛИ СУММА(БонусныеБаллы.КСписанию) <> 0)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса по расчетам с клиентами.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаРасчетыСКлиентами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Магазин КАК Магазин,
	|	&Организация КАК Организация,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета = НЕОПРЕДЕЛЕНО
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета
	|	КОНЕЦ КАК ДокументРасчета,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Отгружено КАК Сумма
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.РасчетыСКлиентами КАК ОтчетОРозничныхПродажахРасчетыСКлиентами
	|ГДЕ
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Ссылка = &Ссылка
	|	И ОтчетОРозничныхПродажахРасчетыСКлиентами.Отгружено <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Магазин,
	|	&Организация,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Контрагент,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета = НЕОПРЕДЕЛЕНО
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета
	|	КОНЕЦ,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.ЗаказПокупателя,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Оплачено
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.РасчетыСКлиентами КАК ОтчетОРозничныхПродажахРасчетыСКлиентами
	|ГДЕ
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Ссылка = &Ссылка
	|	И ОтчетОРозничныхПродажахРасчетыСКлиентами.Оплачено <> 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса по акцизным маркам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаАкцизныеМарки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК Количество,
	|	АкцизныеМарки.АкцизнаяМарка КАК АкцизнаяМарка,
	|	АкцизныеМарки.Справка2 КАК Справка2,
	|	АкцизныеМарки.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ ТаблицаВсеАкцизныеМарки
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.АкцизныеМарки КАК АкцизныеМарки
	|		ПО Товары.Ссылка = АкцизныеМарки.Ссылка
	|			И Товары.КлючСвязи = АкцизныеМарки.КлючСвязи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка.ОтчетОРозничныхПродажах = &Ссылка
	|	И НЕ АкцизныеМарки.АкцизнаяМарка = ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|	И СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И НЕ АкцизныеМарки.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	АкцизныеМарки.АкцизнаяМарка,
	|	АкцизныеМарки.Справка2,
	|	АкцизныеМарки.ШтрихкодУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаТовары.АкцизнаяМарка КАК АкцизнаяМарка,
	|	ТаблицаТовары.Справка2 КАК Справка2,
	|	ТаблицаТовары.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ ТаблицаАлкоголь
	|ИЗ
	|	ТаблицаВсеАкцизныеМарки КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.АкцизнаяМарка,
	|	ТаблицаТовары.Справка2,
	|	ТаблицаТовары.ШтрихкодУпаковки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТовары.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАлкоголь.ВидДвижения КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ТаблицаАлкоголь.Справка2 КАК Справка2,
	|	ЕСТЬNULL(Справки2ЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАлкоголь.АкцизнаяМарка) КАК Количество,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАлкоголь.АкцизнаяМарка) КАК СвободныйОстаток
	|ИЗ
	|	ТаблицаАлкоголь КАК ТаблицаАлкоголь
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО ТаблицаАлкоголь.Справка2 = Справки2ЕГАИС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАлкоголь.ВидДвижения,
	|	ТаблицаАлкоголь.Справка2,
	|	Справки2ЕГАИС.АлкогольнаяПродукция";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьРазделитьЗапросов()

	СтрокаРазделителя = 
	"
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат СтрокаРазделителя

КонецФункции // ПолучитьРазделитьЗапросов()

///////////////////////////////////////////////////////////////////////////////
// Печать

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьОтчетаОПродажахККМ(МассивОбъектов, ОбъектыПечати, СРасшифровкой = Ложь)
	
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Возврат товаров от покупателя'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетОРозничныхПродажах_КМ6";
	
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтчетОРозничныхПродажах.Номер КАК Номер,
	|	ОтчетОРозничныхПродажах.Дата КАК ДатаДокумента,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(ОтчетОРозничныхПродажах.Магазин) КАК ПредставлениеМагазина,
	|	ОтчетОРозничныхПродажах.КассаККМ КАК КассаККМ,
	|	ОтчетОРозничныхПродажах.КассаККМ.СерийныйНомер КАК СерийныйНомерККМ,
	|	ОтчетОРозничныхПродажах.КассаККМ.РегистрационныйНомер КАК РегистрационныйНомерККМ,
	|	ОтчетОРозничныхПродажах.КассаККМ.Представление КАК ККМПредставление,
	|	ОтчетОРозничныхПродажах.Ответственный КАК Ответственный,
	|	ОтчетОРозничныхПродажах.СуммаДокумента КАК Итого,
	|	ОтчетОРозничныхПродажах.СуммаВозвратов КАК ИтогоВозврат,
	|	ОтчетОРозничныхПродажах.СуммаОплатыНаличных КАК СуммаОплатыНаличных,
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.КассаККМ.ПодключаемоеОборудование.Наименование КАК ПредставлениеККМ,
	|	ОтчетОРозничныхПродажах.Ответственный.ФизическоеЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ОтчетыОПродажах
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|	И ОтчетОРозничныхПродажах.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМ.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПродажа,
	|	ЧекККМ.СуммаДокумента КАК СуммаДокумента,
	|	ЧекККМ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПОМЕСТИТЬ ЧекиККМ
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.ОтчетОРозничныхПродажах В
	|			(ВЫБРАТЬ
	|				ОтчетыОПродажах.Ссылка КАК Ссылка
	|			ИЗ
	|				ОтчетыОПродажах КАК ОтчетыОПродажах)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМОплата.ВидОплаты КАК ВидОплаты,
	|	ВЫБОР
	|		КОГДА ЧекиККМ.ЭтоПродажа
	|			ТОГДА ЧекККМОплата.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПродаж,
	|	ВЫБОР
	|		КОГДА ЧекиККМ.ЭтоПродажа
	|			ТОГДА 0
	|		ИНАЧЕ ЧекККМОплата.Сумма
	|	КОНЕЦ КАК СуммаВозврата,
	|	ЧекиККМ.Ссылка КАК Ссылка,
	|	ЧекиККМ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПОМЕСТИТЬ ОплатыБезНал
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЧекиККМ КАК ЧекиККМ
	|		ПО ЧекККМОплата.Ссылка = ЧекиККМ.Ссылка
	|ГДЕ
	|	(НЕ ЧекККМОплата.ВидОплаты = &ВидОплатыНаличные)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОплатыБезНал.СуммаПродаж) КАК СуммаПродаж,
	|	СУММА(ОплатыБезНал.СуммаВозврата) КАК СуммаВозврата,
	|	ОплатыБезНал.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ БезНалСвернутый
	|ИЗ
	|	ОплатыБезНал КАК ОплатыБезНал
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатыБезНал.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекиККМ.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ЧекиККМ.ЭтоПродажа
	|			ТОГДА ЧекиККМ.СуммаДокумента - ЕСТЬNULL(БезНалСвернутый.СуммаПродаж, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПродаж,
	|	ВЫБОР
	|		КОГДА ЧекиККМ.ЭтоПродажа
	|			ТОГДА 0
	|		ИНАЧЕ ЧекиККМ.СуммаДокумента - ЕСТЬNULL(БезНалСвернутый.СуммаВозврата, 0)
	|	КОНЕЦ КАК СуммаВозврата,
	|	&ВидОплатыНаличные КАК ВидОплаты,
	|	ЧекиККМ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПОМЕСТИТЬ ОплатаНаличным
	|ИЗ
	|	ЧекиККМ КАК ЧекиККМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ БезНалСвернутый КАК БезНалСвернутый
	|		ПО ЧекиККМ.Ссылка = БезНалСвернутый.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплатаНаличным.СуммаПродаж КАК СуммаПродаж,
	|	ОплатаНаличным.СуммаВозврата КАК СуммаВозврата,
	|	ОплатаНаличным.ВидОплаты КАК ВидОплаты,
	|	ОплатаНаличным.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПОМЕСТИТЬ ПолныеВидыОплат
	|ИЗ
	|	ОплатаНаличным КАК ОплатаНаличным
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОплатыБезНал.СуммаПродаж,
	|	ОплатыБезНал.СуммаВозврата,
	|	ОплатыБезНал.ВидОплаты,
	|	ОплатыБезНал.ОтчетОРозничныхПродажах
	|ИЗ
	|	ОплатыБезНал КАК ОплатыБезНал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПолныеВидыОплат.СуммаПродаж) КАК СуммаПродаж,
	|	СУММА(ПолныеВидыОплат.СуммаВозврата) КАК СуммаВозврата,
	|	ПолныеВидыОплат.ВидОплаты КАК ВидОплаты,
	|	ПолныеВидыОплат.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПОМЕСТИТЬ ПолныеВидыОплатыСвернутый
	|ИЗ
	|	ПолныеВидыОплат КАК ПолныеВидыОплат
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолныеВидыОплат.ВидОплаты,
	|	ПолныеВидыОплат.ОтчетОРозничныхПродажах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ПолныеВидыОплат.СуммаПродаж) КАК СуммаПродаж,
	|	СУММА(ПолныеВидыОплат.СуммаВозврата) КАК СуммаВозврата,
	|	ПолныеВидыОплат.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ПОМЕСТИТЬ ПолныеОплатыСвернутый
	|ИЗ
	|	ПолныеВидыОплат КАК ПолныеВидыОплат
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолныеВидыОплат.ОтчетОРозничныхПродажах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетыОПродажах.Номер КАК Номер,
	|	ОтчетыОПродажах.ДатаДокумента КАК ДатаДокумента,
	|	ОтчетыОПродажах.Организация КАК Организация,
	|	ОтчетыОПродажах.ПредставлениеМагазина КАК ПредставлениеМагазина,
	|	ОтчетыОПродажах.КассаККМ КАК КассаККМ,
	|	ОтчетыОПродажах.СерийныйНомерККМ КАК СерийныйНомерККМ,
	|	ОтчетыОПродажах.РегистрационныйНомерККМ КАК РегистрационныйНомерККМ,
	|	ОтчетыОПродажах.ККМПредставление КАК ККМПредставление,
	|	ОтчетыОПродажах.Ответственный КАК Ответственный,
	|	ОтчетыОПродажах.СуммаОплатыНаличных КАК СуммаОплатыНаличных,
	|	ОтчетыОПродажах.Ссылка КАК Ссылка,
	|	ОтчетыОПродажах.ПредставлениеККМ КАК ПредставлениеККМ,
	|	ОтчетыОПродажах.ФизЛицо КАК ФизЛицо,
	|	ЕСТЬNULL(ПолныеОплатыСвернутый.СуммаПродаж, 0) КАК Итого,
	|	ЕСТЬNULL(ПолныеОплатыСвернутый.СуммаВозврата, 0) КАК ИтогоВозврат
	|ИЗ
	|	ОтчетыОПродажах КАК ОтчетыОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПолныеОплатыСвернутый КАК ПолныеОплатыСвернутый
	|		ПО ОтчетыОПродажах.Ссылка = ПолныеОплатыСвернутый.ОтчетОРозничныхПродажах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолныеВидыОплатыСвернутый.СуммаПродаж КАК СуммаПродаж,
	|	ПолныеВидыОплатыСвернутый.СуммаВозврата КАК СуммаВозврата,
	|	ПолныеВидыОплатыСвернутый.ВидОплаты КАК ВидОплаты,
	|	ПолныеВидыОплатыСвернутый.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах,
	|	ПолныеВидыОплатыСвернутый.ВидОплаты.ТипОплаты КАК ТипОплаты
	|ИЗ
	|	ПолныеВидыОплатыСвернутый КАК ПолныеВидыОплатыСвернутый
	|ИТОГИ
	|	СУММА(СуммаПродаж),
	|	СУММА(СуммаВозврата)
	|ПО
	|	ОтчетОРозничныхПродажах,
	|	ТипОплаты,
	|	ВидОплаты";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВидОплатыНаличные", Справочники.ВидыОплатЧекаККМ.Наличные);
	Запрос.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_КМ6");
	
	ВыборкаПоДокументам = Результаты[8].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[9].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	ОбластьЗаголовок   = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока      = Макет.ПолучитьОбласть("СтрокаТаблицыСекция");
	ОбластьИтогТаблицы = Макет.ПолучитьОбласть("ИтогТаблицы");
	ОбластьПодвал      = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьШапкаВидОплаты            = Макет.ПолучитьОбласть("ШапкаВидОплаты");
	ОбластьСтрокаПодытогПоТипамОплат = Макет.ПолучитьОбласть("СтрокаПодытогПоТипамОплат");
	ОбластьСтрокаТаблицыВидОплаты    = Макет.ПолучитьОбласть("СтрокаТаблицыВидОплаты");
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьЗаголовок.Параметры.Дата                     = ВыборкаПоДокументам.ДатаДокумента;
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ОрганизацияИНН           = СведенияОбОрганизации.ИНН;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер, Ложь, Истина);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);

		ТабличныйДокумент.Вывести(ОбластьШапка);

		ОбластьСтрока.Параметры.ВыручкаПоСчетчику = ВыборкаПоДокументам.Итого;
		ОбластьСтрока.Параметры.СуммаВозвратов    = ВыборкаПоДокументам.ИтогоВозврат;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
		ВыручкаВсего      = ВыборкаПоДокументам.Итого;
		ОбластьИтогТаблицы.Параметры.ВыручкаПоСчетчику = ВыборкаПоДокументам.Итого;
		ОбластьИтогТаблицы.Параметры.СуммаВозвратов    = ВыборкаПоДокументам.ИтогоВозврат;
		ТабличныйДокумент.Вывести(ОбластьИтогТаблицы);
		
		// Выводит информацию по дисконтным картам.
		Если СРасшифровкой Тогда
			Если ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("ОтчетОРозничныхПродажах",ВыборкаПоДокументам.Ссылка)) Тогда
				ТабличныйДокумент.Вывести(ОбластьШапкаВидОплаты);
				
				ВыборкаТипОплат = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаТипОплат.Следующий() Цикл
					НужноРазбиениеПоВидамОплат = Ложь;
					Если ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.Наличные Тогда
						Заголовок = НСтр("ru = 'Итого наличными'");
					ИначеЕсли ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта Тогда
						Заголовок = НСтр("ru = 'Итого платежной картой'");
						НужноРазбиениеПоВидамОплат = Истина;
					ИначеЕсли ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.БанковскийКредит Тогда
						Заголовок = НСтр("ru = 'Итого банковским кредитом'");
						НужноРазбиениеПоВидамОплат = Истина;
					ИначеЕсли ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.ПодарочныйСертификат Тогда
						Заголовок = НСтр("ru = 'Итого по погашению подарочных сертификатов'");
					Иначе
						Заголовок = НСтр("ru = 'Итого прочее'");
					КонецЕсли;
					
					ОбластьСтрокаПодытогПоТипамОплат.Параметры.ПодытогПоТипамОплат = Заголовок;
					ОбластьСтрокаПодытогПоТипамОплат.Параметры.СуммаВыручки        = ВыборкаТипОплат.СуммаПродаж;
					ОбластьСтрокаПодытогПоТипамОплат.Параметры.СуммаВозвратов      = ВыборкаТипОплат.СуммаВозврата;
					
					Если НужноРазбиениеПоВидамОплат Тогда
						ВыборкаВидОплат = ВыборкаТипОплат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Пока ВыборкаВидОплат.Следующий() Цикл
							ОбластьСтрокаТаблицыВидОплаты.Параметры.ВидОплаты      = ВыборкаВидОплат.ВидОплаты;
							ОбластьСтрокаТаблицыВидОплаты.Параметры.СуммаВыручки   = ВыборкаВидОплат.СуммаПродаж;
							ОбластьСтрокаТаблицыВидОплаты.Параметры.СуммаВозвратов = ВыборкаВидОплат.СуммаВозврата;
							
							ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыВидОплаты);
						КонецЦикла;
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьСтрокаПодытогПоТипамОплат);
				КонецЦикла;
				ТабличныйДокумент.Вывести(ОбластьИтогТаблицы);
				
			КонецЕсли;
		КонецЕсли; 
		
		//ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		Руководители            = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		ФИОТекущегоПользователя = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ВыборкаПоДокументам.ФизЛицо, ВыборкаПоДокументам.ДатаДокумента);
		Руководитель            = Руководители.Руководитель;
		СтаршийКассир           = Руководители.Кассир;
		ДолжностьРуководителя   = Руководители.РуководительДолжность;
		
		ОбластьПодвал.Параметры.ФИОКассираОрганизации    = СтаршийКассир;
		ОбластьПодвал.Параметры.ФИОРуководителя          = Руководитель;
		ОбластьПодвал.Параметры.ФИОКассираОперациониста  = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено, ФИОТекущегоПользователя.Фамилия, ФИОТекущегоПользователя.Имя, ФИОТекущегоПользователя.Отчество);
		Если НЕ ВыручкаВсего = 0 Тогда
			ОбластьПодвал.Параметры.СуммаПрописью = Формат(ВыручкаВсего,"ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧГ=3,0" ) + " (" + ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ВыручкаВсего) + ")";
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Отчет о розничных продажах'");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетОРозничныхПродажах_Накладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Поставщик,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПредставлениеПоставщика,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.УчитыватьНДС,
	|	Документ.ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР КОГДА ТаблицаТовары.Количество = 0 ТОГДА ТаблицаТовары.Количество
	|	ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Цена * ТаблицаТовары.Количество КАК СуммаБезСкидки,
	|	ТаблицаТовары.Цена * ТаблицаТовары.Количество -
	|	ТаблицаТовары.Сумма КАК Скидка,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетОРозничныхПродажах.ПФ_MXL_Накладная");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаНомера         = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьШапкаКодов          = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьШапкаДанных         = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьШапкаСкидок         = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьШапкаСуммы          = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
		                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	ОбластьСтрокаНомера         = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьСтрокаКодов          = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьСтрокаДанных         = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСтрокаСкидок         = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСтрокаСуммы          = Макет.ПолучитьОбласть("Строка|Сумма");
	
	ОбластьИтогоНДСНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьИтогоНДСКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьИтогоНДСДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьИтогоНДССкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
	ОбластьИтогоНДССуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	// Вывести Итого.
	ОбластьИтогоНомера         = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьИтогоКодов          = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьИтогоДанных         = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьИтогоСкидок         = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьИтогоСуммы          = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Шапка
		
		ТабличныйДокумент.Вывести(ОбластьШапкаНомера);
		Если ВыводитьКоды Тогда
			ОбластьШапкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьШапкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаДанных);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСкидок);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСуммы);
		
		
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьСтрокаНомера.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаНомера);

			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКодов);
				
			КонецЕсли;

			ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанных);
			
			ОбластьСтрокаСкидок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидок);

			ОбластьСтрокаСуммы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммы);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьИтогоНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьИтогоДанных);
		ОбластьИтогоСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
		ОбластьИтогоСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСкидок);
		ОбластьИтогоСуммы.Параметры.Всего = Сумма;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСуммы);
		
		
		// Вывести ИтогоНДС
		ТабличныйДокумент.Вывести(ОбластьИтогоНДСНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоНДСКодов);
		КонецЕсли;
		
		ОбластьИтогоНДСДанных.Параметры.НДС = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС:'"), НСтр("ru = 'Сумма НДС:'"));
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСДанных);
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССкидок);
		
		Если НЕ ВыборкаПоДокументам.УчитыватьНДС Тогда
			СуммаНДССтрока = НСтр("ru = 'Без НДС'");
		Иначе
			СуммаНДССтрока = Строка(СуммаНДС);
		КонецЕсли;
		
		ОбластьИтогоНДССуммы.Параметры.ВсегоНДС = СуммаНДССтрока;
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССуммы);
		
		
		// Вывести Сумму прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Организация КАК Организация,
	|	ТаблицаДокументов.КассаККМ,
	|	ТаблицаДокументов.Магазин,
	|	ТаблицаДокументов.Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ИмяРеквизита1", "Организация");
	СтруктураПечати.Вставить("ИмяРеквизита2", "Магазин");
	СтруктураПечати.Вставить("ИмяРеквизита3", "Касса ККМ");
	СтруктураПечати.Вставить("КоличествоРеквизитов", 3);
	СтруктураПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	СтруктураПечати.Вставить("КолонкаКодов", КолонкаКодов);
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПечати.Вставить("Документ", Выборка.Ссылка);
		СтруктураПечати.Вставить("Реквизит1", Выборка.Организация);
		СтруктураПечати.Вставить("Реквизит2", Выборка.Магазин);
		СтруктураПечати.Вставить("Реквизит3", Выборка.КассаККМ);
		
		УправлениеПечатьюРТ.ПечатьОписиНоменклатуры(ТабличныйДокумент, ОбъектыПечати, СтруктураПечати, ПервыйДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
