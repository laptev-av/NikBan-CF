#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ОрдерНаОтражениеНедостачТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля(ДополнительныеСвойства);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля(ДополнительныеСвойства);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ЗаполнитьРеквизитыПоУмолчанию();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;

	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("ДокументОснование");
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
		Документы.ОрдерНаОтражениеНедостачТоваров.ПараметрыУказанияСерий(ЭтотОбъект),Отказ,МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДанныеЗаполнения") Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения.ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьРеквизитыПоУмолчанию();
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИзменениеАссортимента") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ДокументОснование  = ДанныеЗаполнения;
		
		ТаблицаОстаткиСЦенами = АссортиментСервер.ТаблицаОстатковСЦенамиПоВыводуИзАссортимента(
			ДанныеЗаполнения,
			Магазин,
			Склад);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаОстаткиСЦенами, Товары);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АктОРасхожденияхПриПриемкеТоваров") Тогда	
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("ДокументОснование", "Ссылка");
		Реквизиты.Вставить("Склад"            , "СкладОтправитель");
		Реквизиты.Вставить("Магазин"          , "МагазинОтправитель");
		Реквизиты.Вставить("Организация"      , "Организация");
		
		ЗначенияРеквизитов = ОбщегоНазначенияРТ.ПолучитьЗначенияРеквизитовОбъекта(ДанныеЗаполнения, Реквизиты);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
		
		Если ЗначениеЗаполнено(Магазин)
			И НЕ Магазин.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач Тогда
			
			ТекстСообщения = НСтр("ru='В магазине ""%1%"" не используется ордерная схема для отражения излишков и недостач. Для отражения недостач нужно вводить документ ""Списание товаров"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1%",Магазин);
			
			ВызватьИсключение ТекстСообщения;
			
		КонецЕсли;
		
		ЗаполнитьТоварыПоАктуОРасхождениях();
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Магазин) Тогда
		ЭтотОбъект.Склад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,,Организация);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитыПоУмолчанию()

	Ответственный = Пользователи.ТекущийПользователь();
	Магазин       = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	Если ЗначениеЗаполнено(Магазин) Тогда
		Если Магазин.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач Тогда
			Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(Магазин,,Склад, Ответственный);
		Иначе
			Магазин = Справочники.Магазины.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация,Ответственный);

КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля(ДополнительныеСвойства)

	Массив = Новый Массив;
	
	// При проведении выполняется контроль превышения остатков на складах.
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Массив.Добавить(Движения.ТоварыНаСкладах);
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Процедура ЗаполнитьТоварыПоАктуОРасхождениях()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АктОРасхождениях", ДокументОснование);
	Запрос.УстановитьПараметр("ОснованиеАкта", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ДокументОснование"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	СУММА(ВложенныйЗапрос.Расхождения) КАК Расхождения
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхПриПриемкеТоваровТовары.Характеристика КАК Характеристика,
	|		АктОРасхожденияхПриПриемкеТоваровТовары.КоличествоВДокументе - АктОРасхожденияхПриПриемкеТоваровТовары.Количество КАК Расхождения
	|	ИЗ
	|		Документ.АктОРасхожденияхПриПриемкеТоваров.Товары КАК АктОРасхожденияхПриПриемкеТоваровТовары
	|	ГДЕ
	|		АктОРасхожденияхПриПриемкеТоваровТовары.Ссылка = &АктОРасхождениях
	|		И АктОРасхожденияхПриПриемкеТоваровТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|		И АктОРасхожденияхПриПриемкеТоваровТовары.КоличествоВДокументе > АктОРасхожденияхПриПриемкеТоваровТовары.Количество
	|		И АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОрдерНаОтражениеНедостачТоваровТовары.Номенклатура,
	|		ОрдерНаОтражениеНедостачТоваровТовары.Характеристика,
	|		-ОрдерНаОтражениеНедостачТоваровТовары.Количество
	|	ИЗ
	|		Документ.ОрдерНаОтражениеНедостачТоваров.Товары КАК ОрдерНаОтражениеНедостачТоваровТовары
	|	ГДЕ
	|		ОрдерНаОтражениеНедостачТоваровТовары.Ссылка.ДокументОснование = &АктОРасхождениях
	|		И ОрдерНаОтражениеНедостачТоваровТовары.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Расхождения) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийОснования.Номенклатура КАК Номенклатура,
	|	ТаблицаСерийОснования.Характеристика КАК Характеристика,
	|	ТаблицаСерийОснования.Серия КАК Серия,
	|	ТаблицаСерийОснования.Количество
	|ПОМЕСТИТЬ ВтТаблицаСерийПеремещения
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерийОснования
	|ГДЕ
	|	ТаблицаСерийОснования.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаСерийОснования.Ссылка = &ОснованиеАкта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура КАК Номенклатура,
	|	ТаблицаСерий.Характеристика КАК Характеристика,
	|	ТаблицаСерий.Серия КАК Серия,
	|	ТаблицаСерий.Количество
	|ПОМЕСТИТЬ ВтТаблицаСерийАкта
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров.Серии КАК ТаблицаСерий
	|ГДЕ
	|	ТаблицаСерий.Ссылка = &АктОРасхождениях
	|	И ТаблицаСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийПеремещения.Номенклатура КАК Номенклатура,
	|	ТаблицаСерийПеремещения.Характеристика КАК Характеристика,
	|	ТаблицаСерийПеремещения.Серия КАК Серия,
	|	ТаблицаСерийПеремещения.Количество - ЕСТЬNULL(ТаблицаСерийАкта.Количество, 0) КАК Расхождения
	|ПОМЕСТИТЬ ВтТаблицаСерийРасхождения
	|ИЗ
	|	ВтТаблицаСерийПеремещения КАК ТаблицаСерийПеремещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСерийАкта КАК ТаблицаСерийАкта
	|		ПО ТаблицаСерийПеремещения.Серия = ТаблицаСерийАкта.Серия
	|			И ТаблицаСерийПеремещения.Номенклатура = ТаблицаСерийАкта.Номенклатура
	|			И ТаблицаСерийПеремещения.Характеристика = ТаблицаСерийАкта.Характеристика
	|ГДЕ
	|	ТаблицаСерийПеремещения.Количество - ЕСТЬNULL(ТаблицаСерийАкта.Количество, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Расхождения КАК Расхождения,
	|	ЕСТЬNULL(ТаблицаСерийРасхождения.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	ЕСТЬNULL(ТаблицаСерийРасхождения.Расхождения, ТаблицаТовары.Расхождения) КАК РасхожденияСерии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСерийРасхождения КАК ТаблицаСерийРасхождения
	|		ПО ТаблицаТовары.Номенклатура = ТаблицаСерийРасхождения.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерийРасхождения.Характеристика
	|ИТОГИ
	|	МАКСИМУМ(Расхождения)
	|ПО
	|	Номенклатура,
	|	Характеристика";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по основанию ""%ДокументОснование%"" .'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДокументОснование");
		
		ВызватьИсключение ТекстСообщения;
	
	КонецЕсли;
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХарактеристика.Следующий() Цикл
			
			ОстатокРасхождений = ВыборкаХарактеристика.Расхождения;
			
			ВыборкаДетальныеЗаписи = ВыборкаХарактеристика.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если ОстатокРасхождений = 0 Тогда
					Прервать;
				КонецЕсли;
				
				СтрокаТовары = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТовары, ВыборкаДетальныеЗаписи);
				
				СтрокаТовары.Количество = Мин(ОстатокРасхождений, ВыборкаДетальныеЗаписи.РасхожденияСерии);
				СтрокаТовары.КоличествоУпаковок = СтрокаТовары.Количество;
				
				ОстатокРасхождений = ОстатокРасхождений - СтрокаТовары.Количество;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, Документы.ОрдерНаОтражениеИзлишковТоваров.ПараметрыУказанияСерий(ЭтотОбъект));

КонецПроцедуры

#КонецОбласти

#КонецЕсли
