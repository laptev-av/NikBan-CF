#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьЦены", Ложь);
	
	// Накладная с розничными ценами.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная (с розничными ценами)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьЦены", Истина);
	
	// Опись номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОписьНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Опись номенклатуры'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Счет-Фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// ТОРГ-12 (Товарная накладная на возврат).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ-12 (Товарная накладная на возврат)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// УПД
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'УПД (Универсальный передаточный документ)'");
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// ТТН
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = '1-Т (Товарно - транспортная накладная)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиТТН";
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст ="ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                         КАК Период,
	|	ДанныеДокумента.Ссылка                                       КАК Ссылка,
	|	ДанныеДокумента.Склад                                        КАК Склад,
	|	ДанныеДокумента.Магазин                                      КАК Магазин,
	|	ДанныеДокумента.Контрагент                                   КАК Контрагент,
	|	ДанныеДокумента.Договор                                      КАК Договор,
	|	ДанныеДокумента.АналитикаХозяйственнойОперации               КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка                                       КАК Основание,
	|	ДанныеДокумента.Магазин.ИспользоватьОрдернуюСхемуПриОтгрузке КАК ИспользоватьОрдернуюСхемуПриОтгрузке,
	|	ДанныеДокумента.ЦенаВключаетНДС                              КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.УчитыватьНДС                                 КАК УчитыватьНДС,
	|	ДанныеДокумента.Организация                                  КАК Организация,
	|	ДанныеДокумента.СуммаДокумента                               КАК СуммаДокумента,
	|   (НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы)         КАК ФормироватьДвижения
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику                            КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ИспользоватьУчетСебестоимости",           Константы.ИспользоватьУчетСебестоимости.Получить());
	Запрос.УстановитьПараметр("СебестоимостьВключаетНДС",                Константы.СебестоимостьВключаетНДС.Получить());
	
	Запрос.Текст = 
	"//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                       КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НомерГТД                 КАК НомерГТД,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	&Склад                                 КАК Склад,
	|   &АналитикаХозяйственнойОперации        КАК АналитикаХозяйственнойОперации,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|   &Контрагент                            КАК Контрагент,
	|   &Магазин                               КАК Магазин,
	|	ВЫБОР
	|		КОГДА НЕ &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЦенаВключаетНДС
	|					ТОГДА ТаблицаТовары.Сумма
	|				ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|			КОНЕЦ
	|	КОНЕЦ                                  КАК Сумма,
	|   &Ссылка                                КАК Основание
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И (НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаТоварыНаСкладах
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации    КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И &ФормироватьДвижения
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаТоварыКОтгрузке
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Основание                КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтгрузке
	|   И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаТоварыОрганизаций
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ВЫБОР 
	|		КОГДА &Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыПлатежныхАгентов.ПустаяСсылка) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ИНАЧЕ &Контрагент
	|	КОНЕЦ КАК Поставщик,
	|	&Договор                               КАК Договор,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НомерГТД                 КАК НомерГТД,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	&Организация                           КАК Организация,
	|	&Организация                           КАК ОрганизацияОтгрузки
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|   &ФормироватьДвижения
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаЗакупкиТоваров
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Магазин                  КАК Магазин,
	|	ТаблицаТовары.Контрагент               КАК Поставщик,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	-ТаблицаТовары.Количество               КАК Количество,
	|	-ТаблицаТовары.Сумма                    КАК Сумма,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|ВтТаблицаТовары КАК ТаблицаТовары
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 5 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 6 ТаблицаРасчетыСПоставщиками
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Магазин                               КАК Магазин,
	|	&Контрагент                            КАК Поставщик,
	|	&Ссылка                                КАК ДокументРасчета,
	|	&СуммаДокумента                        КАК Сумма,
	|	&СуммаДокумента                        КАК КОплате,
	|	0                                      КАК КПоступлению,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) КАК ФормаОплаты,
	|	ЛОЖЬ                                   КАК Взаимозачет
	|ГДЕ
	|	&ФормироватьДвижения
	|;
	|";
	
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаСерийныхНомеров();
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"     , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"     , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"   , Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗакупкиТоваров"      , Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров", Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками", Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"     , Результат[13].Выгрузить());
	
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует текст запроса по серийным номерам.
// Возвращаемое значение - ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса =
	"//2 
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 4
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 5
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 6
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	(НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL )
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 7
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL 
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 8
	|ВЫБРАТЬ 
	|   ТаблицаСерийныеНомера.Номенклатура  КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер, 
	|	СУММА(ТаблицаСерийныеНомера.Количество) КАК Количество,
	|   &Склад                              КАК Отправитель,
	|   &Организация                        КАК Организация,
	|	&АналитикаХозяйственнойОперации     КАК АналитикаХозяйственнойОперации,
	|   &Период                             КАК Период
	|ИЗ (ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|    ИЗ ТабОбщая КАК ТабОбщая
	|
	|	 СГРУППИРОВАТЬ ПО
	|	 ТабОбщая.Номенклатура,
	|	 ТабОбщая.СерийныйНомер)            КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтгрузке
	|   И &ФормироватьДвижения
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерийныеНомера.Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная",
			НСтр("ru = 'Накладная'") + ?(ПараметрыПечати["ВыводитьЦены"], " " + НСтр("ru = '(с розничными ценами)'"), ""), 
			ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати["ВыводитьЦены"]));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьНоменклатуры") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьНоменклатуры",
				ПараметрыПечати.Представление,
				ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
			
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ТОРГ12",
			НСтр("ru = 'ТОРГ-12 (Товарная накладная на возврат)'"), 
			ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН",
				ПараметрыПечати.Представление,
				ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует печатную форму документа.
//
Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ВыводитьЦены = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = НЕ ПустаяСтрока(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Возврат товаров поставщику'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровПоставщику_Накладная";

 	Если ВыводитьЦены Тогда
		ИндексРезультатаТовары = 2;
	Иначе
		ИндексРезультатаТовары = 1;
	КонецЕсли;

	УстанавливатьВидыЦенВАссортименте = ПолучитьФункциональнуюОпцию("УстанавливатьВидыЦенВАссортименте");
	Если УстанавливатьВидыЦенВАссортименте Тогда
		Если ВыводитьЦены Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Документ.Ссылка КАК Ссылка,
			|	Документ.Номер КАК Номер,
			|	Документ.Дата КАК Дата,
			|	Документ.Организация КАК Покупатель,
			|	Документ.Контрагент КАК Поставщик,
			|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
			|	Документ.Организация.Префикс КАК Префикс,
			|	Документ.УчитыватьНДС КАК УчитыватьНДС,
			|	Документ.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК ПоставщикПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПокупательПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизическоеЛицо) КАК ОтветственныйПредставление
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику КАК Документ
			|ГДЕ
			|	Документ.Ссылка В(&МассивОбъектов)
			|	И Документ.Проведен
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
			|	ТаблицаТовары.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ТаблицаТовары.Упаковка.ЕдиницаИзмерения
			|		ИНАЧЕ ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
			|	КОНЕЦ КАК ЕдиницаИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Ссылка.Дата КАК Дата,
			|	ТаблицаТовары.Ссылка.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка.Магазин.ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ ТаблицаТовары
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И ТаблицаТовары.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин
			|ПОМЕСТИТЬ втМагазиныСПрименениемЦен
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	&ИспользоватьПрименениеЦен
			|	И Магазины.ИспользоватьПрименениеЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин,
			|	Магазины.ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ втМагазиныСАссортиментом
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	Магазины.КонтролироватьАссортимент
			|	И НЕ(&ИспользоватьПрименениеЦен
			|				И Магазины.ИспользоватьПрименениеЦен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин,
			|	Магазины.ПравилоЦенообразования КАК ПравилоЦенообразования,
			|	Магазины.ПравилоЦенообразования.ВидЦен КАК ВидЦены
			|ПОМЕСТИТЬ втМагазиныОбычные
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	НЕ(Магазины.КонтролироватьАссортимент)
			|	И НЕ(&ИспользоватьПрименениеЦен
			|				И Магазины.ИспользоватьПрименениеЦен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МагазиныОбычные.Магазин КАК Магазин,
			|	ПравилаЦенообразованияЦеновыеГруппы.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	ПравилаЦенообразованияЦеновыеГруппы.ВидЦен КАК ВидЦены
			|ПОМЕСТИТЬ втПравилаОбычныхМагазинов
			|ИЗ
			|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилаЦенообразованияЦеновыеГруппы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОбычные КАК МагазиныОбычные
			|		ПО (МагазиныОбычные.ПравилоЦенообразования = ПравилаЦенообразованияЦеновыеГруппы.Ссылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	МАКСИМУМ(ДействующиеЦены.Период) КАК ДатаЦены,
			|	ТаблицаТовары.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ втТоварыСПериодамиДействующихЦен
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныСПрименениемЦен КАК МагазиныСПрименениемЦен
			|		ПО (МагазиныСПрименениемЦен.Магазин = ТаблицаТовары.Магазин)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
			|		ПО (ДействующиеЦены.ОбъектЦенообразования = ТаблицаТовары.Магазин)
			|			И (ДействующиеЦены.Период <= ТаблицаТовары.Дата)
			|			И (ДействующиеЦены.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ДействующиеЦены.Характеристика = ТаблицаТовары.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыСПериодамиДействующихЦен.Номенклатура КАК Номенклатура,
			|	ТоварыСПериодамиДействующихЦен.Характеристика КАК Характеристика,
			|	ТоварыСПериодамиДействующихЦен.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦены.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ДействующиеЦены.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ДействующиеЦены.Цена / ДействующиеЦены.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныДействующиеПоДокументам
			|ИЗ
			|	втТоварыСПериодамиДействующихЦен КАК ТоварыСПериодамиДействующихЦен
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
			|		ПО (ДействующиеЦены.ОбъектЦенообразования = ТоварыСПериодамиДействующихЦен.Магазин)
			|			И (ДействующиеЦены.Период = ТоварыСПериодамиДействующихЦен.ДатаЦены)
			|			И (ДействующиеЦены.Номенклатура = ТоварыСПериодамиДействующихЦен.Номенклатура)
			|			И (ДействующиеЦены.Характеристика = ТоварыСПериодамиДействующихЦен.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.ФорматМагазина КАК ФорматМагазина,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата,
			|	МАКСИМУМ(Ассортимент.Период) КАК ДатаАссортимента
			|ПОМЕСТИТЬ втТоварыСПериодамиАссортимента
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныСАссортиментом КАК МагазиныСАссортиментом
			|		ПО (МагазиныСАссортиментом.Магазин = ТаблицаТовары.Магазин)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
			|		ПО (Ассортимент.ОбъектПланирования = ТаблицаТовары.ФорматМагазина)
			|			И (Ассортимент.Период <= КОНЕЦПЕРИОДА(ТаблицаТовары.Дата, ДЕНЬ))
			|			И (Ассортимент.Номенклатура = ТаблицаТовары.Номенклатура)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.ФорматМагазина,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка,
			|	ТаблицаТовары.Дата
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыСПериодамиАссортимента.Номенклатура КАК Номенклатура,
			|	ТоварыСПериодамиАссортимента.Характеристика КАК Характеристика,
			|	ТоварыСПериодамиАссортимента.Ссылка КАК Ссылка,
			|	ТоварыСПериодамиАссортимента.ФорматМагазина КАК ФорматМагазина,
			|	ТоварыСПериодамиАссортимента.Магазин КАК Магазин,
			|	ТоварыСПериодамиАссортимента.Дата КАК Дата,
			|	Ассортимент.ВидЦен КАК ВидЦен
			|ПОМЕСТИТЬ втВидыЦенАссортиментаПоДокументам
			|ИЗ
			|	втТоварыСПериодамиАссортимента КАК ТоварыСПериодамиАссортимента
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
			|		ПО (Ассортимент.ОбъектПланирования = ТоварыСПериодамиАссортимента.ФорматМагазина)
			|			И (Ассортимент.Период = ТоварыСПериодамиАссортимента.ДатаАссортимента)
			|			И (Ассортимент.Номенклатура = ТоварыСПериодамиАссортимента.Номенклатура)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЦенАссортиментаПоДокументам.Номенклатура КАК Номенклатура,
			|	ВидыЦенАссортиментаПоДокументам.Характеристика КАК Характеристика,
			|	ВидыЦенАссортиментаПоДокументам.Ссылка КАК Ссылка,
			|	ВидыЦенАссортиментаПоДокументам.Магазин КАК Магазин,
			|	ВидыЦенАссортиментаПоДокументам.ВидЦен КАК ВидЦен,
			|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ДатаЦены
			|ПОМЕСТИТЬ втПериодыЦенПоАссортименту
			|ИЗ
			|	втВидыЦенАссортиментаПоДокументам КАК ВидыЦенАссортиментаПоДокументам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период <= ВидыЦенАссортиментаПоДокументам.Дата)
			|			И (ЦеныНоменклатуры.ВидЦены = ВидыЦенАссортиментаПоДокументам.ВидЦен)
			|			И (ЦеныНоменклатуры.Номенклатура = ВидыЦенАссортиментаПоДокументам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ВидыЦенАссортиментаПоДокументам.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВидыЦенАссортиментаПоДокументам.Номенклатура,
			|	ВидыЦенАссортиментаПоДокументам.Характеристика,
			|	ВидыЦенАссортиментаПоДокументам.Ссылка,
			|	ВидыЦенАссортиментаПоДокументам.Магазин,
			|	ВидыЦенАссортиментаПоДокументам.ВидЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПериодыЦенПоАссортименту.Номенклатура КАК Номенклатура,
			|	ПериодыЦенПоАссортименту.Характеристика КАК Характеристика,
			|	ПериодыЦенПоАссортименту.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЦеныНоменклатуры.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатуры.Цена / ЦеныНоменклатуры.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныАссортиментныеПоДокументам
			|ИЗ
			|	втПериодыЦенПоАссортименту КАК ПериодыЦенПоАссортименту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период = ПериодыЦенПоАссортименту.ДатаЦены)
			|			И (ЦеныНоменклатуры.ВидЦены = ПериодыЦенПоАссортименту.ВидЦен)
			|			И (ЦеныНоменклатуры.Номенклатура = ПериодыЦенПоАссортименту.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ПериодыЦенПоАссортименту.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата,
			|	ЕСТЬNULL(ПравилаОбычныхМагазинов.ВидЦены, МагазиныОбычные.ВидЦены) КАК ВидЦены
			|ПОМЕСТИТЬ втВидыЦенПоПравилам
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОбычные КАК МагазиныОбычные
			|		ПО (МагазиныОбычные.Магазин = ТаблицаТовары.Магазин)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втПравилаОбычныхМагазинов КАК ПравилаОбычныхМагазинов
			|		ПО (ПравилаОбычныхМагазинов.Магазин = ТаблицаТовары.Магазин)
			|			И (ПравилаОбычныхМагазинов.ЦеноваяГруппа = ТаблицаТовары.ЦеноваяГруппа)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка,
			|	ТаблицаТовары.Дата,
			|	ЕСТЬNULL(ПравилаОбычныхМагазинов.ВидЦены, МагазиныОбычные.ВидЦены)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЦенПоПравилам.Номенклатура КАК Номенклатура,
			|	ВидыЦенПоПравилам.Характеристика КАК Характеристика,
			|	ВидыЦенПоПравилам.Ссылка КАК Ссылка,
			|	ВидыЦенПоПравилам.Магазин КАК Магазин,
			|	ВидыЦенПоПравилам.ВидЦены КАК ВидЦены,
			|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ДатаЦены
			|ПОМЕСТИТЬ втПериодыЦенПоПравилам
			|ИЗ
			|	втВидыЦенПоПравилам КАК ВидыЦенПоПравилам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период <= ВидыЦенПоПравилам.Дата)
			|			И (ЦеныНоменклатуры.ВидЦены = ВидыЦенПоПравилам.ВидЦены)
			|			И (ЦеныНоменклатуры.Номенклатура = ВидыЦенПоПравилам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ВидыЦенПоПравилам.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВидыЦенПоПравилам.Номенклатура,
			|	ВидыЦенПоПравилам.Характеристика,
			|	ВидыЦенПоПравилам.Ссылка,
			|	ВидыЦенПоПравилам.Магазин,
			|	ВидыЦенПоПравилам.ВидЦены
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПериодыЦенПоПравилам.Номенклатура КАК Номенклатура,
			|	ПериодыЦенПоПравилам.Характеристика КАК Характеристика,
			|	ПериодыЦенПоПравилам.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЦеныНоменклатуры.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатуры.Цена / ЦеныНоменклатуры.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныПравильныеПоДокументам
			|ИЗ
			|	втПериодыЦенПоПравилам КАК ПериодыЦенПоПравилам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период = ПериодыЦенПоПравилам.ДатаЦены)
			|			И (ЦеныНоменклатуры.ВидЦены = ПериодыЦенПоПравилам.ВидЦены)
			|			И (ЦеныНоменклатуры.Номенклатура = ПериодыЦенПоПравилам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ПериодыЦенПоПравилам.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.НоменклатураПредставление КАК НоменклатураПредставление,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.КолонкаКодов КАК КолонкаКодов,", "") + "
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.БазоваяЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.ЕдиницаИзмеренияУпаковки) КАК ПредставлениеЕдиницыИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
			|	ВЫБОР
			|		КОГДА НЕ ЦеныДействующиеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныДействующиеПоДокументам.Цена
			|		КОГДА НЕ ЦеныАссортиментныеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныАссортиментныеПоДокументам.Цена
			|		ИНАЧЕ ЕСТЬNULL(ЦеныПравильныеПоДокументам.Цена, 0)
			|	КОНЕЦ КАК ЦенаРозничная,
			|	ВЫБОР
			|		КОГДА НЕ ЦеныДействующиеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныДействующиеПоДокументам.Цена * ТаблицаТовары.Количество
			|		КОГДА НЕ ЦеныАссортиментныеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныАссортиментныеПоДокументам.Цена * ТаблицаТовары.Количество
			|		ИНАЧЕ ЕСТЬNULL(ЦеныПравильныеПоДокументам.Цена, 0) * ТаблицаТовары.Количество
			|	КОНЕЦ КАК СуммаРозничная,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныДействующиеПоДокументам КАК ЦеныДействующиеПоДокументам
			|		ПО (ЦеныДействующиеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныДействующиеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныДействующиеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныАссортиментныеПоДокументам КАК ЦеныАссортиментныеПоДокументам
			|		ПО (ЦеныАссортиментныеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныАссортиментныеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныАссортиментныеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныПравильныеПоДокументам КАК ЦеныПравильныеПоДокументам
			|		ПО (ЦеныПравильныеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныПравильныеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныПравильныеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Ссылка,
			|	НомерСтроки
			|ИТОГИ
			|	МАКСИМУМ(Дата)
			|ПО
			|	Ссылка");
			ИндексРезультатаТовары = 15;
			Запрос.УстановитьПараметр("ИспользоватьПрименениеЦен", ПолучитьФункциональнуюОпцию("ИспользоватьПрименениеЦен"));
		Иначе
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Документ.Ссылка КАК Ссылка,
			|	Документ.Номер КАК Номер,
			|	Документ.Дата КАК Дата,
			|	Документ.Организация КАК Покупатель,
			|	Документ.Контрагент КАК Поставщик,
			|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
			|	Документ.Организация.Префикс КАК Префикс,
			|	Документ.УчитыватьНДС КАК УчитыватьНДС,
			|	Документ.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК ПоставщикПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПокупательПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизическоеЛицо) КАК ОтветственныйПредставление
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику КАК Документ
			|ГДЕ
			|	Документ.Ссылка В(&МассивОбъектов)
			|	И Документ.Проведен
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Ссылка.Дата КАК Дата
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И ТаблицаТовары.Ссылка.Проведен
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Ссылка,
			|	НомерСтроки
			|ИТОГИ
			|	МАКСИМУМ(Дата)
			|ПО
			|	Ссылка");
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                               КАК Ссылка,
		|	Документ.Номер                                КАК Номер,
		|	Документ.Дата                                 КАК Дата,
		|	Документ.Организация                          КАК Покупатель,
		|	Документ.Контрагент                           КАК Поставщик,
		|	Документ.Ответственный.ФизическоеЛицо         КАК Ответственный,
		|	Документ.Организация.Префикс                  КАК Префикс,
		|	Документ.УчитыватьНДС                         КАК УчитыватьНДС,
		|	Документ.ЦенаВключаетНДС                      КАК ЦенаВключаетНДС,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент)            КАК ПоставщикПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ПокупательПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизическоеЛицо) КАК ОтветственныйПредставление
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику КАК Документ
		|ГДЕ
		|	Документ.Ссылка В(&МассивОбъектов)
		|	И Документ.Проведен
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|" + ?(ВыводитьЦены, "
		|ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Ссылка КАК СсылкаДокумента,
		|	ТаблицаТовары.Ссылка.Дата КАК Период,
		|	ТаблицаТовары.Ссылка.Магазин КАК Магазин,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|   ТаблицаТовары.Упаковка КАК Упаковка,
		|   Магазины.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|   Магазины.ПравилоЦенообразования КАК ПравилоЦенообразования,
		|   СправочникНоменклатура.ЦеноваяГруппа КАК ЦеноваяГруппа	
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|   Справочник.Магазины КАК Магазины
		|   ПО ТаблицаТовары.Ссылка.Магазин = Магазины.Ссылка
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|   Справочник.Номенклатура КАК СправочникНоменклатура
		|   ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
		|	И ТаблицаТовары.Ссылка.Проведен
		|;
		|
		|","") + "
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
		|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТовары.Цена КАК Цена,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТовары.Ссылка КАК Ссылка " + ?(ВыводитьЦены, ",
		|	ЕСТЬNULL(РозничныеЦены.Цена, 0) КАК ЦенаРозничная,
		|	ТаблицаТовары.Количество * ЕСТЬNULL(РозничныеЦены.Цена, 0) КАК СуммаРозничная
		|","") + "
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
		|" + ?(ВыводитьЦены, "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ПодЗапрос.Период,
		|	ПодЗапрос.Номенклатура,
		|	ПодЗапрос.Характеристика,
		|	ПодЗапрос.Магазин,
		|	ПодЗапрос.Цена
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыПериодыЦен.Период КАК Период,
		|		ТоварыПериодыЦен.Номенклатура КАК Номенклатура,
		|		ТоварыПериодыЦен.Характеристика КАК Характеристика,
		|		ТоварыПериодыЦен.Магазин КАК Магазин,
		|		ТоварыПериодыЦен.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|		ТоварыПериодыЦен.ПериодЦены КАК ПериодЦены,
		|       ВЫБОР
		|			КОГДА ТоварыПериодыЦен.ИспользоватьПрименениеЦен
		|				ТОГДА ЕСТЬNULL(ДействующиеЦены.Цена, 0) / ЕСТЬNULL(ДействующиеЦены.Упаковка.Коэффициент, 1)
		|			ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 1)

		|		КОНЕЦ КАК Цена
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Товары.Период КАК Период,
		|			Товары.Номенклатура КАК Номенклатура,
		|			Товары.Характеристика КАК Характеристика,
		|			Товары.Магазин КАК Магазин,
		|			Товары.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|			МАКСИМУМ(ВЫБОР
		|					КОГДА Товары.ИспользоватьПрименениеЦен = ИСТИНА
		|						ТОГДА ДействующиеЦены.Период
		|					ИНАЧЕ ЦеныНоменклатуры.Период
		|				КОНЕЦ) КАК ПериодЦены,
		|			Товары.ПравилоЦенообразования КАК ПравилоЦенообразования,
		|			Товары.ЦеноваяГруппа КАК ЦеноваяГруппа
		|		ИЗ
		|			ВТТовары КАК Товары
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования КАК ПравилоЦенообразованияШапка
		|				ПО (ПравилоЦенообразованияШапка.Ссылка = Товары.ПравилоЦенообразования)
		|					И ((НЕ Товары.ИспользоватьПрименениеЦен))
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилоЦенообразованияЦеновыеГруппы
		|				ПО Товары.ПравилоЦенообразования = ПравилоЦенообразованияЦеновыеГруппы.Ссылка
		|					И Товары.ЦеноваяГруппа = ПравилоЦенообразованияЦеновыеГруппы.ЦеноваяГруппа
		|					И ((НЕ Товары.ИспользоватьПрименениеЦен))
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
		|				ПО Товары.Номенклатура = ДействующиеЦены.Номенклатура
		|					И Товары.Характеристика = ДействующиеЦены.Характеристика
		|					И Товары.Магазин = ДействующиеЦены.ОбъектЦенообразования
		|					И (Товары.ИспользоватьПрименениеЦен)
		|					И (ДействующиеЦены.Период <= Товары.Период)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|				ПО Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|					И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
		|					И (ЦеныНоменклатуры.Период <= Товары.Период)
		|					И ((НЕ Товары.ИспользоватьПрименениеЦен))
		|					И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|						КОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ НЕ NULL 
		|								И ПравилоЦенообразованияЦеновыеГруппы.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен
		|						КОГДА (ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ NULL 
		|								ИЛИ ПравилоЦенообразованияЦеновыеГруппы.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|								И ПравилоЦенообразованияШапка.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ПравилоЦенообразованияШапка.ВидЦен
		|					КОНЕЦ)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Товары.Период,
		|			Товары.Номенклатура,
		|			Товары.Характеристика,
		|			Товары.Магазин,
		|			Товары.ИспользоватьПрименениеЦен,
		|			Товары.ПравилоЦенообразования,
		|			Товары.ЦеноваяГруппа) КАК ТоварыПериодыЦен
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования КАК ПравилоЦенообразованияШапка
		|			ПО (ПравилоЦенообразованияШапка.Ссылка = ТоварыПериодыЦен.ПравилоЦенообразования)
		|				И ((НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен))
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилоЦенообразованияЦеновыеГруппы
		|			ПО ТоварыПериодыЦен.ПравилоЦенообразования = ПравилоЦенообразованияЦеновыеГруппы.Ссылка
		|				И ТоварыПериодыЦен.ЦеноваяГруппа = ПравилоЦенообразованияЦеновыеГруппы.ЦеноваяГруппа
		|				И ((НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен))
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
		|			ПО ТоварыПериодыЦен.Номенклатура = ДействующиеЦены.Номенклатура
		|				И ТоварыПериодыЦен.Характеристика = ДействующиеЦены.Характеристика
		|				И ТоварыПериодыЦен.Магазин = ДействующиеЦены.ОбъектЦенообразования
		|				И (ТоварыПериодыЦен.ИспользоватьПрименениеЦен)
		|				И (ДействующиеЦены.Период = ТоварыПериодыЦен.ПериодЦены)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|			ПО ТоварыПериодыЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|				И ТоварыПериодыЦен.Характеристика = ЦеныНоменклатуры.Характеристика
		|				И (ЦеныНоменклатуры.Период = ТоварыПериодыЦен.ПериодЦены)
		|				И ((НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен))
		|				И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|					КОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ НЕ NULL 
		|							И ПравилоЦенообразованияЦеновыеГруппы.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						ТОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен
		|					КОГДА (ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ NULL 
		|							ИЛИ ПравилоЦенообразованияЦеновыеГруппы.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|							И ПравилоЦенообразованияШапка.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						ТОГДА ПравилоЦенообразованияШапка.ВидЦен
		|				КОНЕЦ)) КАК ПодЗапрос) КАК РозничныеЦены
		|		ПО (РозничныеЦены.Магазин = ТаблицаТовары.Ссылка.Магазин)
		|			И (РозничныеЦены.Характеристика = ТаблицаТовары.Характеристика)
		|			И (РозничныеЦены.Номенклатура = ТаблицаТовары.Номенклатура)
		|            И (РозничныеЦены.Период = ТаблицаТовары.Ссылка.Дата)
		|","") + "
		|ГДЕ
		|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
		|	И ТаблицаТовары.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратТоваровПоставщику.ПФ_MXL_ВозвратТоваровПоставщику");

	ОкончаниеИмениОбласти = ?(ВыводитьЦены,"РозничныеЦены","");
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок|Основная" + ОкончаниеИмениОбласти);
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка|Основная" + ОкончаниеИмениОбласти);
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки;
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки"  + ОкончаниеИмениОбласти);
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки" + ОкончаниеИмениОбласти);
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки" + ОкончаниеИмениОбласти);
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи|Основная" + ОкончаниеИмениОбласти);
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого|Основная" + ОкончаниеИмениОбласти);
	ОбластьИтогоНДС       = Макет.ПолучитьОбласть("ИтогоНДС|Основная" + ОкончаниеИмениОбласти);
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью|Основная" + ОкончаниеИмениОбласти);
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	
	ВыборкаПоТабличнымЧастям = Результаты[ИндексРезультатаТовары].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		ВсегоНаименований  = 0;
		Итого              = 0;
		ИтогоНДС           = 0;
		ИтогоРозничныеЦены = 0;
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
			ИтогоНДС          = ИтогоНДС + ВыборкаПоСтрокамТЧ.СуммаНДС;
			
			Если ВыводитьЦены Тогда
				
				ИтогоРозничныеЦены = ИтогоРозничныеЦены  +ВыборкаПоСтрокамТЧ.СуммаРозничная;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		// ИТОГО
		ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(Итого));
		ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
		
		Если ВыводитьЦены Тогда
			
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(ИтогоРозничныеЦены));
			ОбластьИтого.Параметры.ИтогоРозничныеЦены = ТекстИтоговойСтроки;
			
		КонецЕсли;
		
		ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(ИтогоНДС));
		ОбластьИтогоНДС.Параметры.ИтогоНДС = ТекстИтоговойСтроки;
		ОбластьИтогоНДС.Параметры.НДС = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
		
		// СУММА ПРОПИСЬЮ
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%'");
		СуммаКПрописи = Итого + ?(ВыборкаПоДокументам.ЦенаВключаетНДС, 0, ИтогоНДС);
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(СуммаКПрописи));
				
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(СуммаКПрописи);
			
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
				
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Функция формирует печатную форму документа.
//
Функция ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументКПечати.Ссылка                                                 КАК Ссылка,
		|	ДокументКПечати.Номер                                                  КАК Номер,
		|	ДокументКПечати.Дата                                                   КАК Дата,
		|	ДокументКПечати.Контрагент                                             КАК Контрагент,
		|	ДокументКПечати.Организация                                            КАК Организация,
		|	ДокументКПечати.Организация                                            КАК Руководители,
		|	ДокументКПечати.Организация.Префикс                                    КАК Префикс,
		|	ДокументКПечати.Организация                                            КАК Грузоотправитель,
		|	ДокументКПечати.Контрагент                                             КАК Грузополучатель,
		|	ДокументКПечати.Организация                                            КАК Поставщик,
		|	ДокументКПечати.Контрагент                                             КАК Покупатель,
		|	ДокументКПечати.Контрагент                                             КАК Плательщик,
		|	ДокументКПечати.Ответственный.ФизическоеЛицо                           КАК ОтветственноеЛицо,
		|	ДокументКПечати.ЦенаВключаетНДС                                        КАК ЦенаВключаетНДС,
		|	ДокументКПечати.УчитыватьНДС                                           КАК УчитыватьНДС,
		|	ДокументКПечати.БанковскийСчетКонтрагента                              КАК БанковскийСчетКонтрагента,
		|	ДокументКПечати.БанковскийСчетОрганизации                              КАК БанковскийСчетОрганизации
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику КАК ДокументКПечати
		|
		|ГДЕ
		|	ДокументКПечати.Ссылка В (&МассивДокументов)
		|	И ДокументКПечати.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;		
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК БазоваяЕдиницаНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК БазоваяЕдиницаКодПоОКЕИ,
		|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление                         КАК ВидУпаковки,
		|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент              КАК КоличествоВОдномМесте,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0)                                КАК КоличествоМест,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
		|	ВложенныйЗапрос.МассаБрутто                                                КАК МассаБрутто,
		|	ЛОЖЬ                                                                       КАК ЭтоВозвратнаяТара
		|ИЗ (
		|	ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.Номенклатура КАК Номенклатура,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК Коэффициент,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмерения,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК КоэффициентМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмеренияМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка.Вес ЕСТЬ NULL ТОГДА
		|			Товары.Количество * Товары.Номенклатура.Вес
		|		ИНАЧЕ
		|			Товары.КоличествоУпаковок * Товары.Упаковка.Вес
		|		КОНЕЦ КАК МассаБрутто,
		|
		|		Товары.Характеристика     КАК Характеристика,
		|		Товары.СтавкаНДС          КАК СтавкаНДС,
		|		ВЫБОР
		|			КОГДА
		|				Товары.КоличествоУпаковок = 0
		|			ТОГДА
		|				Товары.Цена
		|			ИНАЧЕ
		|				Товары.Сумма / Товары.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Товары.КоличествоУпаковок КАК Количество,
		|		Товары.КоличествоУпаковок КАК КоличествоМест,
		|		Товары.Сумма              КАК Сумма,
		|		Товары.СуммаНДС           КАК СуммаНДС,
		|		Товары.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ВозвратТоваровПоставщику.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка В (&МассивДокументов)
		|		И Товары.Ссылка.Проведен
		|		И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровПоставщику_ТОРГ12";
		
		ЕдиницаИзмеренияВеса           = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса");
		
		ТабличныйДокумент.ПолеСлева = 5;
		ТабличныйДокумент.ПолеСправа = 5;
		ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
		ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ДанныеПечати = МассивРезультатов[0].Выбрать();
		ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ12");
		
		ПервыйДокумент = Истина;
		Пока ДанныеПечати.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетОрганизации);
			СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетКонтрагента);
			СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетКонтрагента);
			СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетОрганизации);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
			ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
			ОбластьШапка.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
			
			Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
				
				ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
				"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
				
			Иначе
				
				ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
				"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
				
			КонецЕсли;
			
			ОбластьШапка.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			ОбластьШапка.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			ОбластьШапка.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			// Выводим коды
			ОбластьШапка.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
			ОбластьШапка.Параметры.ВидДеятельностиПоОКДП      = "";
			ОбластьШапка.Параметры.ГрузополучательПоОКПО      = СведенияОПоставщике.КодПоОКПО;
			ОбластьШапка.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
			ОбластьШапка.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
			ОбластьШапка.Параметры.ОснованиеНомер             = "";
			ОбластьШапка.Параметры.ОснованиеДата              = "";
			ОбластьШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
			ОбластьШапка.Параметры.ТранспортнаяНакладнаяДата  = "";
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			НомерСтраницы = 1;
			
			ИтоговыеСуммы = Новый Структура;
			
			// Инициализация итогов по странице.
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
			
			// Инициализация итогов по документу.
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМест", 0);
			ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
			ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
			ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
			
			ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
			ИтоговыеСуммы.Вставить("СуммаПрописью", "");
			
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("Номер", 0);
			ДанныеСтроки.Вставить("Мест", 0);
			ДанныеСтроки.Вставить("Количество", 0);
			ДанныеСтроки.Вставить("Цена", 0);
			ДанныеСтроки.Вставить("СуммаБезНДС", 0);
			ДанныеСтроки.Вставить("СуммаНДС", 0);
			ДанныеСтроки.Вставить("СуммаСНДС", 0);
			ДанныеСтроки.Вставить("МассаБрутто", 0);
			ДанныеСтроки.Вставить("МассаНетто", 0);
			
			
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
			ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			КоличествоСтрок = ВыборкаПоДокументам.Количество();
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				
				ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
	
				ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
				ОбластьСтрока.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика);
				
				ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
				ДанныеСтроки.Количество  = СтрокаТовары.Количество;
				
				Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
					Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
						ДанныеСтроки.МассаБрутто = 0;
					Иначе
						ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
				ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
				ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
				
				Если ДанныеПечати.ЦенаВключаетНДС Тогда
					ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
				Иначе
					ДанныеСтроки.Цена = СтрокаТовары.Цена;
				КонецЕсли;
				
				ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
				
				Если ДанныеСтроки.Номер = 1 Тогда // первая строка
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьШапка);
					МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
					МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
					
					Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьВсего);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
						ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
						
						ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
						ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
						ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
						ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
						ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
						ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
						ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				// Увеличим итоги по странице.
				ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
				ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
				ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
				ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
				ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
				ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
				
				// Увеличим итоги по документу.
				ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
				ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
				ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
				ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
				ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
				ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
				
			КонецЦикла;
			
			// Выводим итоги по последней странице.
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом.
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			
			ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
			ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
						
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДЛФ=ДД");
			ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
			ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
			ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
			ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
			ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
			ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
						
			Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
						
			ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
			ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
			ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
			СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
			ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
			
			Если ИтоговыеСуммы.ИтогоМест > 0 Тогда
				
				ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМест, ,",,,,,,,,0");
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
				
				ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
			ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
		
		Возврат ТабличныйДокумент;
	
	
КонецФункции

Функция ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Возврат.Ссылка КАК Ссылка,
	|	Возврат.Номер КАК Номер,
	|	Возврат.Дата КАК Дата,
	|	Возврат.Организация КАК Организация,
	|	Возврат.Организация КАК Руководители,
	|	Возврат.Контрагент КАК Грузополучатель,
	|	Возврат.Организация КАК Грузоотправитель,
	|	Возврат.Контрагент КАК Контрагент,
	|	Возврат.Организация.Префикс КАК Префикс,
	|	&СрокДоставки КАК СрокДоставки,
	|	&МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	&МаркаПрицепа КАК МаркаПрицепа,
	|	&ГосНомерАвтомобиля КАК ГосНомерАвтомобиля,
	|	&ГосНомерПрицепа КАК ГосНомерПрицепа,
	|	&ПунктПогрузки КАК ПунктПогрузки,
	|	&ПунктРазгрузки КАК ПунктРазгрузки,
	|	&Водитель КАК Водитель,
	|	&Перевозчик КАК ПредставлениеПеревозчика,
	|	&Заказчик КАК ПредставлениеЗаказчика,
	|	&ВидПеревозки КАК ВидПеревозки,
	|	&ЛицензионнаяКарточка КАК ЛицензионнаяКарточка,
	|	&ВодительскоеУдостоверение КАК ВодительскоеУдостоверение,
	|	Возврат.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	Возврат.УчитыватьНДС КАК УчитыватьНДС,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	НаименованияТоваров.Количество КАК КоличествоНаименований
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Возврат
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество,
	|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ 
	|				Товары.Ссылка КАК Ссылка,
	|				Товары.Номенклатура КАК Номенклатура,
	|				Товары.Характеристика КАК Характеристика
	|			ИЗ
	|				Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|			ГДЕ
	|				Товары.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокТоваров.Ссылка) КАК НаименованияТоваров
	|		ПО Возврат.Ссылка = НаименованияТоваров.Ссылка
	|ГДЕ
	|	Возврат.Ссылка В(&МассивДокументов)
	|	И Возврат.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ Товары.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	Товары.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА Товары.Количество * Товары.Номенклатура.Вес
	|		ИНАЧЕ Товары.КоличествоУпаковок * Товары.Упаковка.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	Товары.Количество * Товары.Номенклатура.Вес КАК МассаНетто,
	|	Товары.КоличествоУпаковок КАК КоличествоМест,
	|	Товары.Сумма КАК Сумма,
	|	Товары.СуммаНДС КАК СуммаНДС,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура.Весовой КАК Весовой
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Проведен
	|	И НЕ (Товары.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
		
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("СрокДоставки", ПараметрыПечати.СрокДоставки);
	Запрос.УстановитьПараметр("МаркаАвтомобиля", ПараметрыПечати.МаркаАвтомобиля);
	Запрос.УстановитьПараметр("МаркаПрицепа", ПараметрыПечати.МаркаПрицепа);
	Запрос.УстановитьПараметр("ГосНомерАвтомобиля", ПараметрыПечати.ГосНомерАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерПрицепа", ПараметрыПечати.ГосНомерПрицепа);
	Запрос.УстановитьПараметр("ПунктПогрузки", ПараметрыПечати.ПунктПогрузки);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПараметрыПечати.ПунктРазгрузки);
	Запрос.УстановитьПараметр("Водитель", ПараметрыПечати.Водитель);
	Запрос.УстановитьПараметр("Перевозчик", ПараметрыПечати.Перевозчик);
	Запрос.УстановитьПараметр("Заказчик", ПараметрыПечати.Заказчик);
	Запрос.УстановитьПараметр("ВидПеревозки", ПараметрыПечати.ВидПеревозки);
	Запрос.УстановитьПараметр("ЛицензионнаяКарточка", ПараметрыПечати.ЛицензионнаяКарточка);
	Запрос.УстановитьПараметр("ВодительскоеУдостоверение", ПараметрыПечати.ВодительскоеУдостоверение);
    	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровПоставщику_ТТН";
	
	ФормированиеПечатныхФормСервер.ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, Запрос, ОбъектыПечати);
		
	Возврат ТабличныйДокумент;
    	
КонецФункции

// Функция получает данные для печатной формы Счета-фактуры.
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.Склад КАК Склад,
	|	ДанныеДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ИспользоватьУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	ИспользоватьКомиссионнуюТорговлю = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");

	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц,
										ИспользоватьУчетИмпортныхТоваров,
										ИспользоватьКомиссионнуюТорговлю);
										
	ПродажиСервер.ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ЕСТЬNULL(СчетаФактуры.Номер, НЕОПРЕДЕЛЕНО) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, НЕОПРЕДЕЛЕНО) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ЕСТЬNULL(СчетаФактуры.Валюта, НЕОПРЕДЕЛЕНО) КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Контрагент КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	"""" КАК АдресДоставки,
	|	ЛОЖЬ КАК ТолькоУслуги
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ФильтрПоДокументу
	|		ПО ДанныеДокумента.Ссылка = ФильтрПоДокументу.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО ДанныеДокумента.Ссылка = СчетаФактуры.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Представление
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,";
	Если ИспользоватьУчетИмпортныхТоваров
		Или ИспользоватьКомиссионнуюТорговлю Тогда
		ТекстЗапроса = ТекстЗапроса+"
		|	ТаблицаДокумента.ПредставлениеГТД КАК НомерГТД,
		|	ТаблицаДокумента.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
		|	ТаблицаДокумента.ПредставлениеСтраны КАК СтранаПроисхождения,";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса+"
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для печатной формы УПД.
//
Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Организация          КАК Организация,
	|	ДанныеДокументов.Склад                КАК Склад,
	|	ДанныеДокументов.ЦенаВключаетНДС      КАК ЦенаВключаетНДС
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	ПродажиСервер.ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.Номер ЕСТЬ NULL 
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусУПД,
	|	ДанныеДокумента.УчитыватьНДС КАК УчитыватьНДС,
	|	ЕСТЬNULL(СчетаФактуры.Номер, ДанныеДокумента.Номер) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, ДанныеДокумента.Дата) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ЕСТЬNULL(СчетаФактуры.Валюта, НЕОПРЕДЕЛЕНО) КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Контрагент КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ДанныеДокумента.ДокументОснование КАК Основание,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЛицо,
	|	"""" КАК Кладовщик
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО ДанныеДокумента.Ссылка = СчетаФактуры.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Представление
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу
//	                                                    ТаблицаДанныхДокументов с полями: Ссылка.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ИспользоватьУчетИмпортныхТоваров = Ложь, ИспользоватьКомиссионнуюТорговлю = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Количество,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковок,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.Сумма,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДС,
	|	ДанныеДокументов.ЦенаВключаетНДС,
	|	ВЫБОР КОГДА ТаблицаТоваров.НомерГТД.СтранаВвозаНеРФ ТОГДА """" ИНАЧЕ ТаблицаТоваров.НомерГТД.РегистрационныйНомерДекларации КОНЕЦ КАК ПредставлениеГТД,
	|	ВЫБОР КОГДА ТаблицаТоваров.НомерГТД.СтранаВвозаНеРФ ТОГДА """" ИНАЧЕ ТаблицаТоваров.НомерГТД.СтранаПроисхождения.Код КОНЕЦ КАК СтранаПроисхожденияКод,
	|	ВЫБОР КОГДА ТаблицаТоваров.НомерГТД.СтранаВвозаНеРФ ТОГДА """" ИНАЧЕ ТаблицаТоваров.НомерГТД.СтранаПроисхождения.Наименование КОНЕЦ КАК ПредставлениеСтраны,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТовар
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка";

	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Организация КАК Покупатель,
	|	ТаблицаДокументов.Контрагент КАК Поставщик,
	|	ТаблицаДокументов.Магазин,
	|	ТаблицаДокументов.Склад,
	|	ТаблицаДокументов.Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ИмяРеквизита1", "Поставщик");
	СтруктураПечати.Вставить("ИмяРеквизита2", "Покупатель");
	СтруктураПечати.Вставить("ИмяРеквизита3", "Магазин");
	СтруктураПечати.Вставить("ИмяРеквизита4", "Склад");
	СтруктураПечати.Вставить("КоличествоРеквизитов", 4);
	СтруктураПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	СтруктураПечати.Вставить("КолонкаКодов", КолонкаКодов);
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПечати.Вставить("Документ", Выборка.Ссылка);
		СтруктураПечати.Вставить("Реквизит1", Выборка.Поставщик);
		СтруктураПечати.Вставить("Реквизит2", Выборка.Покупатель);
		СтруктураПечати.Вставить("Реквизит3", Выборка.Магазин);
		СтруктураПечати.Вставить("Реквизит4", Выборка.Склад);
		
		УправлениеПечатьюРТ.ПечатьОписиНоменклатуры(ТабличныйДокумент, ОбъектыПечати, СтруктураПечати, ПервыйДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли

