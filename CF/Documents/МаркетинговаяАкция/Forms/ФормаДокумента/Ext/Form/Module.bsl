&НаКлиенте
Перем мМагазинПриНачалеРедактирования;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(
		Объект,
		КартинкаСостоянияДокумента,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		РазрешеноПроведение);
	
	НастроитьФормуПоДополнительнымПравам();
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
		
	ПриСозданииЧтенииНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Элементы.СтраницаОписание.Картинка = ОбщегоНазначенияРТ.ПолучитьКартинкуКомментария(Объект.Описание);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
		
	// &ЗамерПроизводительности	
	ОценкаПроизводительностиРТКлиент.ЗакончитьЗамер(ПараметрыЗаписи.Замер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// &ЗамерПроизводительности 
	Замер = ОценкаПроизводительностиРТКлиент.НачатьЗамер(Ложь, 
	                                            "Документ.МаркетинговаяАкция.ФормаДокумента.Запись",
                                                            Ложь);
	
	ПараметрыЗаписи.Вставить("Замер", Замер);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПараметрыПроведенияАкцииПриИзменении(Элемент)
	
	ПредыдущееСостояниеРасписания = Объект.ДляВсехМагазиновОдноРасписаниеСкидок;
	Если ПараметрыПроведенияАкции = "ИндивидуальноеРасписание" Тогда
		Объект.ДляВсехМагазинов = Ложь;
		Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Ложь;
	ИначеЕсли ПараметрыПроведенияАкции = "ОдноДляВсех" Тогда
		Объект.ДляВсехМагазинов = Истина;
		Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Истина;
		Объект.Магазины.Очистить();
		УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"))
	ИначеЕсли ПараметрыПроведенияАкции = "ОдноДляВыбранных" Тогда
		Объект.ДляВсехМагазинов = Ложь;
		Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Истина;
	КонецЕсли;
	Если ПредыдущееСостояниеРасписания <> Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		Объект.СкидкиНаценки.Очистить();
	КонецЕсли;
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляОписания", 0.5, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМагазины

&НаКлиенте
Процедура МагазиныПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
	Если ТекущаяСтрокаМагазины = Неопределено ИЛИ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"));
	Иначе
		УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МагазиныПередУдалением(Элемент, Отказ)
	ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
	
	мОтбор = Новый Структура;
	мОтбор.Вставить("Магазин",ТекущаяСтрокаМагазины.Магазин);
	
	СтрокиСкидкиНаценки = Объект.СкидкиНаценки.НайтиСтроки(мОтбор);
	Для каждого СтрокаСкидкиНаценки Из СтрокиСкидкиНаценки Цикл
		Объект.СкидкиНаценки.Удалить(СтрокаСкидкиНаценки);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПослеУдаления(Элемент)
	ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
	Если ТекущаяСтрокаМагазины = Неопределено Тогда
		УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"));
	Иначе
		УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
	КонецЕсли;
	УстановитьДоступностьТаблицыСкидкиНаценки();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		мМагазинПриНачалеРедактирования = "";
	Иначе
		мМагазинПриНачалеРедактирования = Элементы.Магазины.ТекущиеДанные.Магазин;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПриИзменении(Элемент)
	
	Если НЕ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		Если ТекущаяСтрокаМагазины <> Неопределено Тогда
			УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьТаблицыСкидкиНаценки();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныМагазинПриИзменении(Элемент)
	Если НЕ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		
		Если Не ТекущаяСтрокаМагазины.Магазин = мМагазинПриНачалеРедактирования Тогда
		
			мОтбор = Новый Структура;
			мОтбор.Вставить("Магазин",мМагазинПриНачалеРедактирования);
			
			СтрокиСкидкиНаценки = Объект.СкидкиНаценки.НайтиСтроки(мОтбор);
			Для каждого СтрокаСкидкиНаценки Из СтрокиСкидкиНаценки Цикл
				СтрокаСкидкиНаценки.Магазин = ТекущаяСтрокаМагазины.Магазин;
			КонецЦикла;
			УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура МагазиныМагазинНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		         Истина, "Справочник.Магазины.Форма.ФормаВыбора.Открытие");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСкидкиНаценки

&НаКлиенте
Процедура СкидкиНаценкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элементы.СкидкиНаценки.ТекущиеДанные;
	Если НЕ Элементы.СкидкиНаценки.ОтборСтрок = Неопределено Тогда
		ТекущиеДанные.Магазин = Элементы.СкидкиНаценки.ОтборСтрок.Магазин;
	КонецЕсли; 
	//
	Если НоваяСтрока Тогда
		ТекущиеДанные.ДатаНачала    = Объект.ДатаНачалаДействия;
		ТекущиеДанные.ДатаОкончания = Объект.ДатаОкончанияДействия;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкидкиНаценкиСкидкаНаценкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(Истина, "Справочник.СкидкиНаценки.Форма.ФормаВыбора.Открытие");
    

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()

	ДоступностьРасписания = Объект.ДляВсехМагазинов
							ИЛИ Объект.ДляВсехМагазиновОдноРасписаниеСкидок 
							ИЛИ Объект.Магазины.Количество()>0;
	Элементы.СкидкиНаценки.Доступность = ДоступностьРасписания;
	Элементы.СкидкиНаценки.ТолькоПросмотр = НЕ Элементы.СкидкиНаценки.Доступность;
	Элементы.ГруппаЛево.Видимость = НЕ Объект.ДляВсехМагазинов;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьТаблицыСкидкиНаценки()

	ДоступностьРасписания = Объект.ДляВсехМагазинов
							ИЛИ Объект.ДляВсехМагазиновОдноРасписаниеСкидок 
							ИЛИ Объект.Магазины.Количество()>0;
	Элементы.СкидкиНаценки.Доступность = ДоступностьРасписания;
	Элементы.СкидкиНаценки.ТолькоПросмотр = НЕ Элементы.СкидкиНаценки.Доступность;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСтрокВСкидкахНаценках(МагазинОтбора)

	Элементы.СкидкиНаценки.ОтборСтрок = Новый ФиксированнаяСтруктура("Магазин", МагазинОтбора);
	Если НЕ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		
		Если НЕ ЗначениеЗаполнено(МагазинОтбора) Тогда
			МагазинОтбораТекст = НСтр("ru = '<выберите магазин>'");
		Иначе
			МагазинОтбораТекст = Строка(МагазинОтбора);
		КонецЕсли;
		
		ТекстЗаголовка = НСтр("ru = 'Расписание для магазина: %1'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, МагазинОтбораТекст);
		Элементы.ГруппаПраво.Заголовок = ТекстЗаголовка;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОпределитьПараметрыПроведенияАкции()
	
	ТекстЗаголовка = "";
	
	Если Объект.ДляВсехМагазинов И Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		
		Если ПустаяСтрока(ПараметрыПроведенияАкции) Тогда
			ПараметрыПроведенияАкции = "ОдноДляВсех";
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Расписание для всех магазинов'");
		
	ИначеЕсли (НЕ Объект.ДляВсехМагазинов) И Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		
		Если ПустаяСтрока(ПараметрыПроведенияАкции) Тогда
			ПараметрыПроведенияАкции = "ОдноДляВыбранных";
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Расписание для всех выбранных магазинов'");
		
	Иначе
		
		Если ПустаяСтрока(ПараметрыПроведенияАкции) Тогда
			ПараметрыПроведенияАкции = "ИндивидуальноеРасписание";
		КонецЕсли;
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущаяСтрока;
		ТекущийМагазин = "";
		Если ТекущаяСтрокаМагазины <> Неопределено Тогда
			СтрокаТаблицы = Объект.Магазины.НайтиПоИдентификатору(ТекущаяСтрокаМагазины);
			Если СтрокаТаблицы <> Неопределено Тогда
				ТекущийМагазин = СтрокаТаблицы.Магазин;
			КонецЕсли;
		КонецЕсли;
		
		ТекстЗаголовка = НСтр("ru = 'Расписание для магазина %1'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, ТекущийМагазин);
		
	КонецЕсли;
	Элементы.ГруппаПраво.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляОписания()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаОписание, Объект.Описание);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	Элементы.СтраницаОписание.Картинка = ОбщегоНазначенияРТ.ПолучитьКартинкуКомментария(Объект.Описание);
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияРТ.ПолучитьКартинкуКомментария(Объект.Комментарий);
	
	ОпределитьПараметрыПроведенияАкции();
	УстановитьДоступность();
	
КонецПроцедуры

#КонецОбласти
