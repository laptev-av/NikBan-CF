#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если ДокументСсылка.ДляВсехМагазинов ИЛИ НЕ ДокументСсылка.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МаркетинговаяАкцияСкидкиНаценки.Ссылка,
		|	МаркетинговаяАкцияСкидкиНаценки.НомерСтроки,
		|	МаркетинговаяАкцияСкидкиНаценки.ДатаНачала КАК ПЕРИОД,
		|	МаркетинговаяАкцияСкидкиНаценки.ДатаОкончания,
		|	МаркетинговаяАкцияСкидкиНаценки.Магазин,
		|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка
		|ИЗ
		|	Документ.МаркетинговаяАкция.СкидкиНаценки КАК МаркетинговаяАкцияСкидкиНаценки
		|ГДЕ
		|	МаркетинговаяАкцияСкидкиНаценки.Ссылка = &Ссылка";
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МаркетинговаяАкцияСкидкиНаценки.ДатаОкончания,
		|	МаркетинговаяАкцияСкидкиНаценки.ДатаНачала,
		|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка,
		|	МаркетинговаяАкцияСкидкиНаценки.Ссылка,
		|	МаркетинговаяАкцияСкидкиНаценки.НомерСтроки
		|ПОМЕСТИТЬ ТаблицаСкидок
		|ИЗ
		|	Документ.МаркетинговаяАкция.СкидкиНаценки КАК МаркетинговаяАкцияСкидкиНаценки
		|ГДЕ
		|	МаркетинговаяАкцияСкидкиНаценки.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаркетинговаяАкцияМагазины.Ссылка,
		|	МаркетинговаяАкцияМагазины.Магазин
		|ПОМЕСТИТЬ ТаблицаМагазинов
		|ИЗ
		|	Документ.МаркетинговаяАкция.Магазины КАК МаркетинговаяАкцияМагазины
		|ГДЕ
		|	МаркетинговаяАкцияМагазины.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ТаблицаМагазинов.Магазин, ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК Магазин,
		|	ТаблицаСкидок.ДатаОкончания,
		|	ТаблицаСкидок.ДатаНачала КАК Период,
		|	ТаблицаСкидок.СкидкаНаценка,
		|	ТаблицаСкидок.НомерСтроки
		|ИЗ
		|	ТаблицаСкидок КАК ТаблицаСкидок
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМагазинов КАК ТаблицаМагазинов
		|		ПО ТаблицаСкидок.Ссылка = ТаблицаМагазинов.Ссылка";
		
	КонецЕсли;
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаДействиеСкидокНаценок", ТаблицаРезультат);
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МаркетинговаяАкция") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МаркетинговаяАкция",
				НСтр("ru = 'Маркетинговая акция'"),
				ПечатьМаркетинговаяАкция(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Переоценка товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МаркетинговаяАкция";
	КомандаПечати.Представление = НСтр("ru = 'Маркетинговая акция'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьМаркетинговаяАкция(МассивОбъектов, ОбъектыПечати)

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Маркетинговая акция'");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МаркетинговаяАкция";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка,
	|	Документ.Дата,
	|	Документ.ДляВсехМагазинов,
	|	Документ.ДляВсехМагазиновОдноРасписаниеСкидок,
	|	Документ.НаименованиеАкции,
	|	Документ.Описание,
	|	Документ.ДатаНачалаДействия,
	|	Документ.ДатаОкончанияДействия
	|ИЗ
	|	Документ.МаркетинговаяАкция КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Ссылка,
	|	Документ.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МаркетинговаяАкцияМагазины.Ссылка КАК Ссылка,
	|	МаркетинговаяАкцияМагазины.НомерСтроки,
	|	МаркетинговаяАкцияМагазины.Магазин
	|ИЗ
	|	Документ.МаркетинговаяАкция.Магазины КАК МаркетинговаяАкцияМагазины
	|ГДЕ
	|	МаркетинговаяАкцияМагазины.Ссылка В(&МассивОбъектов)
	|	И МаркетинговаяАкцияМагазины.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МаркетинговаяАкцияСкидкиНаценки.Ссылка КАК Ссылка,
	|	МаркетинговаяАкцияСкидкиНаценки.НомерСтроки,
	|	МаркетинговаяАкцияСкидкиНаценки.ДатаНачала,
	|	МаркетинговаяАкцияСкидкиНаценки.ДатаОкончания,
	|	МаркетинговаяАкцияСкидкиНаценки.Магазин КАК Магазин,
	|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка,
	|	ВЫБОР
	|		КОГДА МаркетинговаяАкцияСкидкиНаценки.Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПустойМагазин
	|ИЗ
	|	Документ.МаркетинговаяАкция.СкидкиНаценки КАК МаркетинговаяАкцияСкидкиНаценки
	|ГДЕ
	|	МаркетинговаяАкцияСкидкиНаценки.Ссылка В(&МассивОбъектов)
	|	И МаркетинговаяАкцияСкидкиНаценки.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПустойМагазин
	|ИТОГИ ПО
	|	Ссылка,
	|	Магазин");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.МаркетинговаяАкция.ПФ_MXL_МаркетинговаяАкция");
	
	ОбластьЗаголовок           = Макет.ПолучитьОбласть("Заголовок");
	ОбластьИнформационноеПоле  = Макет.ПолучитьОбласть("ИнформационноеПоле");
	ОбластьШапкаСкидкиНаценки  = Макет.ПолучитьОбласть("ШапкаСкидкиНаценки");
	ОбластьСтрокаСкидкиНаценки = Макет.ПолучитьОбласть("СтрокаСкидкиНаценки");
	
	ОбластьШапкаМагазины  = Макет.ПолучитьОбласть("ШапкаМагазины");
	ОбластьСтрокаМагазины = Макет.ПолучитьОбласть("СтрокаМагазины");
	
	ОбластьШапкаМагазиныСкидки  = Макет.ПолучитьОбласть("ШапкаМагазиныСкидки");
	ОбластьСтрокаМагазиныСкидки = Макет.ПолучитьОбласть("СтрокаМагазиныСкидки");
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТаблицыМагазины = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаПоТаблицеСкидкиНаценки = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТаблицеСкидкиНаценки.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧГруппировкаМагазин = ВыборкаПоТаблицеСкидкиНаценки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ЕстьМагазины = Истина;
		Если НЕ ВыборкаПоТаблицыМагазины.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			ЕстьМагазины = Ложь;
		Иначе
			ВыборкаПоСтрокамТЧМагазины = ВыборкаПоТаблицыМагазины.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КонецЕсли;
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьЗаголовок.Параметры.Наименование   = ВыборкаПоДокументам.НаименованиеАкции;
		ОбластьЗаголовок.Параметры.Описание       = ВыборкаПоДокументам.Описание;
		
		ДатаОкончанияДействияВОтчет = ВыборкаПоДокументам.ДатаОкончанияДействия;
		
		Если Не ДатаОкончанияДействияВОтчет = Дата('00010101000000') Тогда
			ДатаОкончанияДействияВОтчет = КонецДня(ДатаОкончанияДействияВОтчет)
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.ПериодДействия = ПредставлениеПериода(ВыборкаПоДокументам.ДатаНачалаДействия, ДатаОкончанияДействияВОтчет);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		
		Если ВыборкаПоДокументам.ДляВсехМагазинов Тогда
			
			ОбластьИнформационноеПоле.Параметры.ИнформацияОДанных = НСтр("ru = 'Для всех магазинов'");
			ТабличныйДокумент.Вывести(ОбластьИнформационноеПоле);
			ТабличныйДокумент.Вывести(ОбластьШапкаСкидкиНаценки);
			
			Если ВыборкаПоСтрокамТЧГруппировкаМагазин.Следующий() Тогда
				
				ВыборкаПоСтрокамТЧ = ВыборкаПоСтрокамТЧГруппировкаМагазин.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
					ОбластьСтрокаСкидкиНаценки.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
					ТабличныйДокумент.Вывести(ОбластьСтрокаСкидкиНаценки);
				КонецЦикла;
			КонецЕсли;
			
		ИначеЕсли ВыборкаПоДокументам.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
			
			Если Не ЕстьМагазины Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьИнформационноеПоле.Параметры.ИнформацияОДанных = НСтр("ru = 'Одно расписание для магазинов'");
			ТабличныйДокумент.Вывести(ОбластьИнформационноеПоле);
			ТабличныйДокумент.Вывести(ОбластьШапкаМагазиныСкидки);
			
			
			Если ВыборкаПоСтрокамТЧГруппировкаМагазин.Следующий() Тогда
				
				ВыборкаПоСтрокамТЧ = ВыборкаПоСтрокамТЧГруппировкаМагазин.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				КоличествоМагазинов = ВыборкаПоСтрокамТЧМагазины.Количество();
				КоличествоСкидок    = ВыборкаПоСтрокамТЧ.Количество();
			
				Для Индекс = 1 По Макс(КоличествоМагазинов,КоличествоСкидок) Цикл
				
					
					Если Индекс <= КоличествоСкидок Тогда
						ВыборкаПоСтрокамТЧ.Следующий();
						ОбластьСтрокаМагазиныСкидки.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
					КонецЕсли;
					
					Если Индекс <= КоличествоМагазинов Тогда
						ВыборкаПоСтрокамТЧМагазины.Следующий();
						ОбластьСтрокаМагазиныСкидки.Параметры.Магазин = ВыборкаПоСтрокамТЧМагазины.Магазин;
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ОбластьСтрокаМагазиныСкидки);
				КонецЦикла;
			КонецЕсли;
		Иначе
			
			Пока ВыборкаПоСтрокамТЧГруппировкаМагазин.Следующий() Цикл
				Если ВыборкаПоСтрокамТЧГруппировкаМагазин.ПустойМагазин Тогда
					ОбластьИнформационноеПоле.Параметры.ИнформацияОДанных = НСтр("ru = 'Для всех магазинов'");
				Иначе
					ОбластьИнформационноеПоле.Параметры.ИнформацияОДанных = ВыборкаПоСтрокамТЧГруппировкаМагазин.Магазин;
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьИнформационноеПоле);
				ТабличныйДокумент.Вывести(ОбластьШапкаСкидкиНаценки);
				
				ВыборкаПоСтрокамТЧ = ВыборкаПоСтрокамТЧГруппировкаМагазин.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
					ОбластьСтрокаСкидкиНаценки.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
					ТабличныйДокумент.Вывести(ОбластьСтрокаСкидкиНаценки);
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
КонецФункции

#КонецОбласти

#КонецЕсли
