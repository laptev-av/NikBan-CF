#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Магазин КАК Магазин,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы КАК ФормироватьДвижения,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.РегистрацияБезналичнойОплаты КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	МассивХозяйственныхОперацийПоПриемуДС = Новый Массив;
	МассивХозяйственныхОперацийПоПриемуДС.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	МассивХозяйственныхОперацийПоПриемуДС.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	МассивХозяйственныхОперацийПоПриемуДС.Добавить(Перечисления.ХозяйственныеОперации.ПрочиеДоходы);
	
	ЭтоРасчетыСКлиентами = Истина;
	
	
	МассивПустыхДокументовРасчета = Новый Массив;
	МассивПустыхДокументовРасчета.Добавить(Документы.РеализацияТоваров.ПустаяСсылка());
	МассивПустыхДокументовРасчета.Добавить(Документы.ВозвратТоваровПоставщику.ПустаяСсылка());
	МассивПустыхДокументовРасчета.Добавить(Документы.ПоступлениеТоваров.ПустаяСсылка());
	МассивПустыхДокументовРасчета.Добавить(Документы.ЗаказПоставщику.ПустаяСсылка());
	МассивПустыхДокументовРасчета.Добавить(Документы.ВозвратТоваровОтПокупателя.ПустаяСсылка());
	МассивПустыхДокументовРасчета.Добавить(Неопределено);
	
	Запрос.УстановитьПараметр("МассивПустыхДокументовРасчета", МассивПустыхДокументовРасчета);
	
	Если МассивХозяйственныхОперацийПоПриемуДС.Найти(Реквизиты.ХозяйственнаяОперация) = Неопределено Тогда
		ЭтоРасчетыСКлиентами = Ложь;
	КонецЕсли;
	
	Если ЭтоРасчетыСКлиентами Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Контрагент КАК Контрагент,
		|	&Магазин КАК Магазин,
		|	&Организация КАК Организация,
		|	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
		|	&Период КАК Период,
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	ВЫБОР
		|		КОГДА РегистрацияБезналичнойОплатыРасшифровкаПлатежа.ДокументРасчетовСКонтрагентом В (&МассивПустыхДокументовРасчета)
		|			ТОГДА РегистрацияБезналичнойОплатыРасшифровкаПлатежа.Ссылка
		|		ИНАЧЕ РегистрацияБезналичнойОплатыРасшифровкаПлатежа.ДокументРасчетовСКонтрагентом
		|	КОНЕЦ КАК ДокументРасчета,
		|	ВЫБОР
		|		КОГДА РегистрацияБезналичнойОплатыРасшифровкаПлатежа.ДокументРасчетовСКонтрагентом ССЫЛКА Документ.РеализацияТоваров
		|			ТОГДА РегистрацияБезналичнойОплатыРасшифровкаПлатежа.ДокументРасчетовСКонтрагентом.ЗаказПокупателя
		|		ИНАЧЕ РегистрацияБезналичнойОплатыРасшифровкаПлатежа.Ссылка.ДокументОснование
		|	КОНЕЦ КАК ЗаказПокупателя,
		|	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.Сумма КАК Сумма
		|ИЗ
		|	Документ.РегистрацияБезналичнойОплаты.РасшифровкаПлатежа КАК РегистрацияБезналичнойОплатыРасшифровкаПлатежа
		|ГДЕ
		|	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.Ссылка = &Ссылка
		|	И &ФормироватьДвижения
		|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)";
		
		Результат = Запрос.ВыполнитьПакет();
		ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
		ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентами", Результат[0].Выгрузить());
		
	Иначе
		ПоРаспоряжению = Ложь;
		Если ЗначениеЗаполнено(Реквизиты.ДокументОснование) 
			И ТипЗнч(Реквизиты.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
			
			ПоРаспоряжению = Истина;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ПоРаспоряжению", ПоРаспоряжению);
		
		Запрос.Текст = 
		// [0] ТаблицаРасчетыСПоставщиками
		"ВЫБРАТЬ
		|	ТаблицаОплата.НомерСтроки                         КАК НомерСтроки,
		|	&Период                                           КАК Период,
		|	ВЫБОР
		|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ                                             КАК ВидДвижения,
		|	ВЫБОР
		|		КОГДА ТаблицаОплата.ДокументРасчетовСКонтрагентом ССЫЛКА Документ.ПоступлениеТоваров
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаОплата.ДокументРасчетовСКонтрагентом.ЗаказПоставщику = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|						ТОГДА ТаблицаОплата.ДокументРасчетовСКонтрагентом
		|					ИНАЧЕ ТаблицаОплата.ДокументРасчетовСКонтрагентом.ЗаказПоставщику
		|				КОНЕЦ
		|		ИНАЧЕ ТаблицаОплата.ДокументРасчетовСКонтрагентом
		|	КОНЕЦ КАК ДокументРасчета,
		|	&Контрагент                                       КАК Поставщик,
		|	&Магазин                                          КАК Магазин,
		|	ТаблицаОплата.Сумма                               КАК Сумма,
		|	ТаблицаОплата.Сумма                               КАК КОплате,
		|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)    КАК ФормаОплаты
		|ИЗ
		|	Документ.РегистрацияБезналичнойОплаты.РасшифровкаПлатежа КАК ТаблицаОплата
		|ГДЕ
		|	ТаблицаОплата.Ссылка = &Ссылка
		|	И &ФормироватьДвижения И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОплата.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// [1] ТаблицаДенежныеСредстваКВыплате
		|ВЫБРАТЬ
		|	&Период                                          КАК Период,
		|	&ХозяйственнаяОперация                           КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
		|	&ДокументОснование                               КАК РаспоряжениеНаРасходованиеДенежныхСредств,
		|	&Магазин                                         КАК Магазин,
		|	Оплата.СтатьяДвиженияДенежныхСредств             КАК СтатьяДвиженияДенежныхСредств,
		|	Оплата.ДокументРасчетовСКонтрагентом             КАК ДокументРасчета,
		|	Оплата.Сумма                                     КАК Сумма
		|ИЗ
		|	Документ.РегистрацияБезналичнойОплаты.РасшифровкаПлатежа КАК Оплата
		|ГДЕ
		|	Оплата.Ссылка = &Ссылка И &ПоРаспоряжению
		|";
		
		Результат = Запрос.ВыполнитьПакет();
		ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
		ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками", Результат[0].Выгрузить());
		ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваКВыплате", Результат[1].Выгрузить());
		
	КонецЕсли;
	ТаблицыДляДвижений.Вставить("ЭтоРасчетыСКлиентами", ЭтоРасчетыСКлиентами);
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

Функция ПодготовитьДанныеДляПробитияЧека(ДокументСсылка, РаспределениеВыручкиПоСекциям, НомерЧека) Экспорт
	
	ОбщиеПараметры = МенеджерОборудованияКлиентСервер.ПараметрыОперацииФискализацииЧека();
	
	// Общие параметры чека
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("КассаККМ");
	СтруктураРеквизитов.Вставить("Магазин");
	СтруктураРеквизитов.Вставить("Организация");
	СтруктураРеквизитов.Вставить("Дата");
	СтруктураРеквизитов.Вставить("ДоговорПлатежногоАгента");
	СтруктураРеквизитов.Вставить("Ответственный");
	СтруктураРеквизитов.Вставить("ВидНалога");
	СтруктураРеквизитов.Вставить("Контрагент");
	СтруктураРеквизитов.Вставить("СуммаДокумента");
	СтруктураРеквизитов.Вставить("ДокументОснование");
	СтруктураРеквизитов.Вставить("ХозяйственнаяОперация");
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("НаименованиеПолное");
	СтруктураРеквизитов.Вставить("ИНН");
	СтруктураРеквизитов.Вставить("КПП");
	РеквизитыОрганизация = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.Организация, СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ЭлектронныйЧекSMSПередаютсяПрограммой1С");
	СтруктураРеквизитов.Вставить("ЭлектронныйЧекEmailПередаютсяПрограммой1С");
	СтруктураРеквизитов.Вставить("СерийныйНомер");
	СтруктураРеквизитов.Вставить("Магазин");
	СтруктураРеквизитов.Вставить("Код");
	СтруктураРеквизитов.Вставить("СпособФорматноЛогическогоКонтроля", "ПодключаемоеОборудование.СпособФорматноЛогическогоКонтроля");
	СтруктураРеквизитов.Вставить("ДопустимоеРасхождениеФорматноЛогическогоКонтроля", "ПодключаемоеОборудование.ДопустимоеРасхождениеФорматноЛогическогоКонтроля");
	СтруктураРеквизитов.Вставить("ТипОборудования", "ПодключаемоеОборудование.ТипОборудования");
	РеквизитыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.КассаККМ, СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Наименование");
	СтруктураРеквизитов.Вставить("ИНН");
	РеквизитыКассир = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.Ответственный.ФизическоеЛицо, СтруктураРеквизитов);
	
	ОбщиеПараметры.СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложенияККТ(РеквизитыДокумента.Организация, 
																		РеквизитыДокумента.ВидНалога);
	
	Если РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
		ОбщиеПараметры.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств;
		Если ЗначениеЗаполнено(РеквизитыДокумента.ДоговорПлатежногоАгента) Тогда
			НомерСекции = РаспределениеВыручкиПоСекциям.СоответствиеДоговоровСекциям.Получить(РеквизитыДокумента.ДоговорПлатежногоАгента);
		Иначе
			НомерСекции = РаспределениеВыручкиПоСекциям.НомерСекцииДляОплатыКартой;
		КонецЕсли;
		Если ОбщиеПараметры.СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН Тогда
			ЗначСтавкиНДС = УчетНДС.СтавкаНДСПоУмолчанию(ДокументСсылка.Дата);
			СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(ЗначСтавкиНДС, Истина);	
		Иначе
			СтавкаНДС = Неопределено;
		КонецЕсли;
		ПринятоОт = ОбщегоНазначенияРТВызовСервера.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Контрагент, "НаименованиеПолное");
		Наименование = НСтр("ru = 'Безналичная оплата от:'") + " " + ПринятоОт + Символы.ПС
						+ НСтр("ru = 'Основание:'") + " " + РеквизитыДокумента.ДокументОснование;
	Иначе
		ОбщиеПараметры.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств;
		Если ЗначениеЗаполнено(РеквизитыДокумента.ДоговорПлатежногоАгента) Тогда
			НомерСекции = РаспределениеВыручкиПоСекциям.СоответствиеДоговоровСекциям.Получить(РеквизитыДокумента.ДоговорПлатежногоАгента);
		Иначе
			НомерСекции = РаспределениеВыручкиПоСекциям.НомерСекцииДляВозвратаОплатыНаКарту;
		КонецЕсли;
		Если ОбщиеПараметры.СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН Тогда
			ЗначСтавкиНДС = УчетНДС.СтавкаНДСПоУмолчанию(ДокументСсылка.Дата);
			СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(ЗначСтавкиНДС, Ложь);	
		Иначе
			СтавкаНДС = Неопределено;
		КонецЕсли;
		Вернуть = ОбщегоНазначенияРТВызовСервера.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Контрагент, "НаименованиеПолное");
		Наименование = НСтр("ru = 'Возврат безналичной оплаты:'") + " " + Вернуть + Символы.ПС
						+ НСтр("ru = 'Основание:'") + " " + РеквизитыДокумента.ДокументОснование
	КонецЕсли;
	
	ОбщиеПараметры.Электронно = Ложь;
	
	// Параметры необходимые для чека ЕНВД на принтере чеков
	ОбщиеПараметры.ДокументОснование = ДокументСсылка;
	
	ОбщиеПараметры.Кассир          = РеквизитыКассир.Наименование;
	ОбщиеПараметры.Вставить("ИмяКассира", РеквизитыКассир.Наименование);
	ОбщиеПараметры.КассирИНН       = РеквизитыКассир.ИНН;
	
	ОбщиеПараметры.Организация    = РеквизитыДокумента.Организация;
	ОбщиеПараметры.ОрганизацияНазвание = РеквизитыОрганизация.НаименованиеПолное;
	ОбщиеПараметры.ОрганизацияИНН = РеквизитыОрганизация.ИНН;
	ОбщиеПараметры.ОрганизацияКПП = РеквизитыОрганизация.КПП;
	ОбщиеПараметры.НомерКассы     = РеквизитыКассыККМ.Код;
	ОбщиеПараметры.НомерЧека      = НомерЧека;
	ОбщиеПараметры.ТорговыйОбъект = РеквизитыДокумента.Магазин;
	
	ОбщиеПараметры.НомерСмены = 1;
	
	СведенияООрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(РеквизитыДокумента.Организация, РеквизитыДокумента.Дата);
	АдресМагазина = ОбщегоНазначенияРТ.АдресМагазина(РеквизитыКассыККМ.Магазин);
	
	СерийныйНомер = РеквизитыКассыККМ.СерийныйНомер;
	Если НЕ ЗначениеЗаполнено(СерийныйНомер) Тогда
		СерийныйНомер = "1";
	КонецЕсли;
	
	ОбщиеПараметры.АдресРасчетов = АдресМагазина;
	ОбщиеПараметры.МестоРасчетов = Строка(РеквизитыКассыККМ.Магазин) + " " + АдресМагазина;
	ОбщиеПараметры.АдресМагазина = АдресМагазина;
	ОбщиеПараметры.НаименованиеМагазина = Строка(РеквизитыКассыККМ.Магазин);
	ОбщиеПараметры.СерийныйНомер = СерийныйНомер;
	ОбщиеПараметры.СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложенияККТ(РеквизитыДокумента.Организация, 
												РеквизитыДокумента.ВидНалога);
	
	ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговора(ОбщиеПараметры, 
																	РеквизитыДокумента.ДоговорПлатежногоАгента,
																	РеквизитыДокумента.СуммаДокумента);
	
	Если ЗначениеЗаполнено(РеквизитыДокумента.ДоговорПлатежногоАгента) Тогда
		НомерСекции = РаспределениеВыручкиПоСекциям.СоответствиеДоговоровСекциям.Получить(РеквизитыДокумента.ДоговорПлатежногоАгента);
	Иначе
		НомерСекции = 1;
	КонецЕсли;
	
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("НомерСекции", НомерСекции);
	
	ОбщиеПараметры.КассаККМ = РеквизитыДокумента.КассаККМ;
	
	РасшифровкаПлатежа = РасшифровкаПлатежа(ДокументСсылка);
	
	СуммаДокументовРасчетов = 0;
	
	Для Каждого СтрокаПлатежа Из РасшифровкаПлатежа Цикл
		
		ПараметрыДокумента.Вставить("ПризнакСпособаРасчета", Неопределено);
		ТабличнаяЧастьТоварыОтсутствует = ТипЗнч(СтрокаПлатежа.ДокументРасчетовСКонтрагентом) = Тип("ДокументСсылка.РегистрацияБезналичнойОплаты");
		Если ЗначениеЗаполнено(СтрокаПлатежа.ДокументРасчетовСКонтрагентом) 
			И НЕ ТабличнаяЧастьТоварыОтсутствует Тогда
			ПодключаемоеОборудованиеРТ.ДобавитьСтрокиДляФискализацииТоваров(СтрокаПлатежа.ДокументРасчетовСКонтрагентом, ПараметрыДокумента, ОбщиеПараметры, СуммаДокументовРасчетов);
		Иначе
			СтрокаПозицииЧека = МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека(); 
			
			СтрокаПозицииЧека.Наименование = Наименование;
			СтрокаПозицииЧека.Количество     = 1;
			СтрокаПозицииЧека.Цена           = СтрокаПлатежа.Сумма;
			СтрокаПозицииЧека.ЦенаСоСкидками = СтрокаПлатежа.Сумма;
			СтрокаПозицииЧека.Сумма          = СтрокаПлатежа.Сумма;
			СтрокаПозицииЧека.НомерСекции    = НомерСекции;
			СтрокаПозицииЧека.СтавкаНДС      = СтавкаНДС;
			
			СтрокаПозицииЧека.ПризнакСпособаРасчета = СтрокаПлатежа.ПризнакСпособаРасчета;
			СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
			
			ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговораВСтроке(ОбщиеПараметры, СтрокаПозицииЧека);
			
			ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
			СуммаДокументовРасчетов = СуммаДокументовРасчетов + СтрокаПлатежа.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	Если РеквизитыКассыККМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
		// При необходимости будет проведен формато-логический контроль
		ОбщиеПараметры.СпособФорматноЛогическогоКонтроля = РеквизитыКассыККМ.СпособФорматноЛогическогоКонтроля;
		ОбщиеПараметры.ДопустимоеРасхождениеФорматноЛогическогоКонтроля = РеквизитыКассыККМ.ДопустимоеРасхождениеФорматноЛогическогоКонтроля;
		Если ФорматноЛогическийКонтрольКлиентСервер.НуженФорматноЛогическийКонтроль(ОбщиеПараметры) Тогда
			ФорматноЛогическийКонтрольКлиентСервер.ПровестиФорматноЛогическийКонтроль(ОбщиеПараметры);
		КонецЕсли;
	КонецЕсли;
	
	СтрокаНаименованиеОплаты = НСтр("ru = 'Безналичная оплата");
	СтрокаОплаты = Новый Структура();
	СтрокаОплаты.Вставить("ТипОплаты", Перечисления.ТипыОплатыККТ.Электронно);
	СтрокаОплаты.Вставить("Наименование", СтрокаНаименованиеОплаты);
	СтрокаОплаты.Вставить("Сумма", РеквизитыДокумента.СуммаДокумента);
	ОбщиеПараметры.ТаблицаОплат.Добавить(СтрокаОплаты);
	
	РазницаСумм = СуммаДокументовРасчетов - РеквизитыДокумента.СуммаДокумента;
	Если РазницаСумм > 0 Тогда
		СтрокаОплаты = Новый Структура();
		СтрокаОплаты.Вставить("ТипОплаты", Перечисления.ТипыОплатыККТ.Постоплата);
		СтрокаОплаты.Вставить("Наименование", НСтр("ru = 'Постоплата'"));
		СтрокаОплаты.Вставить("Сумма", РазницаСумм);
		ОбщиеПараметры.ТаблицаОплат.Добавить(СтрокаОплаты);
	КонецЕсли;
	
	Возврат ОбщиеПараметры;
	
КонецФункции // ПодготовитьДанныеДляПробитияЧека()

Процедура ЗаполнениеПризнакаСпособаРасчета(Объект, ДокументРасчетовСКонтрагентом, СуммаПлатежа, ПризнакСпособаРасчета) Экспорт
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
		
		Если НЕ ЗначениеЗаполнено(ДокументРасчетовСКонтрагентом) Тогда
			Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПокупателя") И 
				ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
				
				Если СуммаПлатежа >= Объект.ДокументОснование.СуммаДокумента Тогда
					ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаПолная;
				Иначе
					ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаЧастичная;
				КонецЕсли;
			Иначе
				ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс;
			КонецЕсли; 
		ИначеЕсли ТипЗнч(ДокументРасчетовСКонтрагентом) = Тип("ДокументСсылка.РеализацияТоваров")
				  ИЛИ ТипЗнч(ДокументРасчетовСКонтрагентом) = Тип("ДокументСсылка.ЧекККМ") Тогда
			ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ОплатаКредита;
		КонецЕсли;
	Иначе
		Если ТипЗнч(ДокументРасчетовСКонтрагентом) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
			ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда 
			Если СуммаПлатежа >= ДокументРасчетовСКонтрагентом.СуммаДокумента Тогда
				ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;
			Иначе
				ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнениеПризнаковСпособовРасчета(Объект) Экспорт
	
	Для каждого СтрокаРасшифровкиПлатежа Из Объект.РасшифровкаПлатежа Цикл
		ЗаполнениеПризнакаСпособаРасчета(Объект,
										 СтрокаРасшифровкиПлатежа.ДокументРасчетовСКонтрагентом, 
										 СтрокаРасшифровкиПлатежа.Сумма, 
										 СтрокаРасшифровкиПлатежа.ПризнакСпособаРасчета);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РасшифровкаПлатежа(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	               |	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
	               |	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.Сумма КАК Сумма,
	               |	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета
	               |ИЗ
	               |	Документ.РегистрацияБезналичнойОплаты.РасшифровкаПлатежа КАК РегистрацияБезналичнойОплатыРасшифровкаПлатежа
	               |ГДЕ
	               |	РегистрацияБезналичнойОплатыРасшифровкаПлатежа.Ссылка = &ДокументСсылка";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли
