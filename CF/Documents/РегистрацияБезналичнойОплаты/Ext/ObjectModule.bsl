#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.РегистрацияБезналичнойОплаты.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.ЭтоРасчетыСКлиентами Тогда
		ДенежныеСредстваСервер.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства, Движения, Отказ);
	Иначе
		ДенежныеСредстваСервер.ОтразитьРасчетыСПоставщиками(ДополнительныеСвойства, Движения, Отказ);
		ДенежныеСредстваСервер.ОтразитьДенежныеСредстваКВыплате(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	ЗакупкиСервер.ОбновитьСостояниеОплаты(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ПроверитьВозможностьВводаНаОснованииБезЗаявки(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
		ЗаполнитьПоЗаказуПоступлению(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ПроверитьВозможностьВводаНаОснованииБезЗаявки(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
		ЗаполнитьПоЗаказуПоступлению(ДанныеЗаполнения, Истина);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоВозвратуТоваров(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоЗаявкеНаРасходованиеДС(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоДокументаРасчетаСКлиентом(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоДокументаРасчетаСКлиентом(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоОтчетуКомитентуОПродажах(ДанныеЗаполнения);
		
	Иначе
		
		Если ДанныеЗаполнения <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		КонецЕсли;
		ПроверитьВозможностьВводаНаОснованииБезЗаявки(ЭтотОбъект.ХозяйственнаяОперация);
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,,Организация);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РасшифровкаПлатежа.Очистить();
	СуммаДокумента = 0;
	
	НомерЧекаККМ = 0;
	ОплатаВыполнена = Ложь;
	ПробитЧек       = Ложь;
	СменаЗакрыта    = Ложь;
	ОтчетОРозничныхПродажах = Документы.ОтчетОРозничныхПродажах.ПустаяСсылка();
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ЗакупкиСервер.ОбновитьСостояниеОплаты(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияРТ.УстановитьНовоеЗначениеРеквизита(
		ЭтотОбъект,
		ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСуммуДокумента(РасшифровкаПлатежа, Истина),
		"СуммаДокумента");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный 	= Пользователи.ТекущийПользователь();
	Организация 	= ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация,Ответственный);
	Контрагент 		= ЗначениеНастроекПовтИсп.ПолучитьПоставщикаПоУмолчанию(Ответственный, Контрагент);
	Магазин 		= ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	ОплатаВыполнена     = Ложь;
	НомерЧекаККМ        = 0;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуПоступлению(ДанныеЗаполнения, ПоПоступлению = Ложь)

	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
	СтатьяДвиженияДенежныхСредств = ЗначениеНастроекПовтИсп.ПолучитьСтатьюДвиженияДенежныхСредств(ХозяйственнаяОперация);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Магазин, Контрагент, Организация");
	
	СуммаНеОплаченногоЭтапа = ЗакупкиСервер.ПолучитьСуммуНеОплаченногоЭтапа(ДанныеЗаполнения, Перечисления.ФормыОплаты.Безналичная);

	Если СуммаНеОплаченногоЭтапа = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет задолженности по запланированным оплатам на дату: %Дата% (безналичная форма оплаты) по документу ""%ДокументОснование%"".
									|Перепланируйте этапы оплат или введите сумму вручную.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(ТекущаяДатаСеанса(),"ДЛФ=D"));
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ДокументОснование%", ДанныеЗаполнения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "РасшифровкаПлатежа");
	КонецЕсли;
	
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	НоваяСтрока.ДокументРасчетовСКонтрагентом = ДанныеЗаполнения;
	НоваяСтрока.Сумма = СуммаНеОплаченногоЭтапа;
	НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения)

	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента;
	СтатьяДвиженияДенежныхСредств = ЗначениеНастроекПовтИсп.ПолучитьСтатьюДвиженияДенежныхСредств(ХозяйственнаяОперация);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Магазин, Контрагент, Организация");
	ДокументОснование = ДанныеЗаполнения;
	
	НеОплаченнаяСумма = ПродажиСервер.НеОплаченнаяСуммаПоЗаказуПокупателя(ДанныеЗаполнения);
	
	СуммаДокумента = НеОплаченнаяСумма;
	
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	НоваяСтрока.Сумма = НеОплаченнаяСумма;
	НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументаРасчетаСКлиентом(ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Магазин, Контрагент, Организация");
	
	ДанныеПоДокументуРасчета = ПродажиСервер.ДанныеПоДокументуРасчета(ДанныеЗаполнения);
	
	НеОплаченнаяСумма = ДанныеПоДокументуРасчета.Сумма;
	ХозяйственнаяОперация = ДанныеПоДокументуРасчета.ХозяйственнаяОперация;
	СтатьяДвиженияДенежныхСредств = ЗначениеНастроекПовтИсп.ПолучитьСтатьюДвиженияДенежныхСредств(ХозяйственнаяОперация);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		ДокументОснование = ДанныеЗаполнения.ЗаказПокупателя;
	КонецЕсли;
	
	СуммаДокумента = НеОплаченнаяСумма;
	
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	НоваяСтрока.ДокументРасчетовСКонтрагентом = ДанныеЗаполнения;
	НоваяСтрока.Сумма = НеОплаченнаяСумма;
	НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
	
КонецПроцедуры

Процедура ЗаполнитьПоВозвратуТоваров(ДанныеЗаполнения)
	
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика;
	СтатьяДвиженияДенежныхСредств = ЗначениеНастроекПовтИсп.ПолучитьСтатьюДвиженияДенежныхСредств(ХозяйственнаяОперация);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Магазин, Контрагент, Организация");
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетыСПоставщикамиОстатки.ДокументРасчета,
		|	РасчетыСПоставщикамиОстатки.КОплатеОстаток КАК КПоступлению
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщиками.Остатки(, ДокументРасчета = &Ссылка) КАК РасчетыСПоставщикамиОстатки
		|ГДЕ
		|	РасчетыСПоставщикамиОстатки.СуммаОстаток > 0";

	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);

	Результат = Запрос.Выполнить();
	
		
	Если Результат.Пустой() Тогда
		
		ТекстОшибки = НСтр("ru = 'Нет задолженности поставщика по документу ""%ДокументОснование%"" .'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ДокументОснование%", ДанныеЗаполнения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "РасшифровкаПлатежа");
		
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		НоваяСтрока.ДокументРасчетовСКонтрагентом = ДанныеЗаполнения;
		НоваяСтрока.Сумма = Выборка.КПоступлению;
		НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаявкеНаРасходованиеДС(ДанныеЗаполнения)

	Если ДанныеЗаполнения.Статус <> Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Утверждена Тогда
		
		Текст = НСтр("ru = 'Регистрацию безналичной оплаты возможно вводить на основании заявки со статусом ""Утверждена""'");
		ВызватьИсключение Текст;
		
	КонецЕсли;
	
	Если НЕ (ДанныеЗаполнения.ФормаОплатыЗаявки = Перечисления.ФормыОплаты.Безналичная ИЛИ ДанныеЗаполнения.ФормаОплатыЗаявки = Перечисления.ФормыОплаты.ПустаяСсылка()) Тогда
		
		Текст = НСтр("ru = 'Регистрацию безналичной оплаты возможно вводить на основании заявки с формой оплаты ""Безналичные"" или ""Любая""'");
		ВызватьИсключение Текст;
		
	КонецЕсли;
	
	ДокументОснование = ДанныеЗаполнения;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Магазин, Контрагент, ХозяйственнаяОперация, Организация");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредствРасшифровкаПлатежа.НомерСтроки,
	|	ЗаявкаНаРасходованиеДенежныхСредствРасшифровкаПлатежа.ДокументРасчетовСКонтрагентом,
	|	ЗаявкаНаРасходованиеДенежныхСредствРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|ПОМЕСТИТЬ ТЧДок
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ЗаявкаНаРасходованиеДенежныхСредствРасшифровкаПлатежа
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредствРасшифровкаПлатежа.Ссылка = &РаспоряжениеНаРасходованиеДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредстваКВыплатеОстатки.ДокументРасчета КАК ДокументРасчетовСКонтрагентом,
	|	ДенежныеСредстваКВыплатеОстатки.СтатьяДвиженияДенежныхСредств,
	|	-ДенежныеСредстваКВыплатеОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(, РаспоряжениеНаРасходованиеДенежныхСредств = &РаспоряжениеНаРасходованиеДенежныхСредств) КАК ДенежныеСредстваКВыплатеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧДок КАК ТЧДок
	|		ПО ДенежныеСредстваКВыплатеОстатки.ДокументРасчета = ТЧДок.ДокументРасчетовСКонтрагентом
	|			И ДенежныеСредстваКВыплатеОстатки.СтатьяДвиженияДенежныхСредств = ТЧДок.СтатьяДвиженияДенежныхСредств
	|ГДЕ
	|	ДенежныеСредстваКВыплатеОстатки.СуммаОстаток < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТЧДок.НомерСтроки";
	
	Запрос.УстановитьПараметр("РаспоряжениеНаРасходованиеДенежныхСредств", ДанныеЗаполнения);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Текст = НСтр("ru = 'Заявка на расходование ДС полностью оплачена.
							|Ввод документов оплаты не требуется.'");
		ВызватьИсключение Текст;
	Иначе
		РасшифровкаПлатежа.Загрузить(Результат.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоОтчетуКомитентуОПродажах(ДанныеЗаполнения)
	
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
	СтатьяДвиженияДенежныхСредств = ЗначениеНастроекПовтИсп.ПолучитьСтатьюДвиженияДенежныхСредств(ХозяйственнаяОперация);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, "Магазин, Контрагент, Организация");
	
	СуммаНеОплаченногоЭтапа = ЗакупкиСервер.ПолучитьСуммуНеОплаченногоЭтапа(ДанныеЗаполнения, Перечисления.ФормыОплаты.Безналичная);
	
	Если СуммаНеОплаченногоЭтапа = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет задолженности по запланированным оплатам на дату: %Дата% (безналичная форма оплаты) по документу ""%ДокументОснование%"".
		|Перепланируйте этапы оплат или введите сумму вручную.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(ТекущаяДатаСеанса(),"ДЛФ=D"));
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ДокументОснование%", ДанныеЗаполнения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "РасшифровкаПлатежа");
	КонецЕсли;
	
	СуммаНеОплаченногоЭтапа	= СуммаНеОплаченногоЭтапа - ДанныеЗаполнения.СуммаВознаграждения;
	
	НоваяСтрока = РасшифровкаПлатежа.Добавить();
	НоваяСтрока.ДокументРасчетовСКонтрагентом = ДанныеЗаполнения;
	НоваяСтрока.Сумма                         = ?(СуммаНеОплаченногоЭтапа<0,0,СуммаНеОплаченногоЭтапа);
	НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Массив.Добавить(Движения.ДенежныеСредстваКВыплате);
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

Процедура ПроверитьВозможностьВводаНаОснованииБезЗаявки(Операция)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДС")
		И НЕ УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьОформлениеРКОРБОБезЗаявки, Ложь) Тогда
		
		ХозОперация = ?(ЗначениеЗаполнено(Операция), Операция, Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
		
		Если НЕ (ХозОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику ИЛИ ХозОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы) Тогда
			Возврат;
		КонецЕсли;
		
		ТекстОшибки = НСтр("ru='Регистрацию безналичной оплаты с операцией ""%1"" необходимо вводить на основании
								|заявки на расходование денежных средств.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ХозОперация);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
