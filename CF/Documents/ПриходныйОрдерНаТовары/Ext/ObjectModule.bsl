#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет тч Товары, товарами к поступлению. Вызывается из модуля формы и модуля объекта.
//
Процедура ЗаполнитьТоварыПоТоварамКПоступлению(ВидЗаполнения) Экспорт
	
	СерийныеНомера.Очистить();
	
	Если ВидЗаполнения = "НоменклатураКоличество" Тогда
		Товары.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование",	ДокументОснование);
	Запрос.УстановитьПараметр("Ссылка",				Ссылка);
	
	Запрос.УстановитьПараметр("ЗаполнятьКоличество",?(ВидЗаполнения = "Количество", Истина, ВидЗаполнения = "НоменклатураКоличество"));
	Запрос.УстановитьПараметр("ТолькоКоличество", ВидЗаполнения = "Количество");
	
	Если ВидЗаполнения = "Количество" Тогда
		Таблица = Товары.Выгрузить( ,"Номенклатура, Характеристика, НомерСтроки");
	Иначе
		Таблица = Товары.ВыгрузитьКолонки("Номенклатура, Характеристика, НомерСтроки");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Таблица", Таблица);
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику")
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			
			Поступление = Документы.ПоступлениеТоваров.ПолучитьПоступлениеТоваровПоЗаказуПоставщику(ДокументОснование);
			
			Если НЕ Поступление = Неопределено Тогда
				ДокументОснованиеПоступление = Поступление;
			КонецЕсли;
			
		КонецЕсли;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВремДокТЧ
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВремДокТЧ.НомерСтроки) КАК НомерСтроки,
		|	ВремДокТЧ.Номенклатура,
		|	ВремДокТЧ.Характеристика
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	ВремДокТЧ КАК ВремДокТЧ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВремДокТЧ.Номенклатура,
		|	ВремДокТЧ.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА &ЗаполнятьКоличество
		|				ТОГДА Товары.Цена / ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Цена,
		|	МИНИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка) > 1
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|		ИНАЧЕ МАКСИМУМ(Товары.Упаковка)
		|	КОНЕЦ КАК Упаковка,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка) > 1
		|				ИЛИ НЕ &ЗаполнятьКоличество
		|			ТОГДА NULL
		|		ИНАЧЕ МАКСИМУМ(Товары.Упаковка.Коэффициент)
		|	КОНЕЦ КАК Коэффициент
		|ПОМЕСТИТЬ ТоварыОснования
		|ИЗ
		|	Документ.%ДокументОснованиеТовары%.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &ДокументОснованиеТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКПоступлениюОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлениюОбороты.Характеристика КАК Характеристика,
		|	СУММА(ВЫБОР
		|			КОГДА &ЗаполнятьКоличество
		|				ТОГДА ТоварыКПоступлениюОбороты.КоличествоОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ ТоварыКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , Регистратор, ДокументОснование = &ДокументОснование) КАК ТоварыКПоступлениюОбороты
		|ГДЕ
		|	ТоварыКПоступлениюОбороты.Регистратор <> &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлениюОбороты.Номенклатура,
		|	ТоварыКПоступлениюОбороты.Характеристика
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКПоступлениюОбороты.КоличествоОборот) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ТолькоКоличество
		|			ТОГДА ДокТЧ.НомерСтроки
		|		ИНАЧЕ ТоварыОснования.НомерСтроки
		|	КОНЕЦ КАК НомерСтроки,
		|	ЕСТЬNULL(ДокТЧ.Номенклатура, ТоварыОснования.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ДокТЧ.Характеристика, ТоварыОснования.Характеристика) КАК Характеристика,
		|	ТоварыОснования.Цена,
		|	ТоварыОснования.Упаковка,
		|	ТоварыОснования.Коэффициент
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ДокТЧ КАК ДокТЧ
		|		ПОЛНОЕ СОЕДИНЕНИЕ ТоварыОснования КАК ТоварыОснования
		|		ПО ДокТЧ.Номенклатура = ТоварыОснования.Номенклатура
		|			И ДокТЧ.Характеристика = ТоварыОснования.Характеристика
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТолькоКоличество
		|				ТОГДА НЕ ДокТЧ.Номенклатура ЕСТЬ NULL 
		|			ИНАЧЕ НЕ ТоварыОснования.Номенклатура ЕСТЬ NULL 
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	ЕСТЬNULL(ТоварыКПоступлению.Номенклатура, Товары.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ТоварыКПоступлению.Характеристика, Товары.Характеристика) КАК Характеристика,
		|	Товары.Цена,
		|	ТоварыКПоступлению.Количество,
		|	ВЫБОР
		|		КОГДА Товары.Коэффициент ЕСТЬ NULL 
		|				ИЛИ (ВЫРАЗИТЬ(ТоварыКПоступлению.Количество / Товары.Коэффициент КАК ЧИСЛО(15, 0))) <> ТоварыКПоступлению.Количество / Товары.Коэффициент
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ИспользоватьУпаковку,
		|	Товары.Упаковка,
		|	Товары.Коэффициент
		|ПОМЕСТИТЬ ИтоговаяТаблица
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
		|		ПО Товары.Номенклатура = ТоварыКПоступлению.Номенклатура
		|			И Товары.Характеристика = ТоварыКПоступлению.Характеристика
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТолькоКоличество
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ НЕ ТоварыКПоступлению.Количество ЕСТЬ NULL 
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговаяТаблица.НомерСтроки КАК НомерСтрокиСорт,
		|	ИтоговаяТаблица.Номенклатура,
		|	ИтоговаяТаблица.Характеристика,
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
		|			ТОГДА ИтоговаяТаблица.Цена * ИтоговаяТаблица.Коэффициент
		|		ИНАЧЕ ИтоговаяТаблица.Цена
		|	КОНЕЦ КАК Цена,
		|	ИтоговаяТаблица.Количество,
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
		|			ТОГДА ИтоговаяТаблица.Количество / ИтоговаяТаблица.Коэффициент
		|		ИНАЧЕ ИтоговаяТаблица.Количество
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
		|			ТОГДА ИтоговаяТаблица.Упаковка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ КАК Упаковка,
		|	ИтоговаяТаблица.Количество * ИтоговаяТаблица.Цена КАК Сумма
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиСорт";
		
		Если ЗначениеЗаполнено(ДокументОснованиеПоступление) Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ДокументОснованиеТовары%", "ПоступлениеТоваров");
			Запрос.УстановитьПараметр("ДокументОснованиеТовары", ДокументОснованиеПоступление);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ДокументОснованиеТовары%", "ЗаказПоставщику");
			Запрос.УстановитьПараметр("ДокументОснованиеТовары", ДокументОснование);
		КонецЕсли;
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"ЗаказПоставщику","ВозвратТоваровОтПокупателя");
		КонецЕсли;
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Товары.Загрузить(РезультатЗапроса.Выгрузить());
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по основанию ""%ДокументОснование%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", ДокументОснование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДокументОснование");
			
		КонецЕсли;
		
	Иначе
		// Для док.основания ПеремещениеТоваров и ПоступлениеТоваров.
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВремДокТЧ
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВремДокТЧ.НомерСтроки) КАК НомерСтроки,
		|	ВремДокТЧ.Номенклатура,
		|	ВремДокТЧ.Характеристика
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	ВремДокТЧ КАК ВремДокТЧ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВремДокТЧ.Номенклатура,
		|	ВремДокТЧ.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА &ЗаполнятьКоличество
		|				ТОГДА Товары.Цена / ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Цена,
		|	МИНИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка) > 1
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|		ИНАЧЕ МАКСИМУМ(Товары.Упаковка)
		|	КОНЕЦ КАК Упаковка,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка) > 1
		|				ИЛИ НЕ &ЗаполнятьКоличество
		|			ТОГДА NULL
		|		ИНАЧЕ МАКСИМУМ(Товары.Упаковка.Коэффициент)
		|	КОНЕЦ КАК Коэффициент,
		|	МИНИМУМ(Товары.КлючСвязиСерийныхНомеров) КАК КлючСвязиСерийныхНомеров,
		|	СУММА(Товары.Количество) КАК КоличествоОснования
		|ПОМЕСТИТЬ ТоварыОснования
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &ДокументОснование
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКПоступлениюОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлениюОбороты.Характеристика КАК Характеристика,
		|	СУММА(ВЫБОР
		|			КОГДА &ЗаполнятьКоличество
		|				ТОГДА ТоварыКПоступлениюОбороты.КоличествоОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ ТоварыКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , Регистратор, ДокументОснование = &ДокументОснование) КАК ТоварыКПоступлениюОбороты
		|ГДЕ
		|	ТоварыКПоступлениюОбороты.Регистратор <> &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлениюОбороты.Номенклатура,
		|	ТоварыКПоступлениюОбороты.Характеристика
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКПоступлениюОбороты.КоличествоОборот) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ТолькоКоличество
		|			ТОГДА ДокТЧ.НомерСтроки
		|		ИНАЧЕ ТоварыОснования.НомерСтроки
		|	КОНЕЦ КАК НомерСтроки,
		|	ЕСТЬNULL(ДокТЧ.Номенклатура, ТоварыОснования.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ДокТЧ.Характеристика, ТоварыОснования.Характеристика) КАК Характеристика,
		|	ТоварыОснования.Цена,
		|	ТоварыОснования.Упаковка,
		|	ТоварыОснования.Коэффициент,
		|	ТоварыОснования.КлючСвязиСерийныхНомеров,
		|	ТоварыОснования.КоличествоОснования
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ДокТЧ КАК ДокТЧ
		|		ПОЛНОЕ СОЕДИНЕНИЕ ТоварыОснования КАК ТоварыОснования
		|		ПО ДокТЧ.Номенклатура = ТоварыОснования.Номенклатура
		|			И ДокТЧ.Характеристика = ТоварыОснования.Характеристика
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТолькоКоличество
		|				ТОГДА НЕ ДокТЧ.Номенклатура ЕСТЬ NULL 
		|			ИНАЧЕ НЕ ТоварыОснования.Номенклатура ЕСТЬ NULL 
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	ЕСТЬNULL(ТоварыКПоступлению.Номенклатура, Товары.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ТоварыКПоступлению.Характеристика, Товары.Характеристика) КАК Характеристика,
		|	Товары.Цена,
		|	ТоварыКПоступлению.Количество,
		|	ВЫБОР
		|		КОГДА Товары.Коэффициент ЕСТЬ NULL 
		|				ИЛИ (ВЫРАЗИТЬ(ТоварыКПоступлению.Количество / Товары.Коэффициент КАК ЧИСЛО(15, 0))) <> ТоварыКПоступлению.Количество / Товары.Коэффициент
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ИспользоватьУпаковку,
		|	Товары.Упаковка,
		|	Товары.Коэффициент,
		|	Товары.КоличествоОснования,
		|	ВЫБОР
		|		КОГДА ТоварыКПоступлению.Количество = Товары.КоличествоОснования
		|			ТОГДА Товары.КлючСвязиСерийныхНомеров
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КлючСвязиСерийныхНомеров
		|ПОМЕСТИТЬ ИтоговаяТаблица
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
		|		ПО Товары.Номенклатура = ТоварыКПоступлению.Номенклатура
		|			И Товары.Характеристика = ТоварыКПоступлению.Характеристика
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТолькоКоличество
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ НЕ ТоварыКПоступлению.Количество ЕСТЬ NULL 
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговаяТаблица.НомерСтроки КАК НомерСтрокиСорт,
		|	ИтоговаяТаблица.Номенклатура,
		|	ИтоговаяТаблица.Характеристика,
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
		|			ТОГДА ИтоговаяТаблица.Цена * ИтоговаяТаблица.Коэффициент
		|		ИНАЧЕ ИтоговаяТаблица.Цена
		|	КОНЕЦ КАК Цена,
		|	ИтоговаяТаблица.Количество,
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
		|			ТОГДА ИтоговаяТаблица.Количество / ИтоговаяТаблица.Коэффициент
		|		ИНАЧЕ ИтоговаяТаблица.Количество
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
		|			ТОГДА ИтоговаяТаблица.Упаковка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ КАК Упаковка,
		|	ИтоговаяТаблица.Количество * ИтоговаяТаблица.Цена КАК Сумма,
		|	ИтоговаяТаблица.КлючСвязиСерийныхНомеров
		|ИЗ
		|	ИтоговаяТаблица КАК ИтоговаяТаблица
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиСорт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОснования.КлючСвязиСерийныхНомеров,
		|	СерийныеНомера.СерийныйНомер
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
		|		ПоступлениеТоваровСерийныеНомера.СерийныйНомер КАК СерийныйНомер
		|	ИЗ
		|		Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров.СерийныеНомера КАК ПоступлениеТоваровСерийныеНомера
		|			ПО ПоступлениеТоваровТовары.КлючСвязиСерийныхНомеров = ПоступлениеТоваровСерийныеНомера.КлючСвязиСерийныхНомеров
		|	ГДЕ
		|		ПоступлениеТоваровСерийныеНомера.Ссылка = &ДокументОснование
		|		И ПоступлениеТоваровТовары.Ссылка = &ДокументОснование) КАК СерийныеНомера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыОснования КАК ТоварыОснования
		|		ПО СерийныеНомера.Номенклатура = ТоварыОснования.Номенклатура
		|ГДЕ
		|	ТоварыОснования.КлючСвязиСерийныхНомеров В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ИтоговаяТаблица.КлючСвязиСерийныхНомеров
		|			ИЗ
		|				ИтоговаяТаблица КАК ИтоговаяТаблица)";
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"ПоступлениеТоваров","ПеремещениеТоваров");
		КонецЕсли;
		
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		Если Не РезультатыЗапроса[6].Пустой() Тогда
			
			Товары.Загрузить(РезультатыЗапроса[6].Выгрузить());
			СерийныеНомера.Загрузить(РезультатыЗапроса[7].Выгрузить());
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по основанию ""%ДокументОснование%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", ДокументОснование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДокументОснование");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Товары.Количество() > 0 Тогда 
		ЗапасыСервер.ЗаполнитьЦеныПоРозничнымЦенам(ЭтотОбъект, "Товары", Магазин, ЗапасыСервер.ДатаДляЦенообразованияДляДокумента(ЭтотОбъект), Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ПриходныйОрдерНаТовары.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийныхНомеров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Справочники.СерийныеНомера.ОчиститьВДокументеНеиспользуемыеСерийныеНомера(Товары, СерийныеНомера);
	ОбщегоНазначенияРТ.УдалитьНеиспользуемыеСтрокиСерий(ЭтотОбъект,Документы.ПриходныйОрдерНаТовары.ПараметрыУказанияСерий(ЭтотОбъект));
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	ОбщегоНазначенияРТ.УстановитьНовоеЗначениеРеквизита(
		ЭтотОбъект,
		ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСуммуДокумента(Товары, Истина),
		"СуммаДокумента");
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
		Основание = ДанныеЗаполнения.ДокументОснование;
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда

		Основание = ДанныеЗаполнения;
		
	КонецЕсли;
		
	Если  ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") 
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		ИмяПоля = "Ссылка";
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		ИмяПоля = "ЗаказПоставщику";
		
	КонецЕсли;

	Если ИмяПоля <> Неопределено Тогда
		
		ДокументОснование = ?(ЗначениеЗаполнено(Основание[ИмяПоля]), Основание[ИмяПоля], Основание);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДокументОснование);
		ЗаполнитьПоОснованию();
		
	Иначе
		
		ТекстСообщения = НСтр("ru='Приходный ордер можно вводить только на основании распоряжения на поступление товаров.'");
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
		
	ИнициализироватьДокумент(ДанныеЗаполнения);
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Серии.Очистить();
	ИнициализироватьДокумент();
	
	АссортиментСервер.ПроверитьАссортиментТаблицыТоваровДокументаЗакупки(Магазин, Товары, Дата);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если Магазин.СкладУправляющейСистемы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
	КонецЕсли;
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,Документы.ПриходныйОрдерНаТовары.ПараметрыУказанияСерий(ЭтотОбъект),Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеТЧПриНаличииОбменаСУправлениемТорговлей(
		ЭтотОбъект,
		Отказ);

	МаркетинговыеАкцииСервер.ПроверитьЗаполнениеТабличнойЧастиСерийныеНомера(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);
	
	МаркетинговыеАкцииСервер.ПроверитьДвиженияСерийныхНомеров(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		РеквизитСкладДокументаОснование = "СкладПолучатель";
	Иначе
		РеквизитСкладДокументаОснование = "Склад";
	КонецЕсли;
	СкладДокументаОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, РеквизитСкладДокументаОснование);
	
	Если не Склад = СкладДокументаОснование Тогда
		ТекстСообщения = НСтр("ru = 'Склад документа %1 не соответствует складу основания %2'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Склад, СкладДокументаОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект,
			,
			,
			Отказ);
		КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();
	Магазин       = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(Магазин,,Склад, Ответственный);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Склад")
			И НЕ ЗначениеЗаполнено(Склад) Тогда
			Если ЗначениеЗаполнено(Магазин) Тогда
				Если НЕ Справочники.Склады.ПроверитьПринадлежностьСкладаМагазину(Магазин, ДанныеЗаполнения.Склад) Тогда
					ДанныеЗаполнения.Склад = Справочники.Склады.ПустаяСсылка();
				КонецЕсли;
			Иначе
				Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.Склад, "Магазин");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПоОснованию()

	Реквизиты = Новый Структура("Магазин, Склад, ИспользоватьОрдернуюСхему");

	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда

		Реквизиты.Магазин                   = "МагазинПолучатель";
		Реквизиты.Склад                     = "СкладПолучатель";
		Реквизиты.ИспользоватьОрдернуюСхему = "ЕстьNULL(МагазинПолучатель.ИспользоватьОрдернуюСхемуПриПеремещении, Ложь)";
		
	Иначе

		Реквизиты.Магазин                   = "Магазин";
		Реквизиты.Склад                     = "Склад";
		Реквизиты.ИспользоватьОрдернуюСхему = "ЕстьNULL(Магазин.ИспользоватьОрдернуюСхемуПриПоступлении, Ложь)";
		
	КонецЕсли;

	ЗначенияРеквизитов = ОбщегоНазначенияРТ.ПолучитьЗначенияРеквизитовОбъекта(ДокументОснование, Реквизиты);
	Если ЗначенияРеквизитов.ИспользоватьОрдернуюСхему Тогда

		Магазин = ЗначенияРеквизитов.Магазин;
		Склад   = ЗначенияРеквизитов.Склад;
		ЗаполнитьТоварыПоТоварамКПоступлению("НоменклатураКоличество");

		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			ПоступлениеПоЗаказу = Документы.ПоступлениеТоваров.ПолучитьПоступлениеТоваровПоЗаказуПоставщику(ДокументОснование);
			Если НЕ ПоступлениеПоЗаказу = Неопределено Тогда
				Склад = ПоступлениеПоЗаказу.Склад;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе

		ТекстСообщение = НСтр("ru = 'Для магазина ""%Магазин%"" оформление приходных ордеров не требуется.
									|Заполнение документа не выполнено.'");
		ТекстСообщение = СтрЗаменить(ТекстСообщение, "%Магазин%", Строка(ЗначенияРеквизитов.Магазин));

		ВызватьИсключение ТекстСообщение;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
