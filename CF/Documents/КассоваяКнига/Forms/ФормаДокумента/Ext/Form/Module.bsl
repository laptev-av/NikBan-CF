
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,
		КартинкаСостоянияДокумента,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		РазрешеноПроведение);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
		
	// &ЗамерПроизводительности	
	ОценкаПроизводительностиРТКлиент.ЗакончитьЗамер(ПараметрыЗаписи.Замер);
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// &ЗамерПроизводительности
	Замер = ОценкаПроизводительностиРТКлиент.НачатьЗамер(Ложь, 
	                                            "Документ.КассоваяКнига.ФормаДокумента.Запись",
                                                   Ложь);
	
	ПараметрыЗаписи.Вставить("Замер", Замер);
	
КонецПроцедуры


#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	МагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументы

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КассовыйОрдер" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.КассовыйОрдер) Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.КассовыйОрдер);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументы(Команда)

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Организация");
	СтруктураРеквизитов.Вставить("Дата");
	
	ЗаполнятьТабличнуюЧасть = Истина;
	Оповещение = Новый ОписаниеОповещения("ПослеПроверкиВозможностиЗаполнения", ЭтотОбъект);
	ОбщегоНазначенияРТКлиент.ПроверитьВозможностьЗаполненияТабличнойЧасти(
		ЭтаФорма,
		Объект.КассовыеОрдера,
		СтруктураРеквизитов,
		ЗаполнятьТабличнуюЧасть,
		Оповещение);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеПроверкиВозможностиЗаполнения(ЗаполнятьТабличнуюЧасть, ДополнительныеПараметры) Экспорт
	
	Если ЗаполнятьТабличнуюЧасть Тогда
		ЗаполнитьДокументыСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыСервер()
	
	Объект.КассовыеОрдера.Очистить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассоваяКнига.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КассоваяКнига КАК КассоваяКнига
	|ГДЕ
	|	КассоваяКнига.Ссылка <> &ТекущийДокумент
	|	И КассоваяКнига.Организация = &Организация
	|	И КассоваяКнига.ДоговорПлатежногоАгента = &ДоговорПлатежногоАгента
	|	И КассоваяКнига.Магазин = &Магазин
	|	И КассоваяКнига.Проведен
	|	И НачалоПериода(КассоваяКнига.Дата, ДЕНЬ) = &ДатаНач
	|");
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДоговорПлатежногоАгента", Объект.ДоговорПлатежногоАгента);
	Запрос.УстановитьПараметр("Магазин", Объект.
	Магазин);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	
	ЗаполнятьДокументы = Истина;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'На дату %1 уже существует документ: %2'"),
			Формат(Объект.Дата, "ДЛФ=D"), Выборка.Ссылка);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			, // КлючДанных
			"Объект.Дата");
		ЗаполнятьДокументы = Ложь;
		
	КонецЦикла;

	Если ЗаполнятьДокументы Тогда
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Кассы.Ссылка КАК Касса
		|ПОМЕСТИТЬ КассыМагазина
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|ГДЕ
		|	Кассы.Владелец = &Организация
		|	%УсловиеМагазин%
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДенежныеСредства.Регистратор КАК КассовыйОрдер,
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Приход,
		|	СУММА(ВЫБОР
		|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ДенежныеСредства.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Расход,
		|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет) КАК КорреспондирующийСчет
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КассоваяКнига.КассовыеОрдера КАК КассоваяКнига
		|		ПО (КассоваяКнига.Ссылка <> &Ссылка)
		|			И (КассоваяКнига.Ссылка.Проведен)
		|			И (КассоваяКнига.КассовыйОрдер = ДенежныеСредства.Регистратор)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
		|		ПО (СтатьиДДС.Ссылка = ДенежныеСредства.СтатьяДвиженияДенежныхСредств)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КассыМагазина КАК КассыМагазина
		|		ПО ДенежныеСредства.Касса = КассыМагазина.Касса
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ДенежныеСредства.Организация = &Организация
		|	И ДенежныеСредства.ДоговорПлатежногоАгента = &ДоговорПлатежногоАгента
		|	%УсловиеМагазин1%
		|	%УсловиеХозОпераций%
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредства.Регистратор,
		|	ДенежныеСредства.Период
		|УПОРЯДОЧИТЬ ПО
		|	ДенежныеСредства.Период";
		
		Если ЗначениеЗаполнено(Объект.Магазин) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеМагазин%", "И Кассы.Магазин = &Магазин");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеМагазин1%", "И ДенежныеСредства.Касса.Магазин = &Магазин");
			
			УсловиеХозОпераций ="
			|	И ВЫБОР
			|			КОГДА ДенежныеСредства.СтатьяДвиженияДенежныхСредств.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу)
			|				ТОГДА ВЫБОР
			|						КОГДА ДенежныеСредства.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
			|							ТОГДА НЕ ДенежныеСредства.Регистратор.ДокументОснование.Касса.Магазин = ДенежныеСредства.Касса.Магазин
			|						ИНАЧЕ НЕ ДенежныеСредства.Касса.Магазин = ДенежныеСредства.Регистратор.КассаПолучатель.Магазин
			|					КОНЕЦ
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеХозОпераций%", УсловиеХозОпераций);
			
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеМагазин%", "");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеМагазин1%", "");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеХозОпераций%", 
			"И НЕ ДенежныеСредства.СтатьяДвиженияДенежныхСредств.ХозяйственнаяОперация В
			|(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы),
			| ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу))");
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.Дата));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.Дата));
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("ДоговорПлатежногоАгента", Объект.ДоговорПлатежногоАгента);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Магазин", Объект.Магазин);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'На дату %1 нет документов для заполнения листа кассовой книги'"),
				Формат(Объект.Дата, "ДЛФ=D"), Выборка.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				, // КлючДанных
				"Дата");
		Иначе

			Объект.КассовыеОрдера.Загрузить(РезультатЗапроса.Выгрузить());
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер()
	
	Объект.КассовыеОрдера.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииСервер()
	
	Объект.КассовыеОрдера.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура МагазинПриИзмененииНаСервере()
	
	Объект.КассовыеОрдера.Очистить();
	
КонецПроцедуры


#КонецОбласти
