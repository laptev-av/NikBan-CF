
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДисконтнаяКарта = Параметры.ДисконтнаяКарта;
	БонуснаяПрограммаЛояльности = Параметры.БонуснаяПрограммаЛояльности;
	УникальныйИдентификаторФормыВладельца = Новый УникальныйИдентификатор(Параметры.УникальныйИдентификатор);
	ОписаниеБонуснойПрограммы = Строка(ДисконтнаяКарта) + " (" + Строка(БонуснаяПрограммаЛояльности) + ")";
	КурсКонвертацииБонусовВВалюту = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БонуснаяПрограммаЛояльности, "КурсКонвертацииБонусовВВалюту");
	Если КурсКонвертацииБонусовВВалюту = 0 Тогда
		КурсКонвертацииБонусовВВалюту = 1;
	КонецЕсли;

	// Расчет максимальной суммы оплаты бонусами.
	ТабличнаяЧастьТовары = ПолучитьИзВременногоХранилища(Параметры.АдресТабличнойЧастиТовары);
	ТабличнаяЧастьТовары.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаРезультат = БонусныеБаллыСервер.ТаблицаМаксимальныхСуммОплаты(ТабличнаяЧастьТовары, БонуснаяПрограммаЛояльности, Параметры.Магазин);
	
	МаксимальнаяСуммаОплаты = ТаблицаРезультат.Итог("МаксимальнаяСуммаОплаты");
	МаксимальнаяСуммаОплатыВБаллах = Цел(МаксимальнаяСуммаОплаты / КурсКонвертацииБонусовВВалюту);
	МаксимальнаяСуммаОплаты = Окр(МаксимальнаяСуммаОплатыВБаллах * КурсКонвертацииБонусовВВалюту, 2);
	
	ОстаткиБонусныхБаллов.Загрузить(БонусныеБаллыСервер.ОстаткиИДвиженияБонусныхБаллов(Параметры.ДисконтнаяКарта));
	
	НачальныйОстатокВБаллах = ОстаткиБонусныхБаллов[0].Сумма;
	НачальныйОстаток = Окр(НачальныйОстатокВБаллах * КурсКонвертацииБонусовВВалюту, 2);

	МаксимальнаяСуммаОплаты        = Мин(МаксимальнаяСуммаОплаты, НачальныйОстаток);
	МаксимальнаяСуммаОплатыВБаллах = Мин(МаксимальнаяСуммаОплатыВБаллах, НачальныйОстатокВБаллах);
	//
	Если НачальныйОстатокВБаллах <= 0 Тогда
		СтрокаМаксимальнойСуммы = НСтр("ru = 'Невозможно оплатить покупку баллами: накоплено 0 бонусных баллов'");
		ОписаниеМаксимальнаяСуммаОплаты = СтрокаМаксимальнойСуммы;
		Элементы.ФормаОплатитьБаллами.Доступность = Ложь;
	ИначеЕсли МаксимальнаяСуммаОплаты <= 0 Тогда
		Если ТаблицаРезультат.Количество() > 0 Тогда
			СтрокаМаксимальнойСуммы = НСтр("ru = 'Невозможно оплатить покупку баллами: достигнуты максимальные суммы скидок'");
		Иначе
			СтрокаМаксимальнойСуммы = НСтр("ru = 'Невозможно оплатить покупку баллами: нет товаров для оплаты баллами'");
		КонецЕсли;
		ОписаниеМаксимальнаяСуммаОплаты = СтрокаМаксимальнойСуммы;
		Элементы.ФормаОплатитьБаллами.Доступность = Ложь;
	Иначе
		СтрокаМаксимальнойСуммы = НСтр("ru = 'Максимальная сумма оплаты: %1 руб. (%2 бонусных баллов)'");
		ОписаниеМаксимальнаяСуммаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаМаксимальнойСуммы, МаксимальнаяСуммаОплаты, МаксимальнаяСуммаОплатыВБаллах);
		Элементы.ФормаОплатитьБаллами.Доступность = Истина;
	КонецЕсли;
	
	СуммаОплаты        = МаксимальнаяСуммаОплаты;
	СуммаОплатыВБаллах = МаксимальнаяСуммаОплатыВБаллах;
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ТаблицаРезультат, УникальныйИдентификаторФормыВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СуммаОплатыПриИзменении(Элемент)
	
	СтрокаПредупреждения = "";
	Если СуммаОплаты > МаксимальнаяСуммаОплаты Тогда
		СтрокаПредупреждения = НСтр("ru = 'Максимальная сумма оплаты %1 руб'");
		СуммаОплаты = МаксимальнаяСуммаОплаты;
	КонецЕсли;
	СуммаОплатыВБаллах = Цел(СуммаОплаты / КурсКонвертацииБонусовВВалюту);
	СуммаОплаты = Окр(СуммаОплатыВБаллах * КурсКонвертацииБонусовВВалюту, 2);
	Если НЕ ПустаяСтрока(СтрокаПредупреждения) Тогда
		СтрокаПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПредупреждения, СуммаОплаты);
		ПоказатьПредупреждение(,СтрокаПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаОплатыВБаллахПриИзменении(Элемент)
	
	Если СуммаОплатыВБаллах > МаксимальнаяСуммаОплатыВБаллах Тогда
		СтрокаПредупреждения = НСтр("ru = 'Максимальная сумма оплаты %1 руб'");
		СуммаОплатыВБаллах = МаксимальнаяСуммаОплатыВБаллах;
	КонецЕсли;
	СуммаОплаты = Окр(СуммаОплатыВБаллах * КурсКонвертацииБонусовВВалюту, 2);
	Если НЕ ПустаяСтрока(СтрокаПредупреждения) Тогда
		СтрокаПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПредупреждения, СуммаОплаты);
		ПоказатьПредупреждение(,СтрокаПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОплатитьБаллами(Команда)
	
	Если СуммаОплатыВБаллах > 0 И СуммаОплаты > 0 Тогда
		ПараметрыДанных = Новый Структура;
		ПараметрыДанных.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище());
		ПараметрыДанных.Вставить("БонуснаяПрограмма", БонуснаяПрограммаЛояльности);
	Иначе
		ПараметрыДанных = Неопределено;
	КонецЕсли;
	
	Закрыть(ПараметрыДанных);
	
	//Если СуммаОплатыВБаллах > 0 И СуммаОплаты > 0 Тогда
	//	Оповестить("ОплатаБонуснымиБаллами", ПараметрыДанных, "ФормаОплатыБонуснымиБаллами");
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АдресВоВременномХранилище()
	
	ТаблицаРаспределения = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	БонусныеБаллыСервер.РаспределитьСуммуОплатыПоТоварам(ТаблицаРаспределения, СуммаОплаты, СуммаОплатыВБаллах);
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаРаспределения, УникальныйИдентификаторФормыВладельца);
	
КонецФункции

#КонецОбласти
