#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ТТН
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = '1-Т (Товарно - транспортная накладная)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиТТН";

	// М11
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'М-11 (Требование -  накладная)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// М-4 (Приходный ордер)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'М-4 (Приходный ордер)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Накладная на перемещение
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НакладнаяНаПеремещение";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на перемещение'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Опись номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОписьНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Опись номенклатуры'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// ТОРГ-13 (Накладная на внутреннее перемещение).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ13";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ-13 (Накладная на внутреннее перемещение)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Транспортная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
	КомандаПечати.Идентификатор = "ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	
	ПараметрыПечатиЦенников = Новый Структура;
	ПараметрыПечатиЦенников.Вставить("ИмяПроцедурыПодготовкиСтруктурыДанных", "УправлениеПечатьюРТВызовСервера.ПодготовитьСтруктуруДанныхЦенниковИЭтикетокДляПеремещенияТоваров");
	ПараметрыПечатиЦенников.Вставить("УстановитьРежим", "ПечатьЦенников");
	ПараметрыПечатиЦенников.Вставить("ИмяДокумента", "ПеремещениеТоваров");
	
	ДоступноПечатьЭтикетокИЦенников = ПравоДоступа("Использование", Метаданные.Обработки.ПечатьЭтикетокИЦенников);
	
	Если ДоступноПечатьЭтикетокИЦенников Тогда
		// Ценники
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Ценники";
		КомандаПечати.Представление = НСтр("ru = 'Ценники'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Обработчик = "УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиЦенниковИЭтикеток";
		КомандаПечати.ДополнительныеПараметры.Вставить("ПараметрыПечатиЦенниковИЭтикеток", ПараметрыПечатиЦенников);
		
		// Этикетки
		ПараметрыПечатиЭтикеток = Новый Структура;
		ПараметрыПечатиЭтикеток.Вставить("ИмяПроцедурыПодготовкиСтруктурыДанных", "УправлениеПечатьюРТВызовСервера.ПодготовитьСтруктуруДанныхЦенниковИЭтикетокДляПеремещенияТоваров");
		ПараметрыПечатиЭтикеток.Вставить("УстановитьРежим", "ПечатьЭтикеток");
		ПараметрыПечатиЭтикеток.Вставить("ИмяДокумента", "ПеремещениеТоваров");
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Этикетки";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Обработчик = "УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиЦенниковИЭтикеток";
		КомандаПечати.ДополнительныеПараметры.Вставить("ПараметрыПечатиЦенниковИЭтикеток", ПараметрыПечатиЭтикеток);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") 
							И ПланыОбмена.ОбменУправлениеТорговлейРозница.СуществуютУзлыПланаОбмена()
							И ПолучитьФункциональнуюОпцию("ИспользоватьСинхронизациюДанных");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	ПараметрыУказанияСерий.Вставить("ЭтоПеремещениеМеждуСкладами", Истина);
	ПараметрыУказанияСерий.Вставить("ИмяПоляМагазин", "МагазинОтправитель");
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещению);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Функция получает данные для формирования печатной формы Транспортная накладная.
//
Функция ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(МассивДокументов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                                  КАК Ссылка,
	|	ПеремещениеТоваров.Дата                                    КАК Дата,
	|	ПеремещениеТоваров.Организация                             КАК Грузополучатель,
	|	ПеремещениеТоваров.ОрганизацияПолучатель 				   КАК Грузоотправитель,
	|	ЕСТЬNULL(МагазинКонтактнаяОтправитель.Представление, """") КАК ПунктПогрузки,
	|	ЕСТЬNULL(МагазинКонтактнаяПолучатель.Представление, """")  КАК ПунктРазгрузки
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Магазины.КонтактнаяИнформация КАК МагазинКонтактнаяПолучатель
	|ПО
	|	ПеремещениеТоваров.МагазинПолучатель = МагазинКонтактнаяПолучатель.Ссылка
	|	И МагазинКонтактнаяПолучатель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина)
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Магазины.КонтактнаяИнформация КАК МагазинКонтактнаяОтправитель
	|ПО
	|	ПеремещениеТоваров.МагазинОтправитель = МагазинКонтактнаяОтправитель.Ссылка
	|	И МагазинКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина)
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.МагазинОтправитель КАК МагазинОтправитель,
	|	ДанныеДокумента.МагазинПолучатель КАК МагазинПолучатель,
	|	ДанныеДокумента.СкладОтправитель КАК СкладОтправитель,
	|	(НЕ ДанныеДокумента.МагазинОтправитель.СкладУправляющейСистемы) КАК ДвиженияПоОтправителю,
	|	(НЕ ДанныеДокумента.МагазинПолучатель.СкладУправляющейСистемы) КАК ДвиженияПоПолучателю,
	|	ДанныеДокумента.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПеремещениеТоваров) КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка КАК Основание,
	|	ДанныеДокумента.МагазинПолучатель.ИспользоватьОрдернуюСхемуПриПеремещении КАК ПоступлениеПоОрдернойСхеме,
	|	ДанныеДокумента.МагазинОтправитель.ИспользоватьОрдернуюСхемуПриПеремещении КАК РеализацияПоОрдернойСхеме,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ЗаказНаПеремещение
	|				И (НЕ ДанныеДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоЗаказу
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	НастройкаСпособаУчета      = ЗапасыСервер.ПолучитьСпособУчетаСебестоимости(Реквизиты.Период);
	СпособУчетаСебестоимости   = НастройкаСпособаУчета.СпособУчета;
	РаспределятьСтоимостьУслуг = НастройкаСпособаУчета.РаспределятьСтоимостьУслуг;
	ПравилоРаспределения       = НастройкаСпособаУчета.ПравилоРаспределения;
	
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперацииОтправитель", Справочники.АналитикаХозяйственныхОпераций.ПередачаТоваровДоРеализации);
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперацииПолучатель", Справочники.АналитикаХозяйственныхОпераций.ПриемТоваровОтДругойОрганизации);
	Запрос.УстановитьПараметр("СпособУчета", СпособУчетаСебестоимости);
	Запрос.УстановитьПараметр("СебестоимостьВключаетНДС", Константы.СебестоимостьВключаетНДС.Получить());
	Запрос.УстановитьПараметр("ИспользоватьУчетСебестоимости", ПолучитьФункциональнуюОпцию("ИспользоватьУчетСебестоимости"));
	Запрос.УстановитьПараметр("Поставщик", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("НомерГТД" , Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("Договор", Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("Услуга", Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	ПериодОбновления = Константы.ПериодОбновленияПоставляемойНоменклатуры.Получить();
	Запрос.УстановитьПараметр("ПериодОбновления", ПериодОбновления);
	
	Запрос.УстановитьПараметр("ВедетсяУчетОстатковОтправителя", ПланыОбмена.ПоМагазину.ВедетсяУчетОстатковМагазина(Реквизиты.МагазинОтправитель));
	Запрос.УстановитьПараметр("ВедетсяУчетОстатковПолучателя", ПланыОбмена.ПоМагазину.ВедетсяУчетОстатковМагазина(Реквизиты.МагазинПолучатель));
	
	ТекстЗапроса = "";
	
	ТекстЗапроса = 
	"//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	&СкладПолучатель КАК СкладПолучатель,
	|	&СкладОтправитель КАК СкладОтправитель,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	&Основание КАК Основание
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1 Услуги к распределению на себестоимость.
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Услуга,
	|	Товары.Сумма КАК Сумма
	|	ИЗ
	|		ВтТаблицаТовары КАК Товары
	|	ГДЕ
	|	&ИспользоватьУчетСебестоимости
	|	И Товары.ТипНоменклатуры = &Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаТоварыНаСкладах
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|   ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|   НЕ &РеализацияПоОрдернойСхеме
	|   И &ДвиженияПоОтправителю
	|   И &ВедетсяУчетОстатковОтправителя
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	&Приход,
	|	&Период,
	|	ТаблицаТовары.СкладПолучатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|   ТаблицаТовары.АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|   НЕ &ПоступлениеПоОрдернойСхеме
	|   И &ДвиженияПоПолучателю
	|   И &ВедетсяУчетОстатковПолучателя
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаТоварыКПоступлению
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Приход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладПолучатель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоОрдернойСхеме
	|   И &ДвиженияПоПолучателю
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаТоварыКОтгрузке
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Приход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&РеализацияПоОрдернойСхеме
	|   И &ДвиженияПоОтправителю
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 5 ТаблицаТоварыОрганизаций
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Поставщик КАК Поставщик,
	|	&Договор КАК Договор,
	|	&НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Сумма КАК СуммаПродажи
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	&Приход,
	|	&Период,
	|	&ОрганизацияПолучатель,
	|	&ПустаяОрганизация,
	|	&СкладПолучатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	&Поставщик,
	|	&Договор,
	|	&НомерГТД,
	|	ТаблицаТовары.Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ВидДвижения УБЫВ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 6 ЗаказыТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	&ДокументОснование КАК Заказ,
	|	&МагазинПолучатель КАК Магазин,
	|	&МагазинОтправитель КАК Поставщик,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|   &ДвиженияПоПолучателю
	|   И &ПоЗаказу
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// 7 -  ТаблицаНоменклатураПоставщиков
	|ВЫБРАТЬ
	|   &МагазинПолучатель           КАК Магазин,
	|	&МагазинОтправитель          КАК Поставщик,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	ВтТаблицаТовары              КАК ТаблицаТовары
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|ПО
	|	НоменклатураПоставщиков.Поставщик = &МагазинОтправитель
	|	И НоменклатураПоставщиков.Магазин = &МагазинПолучатель
	|	И НоменклатураПоставщиков.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НоменклатураПоставщиков.Характеристика = ТаблицаТовары.Характеристика
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПоставщикиНоменклатуры КАК ПоставщикиНоменклатуры
	|	ПО &МагазинОтправитель = ПоставщикиНоменклатуры.Поставщик
	|ГДЕ
	|	НоменклатураПоставщиков.Поставщик ЕСТЬ NULL
	|	И &ДвиженияПоПолучателю
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|	И &ПериодОбновления <= &Период
	|СГРУППИРОВАТЬ ПО
	|	&МагазинПолучатель,
	|	&МагазинОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 8 ТаблицаДвиженияСерийТоваров
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&МагазинПолучатель КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПеремещению) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|   И НЕ &ПоступлениеПоОрдернойСхеме
	|   И &ДвиженияПоПолучателю
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&МагазинОтправитель КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещению) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|   И НЕ &РеализацияПоОрдернойСхеме
	|   И &ДвиженияПоОтправителю
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки;
	|/////////////////////////////////////////////////////////////////////////////
	// 9 Себестоимость номенклатуры.
	|ВЫБРАТЬ
	|	Себестоимость.Номенклатура,
	|	Себестоимость.Характеристика,
	|	ВЫБОР
	|		КОГДА Себестоимость.Период ЕСТЬ НЕ NULL 
	|				И СебестоимостьПустойМагазин.Период ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Себестоимость.Период >= СебестоимостьПустойМагазин.Период
	|						ТОГДА Себестоимость.Цена
	|					ИНАЧЕ СебестоимостьПустойМагазин.Цена
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Себестоимость.Период ЕСТЬ НЕ NULL 
	|					ТОГДА Себестоимость.Цена
	|				ИНАЧЕ СебестоимостьПустойМагазин.Цена
	|			КОНЕЦ
	|	КОНЕЦ КАК Себестоимость
	|ПОМЕСТИТЬ СебестоимостьНоменклатуры
	|ИЗ
	|	РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|			&Период,
	|			Магазин = &МагазинОтправитель И НЕ Регистратор = &Ссылка
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВтТаблицаТовары.Номенклатура,
	|						ВтТаблицаТовары.Характеристика
	|					ИЗ
	|						ВтТаблицаТовары КАК ВтТаблицаТовары)) КАК Себестоимость
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|				&Период,
	|				Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка) И НЕ Регистратор = &Ссылка
	|					И (Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВтТаблицаТовары.Номенклатура,
	|							ВтТаблицаТовары.Характеристика
	|						ИЗ
	|							ВтТаблицаТовары КАК ВтТаблицаТовары)) КАК СебестоимостьПустойМагазин
	|		ПО Себестоимость.Номенклатура = СебестоимостьПустойМагазин.Номенклатура
	|			И Себестоимость.Характеристика = СебестоимостьПустойМагазин.Характеристика
	|ГДЕ &ИспользоватьУчетСебестоимости И &СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчет)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	// 10 - ТаблицаСебестоимостьНоменклатуры
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&МагазинПолучатель                      КАК Магазин,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	МИНИМУМ(СебестоимостьНоменклатуры.Себестоимость) КАК Цена,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.Количество * ЕСТЬNULL(СебестоимостьНоменклатуры.Себестоимость, 0)) КАК Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьНоменклатуры КАК СебестоимостьНоменклатуры
	|ПО ТаблицаТовары.Номенклатура = СебестоимостьНоменклатуры.Номенклатура
	|	И ТаблицаТовары.Характеристика = СебестоимостьНоменклатуры.Характеристика
	|ГДЕ
	|	&СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчет)
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|	И НЕ ЕстьNULL(СебестоимостьНоменклатуры.Себестоимость, 0)= 0
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// 11 ТаблицаСебестоимостьПоставкиТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&МагазинПолучатель                     КАК Магазин,
	|	&МагазинОтправитель                    КАК МагазинОтправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	0                                      КАК Цена,
	|	0                                      КАК Сумма,
	|	ТаблицаТовары.Сумма                    КАК СуммаБаза
	|ИЗ
	|ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьУчетСебестоимости
	|	И &СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчетСредняяВзвешенная)
	|	И &ДвиженияПоПолучателю
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = &Услуга
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|";
	
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаТаблицаСерийныхНомеров();
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаСебестоимостьНоменклатуры = Результат[10].Выгрузить();
	ТаблицаСебестоимостьПоставкиТоваров = Результат[11].Выгрузить();
	
	ТаблицаУслугНаРаспределение = Результат[1].Выгрузить();
	Если РаспределятьСтоимостьУслуг Тогда
		ЗапасыСервер.РаспределитьУслугиНаСебестоимость(ТаблицаУслугНаРаспределение, ПравилоРаспределения, ТаблицаСебестоимостьНоменклатуры, СпособУчетаСебестоимости, ТаблицаСебестоимостьПоставкиТоваров, "СуммаБаза");
	КонецЕсли;
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"              , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению"           , Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"              , Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"            , Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыТоваров"                , Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНоменклатураПоставщиков"      , Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"         , Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьНоменклатуры"    , ТаблицаСебестоимостьНоменклатуры);
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"              , Результат[18].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьПоставкиТоваров" , ТаблицаСебестоимостьПоставкиТоваров);
	
	ИспользоватьКомиссионнуюТорговлю = ДополнительныеСвойства.ИспользуетсяКомиссионнаяТорговля;
	ИспользоватьУчетИмпортныхТоваров = ДополнительныеСвойства.ИспользуетсяУчетИмпортныхТоваров;
	
	Если ИспользоватьКомиссионнуюТорговлю 
		ИЛИ ИспользоватьУчетИмпортныхТоваров Тогда
		ЕстьДанныеДляОтчетаКомитенту = Ложь;
		ПроведениеСервер.ПерезаполнитьТаблицуДвиженийТоварыОрганизаций(
			ТаблицыДляДвижений.ТаблицаТоварыОрганизаций,
			ДокументСсылка,
			Реквизиты.Период,
			ЕстьДанныеДляОтчетаКомитенту);
		Если ИспользоватьКомиссионнуюТорговлю Тогда
			ТаблицыДляДвижений.Вставить(
				"ТаблицаТоварыКОформлениюОтчетовКомитенту",
				ПроведениеСервер.ТаблицаДвиженийКомитенту(ТаблицыДляДвижений.ТаблицаТоварыОрганизаций, ЕстьДанныеДляОтчетаКомитенту));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение", 
			НСтр("ru = 'Накладная на перемещение'"), 
			ПечатьНакладная(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьНоменклатуры") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьНоменклатуры",
				ПараметрыПечати.Представление,
				ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ТОРГ13",
			НСтр("ru = 'ТОРГ-13 (Накладная на внутреннее перемещение)'"), 
			ПечатьТОРГ13(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"М4",
			НСтр("ru = 'М-4 (Приходный ордер)'"),
			ПечатьМ4(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11",
			НСтр("ru = 'М-11 (Требование -  накладная)'"),
			ПечатьМ11(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН",
			НСтр("ru = '1-Т (Товарно - транспортная накладная)'"),
			ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;

КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует текст запроса по серийным номерам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ПеремещениеТоваров.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	(НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL )
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL 
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаСерийныеНомера.Номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Получатель,
	|	ВЫБОР
	|		КОГДА &РеализацияПоОрдернойСхеме
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ &СкладОтправитель
	|	КОНЕЦ КАК Отправитель,
	|	&Организация КАК Организация,
	|	&АналитикаХозяйственнойОперацииОтправитель КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|	И НЕ &РеализацияПоОрдернойСхеме
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ТаблицаСерийныеНомера.Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоОрдернойСхеме
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ &СкладПолучатель
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	&ОрганизацияПолучатель,
	|	&АналитикаХозяйственнойОперацииПолучатель
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК Номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И НЕ &ПоступлениеПоОрдернойСхеме";
	
	Возврат ТекстЗапроса;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати)
		
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Перемещение товаров'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_НакладнаяНаПеремещение";
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|   Документ.СкладОтправитель КАК Отправитель,
	|   Документ.СкладПолучатель КАК Получатель,	
	|	ПРЕДСТАВЛЕНИЕ(Документ.СкладОтправитель) КАК ОтправительПредставление,
	|   ПРЕДСТАВЛЕНИЕ(Документ.СкладПолучатель) КАК ПолучательПредставление,
	|	Документ.Организация.Префикс КАК Префикс
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|   ТаблицаТовары.Цена КАК Цена,
	|   ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|   Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеТоваров.ПФ_MXL_НакладнаяНаПеремещение");

	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
		
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// ШАПКА
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		ВсегоНаименований = 0;
		Итого             = 0;
		СуммаТоваров      = 0;
		СуммаУслуг        = 0;
		ТипУслуга = Перечисления.ТипыНоменклатуры.Услуга;
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
			Если ВыборкаПоСтрокамТЧ.ТипНоменклатуры = ТипУслуга Тогда
				СуммаУслуг = СуммаУслуг + ВыборкаПоСтрокамТЧ.Сумма;
			Иначе
				СуммаТоваров = СуммаТоваров + ВыборкаПоСтрокамТЧ.Сумма;
			КонецЕсли;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		// ИТОГО
		ОбластьИтого.Параметры.Итого = ФормированиеПечатныхФормСервер.ФорматСумм(Итого);
		ОбластьИтого.Параметры.СуммаУслуг = ФормированиеПечатныхФормСервер.ФорматСумм(СуммаУслуг);
		ОбластьИтого.Параметры.СуммаТоваров = ФормированиеПечатныхФормСервер.ФорматСумм(СуммаТоваров);
		ТабличныйДокумент.Вывести(ОбластьИтого);
								
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТОРГ13(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументКПечати.Ссылка                                                 КАК Ссылка,
		|	ДокументКПечати.Номер                                                  КАК Номер,
		|	ДокументКПечати.Дата                                                   КАК Дата,
		|	ДокументКПечати.Организация                                            КАК Организация,
		|	ДокументКПечати.Организация.Префикс                                    КАК Префикс,
		|	ДокументКПечати.СкладОтправитель                                       КАК ОтправительПодразделение,
		|	ДокументКПечати.СкладПолучатель                                        КАК ПолучательПодразделение
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ДокументКПечати
		|
		|ГДЕ
		|	ДокументКПечати.Ссылка В (&МассивДокументов)
		|	И ДокументКПечати.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;		
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК БазоваяЕдиницаНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК БазоваяЕдиницаКодПоОКЕИ,
		|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление                         КАК ВидУпаковки,
		|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент              КАК КоличествоВОдномМесте,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0)                                КАК КоличествоМест,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
		|	ВложенныйЗапрос.МассаБрутто                                                КАК МассаБрутто
		|ИЗ (
		|	ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.Номенклатура КАК Номенклатура,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК Коэффициент,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмерения,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК КоэффициентМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмеренияМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка.Вес ЕСТЬ NULL ТОГДА
		|			Товары.Количество * Товары.Номенклатура.Вес
		|		ИНАЧЕ
		|			Товары.КоличествоУпаковок * Товары.Упаковка.Вес
		|		КОНЕЦ КАК МассаБрутто,
		|		Товары.Характеристика     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА
		|				Товары.КоличествоУпаковок = 0
		|			ТОГДА
		|				Товары.Цена
		|			ИНАЧЕ
		|				Товары.Сумма / Товары.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Товары.КоличествоУпаковок КАК Количество,
		|		Товары.КоличествоУпаковок КАК КоличествоМест,
		|		Товары.Сумма              КАК Сумма,
		|		Товары.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка В (&МассивДокументов)
		|		И Товары.Ссылка.Проведен
		|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13";
			
		ЕдиницаИзмеренияВеса           = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса");
		
		ТабличныйДокумент.ПолеСлева = 5;
		ТабличныйДокумент.ПолеСправа = 5;
		ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
		ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ДанныеПечати = МассивРезультатов[0].Выбрать();
		ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ13");
		
		ПервыйДокумент = Истина;
		Пока ДанныеПечати.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			СведенияОбОрганизации     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
			ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
				
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
						
			// Выводим коды
			ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
				
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			НомерСтраницы = 1;
			
			ИтоговыеСуммы = Новый Структура;
			
			// Инициализация итогов по странице.
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
			
			// Инициализация итогов по документу.
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМест", 0);
			ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
						
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("Номер", 0);
			ДанныеСтроки.Вставить("Мест", 0);
			ДанныеСтроки.Вставить("Количество", 0);
			ДанныеСтроки.Вставить("Цена", 0);
			ДанныеСтроки.Вставить("МассаБрутто", 0);
			ДанныеСтроки.Вставить("Сумма", 0);

						
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			КоличествоСтрок = ВыборкаПоДокументам.Количество();
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				
				ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
								
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
				
				ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
				ДанныеСтроки.Количество  = СтрокаТовары.Количество;
				
				Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
					Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
						ДанныеСтроки.МассаБрутто = 0;
					Иначе
						ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеСтроки.Цена  = СтрокаТовары.Цена;
				ДанныеСтроки.Сумма = СтрокаТовары.Сумма;
				
				ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
				
				Если ДанныеСтроки.Номер = 1 Тогда // первая строка
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
					
					Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьВсего);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
						ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
						
						ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
						ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
						ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
								
				// Увеличим итоги по странице.
				ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.Сумма;
				ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
								
				// Увеличим итоги по документу.
				ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.Сумма;
				ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
								
			КонецЦикла;
			
			// Выводим итоги по последней странице.
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом.
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.ИтогоСуммаПрописью = ЧислоПрописью(Цел(ИтоговыеСуммы.ИтогоСумма),,",,,,,,,,0");
			КопеекЦифрами = (ИтоговыеСуммы.ИтогоСумма - Цел(ИтоговыеСуммы.ИтогоСумма))*100;
			ОбластьМакета.Параметры.ИтогоСуммаКопейки  = Формат(КопеекЦифрами, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
		
		Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати)
				
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Дата                                    КАК ДатаСоставления,
		|	Документ.Организация                             КАК Поставщик,
		|	Документ.ОрганизацияПолучатель 					 КАК Организация,
		|	Документ.ОрганизацияПолучатель 					 КАК ЮрФизЛицо,
		|	Документ.ОрганизацияПолучатель.Префикс           КАК Префикс,
		|	Документ.СкладПолучатель.Наименование            КАК СкладНаименование,
		|	Документ.СкладПолучатель                         КАК МестоПриемки
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.Количество                                                 КАК КоличествоПринято,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		Документ.Характеристика     КАК Характеристика,
	   	|		Документ.КоличествоУпаковок КАК Количество,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|	И НЕ Документ.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М4";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М4");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки.
		СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок документа.
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ДатаСоставления = ДанныеПечати.ДатаСоставления;
		
		СведенияОПоставщике     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаСоставления);
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеПоставщика;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		// Выводим заголовок таблицы
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		НомерСтраницы = 1;
				
		ИтоговыеСуммы = Новый Структура;
	
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
				
		ДанныеСтроки = Новый Структура;
		
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
			
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвалСтрок      = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ДанныеСтроки.Номер       = ДанныеСтроки.Номер + 1;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
					
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			
			Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабличныйДокумент.Вывести(ПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
				
		КонецЦикла;
		
		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтоговыеСуммы.ИтогоКоличество;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Дата                                    КАК ДатаСоставления,
		|	Документ.ОрганизацияПолучатель 					 КАК Организация,
		|	Документ.ОрганизацияПолучатель.Префикс 			 КАК Префикс,
		|	Документ.СкладПолучатель                         КАК Подразделение,
		|	Документ.СкладОтправитель                        КАК Склад
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК НоменклатурныйНомер,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		Документ.Характеристика     КАК Характеристика,
		|		Документ.КоличествоУпаковок КАК Количество,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М11";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М11");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки.
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.КодПоОКПО                = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.Заголовок                = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ТРЕБОВАНИЕ-НАКЛАДНАЯ № %1'"), ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
						
		ДанныеСтроки = Новый Структура;
		
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Количество", 0);
						
		// Выводим многострочную часть документа.
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ДанныеСтроки.Номер       = ДанныеСтроки.Номер + 1;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
						
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
				
		КонецЦикла;
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.Организация КАК Руководители,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ПеремещениеТоваров.СкладОтправитель.Организация.Префикс КАК Префикс,
	|	&СрокДоставки КАК СрокДоставки,
	|	&МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	&МаркаПрицепа КАК МаркаПрицепа,
	|	&ГосНомерАвтомобиля КАК ГосНомерАвтомобиля,
	|	&ГосНомерПрицепа КАК ГосНомерПрицепа,
	|	&ПунктПогрузки КАК ПунктПогрузки,
	|	&ПунктРазгрузки КАК ПунктРазгрузки,
	|	&Водитель КАК Водитель,
	|	&Перевозчик КАК ПредставлениеПеревозчика,
	|	&Заказчик КАК ПредставлениеЗаказчика,
	|	&ВидПеревозки КАК ВидПеревозки,
	|	&ЛицензионнаяКарточка КАК ЛицензионнаяКарточка,
	|	&ВодительскоеУдостоверение КАК ВодительскоеУдостоверение,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	НаименованияТоваров.Количество КАК КоличествоНаименований
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество,
	|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|				ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|				ПеремещениеТоваровТовары.Характеристика КАК Характеристика
	|			ИЗ
	|				Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|			ГДЕ
	|				ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокТоваров.Ссылка) КАК НаименованияТоваров
	|		ПО ПеремещениеТоваров.Ссылка = НаименованияТоваров.Ссылка
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Ссылка.Дата КАК ДатаТТН,
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ПеремещениеТоваров.Характеристика КАК Характеристика,
	|	ПеремещениеТоваров.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
	|	ПеремещениеТоваров.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	ПеремещениеТоваров.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес
	|		ИНАЧЕ ПеремещениеТоваров.КоличествоУпаковок * ПеремещениеТоваров.Упаковка.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес КАК МассаНетто,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ПеремещениеТоваров.Сумма КАК Сумма,
	|	0 КАК СуммаНДС,
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваров.Номенклатура.Весовой КАК Весовой
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТТН,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|";
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("СрокДоставки", ПараметрыПечати.СрокДоставки);
	Запрос.УстановитьПараметр("МаркаАвтомобиля", ПараметрыПечати.МаркаАвтомобиля);
	Запрос.УстановитьПараметр("МаркаПрицепа", ПараметрыПечати.МаркаПрицепа);
	Запрос.УстановитьПараметр("ГосНомерАвтомобиля", ПараметрыПечати.ГосНомерАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерПрицепа", ПараметрыПечати.ГосНомерПрицепа);
	Запрос.УстановитьПараметр("ПунктПогрузки", ПараметрыПечати.ПунктПогрузки);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПараметрыПечати.ПунктРазгрузки);
	Запрос.УстановитьПараметр("Водитель", ПараметрыПечати.Водитель);
	Запрос.УстановитьПараметр("Перевозчик", ПараметрыПечати.Перевозчик);
	Запрос.УстановитьПараметр("Заказчик", ПараметрыПечати.Заказчик);
	Запрос.УстановитьПараметр("ВидПеревозки", ПараметрыПечати.ВидПеревозки);
	Запрос.УстановитьПараметр("ЛицензионнаяКарточка", ПараметрыПечати.ЛицензионнаяКарточка);
	Запрос.УстановитьПараметр("ВодительскоеУдостоверение", ПараметрыПечати.ВодительскоеУдостоверение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТТН";
	
	ФормированиеПечатныхФормСервер.ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, Запрос, ОбъектыПечати);
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.МагазинОтправитель КАК Отправитель,
	|	ТаблицаДокументов.МагазинПолучатель КАК Получатель,
	|	ТаблицаДокументов.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаДокументов.СкладПолучатель КАК СкладПолучатель,
	|	ТаблицаДокументов.Организация КАК Организация,
	|	ТаблицаДокументов.Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ИмяРеквизита1", НСтр("ru = 'Организация'"));
	СтруктураПечати.Вставить("ИмяРеквизита2", НСтр("ru = 'Отправитель'"));
	СтруктураПечати.Вставить("ИмяРеквизита3", НСтр("ru = 'Склад отправитель'"));
	СтруктураПечати.Вставить("ИмяРеквизита4", НСтр("ru = 'Получатель'"));
	СтруктураПечати.Вставить("ИмяРеквизита5", НСтр("ru = 'Склад получатель'"));
	СтруктураПечати.Вставить("КоличествоРеквизитов", 5);
	СтруктураПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	СтруктураПечати.Вставить("КолонкаКодов", КолонкаКодов);
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПечати.Вставить("Документ", Выборка.Ссылка);
		СтруктураПечати.Вставить("Реквизит1", Выборка.Организация);
		СтруктураПечати.Вставить("Реквизит2", Выборка.Отправитель);
		СтруктураПечати.Вставить("Реквизит3", Выборка.СкладОтправитель);
		СтруктураПечати.Вставить("Реквизит4", Выборка.Получатель);
		СтруктураПечати.Вставить("Реквизит5", Выборка.СкладПолучатель);
		
		УправлениеПечатьюРТ.ПечатьОписиНоменклатуры(ТабличныйДокумент, ОбъектыПечати, СтруктураПечати, ПервыйДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
