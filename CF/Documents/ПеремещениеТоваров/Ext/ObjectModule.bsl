#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// &ЗамерПроизводительности
	ВремяНачалаЗамера = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ПеремещениеТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОтгрузке(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	Если ДополнительныеСвойства.ИспользуетсяКомиссионнаяТорговля Тогда
		ЗапасыСервер.ОтразитьТоварыКОформлениюОтчетовКомитенту(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	ЗапасыСервер.ОтразитьДвиженияСерийныхНомеров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияНоменклатураПоставщиков(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСебестоимостьНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСебестоимостьПоставкиТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗакупкиСервер.ОтразитьЗаказыТоваров(ДополнительныеСвойства, Движения, Отказ);

	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени("ПеремещениеТоваровПроведение",ВремяНачалаЗамера,Товары.Количество(), "Вес по табличной части ""Товары""");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСтатусЗаказаНаПеремещение(РежимЗаписи);
	
	Справочники.СерийныеНомера.ОчиститьВДокументеНеиспользуемыеСерийныеНомера(Товары, СерийныеНомера);
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ОбщегоНазначенияРТ.УдалитьНеиспользуемыеСтрокиСерий(ЭтотОбъект,Документы.ОприходованиеТоваров.ПараметрыУказанияСерий(ЭтотОбъект));
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияРТ.УстановитьНовоеЗначениеРеквизита(
		ЭтотОбъект,
		ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСуммуДокумента(Товары, Истина),
		"СуммаДокумента");
		
	// ИнтеграцияЕГАИС
	Если ЗначениеЗаполнено(ТТНВходящаяЕГАИС) Тогда
		Если Ссылка.Пустая() Тогда
			ОснованиеТТН = Документы.ПеремещениеТоваров.ПолучитьСсылку();
			УстановитьСсылкуНового(ОснованиеТТН);
		Иначе
			ОснованиеТТН = Ссылка;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТТНВходящаяЕГАИС, "ДокументОснование") <> ОснованиеТТН Тогда
			ТТН = ТТНВходящаяЕГАИС.ПолучитьОбъект();
			ТТН.ДокументОснование = ОснованиеТТН;
			ТТН.Записать();
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	// Конец ИнтеграцияЕГАИС
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		СкладОтправитель   = ДанныеЗаполнения.Склад;
		МагазинОтправитель = ДанныеЗаполнения.Магазин;
		Организация        = ДанныеЗаполнения.Организация;
		ДокументОснование  = ДанныеЗаполнения;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.Товары, Товары);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.СерийныеНомера, СерийныеНомера);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		СкладОтправитель   = ДанныеЗаполнения.Склад;
		МагазинОтправитель = ДанныеЗаполнения.Магазин;
		Организация = ДанныеЗаполнения.Организация;
		ОрганизацияПолучатель = ДанныеЗаполнения.ОрганизацияПолучатель;
		ДокументОснование  = ДанныеЗаполнения;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.Товары, Товары);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.СерийныеНомера, СерийныеНомера);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		МагазинОтправитель = ДанныеЗаполнения.МагазинОтправитель;
		МагазинПолучатель  = ДанныеЗаполнения.МагазинПолучатель;
		ОрганизацияПолучатель = ДанныеЗаполнения.Организация;
		ДокументОснование  = ДанныеЗаполнения;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполнения.Товары, Товары);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИзменениеАссортимента") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ДокументОснование  = ДанныеЗаполнения;
		ПредставлениеДокументаОснования = Строка(ДанныеЗаполнения);
		Ответственный = Пользователи.ТекущийПользователь();
		МагазинОтправитель = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(МагазинОтправитель);
		СкладОтправитель = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(МагазинОтправитель,,СкладОтправитель, Ответственный);
		
		ТаблицаОстаткиСЦенами=АссортиментСервер.ТаблицаОстатковСЦенамиПоВыводуИзАссортимента(ДанныеЗаполнения, МагазинОтправитель, СкладОтправитель);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаОстаткиСЦенами, Товары);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ДокументОснование  = ДанныеЗаполнения;
		ПредставлениеДокументаОснования = Строка(ДанныеЗаполнения);
		Ответственный = Пользователи.ТекущийПользователь();
		МагазинОтправитель = ДанныеЗаполнения.Магазин;
		СкладОтправитель   = ДанныеЗаполнения.Склад;
		Организация        = ДанныеЗаполнения.Организация;
		
		ЗаполнитьПоПоступлению(ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратИзРегистра2ЕГАИС") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВозвратИзРегистра2ЕГАИС.Организация КАК Организация,
		|	ВозвратИзРегистра2ЕГАИС.ТорговыйОбъект КАК МагазинОтправитель,
		|	ВозвратИзРегистра2ЕГАИС.ТорговыйОбъект.СкладПоступления КАК СкладОтправитель,
		|	ВозвратИзРегистра2ЕГАИС.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.ВозвратИзРегистра2ЕГАИС КАК ВозвратИзРегистра2ЕГАИС
		|ГДЕ
		|	ВозвратИзРегистра2ЕГАИС.Ссылка = &Ссылка";
		
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Шапка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратИзРегистра2ЕГАИСТовары.Номенклатура,
		|	ВозвратИзРегистра2ЕГАИСТовары.Характеристика,
		|	ВозвратИзРегистра2ЕГАИСТовары.Количество,
		|	ВозвратИзРегистра2ЕГАИСТовары.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		|	ВозвратИзРегистра2ЕГАИСТовары.Упаковка,
		|	ВозвратИзРегистра2ЕГАИСТовары.КоличествоУпаковок,
		|	ВозвратИзРегистра2ЕГАИСТовары.Справка2 КАК Справка2,
		|	ВозвратИзРегистра2ЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
		|ИЗ
		|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ВозвратИзРегистра2ЕГАИСТовары
		|ГДЕ
		|	ВозвратИзРегистра2ЕГАИСТовары.Ссылка = &Ссылка";
		
		Результат = Запрос.Выполнить();
		
		Товары.Загрузить(Результат.Выгрузить());
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда

		ИнтеграцияВЕТИСРТ.ЗаполнитьПеремещениеТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(ЭтотОбъект, ДанныеЗаполнения,, СтандартнаяОбработка);

	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,,Организация);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование = Неопределено;
	ТТНВходящаяЕГАИС  = Документы.ТТНВходящаяЕГАИС.ПустаяСсылка();
	ТТНИсходящаяЕГАИС = Документы.ТТНИсходящаяЕГАИС.ПустаяСсылка();
	
	Серии.Очистить();
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если МагазинОтправитель = МагазинПолучатель Тогда
		
		ТекстСообщения = НСтр("ru = 'Перемещения между складами одного магазина оформляются документом ""Внутреннее перемещение товаров""'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект,
			"МагазинПолучатель",
			,
			Отказ);
			
	ИначеЕсли СкладОтправитель = СкладПолучатель Тогда
		
		ТекстСообщения = НСтр("ru = 'Склад отправитель и склад получатель не может быть одним и тем же складом'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект,
			"СкладПолучатель",
			,
			Отказ);
			
	ИначеЕсли МагазинОтправитель.СкладУправляющейСистемы
		И МагазинПолучатель.СкладУправляющейСистемы Тогда
		
		ТекстСообщения = НСтр("ru = 'Перемещение между складами управляющей системы оформляется в управляющей системе'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект,
			"МагазинПолучатель",
			,
			Отказ);
				
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если МагазинОтправитель.СкладУправляющейСистемы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СкладОтправитель");
	КонецЕсли;
	Если МагазинПолучатель.СкладУправляющейСистемы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СкладПолучатель");
	КонецЕсли;
	
	Если МагазинОтправитель.СкладУправляющейСистемы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Справка2");
	Иначе
		ИнтеграцияЕГАИСРТ.ПроверитьЗаполнениеСправок2(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,Документы.ОприходованиеТоваров.ПараметрыУказанияСерий(ЭтотОбъект),Отказ);
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеТЧПриНаличииОбменаСУправлениемТорговлей(
		ЭтотОбъект, 
		Отказ); 
	
	МаркетинговыеАкцииСервер.ПроверитьЗаполнениеТабличнойЧастиСерийныеНомера(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);
	
	МаркетинговыеАкцииСервер.ПроверитьДвиженияСерийныхНомеров(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный      = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
		Если ДанныеЗаполнения.Свойство("СкладОтправитель")
			И НЕ ЗначениеЗаполнено(СкладОтправитель) Тогда
			Если ЗначениеЗаполнено(МагазинОтправитель) Тогда
				Если НЕ Справочники.Склады.ПроверитьПринадлежностьСкладаМагазину(МагазинОтправитель, ДанныеЗаполнения.СкладОтправитель) Тогда
					ДанныеЗаполнения.СкладОтправитель = Справочники.Склады.ПустаяСсылка();
				КонецЕсли;
			Иначе
				МагазинОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.СкладОтправитель, "Магазин");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	МагазинОтправитель = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(МагазинОтправитель);
	СкладОтправитель   = ЗначениеНастроекПовтИсп.ПолучитьСкладПродажиПоУмолчанию(МагазинОтправитель,,СкладОтправитель, Ответственный);
	СкладПолучатель    = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(МагазинПолучатель,,СкладПолучатель, Ответственный);
	Если ЗначениеЗаполнено(СкладОтправитель) Тогда
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СкладОтправитель, "Организация");
	Иначе
		Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация,Ответственный);
	КонецЕсли;
	Если ЗначениеЗаполнено(СкладПолучатель) Тогда
		ОрганизацияПолучатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СкладПолучатель, "Организация");
	КонецЕсли;
	
	ТТНВходящаяЕГАИС = Документы.ТТНВходящаяЕГАИС.ПустаяСсылка();
	ТТНИсходящаяЕГАИС = Документы.ТТНИсходящаяЕГАИС.ПустаяСсылка();
	
КонецПроцедуры

Функция ОпределитьСтатусЗаказаНаПеремещение(РежимЗаписи)

	
	ЗаказНаПеремещение = ДокументОснование;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Количество
	|ПОМЕСТИТЬ ДокТЧ
	|ИЗ
	|	&ДокТЧ КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПеремещения.Номенклатура,
	|	ТоварыПеремещения.Характеристика,
	|	СУММА(ТоварыПеремещения.Количество) КАК КоличествоПоступления
	|ПОМЕСТИТЬ ТоварыПоступления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|		ПеремещениеТоваровТовары.Количество КАК Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|	ГДЕ
	|		ПеремещениеТоваровТовары.Ссылка <> &Ссылка
	|		И ПеремещениеТоваровТовары.Ссылка.ДокументОснование = &ЗаказНаПеремещение
	|		И ПеремещениеТоваровТовары.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокТЧ.Номенклатура,
	|		ДокТЧ.Характеристика,
	|		ДокТЧ.Количество
	|	ИЗ
	|		ДокТЧ КАК ДокТЧ) КАК ТоварыПеремещения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыПеремещения.Характеристика,
	|	ТоварыПеремещения.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаПеремещениеТовары.Номенклатура,
	|	ЗаказНаПеремещениеТовары.Характеристика,
	|	ЗаказНаПеремещениеТовары.Количество,
	|	ТоварыПоступления.КоличествоПоступления
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ЗаказНаПеремещениеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПоступления КАК ТоварыПоступления
	|		ПО ЗаказНаПеремещениеТовары.Номенклатура = ТоварыПоступления.Номенклатура
	|			И ЗаказНаПеремещениеТовары.Характеристика = ТоварыПоступления.Характеристика
	|ГДЕ
	|	ЗаказНаПеремещениеТовары.Ссылка = &ЗаказНаПеремещение
	|	И ЗаказНаПеремещениеТовары.Количество - ЕСТЬNULL(ТоварыПоступления.КоличествоПоступления, 0) > 0";
	
	Запрос.УстановитьПараметр("ЗаказНаПеремещение", ЗаказНаПеремещение);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Запрос.УстановитьПараметр("ДокТЧ", Товары.Выгрузить(,"Номенклатура, Характеристика, Количество"));
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Запрос.УстановитьПараметр("ДокТЧ", Товары.ВыгрузитьКолонки("Номенклатура, Характеристика, Количество"));
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Перечисления.СтатусыВнутреннихЗаказов.Закрыт;
	Иначе
		Возврат Перечисления.СтатусыВнутреннихЗаказов.КВыполнению;
	КонецЕсли;

	
КонецФункции

Процедура УстановитьСтатусЗаказаНаПеремещение(РежимЗаписи)
	
	Если РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование)
		ИЛИ ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.ЗаказНаПеремещение") ИЛИ ДокументОснование.МагазинОтправитель.СкладУправляющейСистемы Тогда
		Возврат;
	КонецЕсли;
	
	Если ДокументОснование.МагазинОтправитель.СкладУправляющейСистемы ИЛИ ДокументОснование.ЗакрытВручную Тогда
		Возврат;
	КонецЕсли;
	
	Статус = ОпределитьСтатусЗаказаНаПеремещение(РежимЗаписи);
	
	Если ДокументОснование.Статус <> Статус Тогда
		
		ЗаказНаПеремещениеОбъект = ДокументОснование.ПолучитьОбъект();
		ЗаказНаПеремещениеОбъект.Статус = Статус;
		ЗаказНаПеремещениеОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура формирует массив имен регистров для контроля проведения.
//
Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	
	// При проведении выполняется контроль превышения остатков на складах.
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Массив.Добавить(Движения.ТоварыНаСкладах);
		Массив.Добавить(Движения.ДвиженияСерийныхНомеров);
		
	КонецЕсли;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Процедура ЗаполнитьПоПоступлению(ДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.КлючСвязи КАК КлючСвязи,
	|	МИНИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка) > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ МАКСИМУМ(Товары.Упаковка)
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.Упаковка) > 1
	|			ТОГДА NULL
	|		ИНАЧЕ МАКСИМУМ(Товары.Упаковка.Коэффициент)
	|	КОНЕЦ КАК Коэффициент,
	|	МИНИМУМ(Товары.КлючСвязиСерийныхНомеров) КАК КлючСвязиСерийныхНомеров,
	|	СУММА(Товары.Количество) КАК КоличествоОснования,
	|	ЕСТЬNULL(ТТН.Справка2, &ПустаяСправка2) КАК Справка2
	|ПОМЕСТИТЬ ТоварыОснования
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС.Товары КАК ТТН
	|		ПО (ТТН.Ссылка = &ТТН)
	|			И Товары.ИдентификаторСтроки = ТТН.ИдентификаторСтроки
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ЕСТЬNULL(ТТН.Справка2, &ПустаяСправка2),
	|	Товары.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.КлючСвязи КАК КлючСвязи,
	|	ВложенныйЗапрос.Справка2 КАК Справка2,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыКПеремещению
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|		ПеремещениеТоваровТовары.КлючСвязи КАК КлючСвязи,
	|		ПеремещениеТоваровТовары.Справка2 КАК Справка2,
	|		-ПеремещениеТоваровТовары.Количество КАК Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|			ПО ПеремещениеТоваровТовары.Ссылка = ПеремещениеТоваров.Ссылка
	|	ГДЕ
	|		ПеремещениеТоваров.Проведен
	|		И ПеремещениеТоваров.ДокументОснование = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыОснования.Номенклатура,
	|		ТоварыОснования.Характеристика,
	|		ТоварыОснования.КлючСвязи,
	|		ТоварыОснования.Справка2,
	|		ТоварыОснования.КоличествоОснования
	|	ИЗ
	|		ТоварыОснования КАК ТоварыОснования) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Справка2,
	|	ВложенныйЗапрос.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОснования.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ТоварыКПеремещению.Номенклатура, ТоварыОснования.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ТоварыКПеремещению.Характеристика, ТоварыОснования.Характеристика) КАК Характеристика,
	|	ТоварыОснования.КлючСвязи КАК КлючСвязи,
	|	ТоварыОснования.Справка2 КАК Справка2,
	|	ТоварыКПеремещению.Справка2 КАК Справка21,
	|	ТоварыКПеремещению.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТоварыОснования.Коэффициент ЕСТЬ NULL
	|				ИЛИ (ВЫРАЗИТЬ(ТоварыКПеремещению.Количество / ТоварыОснования.Коэффициент КАК ЧИСЛО(15, 0))) <> ТоварыКПеремещению.Количество / ТоварыОснования.Коэффициент
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ИспользоватьУпаковку,
	|	ТоварыОснования.Упаковка КАК Упаковка,
	|	ТоварыОснования.Коэффициент КАК Коэффициент,
	|	ТоварыОснования.КоличествоОснования КАК КоличествоОснования,
	|	ВЫБОР
	|		КОГДА ТоварыКПеремещению.Количество = ТоварыОснования.КоличествоОснования
	|			ТОГДА ТоварыОснования.КлючСвязиСерийныхНомеров
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючСвязиСерийныхНомеров
	|ПОМЕСТИТЬ ИтоговаяТаблица
	|ИЗ
	|	ТоварыОснования КАК ТоварыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПеремещению КАК ТоварыКПеремещению
	|		ПО ТоварыОснования.Номенклатура = ТоварыКПеремещению.Номенклатура
	|			И ТоварыОснования.Характеристика = ТоварыКПеремещению.Характеристика
	|			И ТоварыОснования.Справка2 = ТоварыКПеремещению.Справка2
	|ГДЕ
	|	НЕ ТоварыКПеремещению.Количество ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТаблица.НомерСтроки КАК НомерСтрокиСорт,
	|	ИтоговаяТаблица.Номенклатура КАК Номенклатура,
	|	ИтоговаяТаблица.Характеристика КАК Характеристика,
	|	ИтоговаяТаблица.КлючСвязи КАК КлючСвязи,
	|	ИтоговаяТаблица.Справка2 КАК Справка2,
	|	ИтоговаяТаблица.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
	|			ТОГДА ИтоговаяТаблица.Количество / ИтоговаяТаблица.Коэффициент
	|		ИНАЧЕ ИтоговаяТаблица.Количество
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ИтоговаяТаблица.ИспользоватьУпаковку
	|			ТОГДА ИтоговаяТаблица.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Упаковка,
	|	ИтоговаяТаблица.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
	|ИЗ
	|	ИтоговаяТаблица КАК ИтоговаяТаблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиСорт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОснования.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
	|		ПоступлениеТоваровСерийныеНомера.СерийныйНомер КАК СерийныйНомер
	|	ИЗ
	|		Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров.СерийныеНомера КАК ПоступлениеТоваровСерийныеНомера
	|			ПО ПоступлениеТоваровТовары.КлючСвязиСерийныхНомеров = ПоступлениеТоваровСерийныеНомера.КлючСвязиСерийныхНомеров
	|	ГДЕ
	|		ПоступлениеТоваровСерийныеНомера.Ссылка = &ДокументОснование
	|		И ПоступлениеТоваровТовары.Ссылка = &ДокументОснование) КАК СерийныеНомера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыОснования КАК ТоварыОснования
	|		ПО СерийныеНомера.Номенклатура = ТоварыОснования.Номенклатура
	|ГДЕ
	|	ТоварыОснования.КлючСвязиСерийныхНомеров В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ИтоговаяТаблица.КлючСвязиСерийныхНомеров
	|			ИЗ
	|				ИтоговаяТаблица КАК ИтоговаяТаблица)";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ПустаяСправка2", Справочники.Справки2ЕГАИС.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТТН", ДокументОснование.ТТНВходящаяЕГАИС);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[3].Пустой() Тогда
		Товары.Загрузить(Результат[3].Выгрузить());
		
		СерийныеНомера.Загрузить(Результат[4].Выгрузить());
		ЗапасыСервер.ЗаполнитьЦеныПоРозничнымЦенам(ЭтотОбъект, "Товары", МагазинОтправитель, ЗапасыСервер.ДатаДляЦенообразованияДляДокумента(ЭтотОбъект), Ложь);
	Иначе
		ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по основанию ""%ДокументОснование%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДокументОснование");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
