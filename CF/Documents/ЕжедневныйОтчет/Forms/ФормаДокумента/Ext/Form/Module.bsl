#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,КартинкаСостоянияДокумента,Элементы.КартинкаСостоянияДокумента.Подсказка,РазрешеноПроведение);
	
	ОбновитьПоказателиВремениНаСервере();
	
	НастроитьФормуПоДополнительнымПравам();
	
	ОбновитьЗаголовокДняНедели();
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, Элементы.КартинкаСостоянияДокумента.Подсказка, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
	// &ЗамерПроизводительности 
	ОценкаПроизводительностиРТКлиент.ЗакончитьЗамер(ПараметрыЗаписи.Замер);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьДатыВТабличнойЧасти(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьПоказателиВремениНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ОбновитьПоказателиВремениНаСервере();
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, Элементы.КартинкаСостоянияДокумента.Подсказка, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// &ЗамерПроизводительности 
	Замер = ОценкаПроизводительностиРТКлиент.НачатьЗамер(Ложь, 
	                                            "Документ.ЕжедневныйОтчет.ФормаДокумента.Запись",
                                                          Ложь);
	
	ПараметрыЗаписи.Вставить("Замер", Замер);

КонецПроцедуры

&НаКлиенте
Процедура СменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
        
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.ИнтервалыРаботыМагазинов.Форма.ФормаВыбора.Открытие");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МагазинНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("МагазинНачалоВыбораЗавершение", ЭтотОбъект);
	ОбщегоНазначенияРТКлиент.ПроверитьВозможностьЗаполненияТабличнойЧасти(
		ЭтаФорма,
		Неопределено,
		Новый Структура("Магазин", Объект.Магазин), 
		Истина,
		Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинНачалоВыбораЗавершение(ЗаполнятьТабличнуюЧасть, ДополнительныеПараметры) Экспорт
	
	Если ЗаполнятьТабличнуюЧасть И Объект.ОтработанноеВремя.Количество() > 0 Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеВопросаОчисткиТЧ", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Табличная часть будет очищена, продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ОткрытьФорму("Справочник.Магазины.ФормаВыбора",, Элементы.Магазин);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВопросаОчисткиТЧ(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ОтработанноеВремя.Очистить();
		ОткрытьФорму("Справочник.Магазины.ФормаВыбора",, Элементы.Магазин);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтчетаПриИзменении(Элемент)
	
	ОбновитьЗаголовокДняНедели();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтчетаОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьЗаголовокДняНедели();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтработанноеВремя

&НаКлиенте
Процедура ОтработанноеВремяНачалоРаботыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ОтработанноеВремя.ТекущиеДанные;
	ОбновитьПоказателиВремени(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяОкончаниеРаботыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ОтработанноеВремя.ТекущиеДанные;
	ОбновитьПоказателиВремени(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РассчитатьПродолжительностьДня();
		
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяПослеУдаления(Элемент)
	
	РассчитатьПродолжительностьДня();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьПродолжительностьДня();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ЗаполнитьСмену(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПослеПроверкиВозможностиЗаполнения", ЭтотОбъект);
	ОбщегоНазначенияРТКлиент.ПроверитьВозможностьЗаполненияТабличнойЧасти(
		ЭтаФорма,
		Объект.ОтработанноеВремя,
		Новый Структура("Магазин, РабочаяСмена", Объект.Магазин, Объект.РабочаяСмена), 
		Истина,
		Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСвернутьТЧ(Команда)
	
	РазвернутьСвернутьТЧНаСервере();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр,
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);

КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокДняНедели()
	Если ЗначениеЗаполнено(Объект.ДатаОтчета) Тогда
		Элементы.ДеньНедели.Заголовок = Строка(Перечисления.ДниНедели.Получить(ДеньНедели(Объект.ДатаОтчета) - 1));
	Иначе
		Элементы.ДеньНедели.Заголовок = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РассчитатьПродолжительностьДня()
	
	Разность = 0.00;
	
	Если Не Элементы.ОтработанноеВремя.ТекущаяСтрока = Неопределено Тогда
		ТекСтрока = Объект.ОтработанноеВремя.НайтиПоИдентификатору(Элементы.ОтработанноеВремя.ТекущаяСтрока);
				
		Разность = Разность + (ТекСтрока.ОкончаниеРаботы - ТекСтрока.НачалоРаботы);
		
		Если Разность > 0.00 Тогда
			Продолжительность = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(Разность);
			
		ИначеЕсли Разность < 0.00 Тогда
			Продолжительность = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(86400 - Разность*(-1));
			
		Иначе
			ТекСтрока.ПродолжительностьДня = Дата("00010101");
			
		КонецЕсли;
		
		Если Продолжительность <> Неопределено Тогда
			ТекСтрока.ПродолжительностьДня = Продолжительность;
			
		Иначе
			ТекСтрока.ПродолжительностьДня = Дата("00010101");
			
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПоказателиВремениНаСервере()
	
	Для каждого ТекущаяСтрока Из Объект.ОтработанноеВремя Цикл
		
		РазностьВСекундах = ТекущаяСтрока.ОкончаниеРаботы - ТекущаяСтрока.НачалоРаботы;
		
		Если РазностьВСекундах > 0.00 Тогда
			
			ТекущаяСтрока.Всего = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(РазностьВСекундах);
			
		Иначе
			
			ТекущаяСтрока.Всего = 0.00;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДатыВТабличнойЧасти(ТекущийОбъект)
	
	Для каждого ТекущаяСтрока Из ТекущийОбъект.ОтработанноеВремя Цикл
		
		Если (ТекущаяСтрока.ОкончаниеРаботы - НачалоДня(ТекущаяСтрока.ОкончаниеРаботы)) < (ТекущаяСтрока.НачалоРаботы - НачалоДня(ТекущаяСтрока.НачалоРаботы)) Тогда
			ТекущаяСтрока.НачалоРаботы    = Дата(Год(Объект.ДатаОтчета),Месяц(Объект.ДатаОтчета),День(Объект.ДатаОтчета),Час(ТекущаяСтрока.НачалоРаботы),Минута(ТекущаяСтрока.НачалоРаботы),0.00);
			ТекущаяСтрока.ОкончаниеРаботы = Дата(Год(Объект.ДатаОтчета),Месяц(Объект.ДатаОтчета),День(Объект.ДатаОтчета),Час(ТекущаяСтрока.ОкончаниеРаботы),Минута(ТекущаяСтрока.ОкончаниеРаботы),0.00) + 86400;
		Иначе
			ТекущаяСтрока.НачалоРаботы    = Дата(Год(Объект.ДатаОтчета),Месяц(Объект.ДатаОтчета),День(Объект.ДатаОтчета),Час(ТекущаяСтрока.НачалоРаботы),Минута(ТекущаяСтрока.НачалоРаботы),0.00);
			ТекущаяСтрока.ОкончаниеРаботы = Дата(Год(Объект.ДатаОтчета),Месяц(Объект.ДатаОтчета),День(Объект.ДатаОтчета),Час(ТекущаяСтрока.ОкончаниеРаботы),Минута(ТекущаяСтрока.ОкончаниеРаботы),0.00);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоказателиВремени(ТекущаяСтрока)
	
	РазностьВСекундах = ТекущаяСтрока.ОкончаниеРаботы - ТекущаяСтрока.НачалоРаботы;
	
	Если РазностьВСекундах > 0.00 Тогда
		
		ТекущаяСтрока.Всего = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(РазностьВСекундах);
		
	Иначе
		
		ТекущаяСтрока.Всего = 0.00;
		
	КонецЕсли;
	
	РассчитатьПродолжительностьДня();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
КонецПроцедуры

Процедура ПослеПроверкиВозможностиЗаполнения(ЗаполнятьТабличнуюЧасть, ДополнительныеПараметры) Экспорт
	
	Если ЗаполнятьТабличнуюЧасть Тогда
		Объект.ОтработанноеВремя.Очистить();
		
		Документы.ЕжедневныйОтчет.ЗаполнитьТабличнуюЧастьСотрудникиСмены(Объект);
		
		ОбновитьПоказателиВремениНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазвернутьСвернутьТЧНаСервере()
	
	РазвернутаТЧ = НЕ РазвернутаТЧ;
	
	ВидимостьЭлементов = НЕ РазвернутаТЧ;
	
	ЭтаФорма.ПоложениеКоманднойПанели      = ?(ВидимостьЭлементов, ПоложениеКоманднойПанелиФормы.Авто, ПоложениеКоманднойПанелиФормы.Нет);
	Элементы.Шапка.Видимость			   = ВидимостьЭлементов;
	Элементы.ГруппаОтветственный.Видимость = ВидимостьЭлементов;
	Элементы.ОтработанноеВремяРазвернутьСвернутьТЧ.Картинка = ?(ВидимостьЭлементов, БиблиотекаКартинок.РазвернутьТабличнуюЧасть, БиблиотекаКартинок.СвернутьТабличнуюЧасть);
	
КонецПроцедуры

#КонецОбласти
