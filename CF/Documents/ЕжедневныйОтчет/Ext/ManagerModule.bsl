#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Заполняет табличную часть документа сотрудниками смены
//
Процедура ЗаполнитьТабличнуюЧастьСотрудникиСмены(Объект) Экспорт
	
	СотрудникиСмены			= ПолучитьСписокСотрудниковСмены(Объект);
	ПродолжительностьДня 	= ПолучитьПродолжительностьДня(Объект.РабочаяСмена);
	Если Не СотрудникиСмены = Неопределено Тогда
		Для каждого СтрокаТаблицы Из СотрудникиСмены Цикл
			НовСтрока  						= Объект.ОтработанноеВремя.Добавить();
			НовСтрока.Сотрудник				= СтрокаТаблицы.Сотрудник;
			НовСтрока.НачалоРаботы			= СтрокаТаблицы.Период;
			
			Если ПродолжительностьДня <> Неопределено Тогда
				Если СтрокаТаблицы.ДлинаРабочегоВремени 	= ПродолжительностьДня Тогда
					НовСтрока.ОкончаниеРаботы				= СтрокаТаблицы.ДатаОкончания;
					НовСтрока.ПродолжительностьДня  		= СтрокаТаблицы.ДлинаРабочегоВремени;
				Иначе
					НовСтрока.ОкончаниеРаботы 		= СтрокаТаблицы.Период + (СтрокаТаблицы.ДлинаРабочегоВремени - НачалоДня(СтрокаТаблицы.ДлинаРабочегоВремени));
					НовСтрока.ПродолжительностьДня  = СтрокаТаблицы.ДлинаРабочегоВремени;
				КонецЕсли;
			Иначе
				НовСтрока.ПродолжительностьДня  	= Дата("00010101");
			КонецЕсли;

		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыИспользованияРабочегоВремени.Ссылка КАК ВидВремени
	|ПОМЕСТИТЬ ВидыВремени
	|ИЗ
	|	Перечисление.ВидыИспользованияРабочегоВремени КАК ВидыИспользованияРабочегоВремени
	|ГДЕ
	|	(ВидыИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыИспользованияРабочегоВремени.НочныеЧасы)
	|			ИЛИ ВидыИспользованияРабочегоВремени.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыИспользованияРабочегоВремени.Явка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕжедневныйОтчетОтработанноеВремя.Сотрудник КАК Сотрудник,
	|	ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы >= ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета
	|		И ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы < ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6) КАК НачалоРаботыНочныеЧасыУтро,
	|	ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы >= ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22)
	|		И ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы < ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ДЕНЬ, 1) КАК НачалоРаботыНочныеЧасыВечер,
	|	ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы >= ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6)
	|		И ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы < ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22) КАК НачалоРаботыДневныеЧасы,
	|	ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы >= ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ДЕНЬ, 1)
	|		И ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы < ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 30) КАК НачалоРаботыНочныеЧасыСледующегоДня,
	|	ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы > ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета
	|		И ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы <= ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6) КАК ОкончаниеРаботыНочныеЧасыУтро,
	|	ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы > ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22)
	|		И ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы <= ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ДЕНЬ, 1) КАК ОкончаниеРаботыНочныеЧасыВечер,
	|	ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы > ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6)
	|		И ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы <= ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22) КАК ОкончаниеРаботыДневныеЧасы,
	|	ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы > ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ДЕНЬ, 1)
	|		И ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы <= ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 30) КАК ОкончаниеРаботыНочныеЧасыСледующегоДня,
	|	ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы > ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 30) КАК ОкончаниеРаботыДневныеЧасыСледующегоДня
	|ПОМЕСТИТЬ УсловияВхожденияВНочныеЧасы
	|ИЗ
	|	Документ.ЕжедневныйОтчет.ОтработанноеВремя КАК ЕжедневныйОтчетОтработанноеВремя
	|ГДЕ
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета КАК ПЕРИОД,
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.Магазин КАК Магазин,
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.РабочаяСмена КАК Смена,
	|	ЕжедневныйОтчетОтработанноеВремя.Сотрудник КАК Сотрудник,
	|	ВидыВремени.ВидВремени,
	|	ВЫБОР
	|		КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыНочныеЧасыУтро
	|			ТОГДА ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыВечер
	|						ИЛИ УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыСледующегоДня
	|						ИЛИ УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасыСледующегоДня
	|					ТОГДА ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22)
	|			КОНЕЦ
	|	КОНЕЦ КАК НачалоРаботы,
	|	ВЫБОР
	|		КОГДА УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыУтро
	|				ИЛИ УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыВечер
	|				ИЛИ УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыСледующегоДня
	|			ТОГДА ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыНочныеЧасыУтро
	|						И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасы
	|					ТОГДА ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6)
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы > ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 30)
	|							ТОГДА ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 30)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ОкончаниеРаботы,
	|	ВЫБОР
	|		КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыНочныеЧасыУтро
	|				И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыУтро
	|			ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы, ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы, МИНУТА) / 60 КАК ЧИСЛО(10, 1))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыНочныеЧасыУтро
	|					ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы, ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6), МИНУТА) / 60 КАК ЧИСЛО(10, 1))
	|				ИНАЧЕ ВЫБОР
	|						КОГДА УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыВечер
	|								ИЛИ УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыСледующегоДня
	|							ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22), ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы, МИНУТА) / 60 КАК ЧИСЛО(10, 1))
	|						ИНАЧЕ ВЫБОР
	|								КОГДА УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасыСледующегоДня
	|									ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 8), МИНУТА) / 60 КАК ЧИСЛО(10, 1))
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК РабочееВремяСотрудников,
	|	ЕжедневныйОтчетОтработанноеВремя.НомерСтроки
	|ПОМЕСТИТЬ ПериодыПоВидамВремени
	|ИЗ
	|	Документ.ЕжедневныйОтчет.ОтработанноеВремя КАК ЕжедневныйОтчетОтработанноеВремя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УсловияВхожденияВНочныеЧасы КАК УсловияВхожденияВНочныеЧасы
	|		ПО ЕжедневныйОтчетОтработанноеВремя.Сотрудник = УсловияВхожденияВНочныеЧасы.Сотрудник,
	|	ВидыВремени КАК ВидыВремени
	|ГДЕ
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка = &Ссылка
	|	И ВидыВремени.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыИспользованияРабочегоВремени.НочныеЧасы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета,
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.Магазин,
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка.РабочаяСмена,
	|	ЕжедневныйОтчетОтработанноеВремя.Сотрудник,
	|	ВидыВремени.ВидВремени,
	|	ВЫБОР
	|		КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыНочныеЧасыУтро
	|			ТОГДА ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыДневныеЧасы
	|					ТОГДА ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасы
	|				ИЛИ УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасыСледующегоДня
	|			ТОГДА ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыДневныеЧасы
	|							И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыВечер
	|						ИЛИ УсловияВхожденияВНочныеЧасы.НачалоРаботыДневныеЧасы
	|							И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыСледующегоДня
	|					ТОГДА ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыНочныеЧасыУтро
	|				И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасы
	|			ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 6), ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы, МИНУТА) / 60 КАК ЧИСЛО(10, 1))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыДневныеЧасы
	|							И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыВечер
	|						ИЛИ УсловияВхожденияВНочныеЧасы.НачалоРаботыДневныеЧасы
	|							И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыНочныеЧасыСледующегоДня
	|					ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы, ДОБАВИТЬКДАТЕ(ЕжедневныйОтчетОтработанноеВремя.Ссылка.ДатаОтчета, ЧАС, 22), МИНУТА) / 60 КАК ЧИСЛО(10, 1))
	|				ИНАЧЕ ВЫБОР
	|						КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыДневныеЧасы
	|								И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасы
	|							ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы, ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы, МИНУТА) / 60 КАК ЧИСЛО(10, 1))
	|						ИНАЧЕ ВЫБОР
	|								КОГДА УсловияВхожденияВНочныеЧасы.НачалоРаботыДневныеЧасы
	|										И УсловияВхожденияВНочныеЧасы.ОкончаниеРаботыДневныеЧасыСледующегоДня
	|									ТОГДА ВЫРАЗИТЬ(РАЗНОСТЬДАТ(ЕжедневныйОтчетОтработанноеВремя.НачалоРаботы, ЕжедневныйОтчетОтработанноеВремя.ОкончаниеРаботы, МИНУТА) / 60 - 8 КАК ЧИСЛО(10, 1))
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЕжедневныйОтчетОтработанноеВремя.НомерСтроки
	|ИЗ
	|	Документ.ЕжедневныйОтчет.ОтработанноеВремя КАК ЕжедневныйОтчетОтработанноеВремя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УсловияВхожденияВНочныеЧасы КАК УсловияВхожденияВНочныеЧасы
	|		ПО ЕжедневныйОтчетОтработанноеВремя.Сотрудник = УсловияВхожденияВНочныеЧасы.Сотрудник,
	|	ВидыВремени КАК ВидыВремени
	|ГДЕ
	|	ЕжедневныйОтчетОтработанноеВремя.Ссылка = &Ссылка
	|	И ВидыВремени.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыИспользованияРабочегоВремени.Явка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыПоВидамВремени.ПЕРИОД,
	|	ПериодыПоВидамВремени.Магазин,
	|	ПериодыПоВидамВремени.Смена,
	|	ПериодыПоВидамВремени.Сотрудник,
	|	ПериодыПоВидамВремени.ВидВремени,
	|	ПериодыПоВидамВремени.НачалоРаботы,
	|	ПериодыПоВидамВремени.ОкончаниеРаботы,
	|	ПериодыПоВидамВремени.РабочееВремяСотрудников,
	|	ПериодыПоВидамВремени.НомерСтроки
	|ИЗ
	|	ПериодыПоВидамВремени КАК ПериодыПоВидамВремени
	|ГДЕ
	|	ПериодыПоВидамВремени.НачалоРаботы ЕСТЬ НЕ NULL 
	|	И ПериодыПоВидамВремени.ОкончаниеРаботы ЕСТЬ НЕ NULL
	|";
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаФактическоеРабочееВремяСотрудников", ТаблицаРезультат);
	
КонецПроцедуры

Функция ПолучитьПродолжительностьДня(РабочаяСмена) Экспорт
	
		ПродолжительностьСмены	= 0.00;
		ПродолжительностьСмены	= ПродолжительностьСмены + (РабочаяСмена.ОкончаниеИнтервала - РабочаяСмена.НачалоИнтервала);
		
		Если ПродолжительностьСмены > 0.00 Тогда
			ПродолжительностьДня = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(ПродолжительностьСмены);
			
		ИначеЕсли ПродолжительностьСмены < 0.00 Тогда
			ПродолжительностьСмены = 86400 - ПродолжительностьСмены*(-1);
			ПродолжительностьДня = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(ПродолжительностьСмены);
		Иначе
			ПродолжительностьДня = Дата("00010101");
		КонецЕсли;
		
		Возврат ПродолжительностьДня;

КонецФункции
	
Функция ПолучитьСписокСотрудниковСмены(Объект) Экспорт
	
	РабочаяСмена = Объект.РабочаяСмена;
	Если ЗначениеЗаполнено(РабочаяСмена) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПланируемоеРабочееВремяСотрудников.Сотрудник,
		|	ПланируемоеРабочееВремяСотрудников.Период,
		|	ПланируемоеРабочееВремяСотрудников.ДатаОкончания,
		|	ДОБАВИТЬКДАТЕ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЧАС, СУММА(РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ПланируемоеРабочееВремяСотрудников.ДлинаРабочегоВремени, МИНУТА) / 60)) КАК ДлинаРабочегоВремени
		|ИЗ
		|	РегистрСведений.ПланируемоеРабочееВремяСотрудников КАК ПланируемоеРабочееВремяСотрудников
		|ГДЕ
		|	ПланируемоеРабочееВремяСотрудников.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаОтчета, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОтчета, ДЕНЬ)
		|	И ПланируемоеРабочееВремяСотрудников.ИнтервалРаботыМагазинов = &ИнтервалРаботыМагазинов
		|
		|СГРУППИРОВАТЬ ПО
		|	ПланируемоеРабочееВремяСотрудников.Сотрудник,
		|	ПланируемоеРабочееВремяСотрудников.Период,
		|	ПланируемоеРабочееВремяСотрудников.ДатаОкончания
		|";
		
		Запрос.УстановитьПараметр("ИнтервалРаботыМагазинов", РабочаяСмена);
		Запрос.УстановитьПараметр("ДатаОтчета", Объект.ДатаОтчета);

		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Возврат Результат.Выгрузить();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Смена не выбрана, заполнять нечем'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				"Объект.РабочаяСмена",
				,
				);
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли
