#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "СтруктураДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	ТекстЗапроса = ТекстЗапросаБонусныеБаллы();
	
	Реквизиты = ПолучитьРеквизитыДокумента(ДокументСсылка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("БонуснаяПрограммаЛояльности", Реквизиты.БонуснаяПрограммаЛояльности);
	
	Период = НачалоДня(Реквизиты.Период);
	ДатаНачисления = Период;
	
	Если Реквизиты.ПериодОтсрочкиНачалаДействия = Перечисления.Периодичность.День Тогда
		ДатаНачисления = ДатаНачисления + Реквизиты.КоличествоПериодовОтсрочкиНачалаДействия * 86400;
		
	ИначеЕсли Реквизиты.ПериодОтсрочкиНачалаДействия = Перечисления.Периодичность.Неделя Тогда
		ДатаНачисления = ДатаНачисления + Реквизиты.КоличествоПериодовОтсрочкиНачалаДействия * 7 * 86400;
		
	ИначеЕсли Реквизиты.ПериодОтсрочкиНачалаДействия = Перечисления.Периодичность.Декада Тогда
		ДатаНачисления = ДатаНачисления + Реквизиты.КоличествоПериодовОтсрочкиНачалаДействия * 10 * 86400;
		
	ИначеЕсли Реквизиты.ПериодОтсрочкиНачалаДействия = Перечисления.Периодичность.Месяц Тогда
		ДатаНачисления = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовОтсрочкиНачалаДействия);
		
	ИначеЕсли Реквизиты.ПериодОтсрочкиНачалаДействия = Перечисления.Периодичность.Квартал Тогда
		ДатаНачисления = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовОтсрочкиНачалаДействия * 3);
		
	ИначеЕсли Реквизиты.ПериодОтсрочкиНачалаДействия = Перечисления.Периодичность.Полугодие Тогда
		ДатаНачисления = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовОтсрочкиНачалаДействия * 6);
		
	ИначеЕсли Реквизиты.ПериодОтсрочкиНачалаДействия = Перечисления.Периодичность.Год Тогда
		ДатаНачисления = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовОтсрочкиНачалаДействия * 12);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачисления", ДатаНачисления);
	
	
	
	ДатаОкончания = Реквизиты.ДатаОкончанияСрокаДействия;
	Если (НЕ ЗначениеЗаполнено(ДатаОкончания))
		И ЗначениеЗаполнено(Реквизиты.КоличествоПериодовДействия) Тогда
		Если Реквизиты.ПериодДействия = Перечисления.Периодичность.День Тогда
			ДатаОкончания = ДатаНачисления + Реквизиты.КоличествоПериодовДействия * 86400;
			
		ИначеЕсли Реквизиты.ПериодДействия = Перечисления.Периодичность.Неделя Тогда
			ДатаОкончания = ДатаНачисления + Реквизиты.КоличествоПериодовДействия * 7 * 86400;
			
		ИначеЕсли Реквизиты.ПериодДействия = Перечисления.Периодичность.Декада Тогда
			ДатаОкончания = ДатаНачисления + Реквизиты.КоличествоПериодовДействия * 10 * 86400;
			
		ИначеЕсли Реквизиты.ПериодДействия = Перечисления.Периодичность.Месяц Тогда
			ДатаОкончания = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовДействия);
			
		ИначеЕсли Реквизиты.ПериодДействия = Перечисления.Периодичность.Квартал Тогда
			ДатаОкончания = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовДействия * 3);
			
		ИначеЕсли Реквизиты.ПериодДействия = Перечисления.Периодичность.Полугодие Тогда
			ДатаОкончания = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовДействия * 6);
			
		ИначеЕсли Реквизиты.ПериодДействия = Перечисления.Периодичность.Год Тогда
			ДатаОкончания = ДобавитьМесяц(ДатаНачисления, Реквизиты.КоличествоПериодовДействия * 12);
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("КоличествоПериодовДействия", Реквизиты.КоличествоПериодовДействия);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаБонусныеБаллы", МассивРезультатов[1].Выгрузить());
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаБонусныеБаллы()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ДатаНачисления КАК Период,
	|	ТабличнаяЧасть.ВидДвижения КАК ВидДвижения,
	|	&БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ТабличнаяЧасть.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТабличнаяЧасть.Баллы КАК Начислено,
	|	0 КАК КСписанию,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПервоначальногоНачисления
	|ПОМЕСТИТЬ БонусныеБаллы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|		ТабличнаяЧасть.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		ТабличнаяЧасть.Баллы КАК Баллы
	|	ИЗ
	|		Документ.НачислениеИСписаниеБонусныхБаллов.Начисление КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка) КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаОкончания,
	|	ТабличнаяЧасть.ВидДвижения КАК ВидДвижения,
	|	&БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ТабличнаяЧасть.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	0 КАК Начислено,
	|	ТабличнаяЧасть.Баллы,
	|	&ДатаНачисления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|		ТабличнаяЧасть.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		ТабличнаяЧасть.Баллы КАК Баллы
	|	ИЗ
	|		Документ.НачислениеИСписаниеБонусныхБаллов.Начисление КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		И (&КоличествоПериодовДействия > 0
	|				ИЛИ &ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1))) КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаНачисления,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&БонуснаяПрограммаЛояльности,
	|	ТабличнаяЧасть.ДисконтнаяКарта,
	|	ТабличнаяЧасть.Баллы,
	|	0,
	|	ДАТАВРЕМЯ(1, 1, 1)
	|ИЗ
	|	Документ.НачислениеИСписаниеБонусныхБаллов.Списание КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаНачисления,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&БонуснаяПрограммаЛояльности,
	|	ТабличнаяЧасть.ДисконтнаяКарта,
	|	0,
	|	ТабличнаяЧасть.БаллыКСписанию,
	|	ДАТАВРЕМЯ(1, 1, 1)
	|ИЗ
	|	Документ.НачислениеИСписаниеБонусныхБаллов.Списание КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БонусныеБаллы.Период КАК Период,
	|	БонусныеБаллы.ВидДвижения КАК ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА БонусныеБаллы.ДисконтнаяКарта
	|		ИНАЧЕ БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ КАК ДисконтнаяКарта,
	|	СУММА(БонусныеБаллы.Начислено) КАК Начислено,
	|	СУММА(БонусныеБаллы.КСписанию) КАК КСписанию,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления КАК ДатаПервоначальногоНачисления
	|ИЗ
	|	БонусныеБаллы КАК БонусныеБаллы
	|
	|СГРУППИРОВАТЬ ПО
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
	|	БонусныеБаллы.ДисконтнаяКарта,
	|	БонусныеБаллы.Период,
	|	ВЫБОР
	|		КОГДА БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА БонусныеБаллы.ДисконтнаяКарта
	|		ИНАЧЕ БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ,
	|	БонусныеБаллы.ВидДвижения,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьРеквизитыДокумента(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                   КАК Ссылка,
	|	ДанныеДокумента.Дата                                     КАК Период,
	|	ДанныеДокумента.БонуснаяПрограммаЛояльности              КАК БонуснаяПрограммаЛояльности,
	|	ДанныеДокумента.ПериодДействия                           КАК ПериодДействия,
	|	ДанныеДокумента.КоличествоПериодовДействия               КАК КоличествоПериодовДействия,
	|	ДанныеДокумента.ПериодОтсрочкиНачалаДействия             КАК ПериодОтсрочкиНачалаДействия,
	|	ДанныеДокумента.КоличествоПериодовОтсрочкиНачалаДействия КАК КоличествоПериодовОтсрочкиНачалаДействия,
	|	ДанныеДокумента.ДатаОкончанияСрокаДействия               КАК ДатаОкончанияСрокаДействия
	|ИЗ
	|	Документ.НачислениеИСписаниеБонусныхБаллов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

#КонецОбласти

#КонецЕсли