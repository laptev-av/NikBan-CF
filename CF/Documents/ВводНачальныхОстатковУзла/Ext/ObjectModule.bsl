#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция проверки табличных частей на наличие строк.
//
Функция Пустой() Экспорт
	
	Результат = Истина;
	
	Для Каждого ТаблЧасть Из Метаданные().ТабличныеЧасти Цикл
	
		Если ЭтотОбъект[ТаблЧасть.Имя].Количество() > 0 Тогда
			Результат = Ложь;
			Прервать
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	УзелОбмена = ПланыОбмена.ПоМагазину.НайтиПоКоду(КодУзлаОбмена);
	Если НЕ УзелОбмена.Пустая() Тогда
		
		Узел = УзелОбмена;
		
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
			
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ВводНачальныхОстатковУзла.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОтгрузке(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСебестоимостьНоменклатуры(ДополнительныеСвойства, Движения, Отказ);	
	ДенежныеСредстваСервер.ОтразитьДенежныеСредстваККМ(ДополнительныеСвойства, Движения, Отказ);
	ДенежныеСредстваСервер.ОтразитьДенежныеСредстваНаличные(ДополнительныеСвойства, Движения, Отказ);
	Ценообразование.ОтразитьЦеныНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
	Ценообразование.ОтразитьПрименениеЦенНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	УдалитьРегистрацию();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьРегистрацию()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПоМагазину.Ссылка
	|ИЗ
	|	ПланОбмена.ПоМагазину КАК ПоМагазину
	|ГДЕ
	|	ПоМагазину.Ссылка <> &ЭтотУзел");
	Запрос.УстановитьПараметр("ЭтотУзел", ПланыОбмена.ПоМагазину.ЭтотУзел());
	МассивУзлов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Если Документы.ВводНачальныхОстатковУзла.ВозможноПровестиВводОстатковВУзле(Узел) Тогда
		
		ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, Ссылка);
		
	КонецЕсли;
	
	НаборТоварыНаСкладах = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
	НаборТоварыНаСкладах.Отбор.Регистратор.Установить(Ссылка);
	НаборТоварыНаСкладах.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборТоварыНаСкладах);
	
	НаборТоварыОрганизаций = РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей();
	НаборТоварыОрганизаций.Отбор.Регистратор.Установить(Ссылка);
	НаборТоварыОрганизаций.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборТоварыОрганизаций);
	
	НаборДенежныеСредстваНаличные = РегистрыНакопления.ДенежныеСредстваНаличные.СоздатьНаборЗаписей();
	НаборДенежныеСредстваНаличные.Отбор.Регистратор.Установить(Ссылка);
	НаборДенежныеСредстваНаличные.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборДенежныеСредстваНаличные);
	
	НаборДенежныеСредстваККМ = РегистрыНакопления.ДенежныеСредстваККМ.СоздатьНаборЗаписей();
	НаборДенежныеСредстваККМ.Отбор.Регистратор.Установить(Ссылка);
	НаборДенежныеСредстваККМ.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборДенежныеСредстваККМ);
	
	НаборЦеныНоменклатуры = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
	НаборЦеныНоменклатуры.Отбор.Регистратор.Установить(Ссылка);
	НаборЦеныНоменклатуры.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборЦеныНоменклатуры);
	
	НаборДействующиеЦеныНоменклатуры = РегистрыСведений.ДействующиеЦеныНоменклатуры.СоздатьНаборЗаписей();
	НаборДействующиеЦеныНоменклатуры.Отбор.Регистратор.Установить(Ссылка);
	НаборДействующиеЦеныНоменклатуры.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборДействующиеЦеныНоменклатуры);
	
	НаборСебестоимостьНоменклатуры = РегистрыСведений.СебестоимостьНоменклатуры.СоздатьНаборЗаписей();
	НаборСебестоимостьНоменклатуры.Отбор.Регистратор.Установить(Ссылка);
	НаборСебестоимостьНоменклатуры.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборСебестоимостьНоменклатуры);

	НаборТоварыКПоступлению = РегистрыНакопления.ТоварыКПоступлению.СоздатьНаборЗаписей();
	НаборТоварыКПоступлению.Отбор.Регистратор.Установить(Ссылка);
	НаборТоварыКПоступлению.Прочитать();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(МассивУзлов, НаборТоварыКПоступлению);
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
