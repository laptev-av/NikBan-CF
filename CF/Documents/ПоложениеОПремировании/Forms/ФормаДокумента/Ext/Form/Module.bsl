#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,КартинкаСостоянияДокумента,Элементы.КартинкаСостоянияДокумента.Подсказка,РазрешеноПроведение);
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	
	НастроитьФормуПоДополнительнымПравам();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОпределитьПараметрыПремирования();
	УстановитьДоступность();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(
		Объект,
		Элементы.КартинкаСостоянияДокумента.Подсказка,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, Элементы.КартинкаСостоянияДокумента.Подсказка, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.ЗакончитьЗамер(ПараметрыЗаписи.Замер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// &ЗамерПроизводительности	
	Замер = ОценкаПроизводительностиРТКлиент.НачатьЗамер(Ложь, 
	                                            "Документ.ПоложениеОПремировании.ФормаДокумента.Запись",
                                                           Ложь);
	
	ПараметрыЗаписи.Вставить("Замер", Замер);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПараметрыПоложения(Элемент)
	
	ПредыдущееСостояниеПоложения = Объект.ДляВсехМагазиновОдноПоложение;
	Если ПараметрыПоложения = "Индивидуальное" Тогда
		Объект.ДляВсехМагазинов = Ложь;
		Объект.ДляВсехМагазиновОдноПоложение = Ложь;
	ИначеЕсли ПараметрыПоложения = "ОдноДляВсех" Тогда
		Объект.ДляВсехМагазинов = Истина;
		Объект.ДляВсехМагазиновОдноПоложение = Истина;
		Объект.Магазины.Очистить();
	ИначеЕсли ПараметрыПоложения = "ОдноДляНескольких" Тогда
		Объект.ДляВсехМагазинов = Ложь;
		Объект.ДляВсехМагазиновОдноПоложение = Истина;
	КонецЕсли;
	Если ПредыдущееСостояниеПоложения <> Объект.ДляВсехМагазиновОдноПоложение Тогда
		Объект.ПравилаРасчетаПремий.Очистить();
	КонецЕсли;
	УстановитьДоступность();
	ОпределитьПараметрыПремирования();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМагазины

&НаКлиенте
Процедура МагазиныПриИзменении(Элемент)
	
	Если НЕ Объект.ДляВсехМагазиновОдноПоложение Тогда
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		Если ТекущаяСтрокаМагазины <> Неопределено Тогда
			УстановитьОтборТаблицаПравилРасчетаПремий(ТекущаяСтрокаМагазины.Магазин);
		КонецЕсли;
	Иначе
		Элементы.ПравилаРасчетаПремий.ОтборСтрок = Неопределено;
	КонецЕсли;
	
	УстановитьДоступностьТаблицыПравилаРасчетаПремий();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПриАктивизацииСтроки(Элемент)
	
	Если НЕ Объект.ДляВсехМагазиновОдноПоложение Тогда
		ТекущаяСтрокаМагазины = Элемент.ТекущиеДанные;
		Если ТекущаяСтрокаМагазины <> Неопределено Тогда
			УстановитьОтборТаблицаПравилРасчетаПремий(ТекущаяСтрокаМагазины.Магазин);
			ОпределитьПараметрыПремирования();
		КонецЕсли;
	Иначе
		Элементы.ПравилаРасчетаПремий.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныМагазинПриИзменении(Элемент)
	
	Если НЕ Объект.ДляВсехМагазиновОдноПоложение Тогда
		ТекущаяСтрокаМагазин = Элементы.Магазины.ТекущиеДанные;
		Если ТекущаяСтрокаМагазин <> Неопределено ИЛИ НЕ Объект.ДляВсехМагазиновОдноПоложение Тогда
			УстановитьОтборТаблицаПравилРасчетаПремий(ТекущаяСтрокаМагазин.Магазин);
		КонецЕсли;
	Иначе
		Элементы.ПравилаРасчетаПремий.ОтборСтрок = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МагазиныПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОпределитьПараметрыПремирования();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()

	УстановитьДоступностьТаблицыПравилаРасчетаПремий();
	Элементы.ГруппаЛево.Видимость = НЕ Объект.ДляВсехМагазинов;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьТаблицыПравилаРасчетаПремий()

	ДоступностьПараметров = Объект.ДляВсехМагазинов
							ИЛИ Объект.ДляВсехМагазиновОдноПоложение 
							ИЛИ Объект.Магазины.Количество()>0;
	Элементы.ПравилаРасчетаПремий.Доступность = ДоступностьПараметров;
	Элементы.ПравилаРасчетаПремий.ТолькоПросмотр = НЕ Элементы.ПравилаРасчетаПремий.Доступность;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьПараметрыПремирования()
	
	ТекстЗаголовка = "";
	
	Если Объект.ДляВсехМагазинов И Объект.ДляВсехМагазиновОдноПоложение Тогда
		
		Если ПустаяСтрока(ПараметрыПоложения) Тогда
			ПараметрыПоложения = "ОдноДляВсех";
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Использование для всех магазинов'");
		
	ИначеЕсли (НЕ Объект.ДляВсехМагазинов) И Объект.ДляВсехМагазиновОдноПоложение Тогда
		
		Если ПустаяСтрока(ПараметрыПоложения) Тогда
			ПараметрыПоложения = "ОдноДляНескольких";
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Использование для выбранных магазинов'");
		
	Иначе
		
		Если ПустаяСтрока(ПараметрыПоложения) Тогда
			ПараметрыПоложения = "Индивидуальное";
		КонецЕсли;
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		ТекущийМагазин = "";
		Если ТекущаяСтрокаМагазины <> Неопределено Тогда
			ТекущийМагазин = ТекущаяСтрокаМагазины.Магазин;
		КонецЕсли;
		
		ТекстЗаголовка = НСтр("ru = 'Использование для магазина %1'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, ТекущийМагазин);
		
	КонецЕсли;
	Элементы.ГруппаПраво.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте

Процедура УстановитьОтборТаблицаПравилРасчетаПремий(ТекущийМагазин)
	
	Элементы.ПравилаРасчетаПремий.ОтборСтрок = Новый ФиксированнаяСтруктура("Магазин", ТекущийМагазин);
		
КонецПроцедуры

&НаКлиенте
Процедура ПравилаРасчетаПремийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрокаПравилаРасчетаПремий = Элементы.ПравилаРасчетаПремий.ТекущиеДанные;
	
	Если НЕ Объект.ДляВсехМагазинов И НЕ Объект.ДляВсехМагазиновОдноПоложение Тогда
		Если Элементы.ПравилаРасчетаПремий.ОтборСтрок <> Неопределено Тогда
			ТекущаяСтрокаПравилаРасчетаПремий.Магазин =  Элементы.ПравилаРасчетаПремий.ОтборСтрок.Магазин;
		КонецЕсли;
	Иначе
		ТекущаяСтрокаПравилаРасчетаПремий.Магазин = ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

