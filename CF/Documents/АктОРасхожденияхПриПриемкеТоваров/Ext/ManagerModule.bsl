#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт расхождений
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктРасхождений";
	КомандаПечати.Представление = НСтр("ru = 'Акт расхождений'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры")
							И ПланыОбмена.ОбменУправлениеТорговлейРозница.СуществуютУзлыПланаОбмена()
							И ПолучитьФункциональнуюОпцию("ИспользоватьСинхронизациюДанных");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	ПараметрыУказанияСерий.Вставить("ЭтоПеремещениеМеждуСкладами", Истина);
	ПараметрыУказанияСерий.Вставить("ИмяПоляМагазин", "МагазинОтправитель");
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещению);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.МагазинОтправитель КАК МагазинОтправитель,
	|	ДанныеДокумента.МагазинПолучатель КАК МагазинПолучатель,
	|	ДанныеДокумента.СкладОтправитель КАК СкладОтправитель,
	|	НЕ ДанныеДокумента.МагазинОтправитель.СкладУправляющейСистемы КАК ДвиженияПоОтправителю,
	|	НЕ ДанныеДокумента.МагазинПолучатель.СкладУправляющейСистемы КАК ДвиженияПоПолучателю,
	|	ДанныеДокумента.СкладПолучатель КАК СкладПолучатель,
	|	ДанныеДокумента.МагазинПолучатель.ИспользоватьОрдернуюСхемуПриПеремещении КАК ПоступлениеПоОрдернойСхеме,
	|	ДанныеДокумента.МагазинОтправитель.ИспользоватьОрдернуюСхемуПриПеремещении КАК РеализацияПоОрдернойСхеме,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПеремещениеТоваров) КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.МагазинОтправитель.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ИзлишкиНедостачиОтправителяПоОрдернойСхеме,
	|	ДанныеДокумента.МагазинПолучатель.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ИзлишкиНедостачиПолучателяПоОрдернойСхеме
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	НастройкаСпособаУчета      = ЗапасыСервер.ПолучитьСпособУчетаСебестоимости(Реквизиты.Период);
	СпособУчетаСебестоимости   = НастройкаСпособаУчета.СпособУчета;
	
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("СпособУчета", СпособУчетаСебестоимости);
	Запрос.УстановитьПараметр("СебестоимостьВключаетНДС", Константы.СебестоимостьВключаетНДС.Получить());
	Запрос.УстановитьПараметр("ИспользоватьУчетСебестоимости", ПолучитьФункциональнуюОпцию("ИспользоватьУчетСебестоимости"));
	Запрос.УстановитьПараметр("Поставщик", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("НомерГТД" , Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("Договор", Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка());
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	ПериодОбновления = Константы.ПериодОбновленияПоставляемойНоменклатуры.Получить();
	Запрос.УстановитьПараметр("ПериодОбновления", ПериодОбновления);
	
	Запрос.УстановитьПараметр("ВедетсяУчетОстатковОтправителя", ПланыОбмена.ПоМагазину.ВедетсяУчетОстатковМагазина(Реквизиты.МагазинОтправитель));
	Запрос.УстановитьПараметр("ВедетсяУчетОстатковПолучателя", ПланыОбмена.ПоМагазину.ВедетсяУчетОстатковМагазина(Реквизиты.МагазинПолучатель));
	
	Запрос.Текст =
	// 0 - ВтТаблицаТовары
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоВДокументе КАК Расхождения,
	|	&СкладПолучатель КАК СкладПолучатель,
	|	&СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТаблицаТовары.ЗаполненоПоОснованию КАК ЗаполненоПоОснованию,
	|	ТаблицаТовары.ВариантУчетаРасхождения КАК ВариантУчетаРасхождения,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> ТаблицаТовары.КоличествоВДокументе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1 - ТаблицаТоварыНаСкладах
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладПолучатель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА -ТаблицаТовары.Расхождения
	|		ИНАЧЕ ТаблицаТовары.Расхождения
	|	КОНЕЦ КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И &ВедетсяУчетОстатковПолучателя
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ТаблицаТовары.ВариантУчетаРасхождения <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	&Период,
	|	ТаблицаТовары.СкладОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА -ТаблицаТовары.Расхождения
	|		ИНАЧЕ ТаблицаТовары.Расхождения
	|	КОНЕЦ,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|	И &ВедетсяУчетОстатковОтправителя
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 2 - ТаблицаТоварыОрганизаций
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Период КАК Период,
	|	&ОрганизацияПолучатель КАК Организация,
	|	&ПустаяОрганизация КАК ОрганизацияОтгрузки,
	|	&СкладПолучатель КАК Склад,
	|	&Поставщик КАК Поставщик,
	|	&Договор КАК Договор,
	|	&НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА -ТаблицаТовары.Расхождения
	|		ИНАЧЕ ТаблицаТовары.Расхождения
	|	КОНЕЦ КАК Количество,
	|	0 КАК СуммаПродажи,
	|	ТаблицаТовары.ВариантУчетаРасхождения КАК ВариантУчетаРасхождения,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ТаблицаТовары.ВариантУчетаРасхождения <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	&Период,
	|	&Организация,
	|	&ПустаяОрганизация,
	|	&СкладОтправитель,
	|	&Поставщик КАК Поставщик,
	|	&Договор КАК Договор,
	|	&НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА -ТаблицаТовары.Расхождения
	|		ИНАЧЕ ТаблицаТовары.Расхождения
	|	КОНЕЦ,
	|	0,
	|	ТаблицаТовары.ВариантУчетаРасхождения,
	|	ТаблицаТовары.НомерСтроки
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ВидДвижения УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3 - ТаблицаНоменклатураПоставщиков
	|
	|ВЫБРАТЬ
	|	&МагазинПолучатель КАК Магазин,
	|	&МагазинОтправитель КАК Поставщик,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|		ПО (НоменклатураПоставщиков.Поставщик = &МагазинОтправитель)
	|			И (НоменклатураПоставщиков.Магазин = &МагазинПолучатель)
	|			И (НоменклатураПоставщиков.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (НоменклатураПоставщиков.Характеристика = ТаблицаТовары.Характеристика)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПоставщикиНоменклатуры КАК ПоставщикиНоменклатуры
	|		ПО (&МагазинОтправитель = ПоставщикиНоменклатуры.Поставщик)
	|ГДЕ
	|	НоменклатураПоставщиков.Поставщик ЕСТЬ NULL 
	|	И &ДвиженияПоПолучателю
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ПериодОбновления <= &Период
	|	И НЕ ТаблицаТовары.ЗаполненоПоОснованию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Себестоимость.Номенклатура,
	|	Себестоимость.Характеристика,
	|	ВЫБОР
	|		КОГДА Себестоимость.Период ЕСТЬ НЕ NULL 
	|				И СебестоимостьПустойМагазин.Период ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Себестоимость.Период >= СебестоимостьПустойМагазин.Период
	|						ТОГДА Себестоимость.Цена
	|					ИНАЧЕ СебестоимостьПустойМагазин.Цена
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Себестоимость.Период ЕСТЬ НЕ NULL 
	|					ТОГДА Себестоимость.Цена
	|				ИНАЧЕ СебестоимостьПустойМагазин.Цена
	|			КОНЕЦ
	|	КОНЕЦ КАК Себестоимость
	|ПОМЕСТИТЬ СебестоимостьНоменклатуры
	|ИЗ
	|	РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|			&Период,
	|			Магазин = &МагазинОтправитель
	|				И НЕ Регистратор = &Ссылка
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВтТаблицаТовары.Номенклатура,
	|						ВтТаблицаТовары.Характеристика
	|					ИЗ
	|						ВтТаблицаТовары КАК ВтТаблицаТовары
	|					ГДЕ
	|						НЕ ВтТаблицаТовары.ЗаполненоПоОснованию)) КАК Себестоимость
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|				&Период,
	|				Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|					И НЕ Регистратор = &Ссылка
	|					И (Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВтТаблицаТовары.Номенклатура,
	|							ВтТаблицаТовары.Характеристика
	|						ИЗ
	|							ВтТаблицаТовары КАК ВтТаблицаТовары
	|						ГДЕ
	|							НЕ ВтТаблицаТовары.ЗаполненоПоОснованию)) КАК СебестоимостьПустойМагазин
	|		ПО Себестоимость.Номенклатура = СебестоимостьПустойМагазин.Номенклатура
	|			И Себестоимость.Характеристика = СебестоимостьПустойМагазин.Характеристика
	|ГДЕ
	|	&ИспользоватьУчетСебестоимости
	|	И &СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 5 - ТаблицаСебестоимостьНоменклатуры
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&МагазинПолучатель КАК Магазин,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	МИНИМУМ(СебестоимостьНоменклатуры.Себестоимость) КАК Цена,
	|	СУММА(ТаблицаТовары.Расхождения) КАК Количество,
	|	СУММА(ТаблицаТовары.Расхождения * ЕСТЬNULL(СебестоимостьНоменклатуры.Себестоимость, 0)) КАК Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьНоменклатуры КАК СебестоимостьНоменклатуры
	|		ПО ТаблицаТовары.Номенклатура = СебестоимостьНоменклатуры.Номенклатура
	|			И ТаблицаТовары.Характеристика = СебестоимостьНоменклатуры.Характеристика
	|ГДЕ
	|	&СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчет)
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И НЕ ЕСТЬNULL(СебестоимостьНоменклатуры.Себестоимость, 0) = 0
	|	И НЕ ТаблицаТовары.ЗаполненоПоОснованию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 6 - ТаблицаСебестоимостьПоставкиТоваров
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&МагазинПолучатель КАК Магазин,
	|	&МагазинОтправитель КАК МагазинОтправитель,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Расхождения КАК Количество,
	|	0 КАК Цена,
	|	0 КАК Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьУчетСебестоимости
	|	И &СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчетСредняяВзвешенная)
	|	И &ДвиженияПоПолучателю
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И НЕ ТаблицаТовары.ЗаполненоПоОснованию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 7 - ТаблицаРасхожденияПриПриемке
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период,
	|	ТаблицаТовары.СкладПолучатель,
	|	ТаблицаТовары.Ссылка КАК АктОРасхождениях,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.СкладОтправитель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА -ТаблицаТовары.Расхождения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Недостачи,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения > 0
	|			ТОГДА ТаблицаТовары.Расхождения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Излишки,
	|	ТаблицаТовары.ВариантУчетаРасхождения
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.СкладПолучатель,
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.СкладОтправитель,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения < 0
	|			ТОГДА -ТаблицаТовары.Расхождения
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Расхождения > 0
	|			ТОГДА ТаблицаТовары.Расхождения
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаТовары.ВариантУчетаРасхождения
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ВариантУчетаРасхождения <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 8 - ТаблицаТоварыКОформлениюИзлишковНедостач
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	СУММА(ТаблицаТовары.Расхождения) КАК КОформлениюАктов,
	|	&Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|			ТОГДА ТаблицаТовары.СкладПолучатель
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|			ТОГДА ТаблицаТовары.СкладОтправитель
	|	КОНЕЦ КАК Склад,
	|	&Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|				И НЕ &ИзлишкиНедостачиОтправителяПоОрдернойСхеме
	|			ИЛИ ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|				И НЕ &ИзлишкиНедостачиПолучателяПоОрдернойСхеме)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|			ТОГДА ТаблицаТовары.СкладПолучатель
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|			ТОГДА ТаблицаТовары.СкладОтправитель
	|	КОНЕЦ,
	|	ТаблицаТовары.ВариантУчетаРасхождения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТовары.Расхождения) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	СУММА(-ТаблицаТовары.Расхождения),
	|	&Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|			ТОГДА ТаблицаТовары.СкладПолучатель
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|			ТОГДА ТаблицаТовары.СкладОтправитель
	|	КОНЕЦ,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки)
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|				И НЕ &ИзлишкиНедостачиОтправителяПоОрдернойСхеме
	|			ИЛИ ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|				И НЕ &ИзлишкиНедостачиПолучателяПоОрдернойСхеме)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|			ТОГДА ТаблицаТовары.СкладПолучатель
	|		КОГДА ТаблицаТовары.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|			ТОГДА ТаблицаТовары.СкладОтправитель
	|	КОНЕЦ,
	|	ТаблицаТовары.ВариантУчетаРасхождения
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТовары.Расхождения) < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РазделительТекстов = "
	|;
	|";
	
	Запрос.Текст = Запрос.Текст
		+ РазделительТекстов + ТекстЗапросаТаблицаДвиженияСерийТоваров()
		+ РазделительТекстов + ТекстЗапросаТаблицаСерийныхНомеров();
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"              		, Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"            		, Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНоменклатураПоставщиков"      		, Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьНоменклатуры"    		, Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьПоставкиТоваров"		, Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасхожденияПриПриемке" 		  		, Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач"	, Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"         		, Результат[13].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"              		, Результат[19].Выгрузить());
	
	ИспользоватьКомиссионнуюТорговлю = ДополнительныеСвойства.ИспользуетсяКомиссионнаяТорговля;
	ИспользоватьУчетИмпортныхТоваров = ДополнительныеСвойства.ИспользуетсяУчетИмпортныхТоваров;
	
	Если ИспользоватьКомиссионнуюТорговлю 
		ИЛИ ИспользоватьУчетИмпортныхТоваров Тогда
		Если ЗначениеЗаполнено(Реквизиты.ДокументОснование) Тогда
			ЗапросОснование = Новый Запрос;
			ЗапросОснование.Текст = "ВЫБРАТЬ
			|	ТоварыОрганизаций.Период КАК Период,
			|	ТоварыОрганизаций.НомерСтроки КАК НомерСтроки,
			|	ТоварыОрганизаций.ВидДвижения КАК ВидДвижения,
			|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
			|	ТоварыОрганизаций.Характеристика КАК Характеристика,
			|	ТоварыОрганизаций.Склад КАК Склад,
			|	ТоварыОрганизаций.Организация КАК Организация,
			|	ТоварыОрганизаций.Поставщик КАК Поставщик,
			|	ТоварыОрганизаций.Договор КАК Договор,
			|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
			|	ТоварыОрганизаций.Количество КАК Количество,
			|	ТоварыОрганизаций.ОрганизацияОтгрузки КАК ОрганизацияОтгрузки,
			|	ТоварыОрганизаций.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
			|	0 КАК СуммаПродажи
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
			|ГДЕ
			|	ТоварыОрганизаций.Регистратор = &ДокументОснование
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки УБЫВ,
			|	ВидДвижения
			|";
			ЗапросОснование.УстановитьПараметр("ДокументОснование", Реквизиты.ДокументОснование);
			ТаблицаДвиженийОснования = ЗапросОснование.Выполнить().Выгрузить();
			МассивУдаляемыхСтрок = Новый Массив;
			ТаблицаСторнируемыхСтрок = ТаблицыДляДвижений.ТаблицаТоварыОрганизаций.СкопироватьКолонки();
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ВидДвижения", Неопределено);
			СтруктураПоиска.Вставить("Номенклатура", Неопределено);
			СтруктураПоиска.Вставить("Характеристика", Неопределено);
			СтруктураПоиска.Вставить("Склад", Неопределено);
			СтруктураПоиска.Вставить("Организация", Неопределено);
			
			Для Каждого СтрокаРасхождения Из ТаблицыДляДвижений.ТаблицаТоварыОрганизаций Цикл
				
				Если (СтрокаРасхождения.ВидДвижения = ВидДвиженияНакопления.Приход
					И СтрокаРасхождения.Склад = Реквизиты.СкладОтправитель)
					ИЛИ (СтрокаРасхождения.ВидДвижения = ВидДвиженияНакопления.Расход
						И СтрокаРасхождения.Склад = Реквизиты.СкладПолучатель) Тогда
					
					Если (СтрокаРасхождения.ВидДвижения = ВидДвиженияНакопления.Расход
						И СтрокаРасхождения.Склад = Реквизиты.СкладПолучатель
						И СтрокаРасхождения.ВариантУчетаРасхождения = Перечисления.ВариантыУчетаРасхождений.НаСкладеОтправителя) Тогда
						МассивУдаляемыхСтрок.Добавить(СтрокаРасхождения);
						Продолжить;
					КонецЕсли;
					
					// Сторно движений
					ВидДвижения = ?(СтрокаРасхождения.ВидДвижения = ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход);
					ВосстановитьПолучателяПоОтправителю = Ложь;
					СвернутьПоставщикаУПолучателя = Ложь;
					Если СтрокаРасхождения.ВидДвижения = ВидДвиженияНакопления.Приход
						И СтрокаРасхождения.Склад = Реквизиты.СкладОтправитель
						И СтрокаРасхождения.ВариантУчетаРасхождения = Перечисления.ВариантыУчетаРасхождений.НаСкладеОтправителя Тогда
						// Все строки отправителя нужно будет зеркально сторнировать у получателя.
						// За исключением поставщика и договора.
						ВосстановитьПолучателяПоОтправителю = Истина;
						// Если организации разные.
						Если Реквизиты.Организация <> Реквизиты.ОрганизацияПолучатель Тогда
							СвернутьПоставщикаУПолучателя = Истина;
						КонецЕсли;
						
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаРасхождения);
					СтруктураПоиска.ВидДвижения = ВидДвижения;
					
					СтрокиОснования = ТаблицаДвиженийОснования.НайтиСтроки(СтруктураПоиска);
					НужноСторнировать = СтрокаРасхождения.Количество;
					Для Каждого СтрокаОснования Из СтрокиОснования Цикл
						Если СтрокаОснования.Количество <= 0 Тогда
							Продолжить;
						КонецЕсли;
						
						НоваяСтрока = ТаблицаСторнируемыхСтрок.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОснования);
						НоваяСтрока.Период = СтрокаРасхождения.Период;
						Если СтрокаОснования.Количество >= НужноСторнировать Тогда
							НоваяСтрока.Количество = -НужноСторнировать;
							СтрокаОснования.Количество = СтрокаОснования.Количество - НужноСторнировать;
							НужноСторнировать = 0;
						Иначе
							НоваяСтрока.Количество = -НоваяСтрока.Количество;
							НужноСторнировать = НужноСторнировать - СтрокаОснования.Количество;
							СтрокаОснования.Количество = 0;
						КонецЕсли;
						Если ВосстановитьПолучателяПоОтправителю Тогда
							НоваяСтрокаПолучателя = ТаблицаСторнируемыхСтрок.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаПолучателя, НоваяСтрока);
							НоваяСтрокаПолучателя.ВидДвижения = ВидДвиженияНакопления.Приход;
							НоваяСтрокаПолучателя.Организация = Реквизиты.ОрганизацияПолучатель;
							НоваяСтрокаПолучателя.Склад = Реквизиты.СкладПолучатель;
							Если СвернутьПоставщикаУПолучателя Тогда
								НоваяСтрокаПолучателя.Поставщик = Справочники.Контрагенты.ПустаяСсылка();
								НоваяСтрокаПолучателя.Договор = Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка();
							КонецЕсли;
						КонецЕсли;
						Если НужноСторнировать <= 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если НужноСторнировать > 0 Тогда
						НоваяСтрока = ТаблицаСторнируемыхСтрок.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасхождения);
						НоваяСтрока.Период = СтрокаРасхождения.Период;
						НоваяСтрока.Количество = -НужноСторнировать;
						НоваяСтрока.ВидДвижения = ВидДвижения;
						
						Если ВосстановитьПолучателяПоОтправителю Тогда
							НоваяСтрокаПолучателя = ТаблицаСторнируемыхСтрок.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаПолучателя, НоваяСтрока);
							НоваяСтрокаПолучателя.ВидДвижения = ВидДвиженияНакопления.Приход;
							НоваяСтрокаПолучателя.Организация = Реквизиты.ОрганизацияПолучатель;
							НоваяСтрокаПолучателя.Склад = Реквизиты.СкладПолучатель;
							Если СвернутьПоставщикаУПолучателя Тогда
								НоваяСтрокаПолучателя.Поставщик = Справочники.Контрагенты.ПустаяСсылка();
								НоваяСтрокаПолучателя.Договор = Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка();
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					МассивУдаляемыхСтрок.Добавить(СтрокаРасхождения);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
				ТаблицыДляДвижений.ТаблицаТоварыОрганизаций.Удалить(УдаляемаяСтрока);
			КонецЦикла;
			
 			ЕстьДанныеДляОтчетаКомитенту = Ложь;
			Если ТаблицыДляДвижений.ТаблицаТоварыОрганизаций.Количество() > 0 Тогда
				// Оставшиеся строки - это дополнительный расход со склада отправителя.
				// И приход на склад получатель.
				// Обрабатываются они, как обычное перемещение.
				ПроведениеСервер.ПерезаполнитьТаблицуДвиженийТоварыОрганизаций(
					ТаблицыДляДвижений.ТаблицаТоварыОрганизаций,
					ДокументСсылка,
					Реквизиты.Период,
					ЕстьДанныеДляОтчетаКомитенту);
			КонецЕсли;
			
			ТаблицаСторнируемыхСтрок.Свернуть("Период, ВидДвижения, Номенклатура, Характеристика, Склад, Организация, Поставщик, Договор, НомерГТД, ОрганизацияОтгрузки, НомерСтрокиДокумента", "Количество, СуммаПродажи");
			
			Для Каждого СтрокаСторно Из ТаблицаСторнируемыхСтрок Цикл
				НоваяСтрока = ТаблицыДляДвижений.ТаблицаТоварыОрганизаций.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСторно);
				Если (НЕ ЕстьДанныеДляОтчетаКомитенту)
					И Реквизиты.Организация <> Реквизиты.ОрганизацияПолучатель
					И ЗначениеЗаполнено(НоваяСтрока.Договор) Тогда
					ЕстьДанныеДляОтчетаКомитенту = Истина;
				КонецЕсли;
			КонецЦикла;
			
			ТаблицыДляДвижений.ТаблицаТоварыОрганизаций.Сортировать("НомерСтрокиДокумента, ВидДвижения УБЫВ");
		Иначе
			
 			ЕстьДанныеДляОтчетаКомитенту = Ложь;
			Если ТаблицыДляДвижений.ТаблицаТоварыОрганизаций.Количество() > 0 Тогда
				// Оставшиеся строки - это дополнительный расход со склада отправителя.
				// И приход на склад получатель.
				// Обрабатываются они, как обычное перемещение.
				ПроведениеСервер.ПерезаполнитьТаблицуДвиженийТоварыОрганизаций(
					ТаблицыДляДвижений.ТаблицаТоварыОрганизаций,
					ДокументСсылка,
					Реквизиты.Период,
					ЕстьДанныеДляОтчетаКомитенту);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИспользоватьКомиссионнуюТорговлю Тогда
			ТаблицыДляДвижений.Вставить(
				"ТаблицаТоварыКОформлениюОтчетовКомитенту",
				ПроведениеСервер.ТаблицаДвиженийКомитенту(ТаблицыДляДвижений.ТаблицаТоварыОрганизаций, ЕстьДанныеДляОтчетаКомитенту));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктРасхождений") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктРасхождений",
			НСтр("ru = 'Акт расхождений'"),
			ПечатьАктРасхождений(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Возвращает Акт расхождений по документу перемещения
Функция АктРасхожденийПоПеремещению(ПеремещениеСсылка) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктРасхождений.Ссылка
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров КАК АктРасхождений
	|ГДЕ
	|	АктРасхождений.ДокументОснование = &ДокументОснование
	|	И АктРасхождений.Проведен";
	Запрос.УстановитьПараметр("ДокументОснование", ПеремещениеСсылка);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует текст запроса по сериям номенклатуры.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаДвиженияСерийТоваров()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерийОснования.НомерСтроки,
	|	ТаблицаСерийОснования.Номенклатура КАК Номенклатура,
	|	ТаблицаСерийОснования.Характеристика КАК Характеристика,
	|	ТаблицаСерийОснования.Серия КАК Серия,
	|	ТаблицаСерийОснования.Количество
	|ПОМЕСТИТЬ ВтТаблицаСерийОснования
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерийОснования
	|ГДЕ
	|	ТаблицаСерийОснования.Ссылка = &ДокументОснование
	|	И ТаблицаСерийОснования.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.НомерСтроки,
	|	ТаблицаСерий.Номенклатура КАК Номенклатура,
	|	ТаблицаСерий.Характеристика КАК Характеристика,
	|	ТаблицаСерий.Серия КАК Серия,
	|	ТаблицаСерий.Количество
	|ПОМЕСТИТЬ ВтТаблицаСерий
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров.Серии КАК ТаблицаСерий
	|ГДЕ
	|	ТаблицаСерий.Ссылка = &Ссылка
	|	И ТаблицаСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Серия,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) - СУММА(ВложенныйЗапрос.КоличествоОснование) КАК Расхождения
	|ПОМЕСТИТЬ ВтТаблицаСерийРасхождения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСерий.НомерСтроки КАК НомерСтроки,
	|		ТаблицаСерий.Номенклатура КАК Номенклатура,
	|		ТаблицаСерий.Характеристика КАК Характеристика,
	|		ТаблицаСерий.Серия КАК Серия,
	|		ТаблицаСерий.Количество КАК Количество,
	|		0 КАК КоличествоОснование
	|	ИЗ
	|		ВтТаблицаСерий КАК ТаблицаСерий
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСерийОснования.НомерСтроки,
	|		ТаблицаСерийОснования.Номенклатура,
	|		ТаблицаСерийОснования.Характеристика,
	|		ТаблицаСерийОснования.Серия,
	|		0,
	|		ТаблицаСерийОснования.Количество
	|	ИЗ
	|		ВтТаблицаСерийОснования КАК ТаблицаСерийОснования) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) - СУММА(ВложенныйЗапрос.КоличествоОснование) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	МАКСИМУМ(ТаблицаТовары.ВариантУчетаРасхождения) КАК ВариантУчетаРасхождения
	|ПОМЕСТИТЬ ВтТаблицаВариантыУчетаРасхождений
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийРасхождения.НомерСтроки КАК НомерСтроки,
	|	&Период,
	|	&МагазинПолучатель КАК Магазин,
	|	&ДокументОснование КАК Документ,
	|	ТаблицаСерийРасхождения.Номенклатура,
	|	ТаблицаСерийРасхождения.Характеристика,
	|	ТаблицаСерийРасхождения.Серия,
	|	ТаблицаСерийРасхождения.Расхождения КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПеремещению) КАК СкладскаяОперация
	|ИЗ
	|	ВтТаблицаСерийРасхождения КАК ТаблицаСерийРасхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаВариантыУчетаРасхождений КАК ТаблицаВариантыУчетаРасхождений
	|		ПО ТаблицаСерийРасхождения.Номенклатура = ТаблицаВариантыУчетаРасхождений.Номенклатура
	|			И ТаблицаСерийРасхождения.Характеристика = ТаблицаВариантыУчетаРасхождений.Характеристика
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И ЕСТЬNULL(ТаблицаВариантыУчетаРасхождений.ВариантУчетаРасхождения, ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерийРасхождения.НомерСтроки,
	|	&Период,
	|	&МагазинОтправитель,
	|	&ДокументОснование,
	|	ТаблицаСерийРасхождения.Номенклатура,
	|	ТаблицаСерийРасхождения.Характеристика,
	|	ТаблицаСерийРасхождения.Серия,
	|	ТаблицаСерийРасхождения.Расхождения,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещению)
	|ИЗ
	|	ВтТаблицаСерийРасхождения КАК ТаблицаСерийРасхождения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаВариантыУчетаРасхождений КАК ТаблицаВариантыУчетаРасхождений
	|		ПО ТаблицаСерийРасхождения.Номенклатура = ТаблицаВариантыУчетаРасхождений.Номенклатура
	|			И ТаблицаСерийРасхождения.Характеристика = ТаблицаВариантыУчетаРасхождений.Характеристика
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|	И ТаблицаВариантыУчетаРасхождений.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаВариантыУчетаРасхождений";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаДвиженияСерийТоваров()

// Функция формирует текст запроса по серийным номерам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерийныхНомеровОснования.СерийныйНомер КАК СерийныйНомер,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ВтТаблицаСерийныхНомеровОснования
	|ИЗ
	|	Документ.ПеремещениеТоваров.СерийныеНомера КАК ТаблицаСерийныхНомеровОснования
	|ГДЕ
	|	ТаблицаСерийныхНомеровОснования.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерийныхНомеровОснования.СерийныйНомер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СерийныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныхНомеров.СерийныйНомер КАК СерийныйНомер,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ ВтТаблицаСерийныхНомеров
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров.СерийныеНомера КАК ТаблицаСерийныхНомеров
	|ГДЕ
	|	ТаблицаСерийныхНомеров.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерийныхНомеров.СерийныйНомер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СерийныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СУММА(ВложенныйЗапрос.Количество) - СУММА(ВложенныйЗапрос.КоличествоОснование) КАК Расхождения
	|ПОМЕСТИТЬ ВтТаблицаСерийныхНомеровРасхождения
	|ИЗ
	|	ВтТаблицаСерийныхНомеров КАК ТаблицаСерийныхНомеров
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВтТаблицаСерийныхНомеровОснования КАК ТаблицаСерийныхНомеровОснования
	|		ПО ТаблицаСерийныхНомеров.СерийныйНомер = ТаблицаСерийныхНомеровОснования.СерийныйНомер,
	|	(ВЫБРАТЬ
	|		ТаблицаСерийныхНомеров.СерийныйНомер КАК СерийныйНомер,
	|		ТаблицаСерийныхНомеров.Количество КАК Количество,
	|		0 КАК КоличествоОснование
	|	ИЗ
	|		ВтТаблицаСерийныхНомеров КАК ТаблицаСерийныхНомеров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСерийныхНомеровОснования.СерийныйНомер,
	|		0,
	|		ТаблицаСерийныхНомеровОснования.Количество
	|	ИЗ
	|		ВтТаблицаСерийныхНомеровОснования КАК ТаблицаСерийныхНомеровОснования) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.СерийныйНомер КАК Справочник.СерийныеНомера)
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) - СУММА(ВложенныйЗапрос.КоличествоОснование) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	МАКСИМУМ(ТаблицаТовары.ВариантУчетаРасхождения) КАК ВариантУчетаРасхождения
	|ПОМЕСТИТЬ ВтТаблицаВариантыУчетаРасхождений
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныхНомеровРасхождения.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТаблицаСерийныхНомеровРасхождения.СерийныйНомер,
	|	ТаблицаСерийныхНомеровРасхождения.Расхождения КАК Количество,
	|	ВЫБОР
	|		КОГДА &ДвиженияПоПолучателю
	|				И ЕСТЬNULL(ТаблицаВариантыУчетаРасхождений.ВариантУчетаРасхождения, ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеПолучателя)
	|			ТОГДА &СкладПолучатель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Получатель,
	|	ВЫБОР
	|		КОГДА &ДвиженияПоОтправителю
	|				И ТаблицаВариантыУчетаРасхождений.ВариантУчетаРасхождения = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаРасхождений.НаСкладеОтправителя)
	|			ТОГДА &СкладОтправитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Отправитель,
	|	&Организация,
	|	&АналитикаХозяйственнойОперации,
	|	&Период
	|ИЗ
	|	ВтТаблицаСерийныхНомеровРасхождения КАК ТаблицаСерийныхНомеровРасхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаВариантыУчетаРасхождений КАК ТаблицаВариантыУчетаРасхождений
	|		ПО ТаблицаСерийныхНомеровРасхождения.СерийныйНомер.Владелец = ТаблицаВариантыУчетаРасхождений.Номенклатура
	|ГДЕ
	|	(&ДвиженияПоПолучателю
	|			ИЛИ &ДвиженияПоОтправителю)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьТекстЗапросаАктРасхождений(ТекстЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АктОРасхожденияхПриПриемкеТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(АктОРасхожденияхПриПриемкеТоваров.Ссылка) КАК ОснованиеПредставление,
	|	АктОРасхожденияхПриПриемкеТоваров.Номер КАК Номер,
	|	АктОРасхожденияхПриПриемкеТоваров.Дата КАК ДатаДокумента,
	|	АктОРасхожденияхПриПриемкеТоваров.Дата КАК Дата,
	|	АктОРасхожденияхПриПриемкеТоваров.МагазинОтправитель КАК Отправитель,
	|	ПРЕДСТАВЛЕНИЕ(АктОРасхожденияхПриПриемкеТоваров.МагазинОтправитель) КАК ОтправительПредставление,
	|	АктОРасхожденияхПриПриемкеТоваров.МагазинПолучатель КАК Получатель,
	|	ПРЕДСТАВЛЕНИЕ(АктОРасхожденияхПриПриемкеТоваров.МагазинПолучатель) КАК ПолучательПредставление,
	|	АктОРасхожденияхПриПриемкеТоваров.СкладПолучатель КАК СкладПолучатель,
	|	ПРЕДСТАВЛЕНИЕ(АктОРасхожденияхПриПриемкеТоваров.СкладПолучатель) КАК СкладПолучательПредставление,
	|	АктОРасхожденияхПриПриемкеТоваров.СкладОтправитель КАК СкладОтправитель,
	|	ПРЕДСТАВЛЕНИЕ(АктОРасхожденияхПриПриемкеТоваров.СкладОтправитель) КАК СкладОтправительПредставление,
	|	АктОРасхожденияхПриПриемкеТоваров.ОрганизацияПолучатель КАК Организация,
	|	АктОРасхожденияхПриПриемкеТоваров.Организация.Префикс КАК Префикс,
	|	АктОРасхожденияхПриПриемкеТоваров.МагазинОтправитель КАК Поставщик
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров КАК АктОРасхожденияхПриПриемкеТоваров
	|ГДЕ
	|	АктОРасхожденияхПриПриемкеТоваров.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА СУММА(ПеремещениеТоваровТовары.Количество) <> 0
	|			ТОГДА СУММА(ПеремещениеТоваровТовары.Сумма) / СУММА(ПеремещениеТоваровТовары.Количество)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ ЦеныТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				АктОРасхожденияхПриПриемкеТоваров.ДокументОснование
	|			ИЗ
	|				Документ.АктОРасхожденияхПриПриемкеТоваров КАК АктОРасхожденияхПриПриемкеТоваров
	|			ГДЕ
	|				АктОРасхожденияхПриПриемкеТоваров.Ссылка В (&МассивОбъектов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Ссылка КАК Ссылка,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СУММА(АктОРасхожденияхПриПриемкеТоваровТовары.КоличествоВДокументе) КАК КоличествоПоДокументам,
	|	СУММА(АктОРасхожденияхПриПриемкеТоваровТовары.Количество) КАК КоличествоПоФакту,
	|	ВЫРАЗИТЬ(АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НоменклатураНаименование,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.Код КАК Код,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.Артикул КАК Артикул,
	|	МИНИМУМ(АктОРасхожденияхПриПриемкеТоваровТовары.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ТоварыСРасхождениями
	|ИЗ
	|	Документ.АктОРасхожденияхПриПриемкеТоваров.Товары КАК АктОРасхожденияхПриПриемкеТоваровТовары
	|ГДЕ
	|	(АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ИЛИ АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И АктОРасхожденияхПриПриемкеТоваровТовары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Характеристика,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Характеристика.Наименование,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.Код,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.Артикул,
	|	АктОРасхожденияхПриПриемкеТоваровТовары.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ АктОРасхожденияхПриПриемкеТоваровТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(АктОРасхожденияхПриПриемкеТоваровТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСРасхождениями.Ссылка,
	|	ТоварыСРасхождениями.Номенклатура,
	|	ТоварыСРасхождениями.Характеристика,
	|	ТоварыСРасхождениями.Упаковка,
	|	ТоварыСРасхождениями.ЕдиницаИзмерения,
	|	ТоварыСРасхождениями.Код,
	|	ТоварыСРасхождениями.Артикул,
	|	ТоварыСРасхождениями.НомерСтроки,
	|	ТоварыСРасхождениями.НоменклатураНаименование,
	|	ТоварыСРасхождениями.ХарактеристикаНаименование,
	|	ТоварыСРасхождениями.КоличествоПоДокументам,
	|	ТоварыСРасхождениями.КоличествоПоФакту,
	|	ВЫБОР
	|		КОГДА ТоварыСРасхождениями.КоличествоПоФакту - ТоварыСРасхождениями.КоличествоПоДокументам > 0
	|			ТОГДА ТоварыСРасхождениями.КоличествоПоФакту - ТоварыСРасхождениями.КоличествоПоДокументам
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоИзлишек,
	|	ВЫБОР
	|		КОГДА ТоварыСРасхождениями.КоличествоПоДокументам - ТоварыСРасхождениями.КоличествоПоФакту > 0
	|			ТОГДА ТоварыСРасхождениями.КоличествоПоДокументам - ТоварыСРасхождениями.КоличествоПоФакту
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНедостача,
	|	ТоварыСРасхождениями.КоличествоПоДокументам * ЕСТЬNULL(ЦеныТоваров.Цена, 0) КАК СуммаПоДокументам,
	|	ТоварыСРасхождениями.КоличествоПоФакту * ЕСТЬNULL(ЦеныТоваров.Цена, 0) КАК СуммаПоФакту,
	|	ВЫБОР
	|		КОГДА ТоварыСРасхождениями.КоличествоПоФакту - ТоварыСРасхождениями.КоличествоПоДокументам > 0
	|			ТОГДА (ТоварыСРасхождениями.КоличествоПоФакту - ТоварыСРасхождениями.КоличествоПоДокументам) * ЕСТЬNULL(ЦеныТоваров.Цена, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаИзлишек,
	|	ВЫБОР
	|		КОГДА ТоварыСРасхождениями.КоличествоПоДокументам - ТоварыСРасхождениями.КоличествоПоФакту > 0
	|			ТОГДА (ТоварыСРасхождениями.КоличествоПоДокументам - ТоварыСРасхождениями.КоличествоПоФакту) * ЕСТЬNULL(ЦеныТоваров.Цена, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНедостача,
	|	ЕСТЬNULL(ЦеныТоваров.Цена, 0) КАК Цена
	|ИЗ
	|	ТоварыСРасхождениями КАК ТоварыСРасхождениями
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныТоваров КАК ЦеныТоваров
	|		ПО ТоварыСРасхождениями.Ссылка.ДокументОснование = ЦеныТоваров.Ссылка
	|			И ТоварыСРасхождениями.Номенклатура = ЦеныТоваров.Номенклатура
	|			И ТоварыСРасхождениями.Характеристика = ЦеныТоваров.Характеристика
	|ГДЕ
	|	ТоварыСРасхождениями.КоличествоПоДокументам <> ТоварыСРасхождениями.КоличествоПоФакту";
	
КонецПроцедуры

Функция ПечатьАктРасхождений(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов 		= ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды		= ЗначениеЗаполнено(КолонкаКодов);
	СинонимДокумента 	= НСтр("ru='Акт расхождений по перемещению'");
	РеквизитыДокумента 	= Новый Структура("Номер, Дата, Префикс");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	СформироватьТекстЗапросаАктРасхождений(Запрос.Текст);
	
	ПакетРезультатов 			= Запрос.ВыполнитьПакет();
	ДанныеПечати 				= ПакетРезультатов[0].Выбрать();
	ТаблицаТоваровПоДокументам	= ПакетРезультатов[3].Выгрузить();
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОРасхожденияхПриПриемкеТоваров_АктРасхождений";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АктОРасхожденияхПриПриемкеТоваров.ПФ_MXL_АктРасхождений");
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
		ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
		ОбластьСтрокаИтогоНачало 	= Макет.ПолучитьОбласть("СтрокаИтого|НачалоСтроки");
		
		ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
		ОбластьСтрокаИтогоКолонкаКодов 		= Макет.ПолучитьОбласть("СтрокаИтого|КолонкаКодов");
		
		ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		ОбластьКолонкаТовары = Макет.Область("КолонкаТовары");
		
		Если НЕ ВыводитьКоды Тогда
			ОбластьКолонкаТовары.ШиринаКолонки = ОбластьКолонкаТовары.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
		ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
		ОбластьСтрокаИтогоКонец 	= Макет.ПолучитьОбласть("СтрокаИтого|КонецСтроки");
		
		
		СтрокиТЧ = ТаблицаТоваровПоДокументам.НайтиСтроки(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Заголовок
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ДанныеПечати);
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(ДанныеПечати, СинонимДокумента);
		ТабличныйДокумент.Вывести(Область);
		
		// Шапка
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		Область.Параметры.ОрганизацияПредставление = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		ТабличныйДокумент.Вывести(Область);
		
		// Таблица
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		
		КоличествоИзлишекИтого		= 0;
		СуммаИзлишекИтого			= 0;
		КоличествоНедостачаИтого	= 0;
		СуммаНедостачаИтого			= 0;
		НомерСтроки = 1;
		
		Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = СтрокаТЧ[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(СтрокаТЧ);
			ОбластьСтрокаТаблицыКонец.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);
			
			КоличествоИзлишекИтого		= КоличествоИзлишекИтого + СтрокаТЧ.КоличествоИзлишек;
			СуммаИзлишекИтого			= СуммаИзлишекИтого + СтрокаТЧ.СуммаИзлишек;
			КоличествоНедостачаИтого	= КоличествоНедостачаИтого + СтрокаТЧ.КоличествоНедостача;
			СуммаНедостачаИтого			= СуммаНедостачаИтого + СтрокаТЧ.СуммаНедостача;
			НомерСтроки 				= НомерСтроки + 1;
			
		КонецЦикла;
		
		// Итого
		ОбластьСтрокаИтогоКонец.Параметры.КоличествоИзлишекИтого	= КоличествоИзлишекИтого;
		ОбластьСтрокаИтогоКонец.Параметры.СуммаИзлишекИтого			= СуммаИзлишекИтого;
		ОбластьСтрокаИтогоКонец.Параметры.КоличествоНедостачаИтого	= КоличествоНедостачаИтого;
		ОбластьСтрокаИтогоКонец.Параметры.СуммаНедостачаИтого		= СуммаНедостачаИтого;
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаИтогоНачало);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьСтрокаИтогоКолонкаКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьСтрокаИтогоКонец);
		
		// Подписи
		Область = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(Область);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
