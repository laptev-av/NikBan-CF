
// Используется механизмом обработки изменения реквизитов ТЧ.
&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	Если НЕ Параметры.Свойство("ДокументОснование", ДокументОснование) Тогда
	
		Отказ = Истина;
		Возврат;
	
	КонецЕсли;
	
	ЗаполнениеПоОстаткамСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗакрытиеПриСозданииПересортицы Тогда
		
		Если ЗавершениеРаботы Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ЗафиксироватьВыбор();
		
		Если ТаблицаВыбора.Количество() > 0 Тогда
			
			Отказ = Истина;
			ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Закрыть форму без создания пересортицы товаров?'"), РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаСписаниеВыборПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущиеДанные = Элементы.ТаблицаСписаниеВыбор.ТекущиеДанные;
	ТекущиеДанные.КоличествоВыбор = Мин(ТекущиеДанные.КоличествоВыбор, ТекущиеДанные.КоличествоОстаток);
	КоличествоПересортицы     = ТаблицаСписаниеВыбор.Итог("КоличествоВыбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСписаниеВыборВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаСписаниеВыбор.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.ТаблицаСписаниеВыбор.ТекущийЭлемент = Элементы.ТаблицаСписаниеВыборКоличествоВыбор 
		И НЕ ТекущиеДанные.КоличествоВыбор = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.КоличествоВыбор = ТекущиеДанные.КоличествоОстаток;
	КоличествоПересортицы     = ТаблицаСписаниеВыбор.Итог("КоличествоВыбор");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСписаниеВыборПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСписаниеВыборПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьТаблицуСортировки(Команда)
	
	ЗаполнитьТаблицуСортировкиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Завершить(Команда)
	
	ЗафиксироватьВыбор();
	ОткрытьФорму("Документ.ПересортицаТоваров.ФормаОбъекта", СтруктураПараметровФормыПересортицы());
	ЗакрытиеПриСозданииПересортицы = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиНазад(Команда)
	
	Если ПроверитьВозможностьСменыСтраницы() Тогда
		ЗафиксироватьВыбор();
		ТекущийИндексТаблицыСравнения = ТекущийИндексТаблицыСравнения - 1;
		ЗаполнитьТекущейТаблицыВыбораСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиДалее(Команда)
	
	Если ПроверитьВозможностьСменыСтраницы() Тогда
		ЗафиксироватьВыбор();
		ТекущийИндексТаблицыСравнения = ТекущийИндексТаблицыСравнения + 1;
		ЗаполнитьТекущейТаблицыВыбораСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущийВыбор(Команда)
	
	Для каждого СтрокаСписаниеВыбор Из ТаблицаСписаниеВыбор Цикл
		СтрокаСписаниеВыбор.КоличествоВыбор = 0;
	КонецЦикла;
	
	КоличествоПересортицы = ТаблицаСписаниеВыбор.Итог("КоличествоВыбор");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытиеПриСозданииПересортицы = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицы()

	ТаблицаОприходование.Очистить();
	ТаблицаСписание.Очистить();
	ТаблицаВыбора.Очистить();
	ТаблицаСортировки.Очистить();
	ТаблицаСравнение.Очистить();
	ТаблицаСписаниеВыбор.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеПоОстаткамСервер()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИнвентаризация;
	
	ОчиститьТаблицы();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПересчетТоваровТовары.Номенклатура,
	|	ПересчетТоваровТовары.Характеристика,
	|	МАКСИМУМ(ПересчетТоваровТовары.Цена) КАК Цена
	|ПОМЕСТИТЬ ТаблицаЦен
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|ГДЕ
	|	ПересчетТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересчетТоваровТовары.Номенклатура,
	|	ПересчетТоваровТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура,
	|	ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура.Наименование,
	|	ТоварыКОформлениюИзлишковНедостачОстатки.Характеристика,
	|	ТоварыКОформлениюИзлишковНедостачОстатки.КОформлениюАктовОстаток КАК Количество,
	|	ЕСТЬNULL(ТаблицаЦен.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ТаблицаЗапроса
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Остатки(
	|			,
	|			ДокументОснование = &ДокументОснование
	|				И НЕ Номенклатура.ИспользоватьСерийныеНомера) КАК ТоварыКОформлениюИзлишковНедостачОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЦен КАК ТаблицаЦен
	|		ПО ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура = ТаблицаЦен.Номенклатура
	|			И ТоварыКОформлениюИзлишковНедостачОстатки.Характеристика = ТаблицаЦен.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапроса.Номенклатура,
	|	ТаблицаЗапроса.НоменклатураНаименование,
	|	ТаблицаЗапроса.Характеристика,
	|	0 КАК НомерСтроки,
	|	0 КАК НомерСтрокиИнвентаризации,
	|	ТаблицаЗапроса.Количество КАК Количество,
	|	ТаблицаЗапроса.Цена КАК Цена
	|ИЗ
	|	ТаблицаЗапроса КАК ТаблицаЗапроса
	|ГДЕ
	|	ТаблицаЗапроса.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапроса.Номенклатура,
	|	ТаблицаЗапроса.НоменклатураНаименование,
	|	ТаблицаЗапроса.Характеристика,
	|	0 КАК НомерСтроки,
	|	0 КАК НомерСтрокиИнвентаризации,
	|	- ТаблицаЗапроса.Количество КАК Количество,
	|	ТаблицаЗапроса.Цена КАК Цена
	|ИЗ
	|	ТаблицаЗапроса КАК ТаблицаЗапроса
	|ГДЕ
	|	ТаблицаЗапроса.Количество < 0";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаОприходование.Загрузить(МассивРезультатов[2].Выгрузить());
	ТаблицаСписание.Загрузить(МассивРезультатов[3].Выгрузить());
	
	НомерПозиции = 1;
	
	Для Каждого СтрокаТаблицы Из ТаблицаОприходование Цикл
		
		СтрокаТаблицы.НоменклатураНаименование = ВРЕГ(СтрокаТаблицы.НоменклатураНаименование);
		СтрокаТаблицы.ПервоеСловоНаименования = ВыделитьПервоеСлово(СтрокаТаблицы.НоменклатураНаименование);
		СтрокаТаблицы.НомерСтрокиИнвентаризации = НомерПозиции;
		НомерПозиции = НомерПозиции + 1;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ТаблицаСписание Цикл
		
		СтрокаТаблицы.НоменклатураНаименование = ВРЕГ(СтрокаТаблицы.НоменклатураНаименование);
		СтрокаТаблицы.ПервоеСловоНаименования = ВыделитьПервоеСлово(СтрокаТаблицы.НоменклатураНаименование);
		СтрокаТаблицы.НомерСтрокиИнвентаризации = НомерПозиции;
		НомерПозиции = НомерПозиции + 1;
		
	КонецЦикла;
	
	Если ТаблицаОприходование.Количество() = 0 Тогда
		РеквизитОписаниеДействия = НСтр("ru = 'Нет остатков к оформлению актов, в которых фактическое количество превышает учетное!'"); 
		Элементы.ФормаЗаполнитьТаблицуСортировки.Доступность = Ложь;
		Элементы.РеквизитОписаниеДействия.ЦветТекста = ЦветаСтиля.ПоясняющийОшибкуТекст;
	ИначеЕсли ТаблицаСписание.Количество() = 0 Тогда
		РеквизитОписаниеДействия = НСтр("ru = 'Нет остатков к оформлению актов, в которых учетное количество превышает фактическое!'"); 
		Элементы.ФормаЗаполнитьТаблицуСортировки.Доступность = Ложь;
		Элементы.РеквизитОписаниеДействия.ЦветТекста = ЦветаСтиля.ПоясняющийОшибкуТекст;
	Иначе
		РеквизитОписаниеДействия = НСтр("ru = 'Необходимо заполнить таблицу сортировки. Внимание заполнение может занять некоторое время.!'"); 
		Элементы.ФормаЗаполнитьТаблицуСортировки.Доступность = Истина;
		Элементы.РеквизитОписаниеДействия.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыделитьПервоеСлово(Наименование)
	
	ПозицияПробела = Найти(Наименование, " ");
	Если ПозицияПробела =0 Тогда
		Возврат Наименование;
	Иначе
		Возврат Лев(Наименование, ПозицияПробела)
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПараметрыЗапроса(Запрос, МассивПараметров, НомерПозицииНаименованиеВключение)
	
	НомерУпорядочивания = 1;
	УсловиеСортировки = "
	|	ВЫБОР";
	Для каждого СтрокаПараметра Из МассивПараметров Цикл
		
		Если СтрокаПараметра = НСтр("ru = 'Одинаковые позиции номенклатуры'") Тогда
			УсловиеСортировки = УсловиеСортировки + "
			|		КОГДА ПолнаяТаблица.НоменклатураОприходование = ПолнаяТаблица.НоменклатураСписание
			|			ТОГДА " + Формат(НомерУпорядочивания, "ЧДЦ=0; ЧГ=0");
			НомерУпорядочивания = НомерУпорядочивания + 1;
		ИначеЕсли СтрокаПараметра = НСтр("ru = 'Данные предыдущих пересортиц'") Тогда
			УсловиеСортировки = УсловиеСортировки + "
			|		КОГДА НЕ ТаблицаБывшихПересортиц.НоменклатураОприходование ЕСТЬ NULL 
			|			ТОГДА " + Формат(НомерУпорядочивания, "ЧДЦ=0; ЧГ=0");
			НомерУпорядочивания = НомерУпорядочивания + 1;
		ИначеЕсли СтрокаПараметра = НСтр("ru = 'Наименование одной из позиции включает наименование другой'") Тогда
			НомерПозицииНаименованиеВключение = НомерУпорядочивания;
			НомерУпорядочивания = НомерУпорядочивания + 1;
		ИначеЕсли СтрокаПараметра = НСтр("ru = 'Совпадение первого слова в наименованиях'") Тогда
			УсловиеСортировки = УсловиеСортировки + "
			|		КОГДА ПолнаяТаблица.ПервоеСловоНаименованияОприходование = ПолнаяТаблица.ПервоеСловоНаименованияСписание
			|			ТОГДА " + Формат(НомерУпорядочивания, "ЧДЦ=0; ЧГ=0");
			НомерУпорядочивания = НомерУпорядочивания + 1;
		ИначеЕсли СтрокаПараметра = НСтр("ru = 'Принадлежность к одной группе номенклатуры'") Тогда
			УсловиеСортировки = УсловиеСортировки + "
			|		КОГДА ПолнаяТаблица.РодительОприходование = ПолнаяТаблица.РодительСписание
			|			ТОГДА " + Формат(НомерУпорядочивания, "ЧДЦ=0; ЧГ=0");
			НомерУпорядочивания = НомерУпорядочивания + 1;
		ИначеЕсли СтрокаПараметра = НСтр("ru = 'Принадлежность к одной товарной группе'") Тогда
			УсловиеСортировки = УсловиеСортировки + "
			|		КОГДА ПолнаяТаблица.ТоварнаяГруппаОприходование = ПолнаяТаблица.ТоварнаяГруппаСписание
			|			ТОГДА " + Формат(НомерУпорядочивания, "ЧДЦ=0; ЧГ=0");
			НомерУпорядочивания = НомерУпорядочивания + 1;
		ИначеЕсли СтрокаПараметра = НСтр("ru = 'Принадлежность к одной товарной категории'") Тогда
			УсловиеСортировки = УсловиеСортировки + "
			|		КОГДА ПолнаяТаблица.ТоварнаяКатегорияОприходование = ПолнаяТаблица.ТоварнаяКатегорияСписание
			|			ТОГДА " + Формат(НомерУпорядочивания, "ЧДЦ=0; ЧГ=0");
			НомерУпорядочивания = НомерУпорядочивания + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	УсловиеСортировки = УсловиеСортировки + "
	|		ИНАЧЕ " + Формат(НомерУпорядочивания, "ЧДЦ=0; ЧГ=0") + "
	|	КОНЕЦ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПараметрСортировки", УсловиеСортировки);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСортировкиСервер()
	
	ТаблицаВыбора.Очистить();
	ТаблицаСортировки.Очистить();
	ТаблицаСписаниеВыбор.Очистить();
	ТаблицаСравнение.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаОприходование.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаОприходование.НомерСтрокиИнвентаризации,
	|	ТаблицаОприходование.Количество,
	|	ТаблицаОприходование.ПервоеСловоНаименования,
	|	ТаблицаОприходование.НоменклатураНаименование
	|ПОМЕСТИТЬ ТаблицаОприходование
	|ИЗ
	|	&ТаблицаОприходование КАК ТаблицаОприходование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОприходование.Номенклатура,
	|	ТаблицаОприходование.НомерСтрокиИнвентаризации,
	|	ТаблицаОприходование.Количество,
	|	ТаблицаОприходование.ПервоеСловоНаименования,
	|	ТаблицаОприходование.НоменклатураНаименование,
	|	ТаблицаОприходование.Номенклатура.Родитель КАК Родитель,
	|	ТаблицаОприходование.Номенклатура.ТоварнаяГруппа КАК ТоварнаяГруппа,
	|	ТаблицаОприходование.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория
	|ПОМЕСТИТЬ ТаблицаОприходованиеСРеквизитами
	|ИЗ
	|	ТаблицаОприходование КАК ТаблицаОприходование
	|ГДЕ
	|	НЕ ТаблицаОприходование.Номенклатура.ИспользоватьСерийныеНомера
	|	И НЕ ТаблицаОприходование.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаСписание.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаСписание.НомерСтрокиИнвентаризации,
	|	ТаблицаСписание.Количество,
	|	ТаблицаСписание.ПервоеСловоНаименования,
	|	ТаблицаСписание.НоменклатураНаименование
	|ПОМЕСТИТЬ ТаблицаСписание
	|ИЗ
	|	&ТаблицаСписание КАК ТаблицаСписание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСписание.Номенклатура,
	|	ТаблицаСписание.НомерСтрокиИнвентаризации,
	|	ТаблицаСписание.Количество,
	|	ТаблицаСписание.ПервоеСловоНаименования,
	|	ТаблицаСписание.НоменклатураНаименование,
	|	ТаблицаСписание.Номенклатура.Родитель КАК Родитель,
	|	ТаблицаСписание.Номенклатура.ТоварнаяГруппа КАК ТоварнаяГруппа,
	|	ТаблицаСписание.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория
	|ПОМЕСТИТЬ ТаблицаСписаниеСРеквизитами
	|ИЗ
	|	ТаблицаСписание КАК ТаблицаСписание
	|ГДЕ
	|	НЕ ТаблицаСписание.Номенклатура.ИспользоватьСерийныеНомера
	|			И НЕ ТаблицаСписание.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОприходованиеСРеквизитами.НомерСтрокиИнвентаризации КАК НомерСтрокиИнвентаризацииОприходование,
	|	ТаблицаСписаниеСРеквизитами.НомерСтрокиИнвентаризации КАК НомерСтрокиИнвентаризацииСписание,
	|	ТаблицаОприходованиеСРеквизитами.Номенклатура КАК НоменклатураОприходование,
	|	ТаблицаСписаниеСРеквизитами.Номенклатура КАК НоменклатураСписание,
	|	ТаблицаОприходованиеСРеквизитами.ПервоеСловоНаименования КАК ПервоеСловоНаименованияОприходование,
	|	ТаблицаСписаниеСРеквизитами.ПервоеСловоНаименования КАК ПервоеСловоНаименованияСписание,
	|	ТаблицаОприходованиеСРеквизитами.Родитель КАК РодительОприходование,
	|	ТаблицаСписаниеСРеквизитами.Родитель КАК РодительСписание,
	|	ТаблицаОприходованиеСРеквизитами.ТоварнаяГруппа КАК ТоварнаяГруппаОприходование,
	|	ТаблицаСписаниеСРеквизитами.ТоварнаяГруппа КАК ТоварнаяГруппаСписание,
	|	ТаблицаОприходованиеСРеквизитами.ТоварнаяКатегория КАК ТоварнаяКатегорияОприходование,
	|	ТаблицаСписаниеСРеквизитами.ТоварнаяКатегория КАК ТоварнаяКатегорияСписание,
	|	ТаблицаОприходованиеСРеквизитами.НоменклатураНаименование КАК НоменклатураНаименованиеОприходование,
	|	ТаблицаСписаниеСРеквизитами.НоменклатураНаименование КАК НоменклатураНаименованиеСписание
	|ПОМЕСТИТЬ ПолнаяТаблица
	|ИЗ
	|	ТаблицаОприходованиеСРеквизитами КАК ТаблицаОприходованиеСРеквизитами
	|		ПОЛНОЕ СОЕДИНЕНИЕ ТаблицаСписаниеСРеквизитами КАК ТаблицаСписаниеСРеквизитами
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПересортицаТоваровТовары.Номенклатура КАК НоменклатураСписание,
	|	ПересортицаТоваровТовары.НоменклатураОприходование
	|ПОМЕСТИТЬ ТаблицаБывшихПересортиц
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
	|ГДЕ
	|	ПересортицаТоваровТовары.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолнаяТаблица.НомерСтрокиИнвентаризацииОприходование,
	|	ПолнаяТаблица.НомерСтрокиИнвентаризацииСписание КАК НомерСтрокиИнвентаризацииСписание,
	|	&ПараметрСортировки КАК ПараметрСортировки,
	|	ПолнаяТаблица.НоменклатураНаименованиеОприходование,
	|	ПолнаяТаблица.НоменклатураНаименованиеСписание
	|ИЗ
	|	ПолнаяТаблица КАК ПолнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаБывшихПересортиц КАК ТаблицаБывшихПересортиц
	|		ПО ПолнаяТаблица.НоменклатураОприходование = ТаблицаБывшихПересортиц.НоменклатураОприходование
	|			И ПолнаяТаблица.НоменклатураСписание = ТаблицаБывшихПересортиц.НоменклатураСписание
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиИнвентаризацииСписание";
	
	Запрос.УстановитьПараметр("ТаблицаОприходование", ТаблицаОприходование.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаСписание"     , ТаблицаСписание.Выгрузить());
	
	ПараметрыАнализаПересортицы = Константы.ПараметрыАнализаПересортицы.Получить();
	МассивПараметров = СкладскиеОперацииКлиентСервер.ПолучитьМассивПараметровАнализаПересортицы(ПараметрыАнализаПересортицы);
	
	НомерПозицииНаименованиеВключение = 0;
	ЗаполнитьПараметрыЗапроса(Запрос, МассивПараметров, НомерПозицииНаименованиеВключение);
	
	Результат = Запрос.Выполнить();
	ТаблицаЗапроса = Результат.Выгрузить();
	
	// Заполнение параметра при вхождении наименования.
	
	Если НомерПозицииНаименованиеВключение > 0 Тогда
		Для каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
			
			Если СтрокаТаблицы.ПараметрСортировки > НомерПозицииНаименованиеВключение Тогда
				
				Если Найти(СтрокаТаблицы.НоменклатураНаименованиеОприходование, СтрокаТаблицы.НоменклатураНаименованиеСписание) > 0 
					И Найти(СтрокаТаблицы.НоменклатураНаименованиеСписание, СтрокаТаблицы.НоменклатураНаименованиеОприходование) > 0 Тогда
					
					СтрокаТаблицы.ПараметрСортировки = НомерПозицииНаименованиеВключение;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаСортировки.Загрузить(ТаблицаЗапроса.Скопировать(,"НомерСтрокиИнвентаризацииОприходование, НомерСтрокиИнвентаризацииСписание, ПараметрСортировки"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПолная.НомерСтрокиИнвентаризацииОприходование,
	|	ТаблицаПолная.ПараметрСортировки
	|ПОМЕСТИТЬ ТаблицаПолная
	|ИЗ
	|	&ТаблицаПолная КАК ТаблицаПолная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПолная.НомерСтрокиИнвентаризацииОприходование,
	|	МИНИМУМ(ТаблицаПолная.ПараметрСортировки) КАК ПараметрСортировки
	|ПОМЕСТИТЬ ТаблицаСравнений
	|ИЗ
	|	ТаблицаПолная КАК ТаблицаПолная
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПолная.НомерСтрокиИнвентаризацииОприходование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСравнений.НомерСтрокиИнвентаризацииОприходование,
	|	ТаблицаСравнений.ПараметрСортировки КАК ПараметрСортировки
	|ИЗ
	|	ТаблицаСравнений КАК ТаблицаСравнений
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПараметрСортировки,
	|	ТаблицаСравнений.НомерСтрокиИнвентаризацииОприходование";
	
	Запрос.УстановитьПараметр("ТаблицаПолная", ТаблицаСортировки.Выгрузить());
	
	Результат = Запрос.Выполнить();
	ТаблицаСравнение.Загрузить(Результат.Выгрузить());
	
	ТекущийИндексТаблицыСравнения = 0;
	
	ЗаполнитьТекущейТаблицыВыбораСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущейТаблицыВыбораСервер()
	
	ТаблицаСписаниеВыбор.Очистить();
	
	СтрокаСравнение = ТаблицаСравнение[ТекущийИндексТаблицыСравнения];
	НомерСтрокиИнвентаризацииОприходование = СтрокаСравнение.НомерСтрокиИнвентаризацииОприходование;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерСтрокиИнвентаризацииОприходование", НомерСтрокиИнвентаризацииОприходование); 
	
	СтрокиОприходования = ТаблицаОприходование.НайтиСтроки(Новый Структура("НомерСтрокиИнвентаризации", НомерСтрокиИнвентаризацииОприходование));
	СтрокаОприходования = СтрокиОприходования[0];
	
	СтрокиСортировки = ТаблицаСортировки.НайтиСтроки(СтруктураПоиска);
	
	НомерСтроки = 0;
	
	Для каждого СтрокаСортировки Из СтрокиСортировки Цикл
		
		НомерСтрокиИнвентаризацииСписание = СтрокаСортировки.НомерСтрокиИнвентаризацииСписание;
		
		СтрокиСписание = ТаблицаСписание.НайтиСтроки(Новый Структура("НомерСтрокиИнвентаризации", НомерСтрокиИнвентаризацииСписание));
		
		Если СтрокиСписание.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписание = СтрокиСписание[0];
		
		КоличествоВыбора = 0;
		
		СтруктураПоиска.Вставить("НомерСтрокиИнвентаризацииСписание", НомерСтрокиИнвентаризацииСписание); 
		
		СтрокиВыбора = ТаблицаВыбора.НайтиСтроки(СтруктураПоиска);
		
		Если СтрокиВыбора.Количество() > 0 Тогда
			КоличествоВыбора = СтрокиВыбора[0].Количество;
			
		КонецЕсли;
		
		СтрокаСписаниеВыбор = ТаблицаСписаниеВыбор.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаСписаниеВыбор, СтрокаСписание);
		
		СтрокаСписаниеВыбор.КоличествоВыбор = КоличествоВыбора;
		СтрокаСписаниеВыбор.КоличествоИспользовано = СтрокаСписаниеВыбор.КоличествоИспользовано - СтрокаСписаниеВыбор.КоличествоВыбор;
		СтрокаСписаниеВыбор.КоличествоОстаток = СтрокаСписаниеВыбор.Количество - СтрокаСписаниеВыбор.КоличествоИспользовано;
		
		Если СтрокаСписаниеВыбор.КоличествоВыбор = 0 
			И СтрокаСписаниеВыбор.КоличествоОстаток <= 0 Тогда
			
			СтрокаСписаниеВыбор.КоличествоЗакончилось = Истина;
		КонецЕсли;
		
		СтрокаСписаниеВыбор.ПараметрСортировки = СтрокаСортировки.ПараметрСортировки;
		
		НомерСтроки = НомерСтроки + 1;
		СтрокаСписаниеВыбор.НомерСтроки = НомерСтроки;
		
	КонецЦикла;
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(ТаблицаСписаниеВыбор);
	
	ТаблицаСписаниеВыбор.Сортировать("ПараметрСортировки, НомерСтрокиИнвентаризации");
	
	КоличествоОприходования   = СтрокаОприходования.Количество;
	КоличествоПересортицы     = ТаблицаСписаниеВыбор.Итог("КоличествоВыбор");
	Номенклатура              = СтрокаОприходования.Номенклатура;
	Характеристика            = СтрокаОприходования.Характеристика;
	НомерСтрокиИнвентаризации = СтрокаОприходования.НомерСтрокиИнвентаризации;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаВыбора;
	
	Элементы.ПеревестиНазад.Доступность = НЕ ТекущийИндексТаблицыСравнения = 0;
	Элементы.ПеревестиДалее.Доступность = НЕ ТекущийИндексТаблицыСравнения = (ТаблицаСравнение.Количество() - 1);
	
	ТекстТекущегоПоложения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Обработано №%1 из %2 позиций'"),
		Формат((ТекущийИндексТаблицыСравнения + 1),"ЧЦ=5; ЧДЦ=0; ЧГ=0"),
		Формат(ТаблицаСравнение.Количество(),"ЧЦ=5; ЧДЦ=0; ЧГ=0"));
	
	Элементы.ДекорацияТекущееПоложение.Заголовок = ТекстТекущегоПоложения;
	
КонецПроцедуры

&НаСервере
Процедура ЗафиксироватьВыбор()
	
	// Очистка таблицы выбора
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерСтрокиИнвентаризацииОприходование", НомерСтрокиИнвентаризации); 
	
	СтрокиВыбора = ТаблицаВыбора.НайтиСтроки(СтруктураПоиска);
	
	Для каждого СтрокаВыбора Из СтрокиВыбора Цикл
	
		ТаблицаВыбора.Удалить(СтрокаВыбора);
	
	КонецЦикла;
	
	// Заполнение таблицы выбора
	Для каждого СтрокаСписаниеВыбора Из ТаблицаСписаниеВыбор Цикл
	
		Если СтрокаСписаниеВыбора.КоличествоВыбор = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаВыбора = ТаблицаВыбора.Добавить();
		СтрокаВыбора.НомерСтрокиИнвентаризацииОприходование = НомерСтрокиИнвентаризации;
		СтрокаВыбора.НомерСтрокиИнвентаризацииСписание      = СтрокаСписаниеВыбора.НомерСтрокиИнвентаризации;
		СтрокаВыбора.Количество = СтрокаСписаниеВыбора.КоличествоВыбор;
		
	КонецЦикла;
	
	ТаблицаКоличествИспользованныхСписаний = ТаблицаВыбора.Выгрузить(, "НомерСтрокиИнвентаризацииСписание, Количество");
	
	ТаблицаКоличествИспользованныхСписаний.Свернуть("НомерСтрокиИнвентаризацииСписание", "Количество");
	
	Для каждого СтрокаИспользованныхКоличеств Из ТаблицаКоличествИспользованныхСписаний Цикл
		
		НомерСтрокиИнвентаризацииСписание = СтрокаИспользованныхКоличеств.НомерСтрокиИнвентаризацииСписание;
		
		СтрокиСписание = ТаблицаСписание.НайтиСтроки(Новый Структура("НомерСтрокиИнвентаризации", НомерСтрокиИнвентаризацииСписание));
		
		Если СтрокиСписание.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписание = СтрокиСписание[0];
		
		СтрокаСписание.КоличествоИспользовано = СтрокаИспользованныхКоличеств.Количество;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВозможностьСменыСтраницы()
	
	Если КоличествоПересортицы > КоличествоОприходования Тогда
		Текст = НСтр("ru = 'Выбранное количество пересортицы больше количества оприходования'"); 
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтаФорма,
			"ТаблицаСписаниеВыбор");
		
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СтруктураПараметровФормыПересортицы()

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура);
	ПараметрыФормы.ЗначенияЗаполнения.Вставить("ДокументОснование", ДокументОснование);
	ПараметрыФормы.ЗначенияЗаполнения.Вставить("Магазин", ДокументОснование.Магазин);
	ПараметрыФормы.ЗначенияЗаполнения.Вставить("Склад", ДокументОснование.Склад);
	ПараметрыФормы.ЗначенияЗаполнения.Вставить("Организация", ДокументОснование.Организация);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаВыбора.НомерСтрокиИнвентаризацииОприходование,
	|	ТаблицаВыбора.НомерСтрокиИнвентаризацииСписание,
	|	ТаблицаВыбора.Количество
	|ПОМЕСТИТЬ ТаблицаВыбора
	|ИЗ
	|	&ТаблицаВыбора КАК ТаблицаВыбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОприходование.Номенклатура,
	|	ТаблицаОприходование.Характеристика,
	|	ТаблицаОприходование.НомерСтрокиИнвентаризации,
	|	ТаблицаОприходование.Цена
	|ПОМЕСТИТЬ ТаблицаОприходование
	|ИЗ
	|	&ТаблицаОприходование КАК ТаблицаОприходование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСписание.Номенклатура,
	|	ТаблицаСписание.Характеристика,
	|	ТаблицаСписание.НомерСтрокиИнвентаризации,
	|	ТаблицаСписание.Цена
	|ПОМЕСТИТЬ ТаблицаСписание
	|ИЗ
	|	&ТаблицаСписание КАК ТаблицаСписание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСписание.Номенклатура,
	|	ТаблицаСписание.Характеристика,
	|	ТаблицаОприходование.Номенклатура КАК НоменклатураОприходование,
	|	ТаблицаОприходование.Характеристика КАК ХарактеристикаОприходование,
	|	ТаблицаОприходование.Цена КАК ЦенаОприходование,
	|	ТаблицаСписание.Цена КАК Цена,
	|	ТаблицаВыбора.Количество
	|ИЗ
	|	ТаблицаВыбора КАК ТаблицаВыбора
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОприходование КАК ТаблицаОприходование
	|		ПО ТаблицаВыбора.НомерСтрокиИнвентаризацииОприходование = ТаблицаОприходование.НомерСтрокиИнвентаризации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСписание КАК ТаблицаСписание
	|		ПО ТаблицаВыбора.НомерСтрокиИнвентаризацииСписание = ТаблицаСписание.НомерСтрокиИнвентаризации";
	
	Запрос.УстановитьПараметр("ТаблицаВыбора"       , ТаблицаВыбора.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаОприходование", ТаблицаОприходование.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаСписание"     , ТаблицаСписание.Выгрузить());
	
	Результат = Запрос.Выполнить();
	ТаблицаЗапроса = Результат.Выгрузить();
	
	ПараметрыФормы.ЗначенияЗаполнения.Вставить("АдресТаблицыТовары", ПоместитьВоВременноеХранилище(ТаблицаЗапроса));
	
	Возврат ПараметрыФормы;

КонецФункции

#КонецОбласти
