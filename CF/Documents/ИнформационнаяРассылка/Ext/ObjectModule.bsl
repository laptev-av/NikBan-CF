#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.МаркетинговаяАкция") Тогда
				ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения.ДокументОснование);
				ЗаполнитьПоМаркетинговойАкции(ДанныеЗаполнения.ДокументОснование);
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ИнформационнаяРассылка") Тогда
				ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения.ДокументОснование);
				ЗаполнитьПоИнформационнойРассылке(ДанныеЗаполнения.ДокументОснование);
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.НачислениеИСписаниеБонусныхБаллов") Тогда
				ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения.ДокументОснование);
				ЗаполнитьПоНачислениюИСписаниюБонусныхБаллов(ДанныеЗаполнения.ДокументОснование);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.МаркетинговаяАкция") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоМаркетинговойАкции(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнформационнаяРассылка") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоИнформационнойРассылке(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НачислениеИСписаниеБонусныхБаллов") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ЗаполнитьПоНачислениюИСписаниюБонусныхБаллов(ДанныеЗаполнения);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ИнициализироватьДокумент();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ТипРассылки = Перечисления.ТипыИнформационныхРассылок.SMS Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Тема");
		МассивНепроверяемыхРеквизитов.Добавить("Адресаты.АдресEMailДляОтправки");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("Адресаты.НомерДляОтправки");
		МассивНепроверяемыхРеквизитов.Добавить("Адресаты.НомерТелефона");
	КонецЕсли;
	
	Если МассивНепроверяемыхРеквизитов.Количество() > 0 Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	ДокументОснование = Неопределено;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Состояние) Тогда
		Состояние = Перечисления.СостоянияДокументаСообщениеSMS.Черновик;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Состояние = Перечисления.СостоянияДокументаСообщениеSMS.ПустаяСсылка();
	Если Адресаты.Количество() > 0 Тогда
		Адресаты.Свернуть("Контакт,
						  |ПредставлениеКонтакта,
						  |ТекстСообщения,
						  |АдресEMailДляОтправки,
						  |НомерДляОтправки,
						  |НомерТелефона");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТипРассылки) Тогда
		ТипРассылки = Перечисления.ТипыИнформационныхРассылок.EMail;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоМаркетинговойАкции(Акция)
	
	ДокументОснование = Акция;
	Тема = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Акция, "НаименованиеАкции");
	
КонецПроцедуры

Процедура ЗаполнитьПоИнформационнойРассылке(Рассылка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Рассылка, "Тема, ТекстСообщения");
	ДокументОснование = Рассылка;
	Адресаты.Загрузить(Рассылка.Адресаты.Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьПоНачислениюИСписаниюБонусныхБаллов(НачислениеИСписание)
	
	ДокументОснование = НачислениеИСписание;
	
	Акция = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НачислениеИСписание, "МаркетинговаяАкция");
	Если ЗначениеЗаполнено(Акция) Тогда
		Тема = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Акция, "НаименованиеАкции");
	Иначе
		Тема = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НачислениеИСписание, "БонуснаяПрограммаЛояльности");
	КонецЕсли;
	ИмяТаблицы = "Начисление";
	Если НачислениеИСписание.Списание.Количество() > 0 Тогда
		ИмяТаблицы = "Списание";
	КонецЕсли;
	ДополнительныйТекст = Документы.ИнформационнаяРассылка.ТекстЗапросаДляЗаполненияРассылки();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПолучателей.ДисконтнаяКарта.ВладелецКарты КАК Получатель
	|ПОМЕСТИТЬ СоставГруппы
	|ИЗ
	|	Документ.НачислениеИСписаниеБонусныхБаллов." + ИмяТаблицы + " КАК ТаблицаПолучателей
	|ГДЕ
	|	ТаблицаПолучателей.Ссылка = &НачислениеИСписание
	|	И ТаблицаПолучателей.ДисконтнаяКарта.ВладелецКарты Ссылка Справочник.ФизическиеЛица
	|;" + ДополнительныйТекст;
	Запрос.УстановитьПараметр("НачислениеИСписание", НачислениеИСписание);
	Запрос.УстановитьПараметр("АдресЭлектроннойПочты", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("Телефон", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Пробел", " ");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Адресаты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
