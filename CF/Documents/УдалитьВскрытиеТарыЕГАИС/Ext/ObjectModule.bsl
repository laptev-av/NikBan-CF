#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет ТЧ Товары по остаткам регистра ТоварыКОформлениюИзлишковНедостач документа основания.
//
Процедура ЗаполнитьТабличнуюЧастьТовары() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.КОформлениюАктовОстаток) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗапроса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|		ТоварыКОформлению.Характеристика КАК Характеристика,
	|		ТоварыКОформлению.КОформлениюАктовОстаток КАК КОформлениюАктовОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Остатки(
	|				,
	|				ДокументОснование = &ДокументОснование
	|					И Склад = &Склад) КАК ТоварыКОформлению
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыКОформлению.Номенклатура,
	|		ТоварыКОформлению.Характеристика,
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ТоварыКОформлению.КОформлениюАктов
	|			ИНАЧЕ ТоварыКОформлению.КОформлениюАктов
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюИзлишковНедостач КАК ТоварыКОформлению
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.ДокументОснование = &ДокументОснование
	|		И ТоварыКОформлению.Активность = ИСТИНА) КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.КОформлениюАктовОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапроса.Номенклатура,
	|	ТаблицаЗапроса.Характеристика,
	|	ТаблицаЗапроса.Количество,
	|	ТаблицаЗапроса.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗапроса КАК ТаблицаЗапроса";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Товары.Загрузить(Результат.Выгрузить());
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по основанию ""%ДокументОснование%"" .'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", ДокументОснование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДокументОснование");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	//Серии.Очистить();
	АкцизныеМарки.Очистить();
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ДополнительныеСвойства.Свойство("ЗагрузкаДанныхИзЕГАИС") Тогда
		ПроверяемыеРеквизиты.Очистить();
	Иначе
		МассивНепроверяемыхРеквизитов = Новый Массив;
		Если Магазин.СкладУправляющейСистемы Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Склад");
		КонецЕсли;
	
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов,Отказ);	
		
		Если ИнтеграцияЕГАИСВызовСервера.ИспользуетсяРегистрацияРозничныхПродажВЕГАИС(Организация, Магазин, Дата) Тогда
			ДанныеЕГАИСДостаточны = Истина;
			ИнтеграцияЕГАИСРТ.ПроверкаДанныхДляВскрытияТары(ЭтотОбъект, ДанныеЕГАИСДостаточны);
			Если НЕ ДанныеЕГАИСДостаточны Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено) Экспорт
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если НЕ ДанныеЗаполнения = Неопределено Тогда
		
		Если ИнтеграцияЕГАИСКлиентСервер.ЕстьРеквизитОбъекта(ДанныеЗаполнения, "Организация") Тогда
			Организация = ДанныеЗаполнения.Организация;
		КонецЕсли;
		
		Если ИнтеграцияЕГАИСКлиентСервер.ЕстьРеквизитОбъекта(ДанныеЗаполнения, "ТорговыйОбъект") Тогда
			Магазин = ДанныеЗаполнения.ТорговыйОбъект;
		КонецЕсли;
		
		Если ИнтеграцияЕГАИСКлиентСервер.ЕстьРеквизитОбъекта(ДанныеЗаполнения, "Склад") Тогда
			Склад = ДанныеЗаполнения.Склад;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Склад) И ЗначениеЗаполнено(Магазин) Тогда
			ЦенаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Магазин, "ПравилоЦенообразования.ЦенаВключаетНДС");
			Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(
				Магазин,,
				Склад,
				Пользователи.ТекущийПользователь());
		ИначеЕсли НЕ ЗначениеЗаполнено(Магазин) И ЗначениеЗаполнено(Склад) Тогда
			Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.Склад, "Магазин");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		ЦенаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Магазин, "ПравилоЦенообразования.ЦенаВключаетНДС");
	Иначе
		ЦенаВключаетНДС = Истина;
	КонецЕсли;
	АдресЧекаЕГАИС = "";
	ПодписьЧекаЕГАИС = "";
	СтатусОбработки = Перечисления.СтатусыОбработкиВскрытияТарыЕГАИС.Новый;
	
КонецПроцедуры

// Заполняет табличную часть Товары по документу Оприходование товаров.
//
Процедура ЗаполнитьТоварыПоОприходованию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыОприходования.Номенклатура,
	|	ТоварыОприходования.Характеристика,
	|	ТоварыОприходования.Количество,
	|	ТоварыОприходования.КоличествоУпаковок,
	|	ТоварыОприходования.Упаковка,
	|	ТоварыОприходования.Цена,
	|	ТоварыОприходования.Сумма,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))) КАК АлкогольнаяПродукция,
	|	ИСТИНА КАК НеобходимостьВводаАкцизнойМарки
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ТоварыОприходования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТоварыОприходования.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТоварыОприходования.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|ГДЕ
	|	ТоварыОприходования.Ссылка = &ДокументОснование
	|	И ТоварыОприходования.Номенклатура.АлкогольнаяПродукция
	|	И ТоварыОприходования.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И ТоварыОприходования.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОприходования.Номенклатура,
	|	ТоварыОприходования.Характеристика,
	|	ТоварыОприходования.Количество,
	|	ТоварыОприходования.КоличествоУпаковок,
	|	ТоварыОприходования.Упаковка,
	|	ТоварыОприходования.Цена,
	|	ТоварыОприходования.Сумма";
	Запрос.УстановитьПараметр("ДокументОснование" , ДокументОснование);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Товары.Загрузить(Результат.Выгрузить());
	Иначе
		ТекстСообщения = НСтр("ru = 'В документе %1 нет данных для создания Вскрытия тары'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументОснование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Для Инд = 1 по Товары.Количество() Цикл
		Товары[Инд-1].КлючСвязи = Инд;
	КонецЦикла;
	
	УчитыватьНДС = Истина;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", УчитыватьНДС);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(ЭтотОбъект));
	
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , Товары);
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, Неопределено);
	
КонецПроцедуры

// Заполняет табличную часть Товары по документу Передача в регистр №2.
//
Процедура ЗаполнитьТоварыПоПередачеВРегистр2() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыПередачи.АлкогольнаяПродукция,
	|	ТоварыПередачи.Номенклатура,
	|	ТоварыПередачи.Характеристика,
	|	ТоварыПередачи.Количество,
	|	ТоварыПередачи.КоличествоУпаковок,
	|	ТоварыПередачи.Упаковка,
	|	ТоварыПередачи.Справка2,
	|	ИСТИНА КАК НеобходимостьВводаАкцизнойМарки
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ТоварыПередачи
	|ГДЕ
	|	ТоварыПередачи.Ссылка = &ДокументОснование
	|	И ТоварыПередачи.Номенклатура.АлкогольнаяПродукция
	|	И ТоварыПередачи.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И ТоварыПередачи.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив";
	Запрос.УстановитьПараметр("ДокументОснование" , ДокументОснование);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Товары.Загрузить(Результат.Выгрузить());
	Иначе
		ТекстСообщения = НСтр("ru = 'В документе %1 нет данных для создания Вскрытия тары'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументОснование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	КлючСвязи = 0;
	Для Каждого СтрокаТЧ Из Товары Цикл
		КлючСвязи = КлючСвязи + 1;
		СтрокаТЧ.КлючСвязи = КлючСвязи;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ЭтотОбъект));
		СтруктураДействий.Вставить("ПересчитатьСумму");
		СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныПродажиВСтрокеТЧ(ЭтотОбъект));
		
		СтруктураПараметровСтавкиНДС = Новый Структура;
		СтруктураПараметровСтавкиНДС.Вставить("Дата"       , Дата);
		СтруктураПараметровСтавкиНДС.Вставить("Организация", Организация);
		СтруктураПараметровСтавкиНДС.Вставить("Склад"      , Склад);
		
		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
		
		КэшированныеЗначения = ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(СтрокаТЧ, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
