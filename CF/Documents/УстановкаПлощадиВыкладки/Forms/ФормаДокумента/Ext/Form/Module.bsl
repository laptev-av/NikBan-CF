
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьДеревоПлощадиВкладкиИзРегистра();
		
		ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,
			КартинкаСостоянияДокумента,
			Элементы.КартинкаСостоянияДокумента.Подсказка,
			РазрешеноПроведение
		);
	Иначе
		ЗаполнитьДеревоПлощадиВкладкиПоТекущемуДокументу();
		ОбновитьИтоговыеПоказателиСервер();
	КонецЕсли;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, Элементы.КартинкаСостоянияДокумента.Подсказка, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, Элементы.КартинкаСостоянияДокумента.Подсказка, КартинкаСостоянияДокумента, РазрешеноПроведение);

	// &ЗамерПроизводительности 
	ОценкаПроизводительностиРТКлиент.ЗакончитьЗамер(ПараметрыЗаписи.Замер);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьИтоговыеПоказателиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// &ЗамерПроизводительности 
	Замер = ОценкаПроизводительностиРТКлиент.НачатьЗамер(Ложь, 
	                                            "Документ.УстановкаПлощадиВыкладки.ФормаДокумента.Запись",
                                                           Ложь);
	
	ПараметрыЗаписи.Вставить("Замер", Замер);
	
	ПерезаполнитьТабличнуюЧасть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПлощадиВыкладки

&НаКлиенте
Процедура ДеревоПлощадиВыкладкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПлощадиВыкладкиПлощадьВыкладкиПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоПлощадиВыкладки.ТекущиеДанные;
	Родитель = ТекущаяСтрока.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда
		ОбновитьПлощадьВыкладкиРодителя(Родитель);
	КонецЕсли;
	ОбновитьИтоговыеПоказателиСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоДатеУстановкиВыкладки(Команда)
	
	ЗаполнитьДеревоПлощадиВкладкиИзРегистра()
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(Команда)
	ЭлементыДерева = ДеревоПлощадиВыкладки.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		ИДСтроки = ЭлементДерева.ПолучитьИдентификатор();
		Элементы.ДеревоПлощадиВыкладки.Развернуть(ИДСтроки, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
	ЭлементыДерева = ДеревоПлощадиВыкладки.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		ИДСтроки = ЭлементДерева.ПолучитьИдентификатор();
		Элементы.ДеревоПлощадиВыкладки.Свернуть(ИДСтроки);
	КонецЦикла;
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьПлощадьВыкладкиРодителя(Родитель)
	
	ЭлементыРодителя = Родитель.ПолучитьЭлементы();
	Итог = 0;
	Для Каждого ЭлементРодителя Из ЭлементыРодителя Цикл
		Итог = Итог + ЭлементРодителя.ПлощадьВыкладки;
	КонецЦикла;
	Родитель.ПлощадьВыкладки = Итог;
	//
	РодительВыше = Родитель.ПолучитьРодителя();
	Если РодительВыше <> Неопределено Тогда
		ОбновитьПлощадьВыкладкиРодителя(РодительВыше);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПлощадиВкладкиИзРегистра()
	
	Если ЗначениеЗаполнено(Объект.Магазин) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлощадьТорговогоПространстваСрезПоследних.ТоварнаяГруппа,
		|	ПлощадьТорговогоПространстваСрезПоследних.ПлощадьВыкладки
		|ПОМЕСТИТЬ ТаблицаМагазина
		|ИЗ
		|	РегистрСведений.ПлощадьТорговогоПространства.СрезПоследних(&Дата, Магазин = &Магазин) КАК ПлощадьТорговогоПространстваСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварныеГруппы.Ссылка КАК ТоварнаяГруппа,
		|	ЕСТЬNULL(ТаблицаМагазина.ПлощадьВыкладки, 0) КАК ПлощадьВыкладки
		|ИЗ
		|	Справочник.ТоварныеГруппы КАК ТоварныеГруппы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМагазина КАК ТаблицаМагазина
		|		ПО ТоварныеГруппы.Ссылка = ТаблицаМагазина.ТоварнаяГруппа
		|ГДЕ
		|	НЕ ТоварныеГруппы.ЭтоГруппа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварныеГруппы.ЭтоГруппа УБЫВ,
		|	ТоварнаяГруппа
		|ИТОГИ
		|	СУММА(ПлощадьВыкладки)
		|ПО
		|	ТоварнаяГруппа ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("Магазин", Объект.Магазин);
		Запрос.УстановитьПараметр("Дата", Объект.ДатаУстановкиПлощадиВыкладки);
		
		РезультатЗапроса = Запрос.Выполнить();
		ЗаполнитьДеревоПоРезультатуЗапроса(РезультатЗапроса);
		
	Иначе
		
		ЭлементыДерева = ДеревоПлощадиВыкладки.ПолучитьЭлементы();
		Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
			ЭлементДерева.Очистить();
		КонецЦикла;
		
	КонецЕсли;
	
	ОбновитьИтоговыеПоказателиСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПлощадиВкладкиПоТекущемуДокументу()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УстановкаПлощадиВыкладкиПлощадиВыкладки.ТоварнаяГруппа,
		|	УстановкаПлощадиВыкладкиПлощадиВыкладки.ПлощадьВыкладки
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.УстановкаПлощадиВыкладки.ПлощадиВыкладки КАК УстановкаПлощадиВыкладкиПлощадиВыкладки
		|ГДЕ
		|	УстановкаПлощадиВыкладкиПлощадиВыкладки.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварныеГруппы.Ссылка КАК ТоварнаяГруппа,
		|	ЕСТЬNULL(ТаблицаДокумента.ПлощадьВыкладки, 0) КАК ПлощадьВыкладки
		|ИЗ
		|	Справочник.ТоварныеГруппы КАК ТоварныеГруппы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
		|		ПО ТоварныеГруппы.Ссылка = ТаблицаДокумента.ТоварнаяГруппа
		|ГДЕ
		|	НЕ ТоварныеГруппы.ЭтоГруппа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварныеГруппы.ЭтоГруппа УБЫВ,
		|	ТоварнаяГруппа
		|ИТОГИ
		|	СУММА(ПлощадьВыкладки)
		|ПО
		|	ТоварнаяГруппа ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		ЗаполнитьДеревоПоРезультатуЗапроса(РезультатЗапроса);
		
	Иначе
		
		ЭлементыДерева = ДеревоПлощадиВыкладки.ПолучитьЭлементы();
		Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
			ЭлементДерева.Очистить();
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПоРезультатуЗапроса(РезультатЗапроса)
	
	ДеревоОбъект = РеквизитФормыВЗначение("ДеревоПлощадиВыкладки",Тип("ДеревоЗначений"));
	ДеревоОбъект.Строки.Очистить();
	
	ДеревоРезультат = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗаполнитьПодчиненныеСтроки(ДеревоОбъект, ДеревоРезультат);
	ЗначениеВРеквизитФормы(ДеревоОбъект,"ДеревоПлощадиВыкладки");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодчиненныеСтроки(тПриемник, тИсточник)
	
	Для Каждого СтрокаИсточника Из тИсточник.Строки Цикл
		СтрокаПриемника = тПриемник.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПриемника, СтрокаИсточника);
		СтрокаПриемника.ЭтоГруппа = СтрокаИсточника.ТоварнаяГруппа.ЭтоГруппа;
		// И рекурсивно подчиненные
		Если СтрокаПриемника.ЭтоГруппа Тогда
			ЗаполнитьПодчиненныеСтроки(СтрокаПриемника, СтрокаИсточника);
			СтрокаПриемника.ИндексКартинки = 0;
		Иначе
			СтрокаПриемника.ИндексКартинки = 3;
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОбновитьИтоговыеПоказателиСервер()
	ДеревоОбъект         = РеквизитФормыВЗначение("ДеревоПлощадиВыкладки",Тип("ДеревоЗначений"));
	ПлощадьВыкладкиВсего = ДеревоОбъект.Строки.Итог("ПлощадьВыкладки");
	ДеревоОбъект         = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьТабличнуюЧасть()
	Объект.ПлощадиВыкладки.Очистить();
	ОбработатьПодчиненныеСтрокиПриПерезаполнении(ДеревоПлощадиВыкладки);
КонецПроцедуры

&НаСервере
Процедура ОбработатьПодчиненныеСтрокиПриПерезаполнении(ЭлементДереваРодитель)
	ЭлементыДерева=ЭлементДереваРодитель.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если ЭлементДерева.ЭтоГруппа Тогда
			ОбработатьПодчиненныеСтрокиПриПерезаполнении(ЭлементДерева);
		Иначе
			ДобавитьСтрокуВТаблицуКатегорийПриПерезаполнении(ЭлементДерева);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВТаблицуКатегорийПриПерезаполнении(ЭлементДерева)
	НоваяСтрока = Объект.ПлощадиВыкладки.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементДерева);
КонецПроцедуры

#КонецОбласти
