#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ЭтоНовый() Тогда
		ИнициализироватьДокумент(ДанныеЗаполнения);
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Ответственный                = Пользователи.ТекущийПользователь();
	ДатаУстановкиПлощадиВыкладки = НачалоДня(ТекущаяДатаСеанса());
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОбщаяПлощадьВыкладки = ПлощадиВыкладки.Итог("ПлощадьВыкладки");
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.УстановкаПлощадиВыкладки.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ОтразитьПлощадьТорговогоПространства(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Ответственный                = Пользователи.ТекущийПользователь();
	ДатаУстановкиПлощадиВыкладки = НачалоДня(ТекущаяДатаСеанса());
	Магазин                      = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УстановкаПлощадиВыкладки.Ссылка
	|ИЗ
	|	Документ.УстановкаПлощадиВыкладки КАК УстановкаПлощадиВыкладки
	|ГДЕ
	|	УстановкаПлощадиВыкладки.Ссылка <> &Ссылка
	|	И УстановкаПлощадиВыкладки.Магазин = &Магазин
	|	И УстановкаПлощадиВыкладки.ДатаУстановкиПлощадиВыкладки = &ДатаУстановкиПлощадиВыкладки
	|
	|УПОРЯДОЧИТЬ ПО
	|	УстановкаПлощадиВыкладки.Дата";
	
	Запрос.УстановитьПараметр("Ссылка"                      , Ссылка);
	Запрос.УстановитьПараметр("Магазин"                     , Магазин);
	Запрос.УстановитьПараметр("ДатаУстановкиПлощадиВыкладки", ДатаУстановкиПлощадиВыкладки);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Текст = НСтр("ru = 'На дату %1 для магазина %2 уже установлена площадь выкладки'");
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Текст,
			Формат(ДатаУстановкиПлощадиВыкладки, "ДФ=dd.MM.yyyy"),
			Магазин
			);
		
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтотОбъект,
			"ДатаУстановкиПлощадиВыкладки" ,
			,
			Отказ);
		
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

