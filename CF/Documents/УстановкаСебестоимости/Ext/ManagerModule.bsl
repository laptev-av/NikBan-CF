#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет регламентное задание расчета себестоимости
// 
Процедура ВыполнитьРегламентноеЗаданиеРасчетСебестоимости() Экспорт
	
	Если Константы.ИспользоватьСинхронизациюДанных.Получить()
		И ((ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоМагазину") <> Неопределено И ПланыОбмена.ГлавныйУзел() <> Неопределено)
			ИЛИ (ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоРабочемуМесту") <> Неопределено И ПланыОбмена.ГлавныйУзел() <> Неопределено)) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Дата = ТекущаяДатаСеанса();
	
	УстановитьПривилегированныйРежим(Истина);
	
	НастройкаСпособаУчета = ЗапасыСервер.ПолучитьСпособУчетаСебестоимости(Дата);
	
	Если НЕ НастройкаСпособаУчета.РассчитыватьРегламентнымЗаданием Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Магазины.Ссылка КАК Магазин
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	НЕ Магазины.ПометкаУдаления
	|	И НЕ Магазины.СкладУправляющейСистемы";
	
	МассивМагазинов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Магазин");
	Если МассивМагазинов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьРасчетСебестоимости(Дата, МассивМагазинов);
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст ="ВЫБРАТЬ
	|	ДанныеДокумента.Дата            КАК Период,
	|	ДанныеДокумента.Ссылка          КАК Ссылка,
	|	ДанныеДокумента.Магазин         КАК Магазин,
	|	ДанныеДокумента.РасчетСебестоимости КАК РасчетСебестоимости,
	|	ЕСТЬNULL((НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы), ИСТИНА) КАК ФормироватьДвижения
	|ИЗ
	|	Документ.УстановкаСебестоимости КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                        ?(Реквизиты.РасчетСебестоимости, НачалоМесяца(Реквизиты.Период), Реквизиты.Период));
	Запрос.УстановитьПараметр("Магазин",                       Реквизиты.Магазин);
	Запрос.УстановитьПараметр("Ссылка",                        Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ИспользоватьУчетСебестоимости", Константы.ИспользоватьУчетСебестоимости.Получить());
	Запрос.УстановитьПараметр("ФормироватьДвижения",           Реквизиты.ФормироватьДвижения);
	
	Запрос.Текст = 
	"//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка         КАК Ссылка,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Цена           КАК Цена,
	|	&Магазин                     КАК Магазин
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.УстановкаСебестоимости.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//1 ТаблицаСебестоимостьНоменклатуры
	|ВЫБРАТЬ
	|   &Период                      КАК Период,
	|	ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Цена           КАК Цена,
	|	ТаблицаТовары.Магазин        КАК Магазин
	|ИЗ
	|	ВтТаблицаТовары              КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ИспользоватьУчетСебестоимости
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки	
	|;
	|////////////////////////////////////////////////////////////////////////////////";
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьНоменклатуры",   Результат[1].Выгрузить());
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьРасчетСебестоимости(Дата, МассивМагазинов)
	
	Если МассивМагазинов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаСебестоимости.Ссылка КАК Документ,
	|	УстановкаСебестоимости.Магазин КАК Магазин
	|ИЗ
	|	Документ.УстановкаСебестоимости КАК УстановкаСебестоимости
	|ГДЕ
	|	УстановкаСебестоимости.Магазин В(&МассивМагазинов)
	|	И УстановкаСебестоимости.Проведен
	|	И УстановкаСебестоимости.РасчетСебестоимости
	|	И УстановкаСебестоимости.Дата МЕЖДУ &ДатаС И &ДатаПо";
	
	Запрос.УстановитьПараметр("ДатаС", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаПо", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("МассивМагазинов", МассивМагазинов);
	
	СуществующиеДокументы = Запрос.Выполнить().Выгрузить();
	
	ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Обновление стоимости товаров'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
	УровеньЖурналаРегистрации.Информация,,
	,
	НСтр("ru = 'Старт расчета себестоимости товаров.'"));
	
	Для Каждого Магазин Из МассивМагазинов Цикл
		
		НайденныйДокумент = СуществующиеДокументы.Найти(Магазин, "Магазин");
		Если НайденныйДокумент = Неопределено Тогда
			НовыйДокументОбъект = Документы.УстановкаСебестоимости.СоздатьДокумент();
		Иначе
			НовыйДокументОбъект = НайденныйДокумент.Документ.ПолучитьОбъект();
		КонецЕсли;
		НовыйДокументОбъект.РасчетСебестоимости = Истина;
		НовыйДокументОбъект.Магазин = Магазин;
		НовыйДокументОбъект.Дата = Дата;
		НовыйДокументОбъект.Комментарий = НСтр("ru = 'Документ рассчитан регламентным заданием.'");
		ЗапасыСервер.РассчитатьСебестоимостьНаСервере(НовыйДокументОбъект);
		НовыйДокументОбъект.Ответственный = Справочники.Пользователи.ПустаяСсылка();
		Попытка
			НовыйДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			ТекстСообщения = НСтр("ru = 'Расчет себестоимости товаров для магазина %Магазин%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Магазин%", Магазин);
		Исключение
			
			НовыйДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			ТекстСообщения = НСтр("ru = 'Расчет себестоимости товаров для магазина %Магазин% не проведен'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Магазин%", Магазин);
			Описание = ОписаниеОшибки();
			ТекстСообщения = ТекстСообщения + Символы.ПС + ОписаниеОшибки();
		КонецПопытки;
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
		УровеньЖурналаРегистрации.Информация,,
		НовыйДокументОбъект.Ссылка,
		ТекстСообщения);
		
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
	УровеньЖурналаРегистрации.Информация,,
	,
	НСтр("ru = 'Окончание расчета себестоимости товаров.'"));
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
