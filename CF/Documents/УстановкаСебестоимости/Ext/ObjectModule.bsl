#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
    // &ЗамерПроизводительности
    ВремяНачалаЗамера = ОценкаПроизводительности.НачатьЗамерВремени();

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.УстановкаСебестоимости.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗапасыСервер.ОтразитьДвиженияСебестоимостьНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
    
    ОценкаПроизводительности.ЗакончитьЗамерВремени("УстановкаСебестоимостиПроведение",ВремяНачалаЗамера,Товары.Количество(), "Вес по табличной части ""Товары""");

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
		
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОприходованиеТоваровТовары.Номенклатура КАК Номенклатура,
		|	ОприходованиеТоваровТовары.Характеристика КАК Характеристика,
		|	СУММА(ОприходованиеТоваровТовары.Цена / ВЫБОР
		|			КОГДА ЕСТЬNULL(ОприходованиеТоваровТовары.Упаковка.Коэффициент, 0) <> 0
		|				ТОГДА ОприходованиеТоваровТовары.Упаковка.Коэффициент
		|			ИНАЧЕ 1
		|		КОНЕЦ * ОприходованиеТоваровТовары.КоличествоУпаковок) КАК Сумма,
		|	СУММА(ОприходованиеТоваровТовары.КоличествоУпаковок) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ОприходованиеТоваров.Товары КАК ОприходованиеТоваровТовары
		|ГДЕ
		|	ОприходованиеТоваровТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ОприходованиеТоваровТовары.Номенклатура,
		|	ОприходованиеТоваровТовары.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ВЫРАЗИТЬ(Товары.Сумма / ВЫБОР
		|			КОГДА ЕСТЬNULL(Товары.Количество, 0) = 0
		|				ТОГДА 1
		|			ИНАЧЕ Товары.Количество
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
		|ИЗ
		|	Товары КАК Товары";
		
		Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Магазин = ДанныеЗаполнения.Магазин;
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ПринятИзУправляющейСистемы = Ложь;
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ РасчетСебестоимости Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Магазин");
		
	КонецЕсли;
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	Если РасчетСебестоимости Тогда
		ПроверитьДублиДокументов(Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует документ
//
Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Магазин       = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	
КонецПроцедуры

Процедура ПроверитьДублиДокументов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УстановкаСебестоимости.Ссылка,
	|	УстановкаСебестоимости.Магазин
	|ИЗ
	|	Документ.УстановкаСебестоимости КАК УстановкаСебестоимости
	|ГДЕ
	|	УстановкаСебестоимости.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УстановкаСебестоимости.Ссылка.Проведен
	|	И НЕ УстановкаСебестоимости.Ссылка = &Ссылка
	|	И УстановкаСебестоимости.Магазин = &Магазин
	|	И УстановкаСебестоимости.РасчетСебестоимости";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Магазин",       Магазин);
	Запрос.УстановитьПараметр("Ссылка",        Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		ТекстСообщения  = НСтр("ru = 'За %1 уже есть проведенный документ ""Расчет и установка себестоимости"" 
									|с признаком ""Расчет себестоимости"" для магазина: %2'");
		Выборка = Результат.Выбрать();
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ТекстСообщения, 
						Формат(Дата, "ДФ='ММММ гггг'") + " г.",
						Магазин);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения ,
						ЭтотОбъект,
						"Дата",
						,
						Отказ);
		
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
