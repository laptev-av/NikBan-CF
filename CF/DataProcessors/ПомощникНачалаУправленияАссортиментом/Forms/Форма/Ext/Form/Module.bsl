
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ДокументИзмененияАссортиментаЗавершениеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ТекущаяСтрока = Элементы.Ассортимент.ТекущиеДанные;
		Если ТекущаяСтрока <> Неопределено Тогда
			ТекущаяСтрока.ДокументИзмененияАссортимента = Результат;
			АссортиментДокументИзмененияАссортиментаПриИзмененииСервер(ТекущаяСтрока.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАссортиментПоСкладскимОстаткамИОборотамЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйПериод <> Неопределено Тогда
		
		МассивВыделенных = ДополнительныеПараметры.МассивВыделенных;
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("ДатаНачала",НачалоДня(ВыбранныйПериод.ДатаНачала));
		ПараметрыЗаполнения.Вставить("ДатаКонца",КонецДня(ВыбранныйПериод.ДатаОкончания));
		Для Каждого СтрокаМассива Из МассивВыделенных Цикл
			ОбрабатываемаяСтрока = Объект.Ассортимент.НайтиПоИдентификатору(СтрокаМассива);
			Если НЕ ЗначениеЗаполнено(ОбрабатываемаяСтрока.ФорматМагазина) Тогда
				ТекстСообщения = НСтр("ru = 'В строке %1 не заполнен формат магазина.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстСообщения,
					ОбрабатываемаяСтрока.НомерСтроки);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
					,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Ассортимент",
						ОбрабатываемаяСтрока.НомерСтроки,
						"ФорматМагазина"),
					"Объект");
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(ОбрабатываемаяСтрока.ДокументИзмененияАссортимента) Тогда
				ТекстСообщения = НСтр("ru = 'В строке %1 уже указан документ изменения ассортимента. Новый документ не будет создан.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстСообщения,
					ОбрабатываемаяСтрока.НомерСтроки);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"Ассортимент",
						ОбрабатываемаяСтрока.НомерСтроки,
						"ДокументИзмененияАссортимента"),
					"Объект");
				Продолжить;
			КонецЕсли;
			ЗаполнитьАссортиментПоСкладскимОстаткамИОборотамНаСервере(СтрокаМассива, ПараметрыЗаполнения);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПропуститьШагНоменклатура = Истина;
	
	ТекущийШаг = 3;
	ЗаполнитьМагазиныСервер();
	Если Объект.Магазины.Количество() > 0 Тогда
		ТекущийШаг = 1;
	КонецЕсли;
	
	Если ТекущийШаг = 3 Тогда
		ЗаполнитьФорматыДляУстановкиАссортиментаСервер();
		Если Объект.Ассортимент.Количество() > 0 Тогда
			ТекущийШаг = 2;
		КонецЕсли;
	КонецЕсли;
	
	
	УстановитьИменаИДоступностьКнопок();
	УстановитьТекущуюСтраницу(ТекущийШаг);
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМагазины

&НаКлиенте
Процедура МагазиныПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныФорматМагазинаПриИзменении(Элемент)
	
	ИдентификаторТекущейСтроки = Элементы.Магазины.ТекущиеДанные.ПолучитьИдентификатор();
	
	МагазиныФорматМагазинаПриИзмененииСервер(ИдентификаторТекущейСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныВидМинимальныхЦенПродажиПриИзменении(Элемент)
	
	ИдентификаторТекущейСтроки = Элементы.Магазины.ТекущиеДанные.ПолучитьИдентификатор();
	
	МагазиныПравилоЦенообразованияПриИзмененииСервер(ИдентификаторТекущейСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ИмяОткрываемойФормы = "";
	Если Поле.Имя = "МагазиныМагазин" Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", Элемент.ТекущиеДанные.Магазин);
		ИмяОткрываемойФормы ="Справочник.Магазины.Форма.ФормаЭлемента";
	ИначеЕсли Поле.Имя = "МагазиныПравилоЦенообразования" Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", Элемент.ТекущиеДанные.ПравилоЦенообразования);
		ИмяОткрываемойФормы ="Справочник.ПравилаЦенообразования.Форма.ФормаЭлемента";
	КонецЕсли;
	Если ЗначениеЗаполнено(ИмяОткрываемойФормы) Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыОткрытия);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАссортимент

&НаКлиенте
Процедура АссортиментПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментДокументИзмененияАссортиментаПриИзменении(Элемент)
	
	ИдентификаторТекущейСтроки = Элементы.Ассортимент.ТекущиеДанные.ПолучитьИдентификатор();
	
	АссортиментДокументИзмененияАссортиментаПриИзмененииСервер(ИдентификаторТекущейСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментДокументИзмененияАссортиментаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.Ассортимент.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
        
        // &ЗамерПроизводительности
        ОценкаПроизводительностиРТКлиент.НачатьЗамер(
                 Истина, "Документ.ИзменениеАссортимента.Форма.ФормаВыбора.Открытие");

        ПараметрыОткрытия = Новый Структура("ОбъектПланирования", ТекущаяСтрока.ФорматМагазина);
		ДополнительныеПараметры = Новый Структура;
		ОбработчикОповещения = Новый ОписаниеОповещения(
										"ДокументИзмененияАссортиментаЗавершениеВыбора",
										ЭтотОбъект,
										ДополнительныеПараметры);
		ОткрытьФорму(
			"Документ.ИзменениеАссортимента.Форма.ФормаВыбора",
			ПараметрыОткрытия,
			,
			,
			,
			,
			ОбработчикОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьМагазины(Команда)
	ЗаполнитьМагазиныСервер();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФорматыДляУстановкиАссортимента(Команда)
	ЗаполнитьФорматыДляУстановкиАссортиментаСервер();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Результат = ВыполнитьШаг();
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли;
	//
	ТекущийШаг = ТекущийШаг + 1;
	Если ТекущийШаг > 3 Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	УстановитьИменаИДоступностьКнопок();
	УстановитьТекущуюСтраницу(ТекущийШаг);
	Элементы.ГруппаПанелиКнопок.РастягиватьПоГоризонтали = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ТекущийШаг = ТекущийШаг - 1;
	УстановитьИменаИДоступностьКнопок();
	УстановитьТекущуюСтраницу(ТекущийШаг);
	
	Элементы.ГруппаПанелиКнопок.РастягиватьПоГоризонтали = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАссортиментПоСкладскимОстаткамИОборотам(Команда)
	МассивВыделенных = Элементы.Ассортимент.ВыделенныеСтроки;
	Если МассивВыделенных.Количество() > 0 Тогда
		
		ДиалогПериода = Новый ДиалогРедактированияСтандартногоПериода();
		ДатаПериода = ТекущаяДата();
		ДиалогПериода.Период = Новый СтандартныйПериод(НачалоМесяца(ДатаПериода), ДатаПериода);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("МассивВыделенных", МассивВыделенных);
		ОбработчикОповещения = Новый ОписаниеОповещения(
										"ЗаполнитьАссортиментПоСкладскимОстаткамИОборотамЗавершение",
										ЭтотОбъект,
										ДополнительныеПараметры);
		ДиалогПериода.Показать(ОбработчикОповещения);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ДЛЯ КОМАНД

&НаСервере
Процедура ЗаполнитьМагазиныСервер()
	//
	Если Объект.Магазины.Количество() > 0 Тогда
		Объект.Магазины.Очистить();
	КонецЕсли;
	//
	ЗапросНеКорректныеМагазины = Новый Запрос;
	ЗапросНеКорректныеМагазины.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Магазины.Ссылка КАК Магазин,
	|	Магазины.Наименование КАК Наименование,
	|	Магазины.ПравилоЦенообразования КАК ПравилоЦенообразования,
	|	Магазины.ВидМинимальныхЦенПродажи КАК ВидМинимальныхЦенПродажи
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	(НЕ Магазины.ПометкаУдаления)
	|	И (НЕ Магазины.СкладУправляющейСистемы)
	|	И (Магазины.ФорматМагазина = ЗНАЧЕНИЕ(Справочник.ФорматыМагазинов.ПустаяСсылка)
	|			ИЛИ Магазины.ФорматМагазина.Код ЕСТЬ NULL )
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|";
	Результат = ЗапросНеКорректныеМагазины.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Объект.Магазины.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорматыДляУстановкиАссортиментаСервер()
	//
	Если Объект.Ассортимент.Количество() > 0 Тогда
		Объект.Ассортимент.Очистить();
	КонецЕсли;
	ЗапросНеКорректныйАссортимент = Новый Запрос;
	ЗапросНеКорректныйАссортимент.Текст = "ВЫБРАТЬ
	|	ФорматыМагазинов.Ссылка КАК ФорматМагазина,
	|	ФорматыМагазинов.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ФорматыМагазинов КАК ФорматыМагазинов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
	|		ПО ФорматыМагазинов.Ссылка = Магазины.ФорматМагазина
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
	|		ПО ФорматыМагазинов.Ссылка = Ассортимент.ОбъектПланирования
	|ГДЕ
	|	НЕ ФорматыМагазинов.ПометкаУдаления
	|	И НЕ ФорматыМагазинов.ЭтоГруппа
	|
	|СГРУППИРОВАТЬ ПО
	|	ФорматыМагазинов.Ссылка,
	|	ФорматыМагазинов.Наименование
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Ассортимент.Номенклатура) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	Результат = ЗапросНеКорректныйАссортимент.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Объект.Ассортимент.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьШаг()
	Результат = Истина;
	Если ТекущийШаг = 1 Тогда
		Если НЕ ПропуститьШагМагазины Тогда
			Для Каждого СтрокаМагазин Из Объект.Магазины Цикл
				Если СтрокаМагазин.КонтролироватьАссортимент И НЕ ЗначениеЗаполнено(СтрокаМагазин.ФорматМагазина) Тогда
					Результат = Ложь;
					ТекстСообщения = НСтр("ru='В строке %1 не заполнен реквизит ""Формат магазина""'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ТекстСообщения,
										СтрокаМагазин.НомерСтроки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения,
						Объект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"Магазины",
							СтрокаМагазин.НомерСтроки,
							"ФорматМагазина"),
						"Объект");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если Результат Тогда
			ВыполнитьЗаписьМагазинов(Результат);
		КонецЕсли;
		Если Результат Тогда
			Если Объект.Ассортимент.Количество() = 0 Тогда
				ЗаполнитьФорматыДляУстановкиАссортиментаСервер();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТекущийШаг = 2 Тогда
		Если НЕ ПропуститьШагАссортимент Тогда
			Для Каждого СтрокаАссортимент Из Объект.Ассортимент Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаАссортимент.ДокументИзмененияАссортимента) Тогда
					Результат = Ложь;
					ТекстСообщения = НСтр("ru='В строке %1 не указан документ ввода в ассортимент'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										ТекстСообщения,
										СтрокаАссортимент.НомерСтроки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения,
						Объект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
							"Ассортимент",
							СтрокаАссортимент.НомерСтроки,
							"ДокументИзмененияАссортимента"),
						"Объект");
				Иначе
					РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
											СтрокаАссортимент.ДокументИзмененияАссортимента,
											Новый Структура("ОбъектПланирования, Проведен"));
					Если РеквизитыДокумента.ОбъектПланирования <> СтрокаАссортимент.ФорматМагазина Тогда
						Результат = Ложь;
						ТекстСообщения = НСтр("ru='В строке %1 формат магазина не соответствует документу ввода в ассортимент'");
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											ТекстСообщения,
											СтрокаАссортимент.НомерСтроки);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							ТекстСообщения,
							Объект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Ассортимент",
								СтрокаАссортимент.НомерСтроки,
								"ДокументИзмененияАссортимента"),
							"Объект");
					КонецЕсли;
					Если НЕ РеквизитыДокумента.Проведен Тогда
						Результат = Ложь;
						ТекстСообщения = НСтр("ru = 'В строке %1 документ ввода в ассортимент должен быть проведен'");
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											ТекстСообщения,
											СтрокаАссортимент.НомерСтроки);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							ТекстСообщения,
							Объект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Ассортимент",
								СтрокаАссортимент.НомерСтроки,
								"ДокументИзмененияАссортимента"),
							"Объект");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ВыполнитьЗаписьМагазинов(Результат)
	Если НЕ ПропуститьШагМагазины Тогда
		УстановитьПривилегированныйРежим(Истина);
		Для Каждого СтрокаМагазин Из Объект.Магазины Цикл
			ЕстьИзменения = Ложь;
			МагазинОбъект = СтрокаМагазин.Магазин.ПолучитьОбъект();
			Если МагазинОбъект.КонтролироватьАссортимент <> СтрокаМагазин.КонтролироватьАссортимент Тогда
				МагазинОбъект.КонтролироватьАссортимент = СтрокаМагазин.КонтролироватьАссортимент;
				ЕстьИзменения = Истина;
			КонецЕсли;
			Если МагазинОбъект.ФорматМагазина <> СтрокаМагазин.ФорматМагазина Тогда
				МагазинОбъект.ФорматМагазина = СтрокаМагазин.ФорматМагазина;
				ЕстьИзменения = Истина;
			КонецЕсли;
			Если МагазинОбъект.ПравилоЦенообразования <> СтрокаМагазин.ПравилоЦенообразования Тогда
				МагазинОбъект.ПравилоЦенообразования = СтрокаМагазин.ПравилоЦенообразования;
				ЕстьИзменения = Истина;
			КонецЕсли;
			Если МагазинОбъект.ВидМинимальныхЦенПродажи <> СтрокаМагазин.ВидМинимальныхЦенПродажи Тогда
				МагазинОбъект.ВидМинимальныхЦенПродажи = СтрокаМагазин.ВидМинимальныхЦенПродажи;
				ЕстьИзменения = Истина;
			КонецЕсли;
			Если ЕстьИзменения Тогда
				Попытка
					МагазинОбъект.Записать();
				Исключение
					Результат = Ложь;
					
					ТекстОшибки = НСтр("ru = 'В строке %1 не удалось записать магазин по причине:'");
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, СтрокаМагазин.НомерСтроки);
					ТекстОшибки = ТекстОшибки + Символы.ПС + ОписаниеОшибки();
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						Объект,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Магазины", СтрокаМагазин.НомерСтроки, "Магазин"));
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАссортиментПоСкладскимОстаткамИОборотамНаСервере(ИдентификаторСтроки, ПараметрыЗаполнения)
	ОбрабатываемаяСтрока = Объект.Ассортимент.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если ОбрабатываемаяСтрока <> Неопределено Тогда
		НовыйДокумент = Документы.ИзменениеАссортимента.СоздатьДокумент();
		НовыйДокумент.Заполнить(Неопределено);
		НовыйДокумент.Дата = ТекущаяДатаСеанса();
		НовыйДокумент.Операция = Перечисления.ОперацииИзмененияАссортимента.ВводВАссортимент;
		НовыйДокумент.Стадия = Перечисления.СтадииАссортимента.РазрешеныЗакупкиИПродажи;
		НовыйДокумент.ОбъектПланирования = ОбрабатываемаяСтрока.ФорматМагазина;
		//
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Перечисление.РолиАссортимента.ДополнительныйАссортимент) КАК РольАссортимента,
		|	ЕСТЬNULL(ПравилаЦенообразованияЦеновыеГруппы.ВидЦен, &ВидЦенФормата) КАК ВидЦен
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, , ,
		|		Склад.Магазин.ФорматМагазина = &ФорматМагазина) КАК ТоварыНаСкладахОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилаЦенообразованияЦеновыеГруппы
		|		ПО ТоварыНаСкладахОстаткиИОбороты.Номенклатура.ЦеноваяГруппа = ПравилаЦенообразованияЦеновыеГруппы.ЦеноваяГруппа
		|			И (ПравилаЦенообразованияЦеновыеГруппы.Ссылка = &ПравилоЦенообразования)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
		|	ЕСТЬNULL(ПравилаЦенообразованияЦеновыеГруппы.ВидЦен, &ВидЦенФормата)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура.Наименование";
		Запрос.УстановитьПараметр("ДатаНачала", ПараметрыЗаполнения.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаКонца", ПараметрыЗаполнения.ДатаКонца);
		Запрос.УстановитьПараметр("ФорматМагазина", ОбрабатываемаяСтрока.ФорматМагазина);
		Запрос.УстановитьПараметр("ПравилоЦенообразования", ОбрабатываемаяСтрока.ФорматМагазина.ПравилоЦенообразования);
		Запрос.УстановитьПараметр("ВидЦенФормата", ОбрабатываемаяСтрока.ФорматМагазина.ПравилоЦенообразования.ВидЦен);
		//
		Результат=Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'В строке %1 за выбранный период нет данных по складским остаткам и оборотам для магазинов формата ""%2"".'");
			ТекстСообщения = ТекстСообщения + Символы.ПС
								+ НСтр("ru = 'Создайте документ ввода в ассортимент и заполните его вручную.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				ОбрабатываемаяСтрока.НомерСтроки,
				ОбрабатываемаяСтрока.ФорматМагазина);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Ассортимент",
					ОбрабатываемаяСтрока.НомерСтроки,
					"ДокументИзмененияАссортимента"),
				"Объект");
		Иначе
			Выборка=Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				НоваяСтрока = НовыйДокумент.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка, "Номенклатура, РольАссортимента, ВидЦен");
			КонецЦикла;
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			ОбрабатываемаяСтрока.ДокументИзмененияАссортимента = НовыйДокумент.Ссылка;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ИНТЕРФЕЙСНЫЕ

&НаСервере
Процедура УстановитьТекущуюСтраницу(ТекущийШаг)
	
	МассивСтраниц = Новый Массив;
	МассивСтраниц.Добавить("СтраницаМагазины");
	МассивСтраниц.Добавить("СтраницаАссортимент");
	МассивСтраниц.Добавить("СтраницаГотово");
	
	МассивНадписей = Новый Массив;
	МассивНадписей.Добавить(НСтр("ru='Заполните форматы магазинов.'"));
	МассивНадписей.Добавить(НСтр("ru='Сформируйте начальный ассортимент.'"));
	Если ПропуститьШагМагазины ИЛИ ПропуститьШагАссортимент Тогда
		МассивНадписей.Добавить(НСтр("ru='Не все первоначальные настройки ассортимента выполнены.'"));
	Иначе
		МассивНадписей.Добавить(НСтр("ru='Все первоначальные настройки ассортимента выполнены.'"));
	КонецЕсли;
	
	Если ТекущийШаг > 0 И ТекущийШаг <= 3 Тогда
		ИндексШага = ТекущийШаг - 1;
		Элементы.ДекорацияНадписьТекущегоШага.Заголовок = МассивНадписей[ИндексШага];
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы[МассивСтраниц[ИндексШага]];
	Иначе
		Элементы.ДекорацияНадписьТекущегоШага.Заголовок = "";
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИменаИДоступностьКнопок()
	Если ТекущийШаг = 1 Тогда
		Элементы.Далее.Заголовок = НСтр("ru = 'Далее >'");
		Элементы.Назад.Видимость = Ложь;
	ИначеЕсли ТекущийШаг = 2 Тогда
		Элементы.Далее.Заголовок = НСтр("ru = 'Далее >'");
		Элементы.Назад.Видимость = Истина;
	ИначеЕсли ТекущийШаг = 3 Тогда
		Элементы.Далее.Заголовок = НСтр("ru = 'Готово'");
		Элементы.Назад.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ДЛЯ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ

&НаСервере
Процедура ПроверитьСоответствиеПравилаИВидаМинимальныхЦен(ТекущаяСтрока)
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ВидМинимальныхЦенПродажи)
	  	И ЗначениеЗаполнено(ТекущаяСтрока.ПравилоЦенообразования) Тогда
		Если ТекущаяСтрока.ПравилоЦенообразования.ЦенаВключаетНДС <> ТекущаяСтрока.ВидМинимальныхЦенПродажи.ЦенаВключаетНДС Тогда
			ТекущаяСтрока.ВидМинимальныхЦенПродажи = Справочники.ВидыЦен.ПустаяСсылка();
			ТекстСообщения = НСтр("ru = 'Способ учета НДС в правилах ценообразования должен совпадать со способом учета НДС вида минимальных цен.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Объект,
				"Объект.Магазины.ВидМинимальныхЦенПродажи");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АссортиментДокументИзмененияАссортиментаПриИзмененииСервер(ИдентификаторТекущейСтроки)
	ТекущаяСтрока = Объект.Ассортимент.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.ДокументИзмененияАссортимента)
			И ТекущаяСтрока.ДокументИзмененияАссортимента.ОбъектПланирования <> ТекущаяСтрока.ФорматМагазина Тогда
			ТекущаяСтрока.ДокументИзмененияАссортимента = Документы.ИзменениеАссортимента.ПустаяСсылка();
			ТекстСообщения = НСтр("ru = 'Формат магазина в документе должен совпадать с указанным в строке.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Объект,
				"Объект.Ассортимент.ДокументИзмененияАссортимента");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура МагазиныФорматМагазинаПриИзмененииСервер(ИдентификаторТекущейСтроки)
	
	ТекущаяСтрока = Объект.Магазины.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.ФорматМагазина)
			И ТекущаяСтрока.ПравилоЦенообразования <> ТекущаяСтрока.ФорматМагазина.ПравилоЦенообразования Тогда
			ТекущаяСтрока.ПравилоЦенообразования = ТекущаяСтрока.ФорматМагазина.ПравилоЦенообразования;
		КонецЕсли;
		ПроверитьСоответствиеПравилаИВидаМинимальныхЦен(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МагазиныПравилоЦенообразованияПриИзмененииСервер(ИдентификаторТекущейСтроки)
	
	ТекущаяСтрока = Объект.Магазины.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	Если ТекущаяСтрока <> Неопределено Тогда
		ПроверитьСоответствиеПравилаИВидаМинимальныхЦен(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

