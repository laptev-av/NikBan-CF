
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьНеАктуальностьРасчетов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	УстановитьНеАктуальностьРасчетов();
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	УстановитьНеАктуальностьРасчетов();
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТабличнойЧастиТаблицаэтапов

&НаКлиенте
Процедура ТаблицаЭтаповВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИмяПоле = Поле.Имя;
	ИмяРеквизита = СтрЗаменить(Поле.Имя, "ТаблицаЭтапов", "");
	
	Если ИмяРеквизита <> "Документ" Тогда
		Возврат;
	КонецЕсли;
	
	Значение = Элемент.ТекущиеДанные[ИмяРеквизита];
	Если ЗначениеЗаполнено(Значение) Тогда
		ПоказатьЗначение(,Значение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЭтаповПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаЭтапов.ТекущиеДанные;
	УстановитьСнятьПометку(ТекущиеДанные.Пометка);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОчиститьСообщения();
	ЗаполнитьТаблицуЭтапов();
	
	Если ТаблицаЭтапов.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Нет данных для пересчета'");
		Пояснение = НСтр("ru='Выполнять корректировку дат не требуется'");
		ПоказатьОповещениеПользователя(ТекстСообщения, , Пояснение, БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	УстановитьКнопкуПоУмолчанию();
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Скорректировать(Команда)
	
	Перем МассивОбработанныхДокументов;
	
	ОчиститьСообщения();
	СкорректироватьДокументы(МассивОбработанныхДокументов);
	ОповеститьОРезультатеПересчетаДат(МассивОбработанныхДокументов);
	
	ЗаполнитьТаблицуЭтапов();
	УстановитьКнопкуПоУмолчанию();
	Модифицированность = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьСнятьПометку(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьСнятьПометку(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуЭтапов()
	
	ТаблицаЭтапов.Очистить();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТаблицаЭтапов;
	
	УсловиеГде = "ГДЕ ЭтапыОплат.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидПлатежа.ОтсрочкаПлатежа)
	|И НЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ЭтапыОплат.ДатаПоступления, ДЕНЬ), ДЕНЬ, ЭтапыОплат.ОтсрочкаПлатежа) = ЭтапыОплат.ДатаПлатежа
	|";
	
	Запрос = Новый Запрос;

	Если ЗначениеЗаполнено(Магазин) Тогда
		УсловиеГде = УсловиеГде + "
		|И ЭтапыОплат.Магазин = &Магазин";
		Запрос.УстановитьПараметр("Магазин", Магазин);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Поставщик) Тогда
		УсловиеГде = УсловиеГде + "
		|И ЭтапыОплат.Контрагент = &Поставщик";
		Запрос.УстановитьПараметр("Поставщик", Поставщик);
	КонецЕсли;
	
	ТекстЗапроса = ЗакупкиСервер.ПолучитьТекстЗапросаГрафикаОплатыПоставок(Новый Структура("УсловиеГде", УсловиеГде));
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	ВыборкаПоДокументам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ИндексСтроки = 0;
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ВерсияДанныхДокумента = ВерсияДанныхДокумента(ВыборкаПоДокументам.Документ);
		Выборка = ВыборкаПоДокументам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Строка = ТаблицаЭтапов.Добавить();
			
			ЗаполнитьЗначенияСвойств(Строка, Выборка);
			Строка.ВерсияДанных = ВерсияДанныхДокумента;
			Строка.ИндексСтроки = ИндексСтроки;
			ИндексСтроки = ИндексСтроки + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаЭтапов.Сортировать("Документ Возр, НомерСтроки Возр");
	
	Если ТаблицаЭтапов.Количество() > 0 Тогда
		Элементы.ФормаСкорректировать.Доступность = Истина;
		Элементы.ТаблицаЭтаповУстановитьФлажки.Доступность = Истина;
		Элементы.ТаблицаЭтаповСнятьФлажки.Доступность = Истина;
	Иначе
		Элементы.ФормаСкорректировать.Доступность = Ложь;
		Элементы.ТаблицаЭтаповУстановитьФлажки.Доступность = Ложь;
		Элементы.ТаблицаЭтаповСнятьФлажки.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВерсияДанныхДокумента(ДокументСсылка)
	
	ИмяДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ДокументСсылка)).Имя;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	Документ.%ИмяДокумента% КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|";
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "%ИмяДокумента%", ИмяДокумента);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ВерсияДанных = Выборка.ВерсияДанных;
	Иначе
		ВерсияДанных = "            ";
	КонецЕсли;
	
	Возврат ВерсияДанных;
	
КонецФункции

&НаСервере
Процедура СкорректироватьДокументы(МассивОбработанныхДокументов)
	
	МассивОбработанныхДокументов = Новый Массив;
	Отказ = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДокументов = РеквизитФормыВЗначение("ТаблицаЭтапов");
	
	ТаблицаРедактируемыхДокументов = ТаблицаДокументов.Скопировать(Новый Структура("Пометка", Истина));
	
	ТаблицаРедактируемыхДокументов.Сортировать("Документ Возр, НомерСтроки Убыв");
	
	ЗаблокироватьДокументы(ТаблицаРедактируемыхДокументов, Отказ);
	
	Если Не Отказ Тогда
		СохранитьРезультат(ТаблицаРедактируемыхДокументов, Отказ, МассивОбработанныхДокументов);
	КонецЕсли;
	
	РазблокироватьДокументыДляРедактирования(МассивОбработанныхДокументов);
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаблокироватьДокументы(Строки, Отказ)
	
	Для Каждого СтрокаТаблицы Из Строки Цикл
		
		Если СтрокаТаблицы.ВерсияДанных <> ВерсияДанныхДокумента(СтрокаТаблицы.Документ) Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не удалось заблокировать %1. Данные были изменены или удалены другим пользователем.'"),
			СтрокаТаблицы.Документ
			);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			, // КлючДанных
			"ТаблицаЭтапов["+СтрокаТаблицы.ИндексСтроки+"].Документ"
			);
			Отказ = Истина;
			
		Иначе
			
			Попытка
				ЗаблокироватьДанныеДляРедактирования(
				СтрокаТаблицы.Документ,
				,// ВерсияДанных
				УникальныйИдентификатор
				);
			Исключение
				ИндексСтроки = Строки.Индекс(СтрокаТаблицы);
				
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось заблокировать %1. %2'"),
				СтрокаТаблицы.Документ,
				КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
				);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				, // КлючДанных
				"ТаблицаЭтапов["+СтрокаТаблицы.ИндексСтроки+"].Документ"
				);
				Отказ = Истина;
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РазблокироватьДокументыДляРедактирования(МассивОбработанныхДокументов)
	
	Попытка
		РазблокироватьДанныеДляРедактирования(
		, // Ключ
		УникальныйИдентификатор
		);
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьРезультат(Строки, Отказ, МассивОбработанныхДокументов)

	Для Каждого СтрокаТаблицы Из Строки Цикл
		
		НачатьТранзакцию();
		
		ДокументСсылка = СтрокаТаблицы.Документ;
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		
		ИмяТабличнойЧасти = "ЭтапыОплат";
		
		ТаблицаЭтапыОплат = ДокументОбъект[ИмяТабличнойЧасти].Выгрузить(,);
		
		ДанныеИзменены = Ложь;
		
		ИзменитьДатуПлатежаВДокументе(
		ТаблицаЭтапыОплат,
		СтрокаТаблицы.НомерСтроки,
		СтрокаТаблицы.РасчетнаяДата,
		Отказ,
		ДанныеИзменены
		);
		
		Если ДанныеИзменены Тогда
			
			ДокументОбъект[ИмяТабличнойЧасти].Загрузить(ТаблицаЭтапыОплат);
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПроверкаДатыЗапретаИзменения", Истина);
			Если ДокументОбъект.ПроверитьЗаполнение() Тогда
				Попытка
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Не удалось записать документ %1. %2'"),
					ДокументСсылка,
					КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
					);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,);
					Отказ = Истина;
				КонецПопытки;
			Иначе
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось записать документ %1'"),
				ДокументСсылка
				);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,);
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Отказ Тогда
			ОтменитьТранзакцию();
		Иначе
			ЗафиксироватьТранзакцию();
			МассивОбработанныхДокументов.Добавить(СтрокаТаблицы.Документ);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ИзменитьДатуПлатежаВДокументе(ТаблицаЭтапыОплат, НомерЭтапа , РасчетнаяДата, Отказ, ДанныеИзменены)
	
	ТаблицаЭтапыОплат[НомерЭтапа-1].ДатаПлатежа = РасчетнаяДата;
	ДанныеИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометку(Пометка)
	
	ВыделенныеСтроки = Элементы.ТаблицаЭтапов.ВыделенныеСтроки;
	
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		
		Строка = ТаблицаЭтапов.НайтиПоИдентификатору(Идентификатор);
		Строка.Пометка = Пометка;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНеАктуальностьРасчетов()
	
	Элементы.ФормаСкорректировать.Доступность = Ложь;
	Элементы.ТаблицаЭтаповУстановитьФлажки.Доступность = Ложь;
	Элементы.ТаблицаЭтаповСнятьФлажки.Доступность = Ложь;
	
	ТаблицаЭтапов.Очистить();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТабДок;
	
	Элементы.ТабДок.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	Элементы.ТабДок.ОтображениеСостояния.Текст = НСтр("ru = 'Данные не рассчитаны. Нажмите ""Обновить"" для заполнения таблицы.'");
	Элементы.ТабДок.ОтображениеСостояния.Видимость = Истина;
	
	УстановитьКнопкуПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКнопкуПоУмолчанию()
	
	Если ТаблицаЭтапов.Количество() = 0 Тогда
		Элементы.ФормаОбновить.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ФормаСкорректировать.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОРезультатеПересчетаДат(МассивОбработанныхДокументов)
	
	Если МассивОбработанныхДокументов.Количество() = 0 Тогда
		Текст = НСтр("ru='Изменений в датах оплаты не было'");
		Пояснение = НСтр("ru='Изменений дат оплат в документах не было'");
		ПоказатьОповещениеПользователя(
		Текст,
		, // НавигационнаяСсылка
		Пояснение,
		БиблиотекаКартинок.Информация32
		);
	Иначе
		Для Каждого ДокументСсылка Из МассивОбработанныхДокументов Цикл
			Текст = НСтр("ru='Изменена дата оплаты'");
			Пояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Изменена дата оплаты в документе: %1'"),
			ДокументСсылка
			);
			ПоказатьОповещениеПользователя(
			Текст,
			ПолучитьНавигационнуюСсылку(ДокументСсылка),
			Пояснение,
			БиблиотекаКартинок.Информация32
			);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
