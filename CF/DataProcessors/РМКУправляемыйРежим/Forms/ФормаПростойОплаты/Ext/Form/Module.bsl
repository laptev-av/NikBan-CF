#Область ПеременныеМодуля

&НаКлиенте
Перем ЦветФонаСдачи;

#КонецОбласти

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВводаТелефона(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.ВведенноеЧисло) Тогда
			ПодключаемоеОборудованиеРТКлиент.ПреобразоватьТелефонКПользовательсткомуВиду(РезультатОткрытияФормы.ВведенноеЧисло, Телефон, ТелефонСтрокой);
			Email = "";
			ДанныеSMSИлиEmail = ТелефонСтрокой;
			ОтказКлиентаОтСохраненияТелефонаEmail = РезультатОткрытияФормы.ОтказКлиентаОтСохраненияТелефона;
			ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент();
		Иначе
			Телефон = 0;
			ТелефонСтрокой = "";
			Email = "";
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВводаEmail(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.Email) Тогда
			Email = РезультатОткрытияФормы.Email;
			Телефон = 0;
			ТелефонСтрокой = "";
			ДанныеSMSИлиEmail = Email;
			ОтказКлиентаОтСохраненияТелефонаEmail = РезультатОткрытияФормы.ОтказКлиентаОтСохраненияEmail;
			ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент();
		Иначе
			Телефон = 0;
			ТелефонСтрокой = "";
			Email = "";
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСимволовПослеЗапятой = 2;
	ПервыйВвод = Истина;
	
	Если Параметры.Свойство("ЭтоЗачетАванса") Тогда
		ЭтоЗачетАванса = Параметры.ЭтоЗачетАванса
	КонецЕсли;
	
	Если Параметры.Свойство("ЭтоОплатаРассрочки") Тогда
		ЭтоОплатаРассрочки = Параметры.ЭтоОплатаРассрочки
	КонецЕсли;
	
	Если Параметры.Свойство("ЭтоАванс") Тогда
		ЭтоАванс = Параметры.ЭтоАванс
	КонецЕсли;
	
	Если Параметры.Свойство("ИтогПоЧеку") Тогда
		
		Если Параметры.ОперацияСДенежнымиСредствами 
			И Параметры.ЭтоАванс Тогда
			СуммаОплаты   = Параметры.ИтогПоЧеку - Параметры.СуммаОстаткаДокументаРасчета;
			Если СуммаОплаты < 0  Тогда
				СуммаОплаты = 0;
			КонецЕсли;
		ИначеЕсли ЭтоЗачетАванса Тогда
			СуммаОплаты   = Параметры.ИтогПоЧеку - Параметры.СуммаОстаткаДокументаРасчета;
			Если СуммаОплаты <= 0  Тогда
				СуммаМожетБытьНулевой = Истина;
				СуммаОплаты = 0;
			КонецЕсли;
		ИначеЕсли Параметры.ОперацияСДенежнымиСредствами 
			И Параметры.ЭтоОплатаРассрочки Тогда
			СуммаОплаты   = Параметры.СуммаОстаткаДокументаРасчета;
			Если СуммаОплаты < 0  Тогда
				СуммаОплаты = 0;
			КонецЕсли;
		Иначе
			СуммаОплаты   = Параметры.ИтогПоЧеку;
			СуммаМожетБытьНулевой = СуммаОплаты = 0;
		КонецЕсли;
		ИтогПоЧеку    = СуммаОплаты;
		СуммаСдачи    = 0;
		ВводимоеЧисло = Формат(СуммаОплаты, "ЧЦ=15; ЧДЦ=2; ЧГ=3,0");
	КонецЕсли;
	
	Если Параметры.Свойство("АдресТаблицыЧеков")
		И ЗначениеЗаполнено(Параметры.АдресТаблицыЧеков) Тогда
		ТабличноеПолеЧеков.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыЧеков));
		
		Для каждого СтрокаТаблицы Из ТабличноеПолеЧеков Цикл
			
			ВозможностьЭлектронногоПлатежа = ПодключаемоеОборудованиеРТ.ВозможностьЭлектронногоПлатежа(СтрокаТаблицы.КассаККМ.ПодключаемоеОборудование);
			Если ВозможностьЭлектронногоПлатежа Тогда
				КассаККМ = СтрокаТаблицы.КассаККМ;
				ПередачаEmailЧерезПрограмму = КассаККМ.ЭлектронныйЧекEmailПередаютсяПрограммой1С;
				ПередачаSMSЧерезПрограмму  = КассаККМ.ЭлектронныйЧекSMSПередаютсяПрограммой1С;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Элементы.КомандаEmail.Видимость = ВозможностьЭлектронногоПлатежа;
		Элементы.КомандаSMS.Видимость   = ВозможностьЭлектронногоПлатежа;
		
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Параметры.Свойство("ДисконтнаяКарта"  , ДисконтнаяКарта);
	ПечатьЧека = Истина;
	
	КомандаИзменениеПечатиЧекаСервер(ПечатьЧека);
	
	Если ВозможностьЭлектронногоПлатежа Тогда
		ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьСервер();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Если Объект.ОперацияСДенежнымиСредствами 
		ИЛИ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Элементы.Контрагент.Видимость = Истина;
		Элементы.Контрагент.ТолькоПросмотр = НЕ Параметры.ИзменятьКонтрагента;
		Элементы.Контрагент.ПодсказкаВвода = Константы.КонтрагентРозничныйПокупатель.Получить().Наименование;
	Иначе
		Элементы.Контрагент.Видимость = Ложь;
	КонецЕсли;
	
	Если (Объект.ОперацияСДенежнымиСредствами 
		И НЕ ЭтоОплатаРассрочки)
		ИЛИ СуммаОплаты = 0 Тогда
		Элементы.СтраницыСумм.ТекущаяСтраница = Элементы.СтраницаПустыхСумм;
	КонецЕсли;
	
	Если Параметры.Свойство("НадписьЗаголовок") Тогда
		НадписьЗаголовок = Параметры.НадписьЗаголовок;
		Если Параметры.Свойство("ЦветТекстаЗаголока") Тогда
			Элементы.НадписьЗаголовок.ЦветТекстаЗаголовка = Параметры.ЦветТекстаЗаголока;
		КонецЕсли;
	Иначе
		Элементы.НадписьЗаголовок.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Объект.Контрагент = Константы.КонтрагентРозничныйПокупатель.Получить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаЛеваяКлавиатура;
	ОбновитьФорму();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда0(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда0ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТочка(Команда)
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Если ВводимоеЧисло = "" Тогда
		ВводимоеЧисло = "0";
	КонецЕсли;
	
	ЧислоВхождений = СтрЧислоВхождений(ВводимоеЧисло, ",");
	
	Если Не ЧислоВхождений > 0 Тогда
		ВводимоеЧисло = ВводимоеЧисло + ",";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	ВводимоеЧисло = "";
	ПервыйВвод = Ложь;
	
	СуммаОплаты = 0;
	СуммаСдачи  = ИтогПоЧеку;
	Элементы.КомандаEnter.Доступность =  СуммаМожетБытьНулевой;
	Элементы.КомандаEnterПраваяКлавиатура.Доступность = Элементы.КомандаEnter.Доступность;
	
	Элементы.КомандаEmail.Доступность = Ложь;
	Элементы.КомандаSMS.Доступность   = Ложь;
	
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура КомандаEnter(Команда)
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Действие"   , НСтр("ru = 'Закрыть чек'"));
	
	СуммаОплатыЧисло = ПривестиСтрокуКЧислу(ВводимоеЧисло, Ложь);
	Если ЭтоОплатаРассрочки
		ИЛИ ЭтоЗачетАванса Тогда
		Если ТабличноеПолеЧеков[0].Сумма > ИтогПоЧеку Тогда
			СтрокаОплаты = Объект.Оплата.Добавить();
			СтрокаОплаты.ВидОплаты   = ПредопределенноеЗначение("Справочник.ВидыОплатЧекаККМ.ЗачетАванса");
			СтрокаОплаты.Организация = ТабличноеПолеЧеков[0].Организация;
			СтрокаОплаты.КлючСвязиТПЧеков = ТабличноеПолеЧеков[0].КлючСвязиТПЧеков;
			СтрокаОплаты.Сумма       = ТабличноеПолеЧеков[0].Сумма - ИтогПоЧеку;
		КонецЕсли;
		СтрокаОплаты = Объект.Оплата.Добавить();
		СтрокаОплаты.ВидОплаты   = ПредопределенноеЗначение("Справочник.ВидыОплатЧекаККМ.Наличные");
		СтрокаОплаты.Организация = ТабличноеПолеЧеков[0].Организация;
		СтрокаОплаты.КлючСвязиТПЧеков = ТабличноеПолеЧеков[0].КлючСвязиТПЧеков;
		СтрокаОплаты.Сумма       = СуммаОплатыЧисло;
		
		Если ИтогПоЧеку > СуммаОплатыЧисло  Тогда
			СтрокаОплаты = Объект.Оплата.Добавить();
			СтрокаОплаты.ВидОплаты   = ПредопределенноеЗначение("Справочник.ВидыОплатЧекаККМ.ОплатаВрассрочку");
			СтрокаОплаты.Организация = ТабличноеПолеЧеков[0].Организация;
			СтрокаОплаты.КлючСвязиТПЧеков = ТабличноеПолеЧеков[0].КлючСвязиТПЧеков;
			СтрокаОплаты.Сумма       = ИтогПоЧеку - СуммаОплатыЧисло;
		КонецЕсли;
	ИначеЕсли Объект.ОперацияСДенежнымиСредствами Тогда
		// Это предоплата (аванс)
		СтрокаОплаты = Объект.Оплата.Добавить();
		СтрокаОплаты.ВидОплаты   = ПредопределенноеЗначение("Справочник.ВидыОплатЧекаККМ.Наличные");
		СтрокаОплаты.Организация = ТабличноеПолеЧеков[0].Организация;
		СтрокаОплаты.КлючСвязиТПЧеков = ТабличноеПолеЧеков[0].КлючСвязиТПЧеков;
		СтрокаОплаты.Сумма       = СуммаОплатыЧисло;
		
		Если ИтогПоЧеку > СуммаОплатыЧисло  Тогда
			СтрокаОплаты = Объект.Оплата.Добавить();
			СтрокаОплаты.ВидОплаты   = ПредопределенноеЗначение("Справочник.ВидыОплатЧекаККМ.ОплатаВрассрочку");
			СтрокаОплаты.Организация = ТабличноеПолеЧеков[0].Организация;
			СтрокаОплаты.КлючСвязиТПЧеков = ТабличноеПолеЧеков[0].КлючСвязиТПЧеков;
			СтрокаОплаты.Сумма       = ИтогПоЧеку - СуммаОплатыЧисло;
		КонецЕсли;
	Иначе
		Для каждого СтрокаТабличноеПолеЧеков Из ТабличноеПолеЧеков Цикл
			СтрокаОплаты = Объект.Оплата.Добавить();
			СтрокаОплаты.ВидОплаты   = ПредопределенноеЗначение("Справочник.ВидыОплатЧекаККМ.Наличные");
			СтрокаОплаты.Организация = СтрокаТабличноеПолеЧеков.Организация;
			СтрокаОплаты.Сумма       = СтрокаТабличноеПолеЧеков.Сумма;
			СтрокаОплаты.КлючСвязиТПЧеков = СтрокаТабличноеПолеЧеков.КлючСвязиТПЧеков;
		КонецЦикла;
		
		Сдача = СуммаОплатыЧисло - Объект.Оплата.Итог("Сумма");
		Если Сдача > 0 Тогда
			СтрокаОплаты.Сумма = СтрокаОплаты.Сумма + Сдача;
		КонецЕсли;
	КонецЕсли;
	
	
	СтруктураОтвета.Вставить("АдресТаблицыОплата", АдресТаблицыОплата());
	
	Если ЗначениеЗаполнено(ДисконтнаяКарта) 
		И НЕ ОтказКлиентаОтСохраненияТелефонаEmail Тогда
		СтруктураОтвета.Вставить("СохранятьТелефонEmail");
	КонецЕсли;
	СтруктураОтвета.Вставить("Email"  , Email);
	СтруктураОтвета.Вставить("Телефон", Формат(Телефон, "ЧЦ=10; ЧДЦ=; ЧГ=0"));
	СтруктураОтвета.Вставить("Контрагент", Объект.Контрагент);
	
	Закрыть(СтруктураОтвета);
КонецПроцедуры

&НаКлиенте
Процедура КомандаSMS(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВводаТелефона", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок" , НСтр("ru = 'Введите номер телефона'"));
	ПараметрыФормы.Вставить("ДисконтнаяКарта", ДисконтнаяКарта);
	ПараметрыФормы.Вставить("ЧислоВвода", Телефон);
	ПараметрыФормы.Вставить("ОтказКлиентаОтСохраненияТелефона", ОтказКлиентаОтСохраненияТелефонаEmail);
	
	ПодключаемоеОборудованиеРТКлиент.ОткрытьФормуВводаТелефонаДляОтправкиЧерезОФД(ОбработчикОповещения, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаEmail(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВводаEmail", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Email", Email);
	ПараметрыФормы.Вставить("ДисконтнаяКарта", ДисконтнаяКарта);
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Введите адрес электронной почты (Email)'"));
	ПараметрыФормы.Вставить("ОтказКлиентаОтСохраненияEmail", ОтказКлиентаОтСохраненияТелефонаEmail);
	
	ПодключаемоеОборудованиеРТКлиент.ОткрытьФормуВводаEmailОтправкиЧерезОФД(ОбработчикОповещения, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменениеПечатиЧека(Команда)
	
	ПечатьЧека = НЕ ПечатьЧека;
	
	КомандаИзменениеПечатиЧекаКлиент(ПечатьЧека);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	Если ПервыйВвод Тогда
		Если ВведеннаяЦифраСтрокой = "0" Тогда
			Возврат;
		КонецЕсли;
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Запятая = Сред(ВводимоеЧисло, СтрДлина(ВводимоеЧисло) - КоличествоСимволовПослеЗапятой, 1);
	
	Если НЕ Запятая = "," Тогда
		ВводимоеЧисло = ВводимоеЧисло + ВведеннаяЦифраСтрокой;
	КонецЕсли;
	
	СуммаОплаты = ПривестиСтрокуКЧислу(ВводимоеЧисло, Истина);
	
	ОбновитьФорму();
КонецПроцедуры

// Функция выполняет приведение строки к числу.
// Параметры:
//  ЧислоСтрокой           - Строка - Строка приводимая к числу.
//  ВозвращатьНеопределено - Булево - Если Истина и строка содержит некорректное значение, то возвращать Неопределено.
//
// Возвращаемое значение:
//  Число
//
&НаКлиенте
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Ложь)
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	
	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда
		
		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаСервере
Функция АдресТаблицыОплата()
	
	АдресТаблицыОплата = ПоместитьВоВременноеХранилище(Объект.Оплата.Выгрузить(), Новый УникальныйИдентификатор);
	
	Возврат АдресТаблицыОплата;
	
КонецФункции // АдресТаблицыОплата()

&НаКлиенте
Процедура ОбновитьФорму()
	
	Если СуммаОплаты >= ИтогПоЧеку Тогда
		СуммаСдачи = СуммаОплаты - ИтогПоЧеку;
		Элементы.КомандаEnter.Доступность =  СуммаОплаты > 0 ИЛИ СуммаМожетБытьНулевой;
		Элементы.КомандаEnterПраваяКлавиатура.Доступность = Элементы.КомандаEnter.Доступность;
		ЦветСдачи   = Новый Цвет(45, 115, 44);
		ЦветВнесено = Новый Цвет();
		ТекущийЭлемент = Элементы.КомандаEnter;
	Иначе
		СуммаСдачи = 0;
		Элементы.КомандаEnter.Доступность = (Объект.ОперацияСДенежнымиСредствами ИЛИ ЭтоЗачетАванса) И (СуммаОплаты <> 0 ИЛИ СуммаМожетБытьНулевой);
		Элементы.КомандаEnterПраваяКлавиатура.Доступность = Элементы.КомандаEnter.Доступность;
		ЦветСдачи   = Новый Цвет();
		
		Если (Объект.ОперацияСДенежнымиСредствами 
			И НЕ ЭтоОплатаРассрочки)
			ИЛИ СуммаОплаты = 0 Тогда
			ЦветВнесено =  Новый Цвет();
		Иначе
			ЦветВнесено =  Новый Цвет(190, 32, 80);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.КомандаEmail.Доступность = ВозможностьЭлектронногоПлатежа;
	Элементы.КомандаSMS.Доступность   = ВозможностьЭлектронногоПлатежа;
	
	Элементы.СуммаСдачи.ЦветТекстаЗаголовка = ЦветСдачи;
	Элементы.СуммаСдачи.ЦветТекста          = ЦветСдачи;
	
	Элементы.ПолеВводимоеЧисло.ЦветТекстаЗаголовка = ЦветВнесено;
	Элементы.ПолеВводимоеЧисло.ЦветТекста          = ЦветВнесено;
	
	Если ЗначениеЗаполнено(ДанныеSMSИлиEmail)
		И ЗначениеЗаполнено(ДисконтнаяКарта) Тогда
		Если ОтказКлиентаОтСохраненияТелефонаEmail Тогда
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.НеСохранять16;
		Иначе
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.Сохранить16;
		КонецЕсли;
	Иначе
		Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.Пустая;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаИзменениеПечатиЧекаСервер(ВключитьКартинкуПечати)
	
	Если ВключитьКартинкуПечати Тогда
		Элементы.КомандаИзменениеПечатиЧека.Картинка = БиблиотекаКартинок.ПечатьЧека;
	Иначе
		Элементы.КомандаИзменениеПечатиЧека.Картинка = БиблиотекаКартинок.ОтказОтПечатиЧека;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменениеПечатиЧекаКлиент(ВключитьКартинкуПечати)
	
	Если ВключитьКартинкуПечати Тогда
		Элементы.КомандаИзменениеПечатиЧека.Картинка = БиблиотекаКартинок.ПечатьЧека;
	Иначе
		Элементы.КомандаИзменениеПечатиЧека.Картинка = БиблиотекаКартинок.ОтказОтПечатиЧека;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьСервер()
	
	ВозможностьОтправкиSMS = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтправкиEmail = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтказаОтПечатиЧека = Ложь;
	Если (ВозможностьОтправкиSMS 
			И ЗначениеЗаполнено(Телефон) 
			И НЕ ПередачаSMSЧерезПрограмму)
		ИЛИ 
		(ВозможностьОтправкиEmail 
			И ЗначениеЗаполнено(Email) 
			И НЕ ПередачаEmailЧерезПрограмму) Тогда
		
		ВозможностьОтказаОтПечатиЧека = Истина;
		
	КонецЕсли;
	
	Элементы.КомандаEmail.Видимость                 = ВозможностьОтправкиEmail;
	Элементы.КомандаSMS.Видимость                   = ВозможностьОтправкиSMS;
	Элементы.КомандаИзменениеПечатиЧека.Доступность = ВозможностьОтказаОтПечатиЧека;
	Элементы.ГруппаДанныеSMSИEmail.Видимость        = ВозможностьЭлектронногоПлатежа;
	
	Если ВозможностьОтказаОтПечатиЧека Тогда
		ПечатьЧека = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент()
	
	ВозможностьОтправкиSMS = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтправкиEmail = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтказаОтПечатиЧека = Ложь;
	Если (ВозможностьОтправкиSMS 
			И ЗначениеЗаполнено(Телефон) 
			И НЕ ПередачаSMSЧерезПрограмму)
		ИЛИ 
		(ВозможностьОтправкиEmail 
			И ЗначениеЗаполнено(Email) 
			И НЕ ПередачаEmailЧерезПрограмму) Тогда
		
		ВозможностьОтказаОтПечатиЧека = Истина;
		
	КонецЕсли;
	
	Элементы.КомандаEmail.Видимость                 = ВозможностьОтправкиEmail;
	Элементы.КомандаSMS.Видимость                   = ВозможностьОтправкиSMS;
	Элементы.КомандаИзменениеПечатиЧека.Доступность = ВозможностьОтказаОтПечатиЧека;
	Элементы.ГруппаДанныеSMSИEmail.Видимость        = ВозможностьЭлектронногоПлатежа;
	
	Если ВозможностьОтказаОтПечатиЧека Тогда
		ПечатьЧека = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
