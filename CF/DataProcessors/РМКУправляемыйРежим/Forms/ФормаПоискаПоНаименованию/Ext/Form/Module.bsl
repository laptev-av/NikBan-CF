#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Магазин") Тогда
		Магазин = Параметры.Магазин;
	КонецЕсли;
	УстановитьПараметрыВыбораВидаНоменклатуры();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ВидНоменклатурыПриИзмененииСервер();
					
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПараметрИменованияПриИзменении(Элемент)
		
	МассивПараметров = ПараметрыПравилаИменования.НайтиСтроки(Новый Структура("ИмяЭлемента",Элемент.Имя));
	Если МассивПараметров.Количество() > 0 Тогда
		СтрокаПараметр = МассивПараметров[0];
		Если СтрокаПараметр.ПараметрОчищенПользователем Тогда
			СтрокаПараметр.ПараметрОчищенПользователем = Ложь;
			Возврат;
		КонецЕсли;
		ЗначениеПараметра = ЭтаФорма[СтрокаПараметр.ПутьКДанным];
		СписокВыбора = Элемент.СписокВыбора.ВыгрузитьЗначения();
		Если СписокВыбора.Найти(ЗначениеПараметра) <> Неопределено Тогда
			СтрокаПараметр.ИспользоватьВПоиске = Истина;
		Иначе
			СтрокаПараметр.ИспользоватьВПоиске = Ложь;
		КонецЕсли;
		ПоискНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрИменованияОчистка(Элемент)

	МассивПараметров = ПараметрыПравилаИменования.НайтиСтроки(Новый Структура("ИмяЭлемента",Элемент.Имя));
	Если МассивПараметров.Количество() > 0 Тогда
		СтрокаПараметр = МассивПараметров[0];
		СтрокаПараметр.ИспользоватьВПоиске = Ложь;
		СтрокаПараметр.ПараметрОчищенПользователем = Истина;
		ПоискНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаНоменклатуры

&НаКлиенте
Процедура ТаблицаНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурыПриАктивизацииСтроки(Элемент)
	
	ОстаткиТоваров.Очистить();

	ТекДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда	
		ЗаполнитьОстаткиИЦены(ТекДанные.Номенклатура);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаХарактеристик

&НаКлиенте
Процедура ТаблицаХарактеристикВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаХарактеристикПриАктивизацииСтроки(Элемент)
	
	ОстаткиТоваров.Очистить();
	
	ТекДанные = Элементы.ТаблицаХарактеристик.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда	
		ЗаполнитьОстаткиИЦены(ТекущаяНоменклатура,ТекДанные.Характеристика);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерейтиКСпискуНоменклатуры(Команда)
	
	Элементы.ГруппаТаблицаНоменклатуры.Видимость	= Истина;
	Элементы.ГруппаТаблицаХарактеристик.Видимость	= Ложь;
	Элементы.НадписьИнформацияПоиска.Заголовок		= "Найдено позиций: " + ТаблицаНоменклатуры.Количество();
	ВыборХарактеристики = Ложь;
	Элементы.КнопкаВлево.Доступность = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура КомандаВниз(Команда)
	
	ПередвинутьПозицию(1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВверх(Команда)
	
	ПередвинутьПозицию(-1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьПараметрыВыбораВидаНоменклатуры()
	
	РаботаСПравиламиИменования.УстановитьПараметрыВыбораВидаНоменклатуры(Элементы.ВидНоменклатуры);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыИменования()
					
	УдалитьРеквизитыИЭлементыПравилаИменования();
	ЗаполнитьТаблицуПараметровПравилаИменования();	
		
КонецПроцедуры

&НаСервере
Процедура УдалитьРеквизитыИЭлементыПравилаИменования()
	
	МассивУдаляемыхРеквизитов = Новый Массив;	
	
	Для Каждого Строка из ПараметрыПравилаИменования Цикл		
		
		МассивУдаляемыхРеквизитов.Добавить(Строка.ПутьКДанным);
		
		УдаляемыйЭлемент = Элементы.Найти(Строка.ИмяЭлемента);
		Если УдаляемыйЭлемент <> Неопределено Тогда
			ЭтаФорма.Элементы.Удалить(УдаляемыйЭлемент);
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПараметровПравилаИменования()
		
	СтруктураПараметров = РаботаСПравиламиИменования.ПолучитьСтруктуруПараметровПравилаИменования(ВидНоменклатуры,,Истина);

	ПараметрыПравилаИменования.Очистить();
	
	МассивПараметровПравила = Новый Массив;
	ТипСтрока = Тип("Строка");
	Для Каждого Строка из СтруктураПараметров.ПараметрыПравилаИменования Цикл					
		ЗаполнитьЗначенияСвойств(ПараметрыПравилаИменования.Добавить(),Строка);	
		СписокТипов = Строка.ТипРеквизита.Типы();
		Если Не Строка.ТипРеквизита.СодержитТип(ТипСтрока) Тогда
			СписокТипов.Добавить(Тип("Строка"));	
		КонецЕсли;	
		МассивПараметровПравила.Добавить(Новый РеквизитФормы(Строка.ПутьКДанным,Новый ОписаниеТипов(СписокТипов),,Строка.ИмяПараметра));
	КонецЦикла;	
	ЭтаФорма.ИзменитьРеквизиты(МассивПараметровПравила);
	
	РаботаСПравиламиИменования.ДобавитьЭлементыПравилаИменования(ЭтаФорма,Элементы.ГруппаПараметрыИменования);
	
	СчКлавиша = 2;
	
	Для Каждого Строка из ПараметрыПравилаИменования Цикл		
		Элемент = Элементы[Строка.ИмяЭлемента];
		Элемент.АвтоОтметкаНезаполненного = Ложь;
		Элемент.КнопкаОчистки = Истина; 
		Элемент.КнопкаОткрытия = Ложь;
		Элемент.КнопкаСоздания = Ложь;
		Элемент.КнопкаВыбора = Ложь;
		Элемент.УстановитьДействие("Очистка","ПараметрИменованияОчистка");
		Элемент.Шрифт = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,14);
		Элемент.ШрифтЗаголовка = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,16,Истина);
		Элемент.Ширина = 30;	
		Элемент.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша["Num" + СчКлавиша],,Истина);
		Если СчКлавиша < 9 Тогда
			СчКлавиша = СчКлавиша + 1;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПоискНоменклатуры()
	
	ТаблицаНоменклатуры.Очистить();
			
	СтруктураПоискаНоменклатуры = РаботаСПравиламиИменования.ПолучитьСтруктуруПоискаНоменклатуры(ЭтаФорма,Истина);	
	СтруктураПоискаНоменклатуры.Вставить("ВидНоменклатуры",ВидНоменклатуры);
	Результат = РаботаСПравиламиИменования.ПоискНоменклатуры(СтруктураПоискаНоменклатуры);
	Выборка   = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаНоменклатуры.Добавить(),Выборка);
	КонецЦикла;
	
	Элементы.НадписьИнформацияПоиска.Заголовок = "Найдено позиций: " + Выборка.Количество();
	
	ЗаполнитьСпискиВыбораПараметров();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВыбораПараметров()
		
	Результат = РаботаСПравиламиИменования.ПолучитьСпискиВыбораПараметровПоиска(ЭтаФорма,ВидНоменклатуры);
	
	Сч = Результат.Количество() - ПараметрыПравилаИменования.Количество();
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		
		Выборка = Результат[Сч].Выбрать();			
		ЗначенияВыбора = Новый Массив;
		СписокВыбора = Элементы[СтрокаПараметр.ИмяЭлемента].СписокВыбора;
		СписокВыбора.Очистить();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ЗначениеПараметра) Тогда
				СписокВыбора.Добавить(Выборка.ЗначениеПараметра);
			Иначе
				СписокВыбора.Добавить(Выборка.ЗначениеПараметра,"<Пустое значение>");
			КонецЕсли;
		КонецЦикла;		
				
		СписокВыбора.СортироватьПоЗначению();
		Элементы[СтрокаПараметр.ИмяЭлемента].РежимВыбораИзСписка = Истина;
		
		Сч = Сч + 1;
		
		Если СтрокаПараметр.ИспользоватьВПоиске Тогда
			Элементы[СтрокаПараметр.ИмяЭлемента].ЦветФона = ЦветаСтиля.ФонУправляющегоПоля;
			Элементы[СтрокаПараметр.ИмяЭлемента].ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
		Иначе
			Элементы[СтрокаПараметр.ИмяЭлемента].ЦветФона = ЦветаСтиля.ЦветФонаФормы;
			Элементы[СтрокаПараметр.ИмяЭлемента].ЦветТекста = ЦветаСтиля.ЦветФонаПоля;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПередвинутьПозицию(Движение)
	
	Если ВыборХарактеристики Тогда
		ТаблицаДляОбработки = "ТаблицаХарактеристик";
	Иначе
		ТаблицаДляОбработки = "ТаблицаНоменклатуры";
	КонецЕсли;
	
	Если ЭтаФорма[ТаблицаДляОбработки].Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы[ТаблицаДляОбработки].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено  Тогда
		ИндексСтроки = 0;
	Иначе
		ИндексСтроки = ЭтаФорма[ТаблицаДляОбработки].Индекс(ТекущиеДанные);
	КонецЕсли;
	
	ИндексСтроки = ИндексСтроки + Движение;
	
	Если ИндексСтроки > (ЭтаФорма[ТаблицаДляОбработки].Количество() - 1) Тогда
		ИндексСтроки = 0;
	ИначеЕсли ИндексСтроки < 0 Тогда
		ИндексСтроки = ЭтаФорма[ТаблицаДляОбработки].Количество() - 1;
	КонецЕсли;
	
	ТекущиеДанные = ЭтаФорма[ТаблицаДляОбработки][ИндексСтроки];
	Элементы[ТаблицаДляОбработки].ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьВыборСтроки()
	
	Если ВыборХарактеристики Тогда
		ДанныеСтроки = Элементы.ТаблицаХарактеристик.ТекущиеДанные;
		Если ДанныеСтроки = Неопределено Тогда
			Закрыть();
		Иначе
			ПеренестиВыбранныеДанныеВДокумент(ТекущаяНоменклатура,ДанныеСтроки.Характеристика);
		КонецЕсли;
	Иначе
		ДанныеСтроки = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
		Если ДанныеСтроки = Неопределено Тогда 
			Закрыть();
		Иначе
			Если ХарактеристикиИспользуются Тогда
				ПеректиКТаблицеХарактеристик(ДанныеСтроки.Номенклатура);
			Иначе
				ПеренестиВыбранныеДанныеВДокумент(ДанныеСтроки.Номенклатура);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиИЦены(Номенклатура,Характеристика = Неопределено)
	
	Если Характеристика = Неопределено Тогда
		Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	РаботаСПравиламиИменования.ЗаполнитьОстаткиИЦены(ОстаткиТоваров,Номенклатура,Характеристика,Магазин);
	
КонецПроцедуры

&НаСервере
Процедура ВидНоменклатурыПриИзмененииСервер()
	
	ЗаполнитьПараметрыИменования();
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		Элементы.ВидНоменклатуры.ЦветФона = ЦветаСтиля.ФонУправляющегоПоля;
		ПоискНоменклатуры();
	Иначе
		Элементы.ВидНоменклатуры.ЦветФона = ЦветаСтиля.ЦветФонаФормы;
		Элементы.НадписьИнформацияПоиска.Заголовок = "";
		ТаблицаНоменклатуры.Очистить();	
	КонецЕсли;
		
	ХарактеристикиИспользуются = (ВидНоменклатуры.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры")
									ИЛИ ВидНоменклатуры.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры"));
									
	ВыборХарактеристики = Ложь;
	Элементы.КнопкаВлево.Видимость = ХарактеристикиИспользуются;
	Элементы.КнопкаВлево.Доступность = Ложь;
	
	Элементы.ГруппаТаблицаНоменклатуры.Видимость	= Истина;
	Элементы.ГруппаТаблицаХарактеристик.Видимость	= Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПеректиКТаблицеХарактеристик(ВыбраннаяНоменклатура)
	
	Если ТекущаяНоменклатура <> ВыбраннаяНоменклатура Тогда
		ТекущаяНоменклатура = ВыбраннаяНоменклатура;
		ЗаполнитьТаблицуХарактеристик();
	КонецЕсли;
	Элементы.ГруппаТаблицаНоменклатуры.Видимость	= Ложь;
	Элементы.ГруппаТаблицаХарактеристик.Видимость	= Истина;
	Элементы.НадписьИнформацияПоиска.Заголовок		= ТекущаяНоменклатура;
	ВыборХарактеристики = Истина;
	Элементы.КнопкаВлево.Доступность = Истина;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуХарактеристик()
	
	РаботаСПравиламиИменования.ЗаполнитьТаблицуХарактеристикНоменклатуры(ТаблицаХарактеристик,ТекущаяНоменклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВыбранныеДанныеВДокумент(Номенклатура, Характеристика = Неопределено)
	
	СтруктураПараметров = ПодключаемоеОборудованиеРТВызовСервера.СтруктураДанныхПоиска();
	
	ПараметрыСтроки = Новый Структура;
	ПараметрыСтроки.Вставить("Номенклатура",	Номенклатура);
	ПараметрыСтроки.Вставить("Характеристика",	Характеристика);
	ПараметрыСтроки.Вставить("Упаковка",		Неопределено);
	
	СтруктураПараметров.ЗначенияПоиска.Добавить(ПараметрыСтроки);
	
	Закрыть(СтруктураПараметров);

КонецПроцедуры

#КонецОбласти

