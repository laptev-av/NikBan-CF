
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораФизическогоЛица(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатОткрытияФормы) Тогда
		ВводимыйПродавец = РезультатОткрытияФормы;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУказаниеСерий(ЗначениеВозврата, ПараметрыФормы) Экспорт
	
	Если ЗначениеВозврата <> Неопределено Тогда
		
		ИзмененыСерии = Истина;
		ЧислоКоличества = КоличествоСерийВТаблице(ПараметрыФормы);
		ВводимоеКоличество = Формат(ЧислоКоличества, "ЧЦ=12; ЧДЦ=3");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьФормуВводаСерийныхНомеров(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	Если НЕ РезультатОткрытияФормы = Неопределено 
		И ТипЗнч(РезультатОткрытияФормы) = Тип("Массив") Тогда
		
		ПараметрыФормыУказанияСертификатов.Вставить("МассивСерийныхНомеров", РезультатОткрытияФормы);
		ИзмененыСертификаты = Истина;
		ЧислоКоличества = ПараметрыФормыУказанияСертификатов.МассивСерийныхНомеров.Количество();
		ВводимоеКоличество = Формат(ЧислоКоличества, "ЧЦ=12; ЧДЦ=3");
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
// Получаем количество введенных серий
Функция КоличествоСерийВТаблице(ПараметрыФормыУказанияСерий) Экспорт
	
	Возврат ОбработкаТабличнойЧастиТоварыСервер.КоличествоСерийВТаблице(ПараметрыФормыУказанияСерий);
	
КонецФункции

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораУпаковки(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатОткрытияФормы) Тогда
		ВводимаяУпаковка = РезультатОткрытияФормы;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоСимволовПослеЗапятой = 2;
	ПервыйВвод = Истина;
	
	Если Параметры.Свойство("Количество") Тогда
		ВводимоеКоличество = Формат(Параметры.Количество, "ЧЦ=12; ЧДЦ=3");
	КонецЕсли;
	
	Если Параметры.Свойство("Цена") Тогда
		ВводимаяЦена = Формат(Параметры.Цена, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	
	Если Параметры.Свойство("Продавец") Тогда
		ВводимыйПродавец = Параметры.Продавец;
	КонецЕсли;
	
	Если Параметры.Свойство("ПервыйЭлемент") Тогда
		ПервыйЭлемент = Параметры.ПервыйЭлемент;
	КонецЕсли;
	
	Если Параметры.Свойство("Упаковка") Тогда 
		ВводимаяУпаковка = Параметры.Упаковка;
	КонецЕсли;
	
	Если Параметры.Свойство("Номенклатура") Тогда 
		ТекущаяНоменклатура = Параметры.Номенклатура;
	Иначе 
		Элементы.ГруппаУпаковка.Видимость = Ложь;
	КонецЕсли;
	
	СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша["U"], Ложь, Ложь, Ложь);
	Если Параметры.Свойство("ПараметрыФормыУказанияСерий") Тогда
		ПараметрыФормыУказанияСерий = Параметры.ПараметрыФормыУказанияСерий;
		Элементы.СтраницыСерииСертификаты.ТекущаяСтраница = Элементы.СтраницаСерии;
		Элементы.КомандаСерии.СочетаниеКлавиш =  СочетаниеКлавиш;
	ИначеЕсли Параметры.Свойство("ПараметрыФормыУказанияСертификатов") Тогда
		ПараметрыФормыУказанияСертификатов = Параметры.ПараметрыФормыУказанияСертификатов;
		Элементы.СтраницыСерииСертификаты.ТекущаяСтраница = Элементы.СтраницаСертификаты;
		Элементы.КомандаСертификаты.СочетаниеКлавиш =  СочетаниеКлавиш;
	Иначе
		Элементы.СтраницыСерииСертификаты.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущийКлючСвязи") Тогда
		ТекущийКлючСвязи = Параметры.ТекущийКлючСвязи;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущиеДанныеИдентификатор") Тогда
		ТекущиеДанныеИдентификатор = Параметры.ТекущиеДанныеИдентификатор;
	КонецЕсли;
	
	Если Параметры.Свойство("МассивЗапрещенныхДействий") Тогда
		МассивЗапрещенныхДействий = Параметры.МассивЗапрещенныхДействий;
		Если ТипЗнч(МассивЗапрещенныхДействий) = Тип("Массив") Тогда
			Для каждого СтрокаЗапрещенногоДействия Из МассивЗапрещенныхДействий Цикл
				Если СтрокаЗапрещенногоДействия = ПервыйЭлемент Тогда
					Отказ = Истина;
				КонецЕсли;
				Элементы["Команда" + СтрокаЗапрещенногоДействия].Доступность= Ложь;
				
				Если СтрокаЗапрещенногоДействия = "Количество" Тогда
					Элементы["ВводимоеКоличество"].Доступность = Ложь;
				ИначеЕсли СтрокаЗапрещенногоДействия = "Упаковка" Тогда 
					Элементы["ВводимаяУпаковка"].Доступность = Ложь;
				ИначеЕсли СтрокаЗапрещенногоДействия = "Цена" Тогда
					Элементы["ВводимаяЦена"].Доступность = Ложь;
				ИначеЕсли СтрокаЗапрещенногоДействия = "Продавец" Тогда
					Элементы["ВводимыйПродавец"].Доступность = Ложь;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Пользователь = ОбщегоНазначенияРТКлиентСервер.ПользовательСУчетомИзмененныхПрав();
	
	РазрешитьСторнированиеТовара = УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя(
							ПланыВидовХарактеристик.ПраваПользователей.РазрешитьСторнированиеТовара, 
							Ложь, 
							Пользователь);
	
	Элементы.КомандаСторноПраваяКлавиатура.Доступность = РазрешитьСторнированиеТовара;
	Элементы.КомандаСторно.Доступность = РазрешитьСторнированиеТовара;
	
	Если НЕ ЗначениеЗаполнено(ПервыйЭлемент) Тогда
		Если Элементы["ВводимоеКоличество"].Доступность Тогда
			ПервыйЭлемент = "Количество";
		ИначеЕсли Элементы["ВводимаяУпаковка"].Доступность Тогда
			ПервыйЭлемент = "Упаковка";
		ИначеЕсли Элементы["ВводимаяЦена"].Доступность Тогда
			ПервыйЭлемент = "Цена";
		ИначеЕсли Элементы["КомандаСерии"].Доступность Тогда
			ПервыйЭлемент = "Серии";
		ИначеЕсли Элементы["КомандаСертификаты"].Доступность Тогда
			ПервыйЭлемент = "Сертификаты";
		ИначеЕсли Элементы["ВводимыйПродавец"].Доступность Тогда
			ПервыйЭлемент = "Продавец";
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Элементы["ВводимоеКоличество"].Доступность
		И НЕ Элементы["ВводимаяЦена"].Доступность Тогда
		УстановитьНедоступностьЦифровогоВвода();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПервыйЭлемент = "Цена" Тогда
		КомандаЦена(Неопределено);
	ИначеЕсли ПервыйЭлемент = "Продавец" Тогда
		КомандаПродавец(Неопределено);
	ИначеЕсли ПервыйЭлемент = "Количество" Тогда
		КомандаКоличество(Неопределено);
	ИначеЕсли ПервыйЭлемент = "Упаковка" Тогда 
		КомандаУпаковка(Неопределено);
	ИначеЕсли ПервыйЭлемент = "Серии" Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.КомандаСерии;
		КомандаСерии(Неопределено);
	ИначеЕсли ПервыйЭлемент = "Сертификаты" Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.КомандаСертификаты;
//		КомандаСертификаты(Неопределено);
	Иначе
		Отказ = Истина;
		СтруктураРезультат = Новый Структура;
		СтруктураРезультат.Вставить("Команда", "ОтказОтРедактирования");
		Закрыть(СтруктураРезультат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВводимаяУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ТекущаяНоменклатура) Тогда
		СтруктураСтроки = Новый Структура("Номенклатура", ТекущаяНоменклатура);
		ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьУпаковкуНоменклатуры(ДанныеВыбора, СтандартнаяОбработка, СтруктураСтроки);	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда0(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда0ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТочка(Команда)
	
	Если ПолеРедактирования = "Количество" Тогда
		ВводимоеЧисло = ВводимоеКоличество;
	ИначеЕсли ПолеРедактирования = "Цена" Тогда
		ВводимоеЧисло = ВводимаяЦена;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Если ВводимоеЧисло = "" Тогда
		ВводимоеЧисло = "0";
	КонецЕсли;
	
	ЧислоВхождений = СтрЧислоВхождений(ВводимоеЧисло, ",");
	
	Если Не ЧислоВхождений > 0 Тогда
		ВводимоеЧисло = ВводимоеЧисло + ",";
	КонецЕсли;
	
	Если ПолеРедактирования = "Количество" Тогда
		ВводимоеКоличество = ВводимоеЧисло;
	ИначеЕсли ПолеРедактирования = "Цена" Тогда
		ВводимаяЦена = ВводимоеЧисло;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	
	Если ПолеРедактирования = "Продавец" Тогда
		ВводимыйПродавец = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	ИначеЕсли ПолеРедактирования = "Количество" Тогда
		ВводимоеКоличество = "";
		ПервыйВвод = Ложь;
	ИначеЕсли ПолеРедактирования = "Цена" Тогда
		ВводимаяЦена = "";
		ПервыйВвод = Ложь;
	ИначеЕсли ПолеРедактирования = "Упаковка" Тогда 
		ВводимаяУпаковка = ПредопределенноеЗначение("Справочник.УпаковкиНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаEnter(Команда)
	
	КоличествоЧисло = ПривестиСтрокуКЧислу(ВводимоеКоличество, Истина);
	Если НЕ ЗначениеЗаполнено(КоличествоЧисло) Тогда
		ТекстОшибки = НСтр("ru = 'Заполните количество'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	КоличествоЦену = ПривестиСтрокуКЧислу(ВводимаяЦена, Истина);
	Если НЕ ЗначениеЗаполнено(КоличествоЦену) Тогда
		ТекстОшибки = НСтр("ru = 'Заполните цену'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Команда"      , "Редактирование");
	СтруктураРезультат.Вставить("Количество"   , КоличествоЧисло);
	СтруктураРезультат.Вставить("Цена"         , КоличествоЦену);
	СтруктураРезультат.Вставить("Продавец"     , ВводимыйПродавец);
	СтруктураРезультат.Вставить("ИзмененыСерии", ИзмененыСерии);
	СтруктураРезультат.Вставить("Упаковка"	   , ВводимаяУпаковка);
	
	СтруктураРезультат.Вставить("ТекущиеДанныеИдентификатор", ТекущиеДанныеИдентификатор);
	
	Если ИзмененыСерии Тогда
		СтруктураРезультат.Вставить("ПараметрыФормыУказанияСерий", ПараметрыФормыУказанияСерий);
	КонецЕсли;
	
	СтруктураРезультат.Вставить("ИзмененыСертификаты", ИзмененыСертификаты);
	Если ИзмененыСертификаты Тогда
		СтруктураРезультат.Вставить("ПараметрыФормыУказанияСертификатов", ПараметрыФормыУказанияСертификатов);
	КонецЕсли;
	
	Закрыть(СтруктураРезультат)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСторно(Команда)
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Команда", "Сторно");
	
	
	Закрыть(СтруктураРезультат)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаКоличество(Команда)
	ПолеРедактирования = "Количество";
	ПервыйВвод = Истина;
	Элементы.ВводимоеКоличество.ТолькоПросмотр = Ложь;
	Элементы.ВводимаяЦена.ТолькоПросмотр       = Истина;
	Элементы.ВводимыйПродавец.ТолькоПросмотр   = Истина;
	Элементы.ВводимаяУпаковка.ТолькоПросмотр   = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЦена(Команда)
	ПолеРедактирования = "Цена";
	ПервыйВвод = Истина;
	Элементы.ВводимоеКоличество.ТолькоПросмотр = Истина;
	Элементы.ВводимаяЦена.ТолькоПросмотр       = Ложь;
	Элементы.ВводимыйПродавец.ТолькоПросмотр   = Истина;
	Элементы.ВводимаяУпаковка.ТолькоПросмотр   = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПродавец(Команда)
	
	ПолеРедактирования = "Продавец";
	ПервыйВвод = Истина;
	
	Элементы.ВводимоеКоличество.ТолькоПросмотр = Истина;
	Элементы.ВводимаяЦена.ТолькоПросмотр       = Истина;
	Элементы.ВводимыйПродавец.ТолькоПросмотр   = Ложь;
	Элементы.ВводимаяУпаковка.ТолькоПросмотр   = Истина;
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Справочник.ФизическиеЛица.Форма.ФормаВыбораВРМК.Открытие");

	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВыбораФизическогоЛица", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораВРМК",,,,,, ОбработчикОповещения, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСерии(Команда)
	
	ОбработчикУказанияСерий = Новый ОписаниеОповещения("ОбработатьУказаниеСерий", ЭтотОбъект, ПараметрыФормыУказанияСерий);
	
	РежимБлокировки = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму(ПараметрыФормыУказанияСерий.ИмяФормы + "РМК", ПараметрыФормыУказанияСерий, ЭтотОбъект,,,, ОбработчикУказанияСерий, РежимБлокировки);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСертификаты(Команда)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Обработка.РМКУправляемыйРежим.Форма.ФормаВводаСерийныхНомеров.Открытие");

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ТекущиеДанныеИдентификатор);
	ДополнительныеПараметры.Вставить("ТекущийКлючСвязи", ТекущийКлючСвязи);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВводаСерийныхНомеров", ЭтотОбъект, ДополнительныеПараметры);
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ОткрытьФорму("Обработка.РМКУправляемыйРежим.Форма.ФормаВводаСерийныхНомеров", ПараметрыФормыУказанияСертификатов, УникальныйИдентификатор,,,, ОбработчикОповещения, Режим); 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУпаковка(Команда)
	ПолеРедактирования = "Упаковка";
	ПервыйВвод = Истина;
	Элементы.ВводимоеКоличество.ТолькоПросмотр = Истина;
	Элементы.ВводимаяЦена.ТолькоПросмотр       = Истина;
	Элементы.ВводимыйПродавец.ТолькоПросмотр   = Истина;
	Элементы.ВводимаяУпаковка.ТолькоПросмотр   = Ложь;
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Справочник.УпаковкиНоменклатуры.Форма.ФормаВыбораВРМК.Открытие");
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВыбораУпаковки", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	СтруктураПараметров = Новый Структура("Владелец", ТекущаяНоменклатура);
	ОткрытьФорму("Справочник.УпаковкиНоменклатуры.Форма.ФормаВыбораВРМК", СтруктураПараметров,,,,, ОбработчикОповещения, Режим);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	Если ПолеРедактирования = "Количество" Тогда
		ВводимоеЧисло = ВводимоеКоличество;
		КоличествоСимволовПослеЗапятой = 3;
	ИначеЕсли ПолеРедактирования = "Цена" Тогда
		ВводимоеЧисло = ВводимаяЦена;
		КоличествоСимволовПослеЗапятой = 2;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Запятая = Сред(ВводимоеЧисло, СтрДлина(ВводимоеЧисло) - КоличествоСимволовПослеЗапятой, 1);
	
	Если НЕ Запятая = "," Тогда
		ВводимоеЧисло = ВводимоеЧисло + ВведеннаяЦифраСтрокой;
	КонецЕсли;
	
	Если ПолеРедактирования = "Количество" Тогда
		ВводимоеКоличество = ВводимоеЧисло;
	ИначеЕсли ПолеРедактирования = "Цена" Тогда
		ВводимаяЦена = ВводимоеЧисло;
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.КомандаEnter;
	
КонецПроцедуры

// Функция выполняет приведение строки к числу.
// Параметры:
//  ЧислоСтрокой           - Строка - Строка приводимая к числу.
//  ВозвращатьНеопределено - Булево - Если Истина и строка содержит некорректное значение, то возвращать Неопределено.
//
// Возвращаемое значение:
//  Число
//
&НаКлиенте
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Ложь)
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	
	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда
		
		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаСервере
Процедура УстановитьНедоступностьЦифровогоВвода()
	
	Элементы.Команда0.Доступность = Ложь;
	Элементы.Команда1.Доступность = Ложь;
	Элементы.Команда2.Доступность = Ложь;
	Элементы.Команда3.Доступность = Ложь;
	Элементы.Команда4.Доступность = Ложь;
	Элементы.Команда5.Доступность = Ложь;
	Элементы.Команда6.Доступность = Ложь;
	Элементы.Команда7.Доступность = Ложь;
	Элементы.Команда8.Доступность = Ложь;
	Элементы.Команда9.Доступность = Ложь;
	
	Элементы.Команда0ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда1ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда2ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда3ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда4ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда5ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда6ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда7ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда8ПраваяКлавиатура.Доступность = Ложь;
	Элементы.Команда9ПраваяКлавиатура.Доступность = Ложь;
	
	Элементы.КомандаТочка.Доступность = Ложь;
	Элементы.КомандаСтереть.Доступность = Ложь;
	
	Элементы.КомандаТочкаПраваяКлавиатура.Доступность = Ложь;
	Элементы.КомандаСтеретьПраваяКлавиатура.Доступность = Ложь;
	
КонецПроцедуры

#КонецОбласти