
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеОткрытьФормуВопроса(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		Если ВРЕГ(РезультатОткрытияФормы) = "ДА" Тогда
			ЗакрытьСПередачейРезультата();
		КонецЕсли;
	КонецЕсли;
	ПервыйВвод = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСимволовПослеЗапятой = 2;
	ПервыйВвод = Истина;
	
	Если Параметры.Свойство("ФорматироватьСтроку") Тогда
		ФорматироватьСтроку = Параметры.ФорматироватьСтроку;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("МаксимальноеЗначение") Тогда
		МаксимальноеЗначение = Параметры.МаксимальноеЗначение;
	КонецЕсли;
	
	Если Параметры.Свойство("ЧислоВвода") Тогда
		ЧислоВвода    = Параметры.ЧислоВвода;
		ВводимоеЧисло = Формат(ЧислоВвода, "ЧЦ=15 ЧДЦ=2");
	КонецЕсли;
	
	Если Параметры.Свойство("Отрицательное") Тогда
		Отрицательное = Параметры.Отрицательное;
	КонецЕсли;
	
	Если Параметры.Свойство("АвторизацияЭТ") Тогда
		АвторизацияЭТ = Параметры.АвторизацияЭТ;
	КонецЕсли;
	
	Если Параметры.Свойство("ВозвращатьЧислоСтрокой") Тогда
		ВозвращатьЧислоСтрокой = Параметры.ВозвращатьЧислоСтрокой;
	КонецЕсли;
	
	Если Параметры.Свойство("ПроверяемоеМинимальноеЗначение") Тогда
		ПроверяемоеМинимальноеЗначение = Параметры.ПроверяемоеМинимальноеЗначение;
	КонецЕсли;
	
	Если Параметры.Свойство("ПроверочныйВопрос") Тогда
		ПроверочныйВопрос = Параметры.ПроверочныйВопрос;
	КонецЕсли;
	
	Если Не АвторизацияЭТ Тогда
		
		Элементы.ДекорацияНомерКарты.Видимость = Ложь;
		
	КонецЕсли;
	
	ВидимостьКомандыПовтора = Ложь;
	Если Параметры.Свойство("КодПроверкиСМС") Тогда
		КодПроверкиСМС = Параметры.КодПроверкиСМС;
		ВидимостьКомандыПовтора = Истина;
		// эти параметры должны идти только вместе
		НомерТелефонаСМС = Параметры.НомерТелефонаСМС;
	КонецЕсли;
	Элементы.ОтправитьКодПодтвержденияПовторноПраваяКлавиатура.Видимость = ВидимостьКомандыПовтора;
	Элементы.ОтправитьКодПодтвержденияПовторно.Видимость = ВидимостьКомандыПовтора;
	Элементы.ПолеКартинкаПустая.Видимость = НЕ ВидимостьКомандыПовтора;
	Элементы.ПолеКартинкаПустаяПраваяКлавиатура.Видимость = НЕ ВидимостьКомандыПовтора;		
	
	Элементы.ДекорацияНомерКарты.Заголовок = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:
				|""%ОписаниеОшибки%"".'" );
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если АвторизацияЭТ Тогда
		// Проверка и подключение считывателей МК.
		ПоддерживаемыеТипыПО = Новый Массив();
		ПоддерживаемыеТипыПО.Добавить("СчитывательМагнитныхКарт");
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);  
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(,ЭтотОбъект, ПоддерживаемыеТипыПО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если АвторизацияЭТ Тогда
		// Отключение считывателей МК
		ПоддерживаемыеТипыПО = Новый Массив();
		ПоддерживаемыеТипыПО.Добавить("СчитывательМагнитныхКарт");

		МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(,ЭтотОбъект, ПоддерживаемыеТипыПО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
	   И ВводДоступен() Тогда
		Если ИмяСобытия = "TracksData" Тогда
			ТекКод = Параметр[0];
			ПодключаемоеОборудованиеРТКлиент.ВыбратьМагнитныйКод(ТекКод);
			Если ПустаяСтрока(ТекКод) Тогда
				Возврат;
			КонецЕсли;
			ВводимоеЧисло = ТекКод;
			ПервыйВвод = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		ОписаниеСобытия = Новый Структура();
		ОписаниеОшибки  = "";
		ОписаниеСобытия.Вставить("Источник", Источник);
		ОписаниеСобытия.Вставить("Событие",  Событие);
		ОписаниеСобытия.Вставить("Данные",   Данные);
		
		Результат = МенеджерОборудованияКлиент.ПолучитьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
		Если Результат = Неопределено Тогда 
			ЗаголовокСообщения = НСтр("ru = 'При обработке внешнего события от устройства произошла ошибка:'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокСообщения, ОписаниеОшибки);
		Иначе
			ОбработкаОповещения(Результат.ИмяСобытия, Результат.Параметр, Результат.Источник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда0(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда0ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТочка(Команда)
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Если ВводимоеЧисло = "" Тогда
		ВводимоеЧисло = "0";
	КонецЕсли;
	
	ЧислоВхождений = СтрЧислоВхождений(ВводимоеЧисло, ",");
	
	Если Не ЧислоВхождений > 0 Тогда
		ВводимоеЧисло = ВводимоеЧисло + ",";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	ВводимоеЧисло = "";
	ПервыйВвод = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаEnter(Команда)
	
	ЗаданПроверочныйВопрос = Ложь;
	Если ЗначениеЗаполнено(ПроверяемоеМинимальноеЗначение)
		И ЗначениеЗаполнено(ПроверочныйВопрос) Тогда
		ВведенноеЧисло = ПривестиСтрокуКЧислу(ВводимоеЧисло, Ложь);
		Если ВведенноеЧисло < ПроверяемоеМинимальноеЗначение Тогда
			
			ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВопроса", ЭтотОбъект);
			ОбщегоНазначенияРТКлиент.ВывестиВопросДляРМКУправляемой(ЭтотОбъект.Заголовок,ПроверочныйВопрос,,ОбработчикОповещения);
			
			ЗаданПроверочныйВопрос = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗаданПроверочныйВопрос Тогда
	
		ЗакрытьСПередачейРезультата();
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьКодПроверкиПовторно(Команда)
	
	РезультатОтправки = ОтправитьСообщениеСКодом();
	Если НЕ РезультатОтправки.Результат Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось отправить сообщение с кодом проверки по причине:'") + Символы.ПС + РезультатОтправки.ОписаниеОшибки;
		ЗаголовокИнформации = НСтр("ru = 'Выбор карты не возможен'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Запятая = Сред(ВводимоеЧисло, СтрДлина(ВводимоеЧисло) - КоличествоСимволовПослеЗапятой, 1);
	
	Если НЕ Запятая = "," Тогда
		ВводимоеЧисло = ВводимоеЧисло + ВведеннаяЦифраСтрокой;
	КонецЕсли;
	
	ЧислоВвода = ПривестиСтрокуКЧислу(ВводимоеЧисло, Истина);
	
	ТекущийЭлемент = Элементы.КомандаEnter;
	
	Если ЗначениеЗаполнено(МаксимальноеЗначение) И ЧислоВвода > МаксимальноеЗначение Тогда
		ЧислоВвода = МаксимальноеЗначение;
		ВводимоеЧисло = Формат(ЧислоВвода, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	
	Если ФорматироватьСтроку 
		И СтрДлина(ВводимоеЧисло)>20 Тогда
		ВводимоеЧисло = Формат(ЧислоВвода, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	
КонецПроцедуры

// Функция выполняет приведение строки к числу.
// Параметры:
//  ЧислоСтрокой           - Строка - Строка приводимая к числу.
//  ВозвращатьНеопределено - Булево - Если Истина и строка содержит некорректное значение, то возвращать Неопределено.
//
// Возвращаемое значение:
//  Число
//
&НаКлиенте
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Ложь)
	
	Если ЗначениеЗаполнено(ЧислоСтрокой) Тогда
		ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
		ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	Иначе
		ЗначениеЧисла = 0;
	КонецЕсли;
		
	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда
		
		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаКлиенте
Процедура ЗакрытьСПередачейРезультата()
	
	СтруктураОтвета = Новый Структура;
	Если ВозвращатьЧислоСтрокой Тогда
		СтруктураОтвета.Вставить("ВведенноеЧисло", ВводимоеЧисло);
	Иначе
		СтруктураОтвета.Вставить("ВведенноеЧисло", ПривестиСтрокуКЧислу(ВводимоеЧисло, Истина));
	КонецЕсли;
	
	СтруктураОтвета.Вставить("ДанныеКарты", ДанныеКарты);
	
	Закрыть(СтруктураОтвета)
	
КонецПроцедуры

&НаСервере
Функция ОтправитьСообщениеСКодом()
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатОтправки = Новый Структура;
	РезультатОтправки.Вставить("Результат", Ложь);
	РезультатОтправки.Вставить("ОписаниеОшибки", "");
	Если ЗначениеЗаполнено(НомерТелефонаСМС) Тогда
		ТекстСообщения = НСтр("ru = 'Код подтверждения для выбора дисконтной карты %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КодПроверкиСМС);
		МассивНомеров = Новый Массив;
		МассивНомеров.Добавить(НомерТелефонаСМС);
		РезультатОтправкиБСП = ОтправкаSMS.ОтправитьSMS(МассивНомеров, ТекстСообщения, Неопределено, Ложь);
		Если РезультатОтправкиБСП.ОтправленныеСообщения.Количество() = 0 Тогда
			Если РезультатОтправкиБСП.Свойство("ОписаниеОшибки") Тогда
				РезультатОтправки.ОписаниеОшибки = РезультатОтправкиБСП.ОписаниеОшибки;
			КонецЕсли;
		Иначе
			РезультатОтправки.Результат = Истина;
		КонецЕсли;
	Иначе
		РезультатОтправки.ОписаниеОшибки = НСтр("ru = 'Для владельца карты не задан номер телефона. Выслать код подтверждения не удалось'");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатОтправки;
	
КонецФункции

#КонецОбласти