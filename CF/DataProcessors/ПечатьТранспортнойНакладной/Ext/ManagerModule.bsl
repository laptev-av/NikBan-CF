#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Интерфейс для запуска логики обработки.
//
// Параметры:
// МассивОбъектов - Массив - массив ссылок на объекты печати.
// КоллекцияПечатныхФорм - ТаблицаЗначений - таблица содержащая информацию по печатным формам.
// ОбъектыПечати - СписокЗначений - ссылки на объекты печати.
// ПараметрыВывода - Структура - дополнительные параметры вывода (печать покомплектно и др.).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТранспортнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ТранспортнаяНакладная", "Транспортная наклдная",
						ПечатнаяФормаТранспортнойНакладной(МассивОбъектов, ОбъектыПечати)
		);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МассивПоТипамОбъектов(МассивОбъектов)
	
	СтруктураТипов = Новый Структура;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если ТипЗнч(Объект) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
			Если НЕ СтруктураТипов.Свойство("РеализацияТоваров") Тогда
				МассивРеализаций = Новый Массив;
				СтруктураТипов.Вставить("РеализацияТоваров", МассивРеализаций);
			КонецЕсли;
			СтруктураТипов.РеализацияТоваров.Добавить(Объект);
		ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			Если НЕ СтруктураТипов.Свойство("ПеремещениеТоваров") Тогда
				МассивПеремещений = Новый Массив;
				СтруктураТипов.Вставить("ПеремещениеТоваров", МассивПеремещений);
			КонецЕсли;
			СтруктураТипов.ПеремещениеТоваров.Добавить(Объект);
		КонецЕсли;
		
	КонецЦикла;
	Возврат СтруктураТипов;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументТранспортнойНакладной(ТабличныйДокумент, ТаблицаДанныхДляПечати, ОбъектыПечати)
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	МакетТН1208 = ПолучитьМакет("ПФ_MXL_ТранспортнаяНакладная1208");
	МакетТН = ПолучитьМакет("ПФ_MXL_ТранспортнаяНакладная");
	
	Для Каждого ДанныеПечати Из ТаблицаДанныхДляПечати Цикл
		ПараметрыЗаполнения = Новый Структура();
		Если ДанныеПечати.Дата < '20120313' Тогда
			Макет = МакетТН;
		Иначе
			Макет = МакетТН1208;
			
			// Структура переменной ПараметрыЗаполнения.
			// Ключ - произвольное значение.
			// Значение - структурированная строка, разделитель новой строки символ "|", состоит из трех строк.
			//  Строка 1 - наименование переменной которая будет вычислена,
			//             значение которой будет присвоено параметру табличного документа (вычисленное значение "Строки 3").
			//  Строка 2 - По строковому значению строки 2 вычисляются параметры табличного документа.
			//  Строка 3 - Наименование параметра в табличном документе, которому присваивается вычисленное значение "Строки 1".
			
			ПараметрыЗаполнения.Вставить("Выражение1", "ПредставлениеГрузоотправителя|ОбластьМакетаОборотная.Параметры|Пункт15_6");
		КонецЕсли;
		ОбластьМакета = Макет.ПолучитьОбласть("ГоризонтальнаяЛицеваяСторона");
		ОбластьМакетаОборотная = Макет.ПолучитьОбласть("ГоризонтальнаяОборотнаяСторона");
		
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
		
		ПредставлениеГрузоотправителя = "";
		Грузоотправитель              = "";
		
		Если ДанныеПечати.Грузополучатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
			Или ДанныеПечати.Грузополучатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
			ОбластьМакета.Параметры.Пункт2_1 = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
			"ПолноеНаименование,ИНН,ФактическийАдрес");
		Иначе
			ОбластьМакета.Параметры.Пункт2_2 = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
			"ПолноеНаименование,ФактическийАдрес,Телефоны");
		КонецЕсли;
		
		Если ДанныеПечати.Грузоотправитель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
			Или ДанныеПечати.Грузоотправитель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
			ПредставлениеГрузоотправителя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ФактическийАдрес");
			ОбластьМакета.Параметры.Пункт1_1 = ПредставлениеГрузоотправителя;
			Грузоотправитель = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование");
		Иначе
			ПредставлениеГрузоотправителя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ФактическийАдрес,Телефоны");
			ОбластьМакета.Параметры.Пункт1_2 = ПредставлениеГрузоотправителя;
			Грузоотправитель = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование");
		КонецЕсли;
		Для каждого ВыражениеВыполнения Из ПараметрыЗаполнения Цикл
			СтрокаПараметров = СтрЗаменить(ВыражениеВыполнения.Значение, "|", Символы.ПС);
			ПараметрыТабличногоДокумента = Вычислить(СтрПолучитьСтроку(СтрокаПараметров, 2));
			ПараметрыТабличногоДокумента[СтрПолучитьСтроку(СтрокаПараметров, 3)] = Вычислить(СтрПолучитьСтроку(СтрокаПараметров, 1));
		КонецЦикла;
		ОбластьМакета.Параметры.Пункт6_1 = ДанныеПечати.ПунктПогрузки;
		ОбластьМакета.Параметры.Пункт7_1 = ДанныеПечати.ПунктРазгрузки;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабличныйДокумент.Вывести(ОбластьМакетаОборотная);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

Функция ПечатнаяФормаТранспортнойНакладной(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТРАНСПОРТНАЯ_НАКЛАДНАЯ";
	
	НомерТипаДокумента = 0;
	СтруктураТипов = МассивПоТипамОбъектов(МассивОбъектов);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		ДанныеДляПечати = Документы[СтруктураОбъектов.Ключ].ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументТранспортнойНакладной(
		ТабличныйДокумент,
		ДанныеДляПечати,
		ОбъектыПечати
		);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
