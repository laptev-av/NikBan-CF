
&НаКлиенте
Перем КэшированныеЗначения; // Используется механизмом обработки изменения реквизитов ТЧ.

&НаКлиенте
Перем ТекущееКоличество; // Кеш количества в текущей строке для расчета количества серий.

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор();
		Иначе
			ИдентификаторТекущейСтроки = Неопределено;
		КонецЕсли;
		
		МассивШтрихкодов = Новый Массив;
		СтруктураДанныхШтрихкода = ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруДанныхШтрихкода(Штрихкод, 1);
		МассивШтрихкодов.Добавить(СтруктураДанныхШтрихкода);
		
		ЗакрытьФорму = ОбработатьШтрихкодыСервер(
			МассивШтрихкодов,
			КэшированныеЗначения,
			ИдентификаторТекущейСтроки);
		
		
		Если ЗакрытьФорму Тогда
			ЗакрытьФормуПриСканировании();
		КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзТСДЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ЭтаФорма.Доступность = Истина;
	
	Если РезультатВыполнения.Результат Тогда
		
		ЗакрытьФорму = ОбработатьШтрихкодыСервер(РезультатВыполнения.ТаблицаТоваров, КэшированныеЗначения);
		
		Если ЗакрытьФорму Тогда
			СтруктураВозврата = Новый Структура;
			СтруктураВозврата.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище);
			СтруктураВозврата.Вставить("АдресИзмененныеРеквизиты", АдресИзмененныеРеквизиты);
			Закрыть(СтруктураВозврата);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеНастроитьПорядокСканирования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗакрыватьФормуПослеСканированияСерии = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗавершитьВводСерий(Неопределено); // Сохранение результатов модификации.
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		// Отмена
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеГоденДо(ГоденДо, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ГоденДо)
		И ТипЗнч(ГоденДо) = Тип("Дата") Тогда
		
		ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
		Элемент = ДополнительныеПараметры.Элемент;
		
		ТекущиеДанные.ГоденДо = ГоденДо;
		ПодобратьСерию(Элемент,"ГоденДо","Номер");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВыбратьСерию(ВыбранныйЭлемент, ТекущиеДанные) Экспорт
	
	ВыбратьСерию(ВыбранныйЭлемент, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработатьТаймаутОжиданияСчитыванияМетки()
	
	Если ОткрытаСессияСчитывателяRFID Тогда
		ПодключаемоеОборудованиеРТКлиент.ОтработатьТаймаутОжиданияСчитыванияМетки(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьУпаковки = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	Если Не ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище) Тогда
		ТекстСообщения = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	ПодключаемоеОборудованиеРТВызовСервера.ПолучитьДоступноеПодключаемоеОборудование(ИспользоватьПодключаемоеОборудование, ЕстьТСД, ЕстьВесы);
	
	ПараметрыУказанияСерий    = Параметры.ПараметрыУказанияСерий;
	
	Если ПараметрыУказанияСерий.Свойство("ИспользоватьТолькоБазовыеЕдиницы") Тогда
		ИспользоватьТолькоБазовыеЕдиницы = ПараметрыУказанияСерий.ИспользоватьТолькоБазовыеЕдиницы;
	Иначе
		ИспользоватьТолькоБазовыеЕдиницы = Ложь;
	КонецЕсли;
	
	Упаковка                  = Параметры.Упаковка;
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	Количество                = Параметры.Количество;
	НомераСтрокПредставление  = Параметры.НомераСтрокДокумента;
	Номенклатура = Параметры.Номенклатура;
	Характеристика = Параметры.Характеристика;
	GTIN           = Параметры.GTIN;
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, 
	                        Новый Структура("ВидНоменклатуры, ЕдиницаИзмеренияПредставление, ЕдиницаИзмерения","ВидНоменклатуры","ЕдиницаИзмерения.Наименование"));
	ЕдиницаИзмерения = РеквизитыНоменклатуры.ЕдиницаИзмерения;
	
	ВидНоменклатуры = РеквизитыНоменклатуры.ВидНоменклатуры;
	
	Если Параметры.Свойство("НайденныеСтрокиТоваров") Тогда
		
		МассивСтрок = ПолучитьИзВременногоХранилища(Параметры.НайденныеСтрокиТоваров);
		ДобавитьСтрокиКоличестваНоменклатуры(МассивСтрок, ПараметрыУказанияСерий);
		КоличествоСтрокНоменклатуры = МассивСтрок.Количество();
		
		Если Параметры.Свойство("НомерСтроки") И Параметры.Свойство("ТекущееПоле") Тогда
			НайденныеСтроки = СоответствиеНомераСтрокиИндексуЭлемента.НайтиСтроки(Новый Структура("НомерСтроки", Параметры.НомерСтроки));
			
			Если НайденныеСтроки.Количество() = 1 Тогда
				
				ИндексЭлемента = НайденныеСтроки[0].ИндексЭлемента;
				ТекущееПоле = Параметры.ТекущееПоле + ИндексЭлемента;
				ЭтаФорма.ТекущийЭлемент = Элементы[ТекущееПоле];
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыУчетнойПолитикиСерий = Новый ФиксированнаяСтруктура(ЗначениеНастроекПовтИсп.
		ПараметрыПолитикиУчетаСерийПоВидуНоменклатуры(РеквизитыНоменклатуры.ВидНоменклатуры,Параметры.Магазин));
		
	НастройкиИспользованияСерий = ПараметрыУчетнойПолитикиСерий;
	
	Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru = 'Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо ввести, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Введено серий, %ЕдиницаИзмерения%'");
	ЗаголовокКолонкиКоличество    = НСтр("ru = 'Количество, %ЕдиницаИзмерения%'"); 
	Заголовок                     = НСтр("ru = 'Ввод количества и серий товаров'");
	
	Если ЗначениеЗаполнено(Упаковка) Тогда
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Параметры.Упаковка);
	Иначе
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	КонецЕсли;
	
	Элементы.Характеристика.Видимость = ЗначениеЗаполнено(Характеристика);
	
	Элементы.ГруппаКоличествоЕдИзм.Видимость = НЕ ИспользоватьУпаковки;
	Элементы.ГруппаКоличествоУпаковка.Видимость = ИспользоватьУпаковки;
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	
	Элементы.Серии.ИзменятьСоставСтрок              = Не ТолькоПросмотр;
	Элементы.СерииКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ГруппаКоманднаяПанельТаблицы.Видимость = Не ТолькоПросмотр;
	
	Элементы.Количество.Видимость              = Не ТолькоПросмотр;
	
	Элементы.СерииНомер.Видимость                = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	Элементы.ПоискПоШтрихкоду.Видимость          = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = ЕстьТСД И ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	
	Элементы.СерииГоденДо.Видимость            = ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии;
	
	Элементы.СерииКоличествоУпаковок.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии;
	
	Элементы.ГруппаПодвал.Видимость = Не Параметры.СерииВТЧТовары;
	
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.СерииГоденДо.Формат               = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.СерииГоденДо.ФорматРедактирования = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		
		Если ПараметрыУчетнойПолитикиСерий.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата)'");
		Иначе
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата, час)'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.СерииНомерКИЗГИСМ.Видимость     = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерКИЗГИСМСерии; 
	Элементы.СерииСтатусРаботыRFID.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьRFIDМеткиСерии;
	
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
		Элементы.СерииНомер.Заголовок = НСтр("ru = 'Номер серии'");
	КонецЕсли;
	
	ТаблицаСерий = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).НомерКИЗГИСМ КАК НомерКИЗГИСМ,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDTID КАК RFIDTID,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDUser КАК RFIDUser,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDEPC КАК RFIDEPC,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).EPCGTIN КАК EPCGTIN,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDTID <> """" КАК ЗаполненRFIDTID,
	|	ЛОЖЬ КАК НужноЗаписатьМетку,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).RFIDTID <> """"
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусРаботыRFID,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	Запрос.УстановитьПараметр("ТаблицаСерий",ТаблицаСерий);
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Если Параметры.Свойство("ОрдерНаОтражениеИзлишковНедостач") Тогда
		Заголовок = НСтр("ru = 'Ввод серий товаров'");
		Элементы.ГруппаКоличество.ТолькоПросмотр = Истина;
		НеКонтролироватьКоличество = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("СборкаТоваровШапка") Тогда
		Заголовок = НСтр("ru = 'Ввод серий товаров'");
		Элементы.ГруппаКоличество.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("РаспределениеТоваровПоСкладам") Тогда
		Элементы.ГруппаКоличествоУпаковка.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЭтоМаркировкаТоваровГИСМ  = ПараметрыУказанияСерий.СкладскиеОперации.Найти(
												Перечисления.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) <> Неопределено;
	ПараметрыУказанияСерий.Свойство("ОперацияДокумента", ОперацияДокумента);
	ПараметрыУказанияСерий.Свойство("ОперацияДокумента", ОперацииМаркировкиГИСМ);
	
	ЭтоПоступлениеИзТаможенногоСоюза = ОперацияДокумента = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС;
	ЭтоМаркировкаОстатковГИСМ        = ОперацииМаркировкиГИСМ = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаОстатковНа12082016;
	
	Если ЭтоМаркировкаТоваровГИСМ Тогда
		Если ОперацияДокумента <> Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции
			 И ОперацияДокумента <> Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированныхПриИмпортеТоваров Тогда
			
			GTINИзКиЗ = Справочники.Номенклатура.GTINКиЗ(Параметры.НоменклатураКиЗ, Параметры.ХарактеристикаКиЗ);
			
			ЭтоМаркировкаПерсонифицированнымиКиЗ = ЗначениеЗаполнено(GTINИзКиЗ);
			
			Если ЭтоМаркировкаПерсонифицированнымиКиЗ
				И GTINИзКиЗ <> GTIN Тогда
				
				ТекстСообщения = НСтр("ru = 'Выбранный КиЗ предназначен для маркировки товаров с GTIN %GTINИзКиЗ%, его нельзя использовать для маркировки товара с GTIN %GTIN%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%GTINИзКиЗ%", GTINИзКиЗ);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%GTIN%", GTIN);
				
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		Иначе
			ЭтоМаркировкаПерсонифицированнымиКиЗ = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	#Область RFID
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьRFIDМеткиСерии Тогда
		Считыватели = МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("СчитывательRFID");
		Если Считыватели.Количество() = 0 Тогда
			ПодключатьСчитывательRFID = Ложь;
		ИначеЕсли Считыватели.Количество() = 1 Тогда
			ПодключатьСчитывательRFID = Истина;
			СчитывательRFID = Считыватели[0].Ссылка;
		Иначе
			ТекстСообщения = НСтр("ru = 'К рабочему месту подключено несколько считывателей RFID. Работа одновременно с несколькими считывателями не поддерживается. Оставьте только один считываетель.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			ПодключатьСчитывательRFID = Ложь;
		КонецЕсли;
	Иначе
		ПодключатьСчитывательRFID = Ложь;
	КонецЕсли;
	
	ОсобенностьУчета = РеквизитыНоменклатуры.ВидНоменклатуры.ОсобенностьУчета;
	Если ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ Тогда
		Элементы.ЗаписатьВRFID.Видимость         = ЭтоМаркировкаТоваровГИСМ
													И Не ЭтоМаркировкаПерсонифицированнымиКиЗ
													И ПодключатьСчитывательRFID
	ИначеЕсли ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ Тогда 
		Элементы.ЗаписатьВRFID.Видимость         = Ложь;
	Иначе
		Элементы.ЗаписатьВRFID.Видимость         = НастройкиИспользованияСерий.ИспользоватьRFIDМеткиСерии
													И ПодключатьСчитывательRFID
	КонецЕсли;	
	
	Элементы.СчитатьRFID.Видимость               = ПараметрыУчетнойПолитикиСерий.ИспользоватьRFIDМеткиСерии
													И ПодключатьСчитывательRFID;
													
													
	#КонецОбласти
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
		Если НастройкиИспользованияСерий.ИспользоватьНомерКИЗГИСМСерии Тогда
			МожноИзменятьНомер = Ложь;
			Если ЭтоМаркировкаТоваровГИСМ Тогда
				
				Если ЭтоМаркировкаОстатковГИСМ Тогда
					ПроверятьЗаполнениеНомера = Ложь;
				Иначе
					ПроверятьЗаполнениеНомера = Истина;
				КонецЕсли;
				
			Иначе
				Если ЭтоПоступлениеИзТаможенногоСоюза Тогда
					ПроверятьЗаполнениеНомера = Истина;
				Иначе
					ПроверятьЗаполнениеНомера = Ложь;
				КонецЕсли;
			КонецЕсли;
		Иначе
			МожноИзменятьНомер = Истина;
			ПроверятьЗаполнениеНомера = Истина;
		КонецЕсли;
		
		Элементы.СерииНомер.ТолькоПросмотр            = Не МожноИзменятьНомер;
		Элементы.СерииНомер.АвтоОтметкаНезаполненного = ПроверятьЗаполнениеНомера;
	Иначе
		ПроверятьЗаполнениеНомера = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИдетЗаписьМетки = Ложь;
	
    ПоддерживаемыеТипыОборудования = "СканерШтрихкода";
	
	Если ПодключатьСчитывательRFID Тогда
		ПоддерживаемыеТипыОборудования = ПоддерживаемыеТипыОборудования + ", СчитывательRFID";
	КонецЕсли;
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, ПоддерживаемыеТипыОборудования);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И ЗавершениеРаботы Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
	
		Отказ = Истина;
		
		ТекстВопроса = НСтр("ru = 'Список серий был изменен.
							|Сохранить изменения?'");
							
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ПодключаемоеОборудованиеРТКлиент.ОтключитьОборудованиеRFID(Неопределено, Новый Структура("Форма",ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор(); 	
	Иначе
		ИдентификаторТекущейСтроки = Неопределено;
	КонецЕсли;
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен()
		И НЕ ТолькоПросмотр Тогда
		
		РезультатОбработки = Неопределено;
		
		Если ИмяСобытия = "RFID" Тогда
			Если Не ИдетЗаписьМетки
				И ПодключаемоеОборудованиеРТКлиент.ДляОбработкиRFIDНуженСерверныйВызов(Параметр, ЭтаФорма) Тогда
				ОчиститьСообщения();
				РезультатОбработки = ОбработатьСчитываниеRFID(Параметр, ИдентификаторТекущейСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если РезультатОбработки <> Неопределено Тогда
			Если РезультатОбработки.ЗакрытьФорму Тогда
				ОчиститьСообщения();
				ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании",0.1, Истина);
			Иначе
				Если РезультатОбработки.ИдентификаторТекущейСтроки <> Неопределено Тогда
					Элементы.Серии.ТекущаяСтрока = РезультатОбработки.ИдентификаторТекущейСтроки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "ЗаписьRFID_Серии" Тогда
		ОчиститьСообщения();
		ДанныеСерии = Параметр;
		ТекущиеДанные.RFIDEPC = ДанныеСерии.RFIDEPC;
		ШтрихкодированиеНоменклатурыКлиентСервер.ЗаполнитьФлагиРаботыСМеткой(ТекущиеДанные, GTIN, Неопределено, ПараметрыУчетнойПолитикиСерий, ЭтоМаркировкаТоваровГИСМ);
		ЕстьОшибки = Ложь;
		
		СохранитьВводСерийСервер(ЕстьОшибки);
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ОчиститьСообщения();
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		Если Событие = "RFID" Тогда
			ОписаниеОшибки = "";
			ОписаниеСобытия = Новый Структура();
			ОписаниеСобытия.Вставить("Источник", Источник);
			ОписаниеСобытия.Вставить("Событие",  Событие);
			ОписаниеСобытия.Вставить("Данные",   Данные);
			МенеджерОборудованияКлиент.ОбработатьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
		Иначе
			ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоУпаковок1ПриИзменении(Элемент)
	
	ПересчитатьИтогКоличество();
	ДобавитьИзмененныйРеквизит("КоличествоУпаковок", НомерСтроки1, КоличествоУпаковок1);
	
КонецПроцедуры

&НаКлиенте
Процедура Упаковка1ПриИзменении(Элемент)
	
	ПересчитатьИтогКоличество();
	ДобавитьИзмененныйРеквизит("Упаковка", НомерСтроки1, Упаковка1);
	
КонецПроцедуры

&НаСервере
Функция ОбработатьСчитываниеRFID(ДанныеМеток, ИдентификаторТекущейСтроки)
	
	ПараметрыОбработки = ПодключаемоеОборудованиеРТ.ПараметрыОбработкиСчитанныхRFIDИКиЗ();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки,ЭтаФорма);
	РезультатОбработки = ПодключаемоеОборудованиеРТ.ОбработатьСчитываниеRFID(ДанныеМеток, ПараметрыОбработки, Объект.Серии, ИдентификаторТекущейСтроки);
	КоличествоСерий = Объект.Серии.Количество();
	Если РезультатОбработки.ИдентификаторТекущейСтроки <> Неопределено Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
	Возврат РезультатОбработки;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСерии

&НаКлиенте
Процедура СерииНомерПриИзменении(Элемент)
	ПодобратьСерию(Элемент,"Номер","ГоденДо");
КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) Тогда
 		ПодобратьСерию(Элемент,"ГоденДо","Номер");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ФорматДаты",ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности);
	СтруктураПараметров.Вставить("ГоденДо",ТекущиеДанные.ГоденДо);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
	ДополнительныеПараметры.Вставить("Элемент", Элемент);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеГоденДо", ЭтотОбъект, ДополнительныеПараметры);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.ФормаУказанияДаты", СтруктураПараметров, Элемент,,,, ОписаниеОповещения, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");

	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("Упаковка",Упаковка);
	ТекущаяСтрока.Вставить("Количество",ТекущиеДанные.Количество);
	ТекущаяСтрока.Вставить("КоличествоУпаковок",ТекущиеДанные.КоличествоУпаковок);
	
	ОбработкаТабличнойЧастиТоварыКлиент.ОбработатьСтрокуТЧКлиент(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
			
			ТекущиеДанные = Элемент.ТекущиеДанные;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Номер)
				Или ЗначениеЗаполнено(ТекущиеДанные.НомерКИЗГИСМ)
				Или ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) Тогда
				Если ТекущиеДанные.КоличествоУпаковок = 0 Тогда
					ТекущиеДанные.КоличествоУпаковок = 1;
					
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
					
					ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
					
					ТекущаяСтрока = Новый Структура;
					ТекущаяСтрока.Вставить("Упаковка",Упаковка);
					ТекущаяСтрока.Вставить("Количество",ТекущиеДанные.Количество);
					ТекущаяСтрока.Вставить("КоличествоУпаковок",ТекущиеДанные.КоличествоУпаковок);
					
					ОбработкаТабличнойЧастиТоварыКлиент.ОбработатьСтрокуТЧКлиент(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
					
					ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
				КонецЕсли;
			Иначе
				ТекущиеДанные.КоличествоУпаковок = 0;
				ТекущиеДанные.Количество         = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ТекущееКоличество) Тогда
			ТекущееКоличество = 0;
		КонецЕсли;
		
		Дельта = ТекущееКоличество - Элементы.Серии.ТекущиеДанные.КоличествоУпаковок;
		КоличествоСерий = КоличествоСерий - Дельта;
		
		ШтрихкодированиеНоменклатурыКлиентСервер.ЗаполнитьФлагиРаботыСМеткой(ТекущиеДанные, GTIN, Неопределено, НастройкиИспользованияСерий,	ЭтоМаркировкаПерсонифицированнымиКиЗ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура СерииПослеУдаления(Элемент)
	КоличествоСерий = КоличествоСерий - ТекущееКоличество;
КонецПроцедуры

&НаКлиенте
Процедура СерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если Поле = Элементы.СерииСерия Тогда
		ИзменитьСериюКлиент();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииНомерКИЗГИСМПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	ТекущиеДанные.Серия = Неопределено;
	
	//ИнтеграцияГИСМКлиентСервер.ОбработатьНомерКИЗПоМаске(ТекущиеДанные.НомерКИЗГИСМ);
	
	ПолучитьИнформациюПоКиЗДобавитьСерию(ТекущиеДанные.НомерКИЗГИСМ, ТекущиеДанные.ПолучитьИдентификатор(), КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
	ЕстьОшибки = Ложь;
	
	СохранитьВводСерийСервер(ЕстьОшибки);
	Если Не Модифицированность И НЕ ЕстьОшибки Тогда
		
		ВладелецФормы.Модифицированность = МодифицированностьВладельца;
		
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище);
		СтруктураВозврата.Вставить("АдресИзмененныеРеквизиты", АдресИзмененныеРеквизиты);
		
		Закрыть(СтруктураВозврата);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	
	ОчиститьСообщения();
	
	ЭтаФорма.Доступность = Ложь;
	
	ОповещенияПриЗагрузкеИзТСД = Новый ОписаниеОповещения("ЗагрузитьИзТСДЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьЗагрузкуДанныеИзТСД(ОповещенияПриЗагрузкеИзТСД, УникальныйИдентификатор, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПорядокСканированияСерий(Команда)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Обработка.ПодборСерийВДокументы.Форма.ФормаНастройкиСканированияСерий.Открытие");
	
	Обработчик = Новый ОписаниеОповещения("ОповещениеНастроитьПорядокСканирования", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ПараметрыФормы = Новый Структура("ЗакрыватьФормуПослеСканированияСерии",ЗакрыватьФормуПослеСканированияСерии);
	ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.ФормаНастройкиСканированияСерий", ПараметрыФормы,,,,, Обработчик, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкодСерии(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСерию(Команда)
	ИзменитьСериюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СчитатьМетку(Команда)
	ОчиститьСообщения();
	ПодключаемоеОборудованиеРТКлиент.ОткрытьСессиюСчитывателяRFID(ЭтаФорма);
	ПодключитьОбработчикОжидания("ОтработатьТаймаутОжиданияСчитыванияМетки", 5, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВRFID(Команда)
	ИдетЗаписьМетки = Истина;
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ДанныеСерии",Элементы.Серии.ТекущиеДанные);
	ПараметрыЗаписи.Вставить("Форма", ЭтаФорма);
	ПодключаемоеОборудованиеРТКлиент.ЗаписатьДанныеВRFID(Неопределено, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьСтрокиКоличестваНоменклатуры(МассивСтрок, ПараметрыУказанияСерий)
	
	НомерИтерации = 1;
	
	ИмяКолонкиКоличество         = "";
	ИмяКолонкиКоличествоУпаковок = "";
	
	Если Не ПараметрыУказанияСерий.Свойство("ИмяКолонкиКоличествоУпаковок", ИмяКолонкиКоличествоУпаковок) Тогда
		ИмяКолонкиКоличествоУпаковок = "КоличествоУпаковок";
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	ОбработкаТабличнойЧастиТоварыВызовСервера.ПолучитьСписокДляВыбораУпаковок(Номенклатура, СписокВыбора, Истина);
	СписокВыбора[0].Значение = ЕдиницаИзмерения;
	
	СоответствиеНомераСтрокиИндексуЭлемента.Очистить();
	
	Для Каждого Строка Из МассивСтрок Цикл
		
		Если НомерИтерации = 1 Тогда
			
			НомерСтроки1 = Строка.НомерСтроки;
			КоличествоУпаковок1 = Строка[ИмяКолонкиКоличествоУпаковок];
			Если ИспользоватьТолькоБазовыеЕдиницы Тогда
				Упаковка1 = ЕдиницаИзмерения;
			Иначе
				Упаковка1 = ?(ЗначениеЗаполнено(Строка.Упаковка), Строка.Упаковка, ЕдиницаИзмерения);
			КонецЕсли;
			Элементы.Упаковка1.СписокВыбора.ЗагрузитьЗначения(СписокВыбора.ВыгрузитьЗначения());
			
			НоваяСтрокаСоответствия = СоответствиеНомераСтрокиИндексуЭлемента.Добавить();
			НоваяСтрокаСоответствия.НомерСтроки = Строка.НомерСтроки;
			НоваяСтрокаСоответствия.ИндексЭлемента = НомерИтерации;
		Иначе
			
			НоваяСтрокаСоответствия = СоответствиеНомераСтрокиИндексуЭлемента.Добавить();
			НоваяСтрокаСоответствия.НомерСтроки = Строка.НомерСтроки;
			НоваяСтрокаСоответствия.ИндексЭлемента = НомерИтерации;
			
			//Реквизит "НомерСтрокиХ"
			ДобавляемыеРеквизиты = Новый Массив;
			ИмяЭлемента = "НомерСтроки" + НомерИтерации;
			Реквизит = Новый РеквизитФормы(ИмяЭлемента, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			
			// Элемент формы "НомерСтрокиХ".
			Родитель                   = Элементы.ГруппаКоличествоНомерСтроки;
			Элемент                    = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Родитель);
			ЗаполнитьЗначенияСвойств(Элемент, Элементы.НомерСтроки1, "Вид, ПоложениеЗаголовка, Ширина, ЦветТекста, РастягиватьПоГоризонтали");
			Элемент.ПутьКДанным        = ИмяЭлемента;
			
			ЭтаФорма[ИмяЭлемента] = Строка.НомерСтроки;
			
			//Реквизит "КоличествоУпаковокХ"
			ДобавляемыеРеквизиты = Новый Массив;
			ИмяЭлемента = "КоличествоУпаковок" + НомерИтерации;
			Реквизит = Новый РеквизитФормы(ИмяЭлемента, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)));
			ДобавляемыеРеквизиты.Добавить(Реквизит);
			ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			
			// Элемент формы "КоличествоУпаковокХ".
			Родитель                   = Элементы.ГруппаКоличествоКоличество;
			Элемент                    = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Родитель);
			ЗаполнитьЗначенияСвойств(Элемент, Элементы.КоличествоУпаковок1, "Вид, ПоложениеЗаголовка, Ширина, РастягиватьПоГоризонтали");
			Элемент.ПутьКДанным        = ИмяЭлемента;
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииРеквизитаШапки");
			ЭтаФорма[ИмяЭлемента] = Строка[ИмяКолонкиКоличествоУпаковок];
			
			Если ИспользоватьУпаковки Тогда
				//Реквизит "УпаковкаХ"
				ДобавляемыеРеквизиты = Новый Массив;
				ИмяЭлемента = "Упаковка" + НомерИтерации;
				Реквизит = Новый РеквизитФормы(ИмяЭлемента, Новый ОписаниеТипов("СправочникСсылка.БазовыеЕдиницыИзмерения, СправочникСсылка.УпаковкиНоменклатуры"));
				ДобавляемыеРеквизиты.Добавить(Реквизит);
				ИзменитьРеквизиты(ДобавляемыеРеквизиты);
				
				// Элемент формы "УпаковкаХ"
				Родитель                         = Элементы.ГруппаКоличествоУпаковка;
				Элемент                          = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Родитель);
				Элемент.ПутьКДанным              = ИмяЭлемента;
				ЗаполнитьЗначенияСвойств(Элемент, Элементы.Упаковка1, "Вид, ПоложениеЗаголовка, Ширина, РастягиватьПоГоризонтали");
				Элемент.СписокВыбора.ЗагрузитьЗначения(СписокВыбора.ВыгрузитьЗначения());
				Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииРеквизитаШапки");
				Если ИспользоватьТолькоБазовыеЕдиницы Тогда
					ЭтаФорма[ИмяЭлемента] = ЕдиницаИзмерения;
				Иначе
					ЭтаФорма[ИмяЭлемента] = ?(ЗначениеЗаполнено(Строка.Упаковка), Строка.Упаковка, ЕдиницаИзмерения);
				КонецЕсли;
				
			Иначе
				ИмяЭлемента = "ЕдиницаИзмерения" + НомерИтерации;
				
				// Элемент формы "ЕдиницаИзмерения".
				Родитель                         = Элементы.ГруппаКоличествоЕдИзм;
				Элемент                          = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Родитель);
				ЗаполнитьЗначенияСвойств(Элемент, Элементы.ЕдиницаИзмерения, "Вид, ПоложениеЗаголовка, Ширина, ЦветТекста, РастягиватьПоГоризонтали");
				Элемент.ПутьКДанным              = "ЕдиницаИзмерения";
				
			КонецЕсли;
			
		КонецЕсли;
		
		НомерИтерации = НомерИтерации +1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизитаШапки(Элемент)
	
	ПересчитатьИтогКоличество();
	
	Если НЕ Найти(Элемент.Имя, "КоличествоУпаковок") = 0 Тогда
		
		ИндексЭлемента = Число(СтрЗаменить(Элемент.Имя, "КоличествоУпаковок", ""));
		Значение = ЭтаФорма[Элемент.Имя];
		
		НомерСтроки = ЭтаФорма["НомерСтроки" + ИндексЭлемента];
		ДобавитьИзмененныйРеквизит("КоличествоУпаковок", НомерСтроки, Значение);
		
	ИначеЕсли НЕ Найти(Элемент.Имя, "Упаковка") = 0 Тогда
		
		ИндексЭлемента = Число(СтрЗаменить(Элемент.Имя, "Упаковка", ""));
		Значение = ЭтаФорма[Элемент.Имя];
		НомерСтроки = ЭтаФорма["НомерСтроки" + ИндексЭлемента];
		ДобавитьИзмененныйРеквизит("Упаковка", НомерСтроки, Значение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьИтогКоличество()
	
	НеобходимоВвести = 0;
	
	Для Счетчик = 1 По КоличествоСтрокНоменклатуры Цикл
		
		ИмяРеквизитаКоличество = "КоличествоУпаковок" + Счетчик;
		ИмяРеквизитаУпаковка = "Упаковка" + Счетчик;
		
		КоличествоВСтроке = ЭтаФорма[ИмяРеквизитаКоличество] * ?(ИспользоватьУпаковки, КоэффициентУпаковки(ЭтаФорма[ИмяРеквизитаУпаковка]), 1);
		НеобходимоВвести = НеобходимоВвести + КоличествоВСтроке;
	КонецЦикла;
	
	Количество = НеобходимоВвести;
	
КонецПроцедуры

&НаСервере
Функция КоэффициентУпаковки(УпаковкаНоменклатуры)
	
	Коэффициент = 1;
	
	Если ИспользоватьУпаковки И ЗначениеЗаполнено(УпаковкаНоменклатуры)
		И ТипЗнч(УпаковкаНоменклатуры) = Тип("СправочникСсылка.УпаковкиНоменклатуры") Тогда
		
		Коэффициент = УпаковкаНоменклатуры.Коэффициент
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции

&НаСервере
Функция ОбработатьШтрихкодыСервер(ДанныеШтрихкодов, КэшированныеЗначения, ИдентификаторТекущейСтроки = Неопределено)
	
	Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ШтрихкодыПоТипам = ПодключаемоеОборудованиеРТ.СтруктураПоТипамШтрихкодов(ДанныеШтрихкодов);
	
	Если ШтрихкодыПоТипам.БезТипа.Количество() > 0 Тогда
		
		ТаблицаШтрихКодов = Новый ТаблицаЗначений;
		ТаблицаШтрихКодов.Колонки.Добавить("Номер",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
		ТаблицаШтрихКодов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
		
		Если ТипЗнч(ДанныеШтрихкодов) = Тип("Массив") Тогда
			Для Каждого СтрокаМассива Из ДанныеШтрихкодов Цикл
				НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
				НоваяСтрока.Количество = СтрокаМассива.Количество;
				НоваяСтрока.Номер      = СокрЛП(СтрокаМассива.ШтрихКод);
			КонецЦикла;
		Иначе
			НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
			НоваяСтрока.Количество = ДанныеШтрихкодов.Количество;
			НоваяСтрока.Номер      = СокрЛП(ДанныеШтрихкодов.ШтрихКод);
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Штрихкоды.Номер КАК Номер,
		|	Штрихкоды.Количество КАК Количество
		|ПОМЕСТИТЬ Штрихкоды
		|ИЗ
		|	&Штрихкоды КАК Штрихкоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
		|	ЕСТЬNULL(СерииНоменклатуры.ГоденДо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
		|	Штрихкоды.Номер,
		|	Штрихкоды.Количество
		|ПОМЕСТИТЬ НайденныеНомераДляЗапроса
		|ИЗ
		|	Штрихкоды КАК Штрихкоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ПО Штрихкоды.Номер = СерииНоменклатуры.Номер
		|		И СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоНайденныхСерий,
		|	НайденныеНомераДляЗапроса.Номер
		|ПОМЕСТИТЬ КоличествоСерийПоНомеру
		|ИЗ
		|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
		|
		|СГРУППИРОВАТЬ ПО
		|	НайденныеНомераДляЗапроса.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|		ИНАЧЕ НайденныеНомераДляЗапроса.Серия
		|	КОНЕЦ КАК Серия,
		|	ВЫБОР
		|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|		ИНАЧЕ НайденныеНомераДляЗапроса.ГоденДо
		|	КОНЕЦ КАК ГоденДо,
		|	НайденныеНомераДляЗапроса.Номер,
		|	НайденныеНомераДляЗапроса.Количество
		|ИЗ
		|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоСерийПоНомеру КАК КоличествоСерийПоНомеру
		|		ПО НайденныеНомераДляЗапроса.Номер = КоличествоСерийПоНомеру.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Штрихкоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НайденныеНомераДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КоличествоСерийПоНомеру";
		
		Запрос.УстановитьПараметр("ВидНоменклатуры",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
		Запрос.УстановитьПараметр("Штрихкоды",ТаблицаШтрихКодов);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		СрокГодностиЗаполнен = Истина;
		
		Пока Выборка.Следующий() Цикл
			СтруктураПоиска = Новый Структура("Номер,ГоденДо,Серия",Выборка.Номер, Выборка.ГоденДо, Выборка.Серия);
			
			НайденныеСтроки = Объект.Серии.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
					НоваяСтрока.КоличествоУпаковок = Выборка.Количество;
				Иначе
					НоваяСтрока.КоличествоУпаковок = 1;
				КонецЕсли;
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
				
				ТекущаяСтрока = Новый Структура;
				ТекущаяСтрока.Вставить("Упаковка",Упаковка);
				ТекущаяСтрока.Вставить("Количество",НоваяСтрока.Количество);
				ТекущаяСтрока.Вставить("КоличествоУпаковок",НоваяСтрока.КоличествоУпаковок);
				
				ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
				
				КоличествоСерий = КоличествоСерий + ТекущаяСтрока.КоличествоУпаковок;
				
				Модифицированность   = Истина;
				
				СрокГодностиЗаполнен = Ложь;
			Иначе
				СтрокаТЧ = НайденныеСтроки[0];
				Если ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
					
					ТекущееКоличество = СтрокаТЧ.КоличествоУпаковок;
					
					СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.КоличествоУпаковок + Выборка.Количество;
					
					ТекущаяСтрока = Новый Структура;
					ТекущаяСтрока.Вставить("Упаковка",Упаковка);
					ТекущаяСтрока.Вставить("Количество",СтрокаТЧ.Количество);
					ТекущаяСтрока.Вставить("КоличествоУпаковок",СтрокаТЧ.КоличествоУпаковок);
					
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
					ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
					
					ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТекущаяСтрока);
					
					Дельта = ТекущееКоличество - СтрокаТЧ.КоличествоУпаковок;
					КоличествоСерий = КоличествоСерий - Дельта;				
					
					Модифицированность = Истина;
					
				Иначе
					ТекстСообщения = НСтр("ru = 'Серия с номером %НомерСерии% уже присутствует в списке серий'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НомерСерии%",Выборка.Номер);
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Серии",НайденныеСтроки[0].НомерСтроки,"Номер");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект");
					
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СтрокаТЧ.ГоденДо) Тогда
					СрокГодностиЗаполнен = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Если ШтрихкодыПоТипам.КиЗ.Количество() > 0 Тогда
		
		Для Каждого СтрМас из ШтрихкодыПоТипам.КиЗ Цикл
			
			ПолучитьИнформациюПоКиЗДобавитьСерию(СтрМас.ШтрихКод, ИдентификаторТекущейСтроки, КэшированныеЗначения);
			Модифицированность = Истина;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗакрытьФорму = Ложь;
	
	Если ЗакрыватьФормуПослеСканированияСерии
		И (СрокГодностиЗаполнен
		Или Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии) Тогда
		ЕстьОшибки = Ложь;
		СохранитьВводСерийСервер(ЕстьОшибки);
		Если Не Модифицированность И НЕ ЕстьОшибки Тогда
			ЗакрытьФорму = Истина;
		КонецЕсли;
	КонецЕсли;

	Возврат ЗакрытьФорму;
	
КонецФункции // ОбработатьШтрихкодыСервер()

#Область Прочее

&НаСервере
Процедура СохранитьВводСерийСервер(ЕстьОшибки)
	
	Если Объект.Серии.Количество() > 0 Тогда
		ПоследняяСтрока = Объект.Серии[Объект.Серии.Количество()-1];
		Если Не ЗначениеЗаполнено(ПоследняяСтрока.Серия)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.Номер)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.НомерКИЗГИСМ)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.ГоденДо)
			И (ПоследняяСтрока.КоличествоУпаковок = 1
			Или ПоследняяСтрока.КоличествоУпаковок = 0) Тогда
			
			Объект.Серии.Удалить(ПоследняяСтрока);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПроверки = Новый Структура("ТолькоРедактированиеКоличества,
		|ИспользоватьСрокГодностиСерии,ПроверятьЗаполнениеНомера, ИспользоватьНомерСерии, ИспользоватьКоличествоСерии, ИспользоватьНомерКИЗГИСМСерии, Номенклатура, Упаковка,
		|ЭтоМаркировкаТоваровГИСМ,ЭтоМаркировкаПерсонифицированнымиКиЗ,ЭтоМаркировкаОстатковГИСМ,ЭтоПоступлениеИзТаможенногоСоюза,
		|ИспользоватьRFIDМеткиСерии");
	ЗаполнитьЗначенияСвойств(ПараметрыПроверки, НастройкиИспользованияСерий);
	ЗаполнитьЗначенияСвойств(ПараметрыПроверки, ЭтаФорма, "Номенклатура,Упаковка,ЭтоМаркировкаТоваровГИСМ,ЭтоМаркировкаПерсонифицированнымиКиЗ,
															|ЭтоМаркировкаОстатковГИСМ,ЭтоПоступлениеИзТаможенногоСоюза,ПроверятьЗаполнениеНомера");
	
	Объект.ПараметрыПроверки = Новый ФиксированнаяСтруктура(ПараметрыПроверки);
	
	НайтиЗарегистрированныеСерии();
	
	ТаблицаСерий = Объект.Серии.Выгрузить();
	
	ТаблицаСерий.Свернуть("Серия,Номер,ГоденДо,НомерКИЗГИСМ,RFIDTID,RFIDUser,RFIDEPC,EPCGTIN", "Количество,КоличествоУпаковок");
	
	ТаблицаВозврата = ТаблицаСерий.СкопироватьКолонки("Серия,Количество,КоличествоУпаковок");
	
	Для Каждого СтрТабл Из ТаблицаСерий Цикл
		
		Если СтрТабл.Количество > 0 Тогда
		
			Если Не ЗначениеЗаполнено(СтрТабл.Серия) Тогда
				
				СправочникОбъект                 = Справочники.СерииНоменклатуры.СоздатьЭлемент();
				СправочникОбъект.ВидНоменклатуры = ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры;
				СправочникОбъект.Номер           = СтрТабл.Номер;
				СправочникОбъект.ГоденДо         = СтрТабл.ГоденДо;
				СправочникОбъект.НомерКИЗГИСМ    = СтрТабл.НомерКИЗГИСМ;
				СправочникОбъект.Записать();
				
			Иначе
				
				СправочникОбъект = СтрТабл.Серия.ПолучитьОбъект();
				
			КонецЕсли;
		
			Если СправочникОбъект <> Неопределено Тогда
				
				СправочникОбъект.RFIDTID        = СтрТабл.RFIDTID;
				СправочникОбъект.RFIDUser       = СтрТабл.RFIDUser;
				СправочникОбъект.RFIDEPC        = СтрТабл.RFIDEPC;
				СправочникОбъект.EPCGTIN        = СтрТабл.EPCGTIN;
				СправочникОбъект.Номер          = СтрТабл.Номер;
				СправочникОбъект.НомерКИЗГИСМ   = СтрТабл.НомерКИЗГИСМ;
				
				СправочникОбъект.Записать();
				СтрТабл.Серия = СправочникОбъект.Ссылка; 
				
			КонецЕсли;	
				
			СтрТабл.Серия = СправочникОбъект.Ссылка; 
			
			ЗаполнитьЗначенияСвойств(ТаблицаВозврата.Добавить(), СтрТабл);
			
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаИзмененныеРеквизиты = ИзмененныеРеквизиты.Выгрузить();
	ПоместитьВоВременноеХранилище(ТаблицаВозврата,АдресВоВременномХранилище);
	ПоместитьВоВременноеХранилище(ТаблицаИзмененныеРеквизиты, АдресИзмененныеРеквизиты);
	
	Если Модифицированность Тогда
		МодифицированностьВладельца = Истина;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСерию(Элемент,ВводимыйРеквизит,ПроверяемыйРеквизит)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить(ВводимыйРеквизит,ТекущиеДанные[ВводимыйРеквизит]);
	ПараметрыПоиска.Вставить(ПроверяемыйРеквизит,Неопределено);
	ПараметрыПоиска.Вставить("ВидНоменклатуры",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ПараметрыПоиска.Вставить("Отбор",Новый Структура);
	ПараметрыПоиска.Вставить("СтрокаПоиска ",Неопределено);
	ПараметрыПоиска.Вставить("НомерКИЗГИСМ",ТекущиеДанные.НомерКИЗГИСМ);
	
	СписокВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.СерииНоменклатуры"),ПараметрыПоиска);
	
	ВыбранныйЭлемент = Неопределено;
	
	Значение = Новый Структура;
	Значение.Вставить("Серия", Неопределено);
	Значение.Вставить("Номер",ТекущиеДанные.Номер);
	Значение.Вставить("ГоденДо",ТекущиеДанные.ГоденДо);
	
	Наименование = "<Новая>" + ТекущиеДанные.Номер + " " + Формат(ТекущиеДанные.ГоденДо,ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности);
	
	СписокВыбора.Вставить(0,Значение,Наименование);
	
	Если СписокВыбора.Количество() = 1 Тогда
		ВыбранныйЭлемент = СписокВыбора[0];
		ВыбратьСерию(ВыбранныйЭлемент, ТекущиеДанные);
	ИначеЕсли СписокВыбора.Количество() = 2 Тогда
		Если СокрЛП(СписокВыбора[0].Значение.Номер) <> СокрЛП(СписокВыбора[1].Значение.Номер)
			Или (СписокВыбора[0].Значение.ГоденДо <> СписокВыбора[1].Значение.ГоденДо
			И ЗначениеЗаполнено(СписокВыбора[0].Значение.ГоденДо))Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеВыбратьСерию", ЭтотОбъект, ТекущиеДанные);
			ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора,Элемент);
			Возврат;
		Иначе
			ВыбранныйЭлемент = СписокВыбора[1];
			ВыбратьСерию(ВыбранныйЭлемент, ТекущиеДанные);
		КонецЕсли;
		
	ИначеЕсли СписокВыбора.Количество() > 0 Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеВыбратьСерию", ЭтотОбъект, ТекущиеДанные);
		ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСерию(ВыбранныйЭлемент, ТекущиеДанные)
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ТекущиеДанные.Серия         = ВыбранныйЭлемент.Значение.Серия;
		ТекущиеДанные.Номер         = ВыбранныйЭлемент.Значение.Номер;
		ТекущиеДанные.ГоденДо       = ВыбранныйЭлемент.Значение.ГоденДо;
		Элементы.Серии.ЗакончитьРедактированиеСтроки(Ложь);
	Иначе
		ТекущиеДанные.Серия   = Неопределено; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	
	ЗначенияЗаполненияСерии.Вставить("НомерКиЗГИСМ", ТекущиеДанные.НомерКиЗГИСМ);
	ЗначенияЗаполненияСерии.Вставить("RFIDTID"     , ТекущиеДанные.RFIDTID);
	ЗначенияЗаполненияСерии.Вставить("RFIDUser"    , ТекущиеДанные.RFIDUser);
	ЗначенияЗаполненияСерии.Вставить("RFIDEPC"     , ТекущиеДанные.RFIDEPC);
	ЗначенияЗаполненияСерии.Вставить("EPCGTIN"     , ТекущиеДанные.EPCGTIN);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма,,,,,РежимОткрытияОкна);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище);
	СтруктураВозврата.Вставить("АдресИзмененныеРеквизиты", АдресИзмененныеРеквизиты);
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзмененныйРеквизит(ИмяРеквизита, НомерСтроки, Значение)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыОтбора.Вставить("ИмяРеквизита", ИмяРеквизита);
	
	НайденныеСтроки = ИзмененныеРеквизиты.НайтиСтроки(ПараметрыОтбора);
	
	Если НЕ НайденныеСтроки.Количество() = 0 Тогда
		Строка = НайденныеСтроки[0];
		ИзмененныеРеквизиты.Удалить(Строка);
	КонецЕсли;
	
	НоваяСтрока = ИзмененныеРеквизиты.Добавить();
	НоваяСтрока.ИмяРеквизита = ИмяРеквизита;
	НоваяСтрока.НомерСтроки = НомерСтроки;
	НоваяСтрока.Значение = Значение;
	НоваяСтрока.ДопСорт = ?(ИмяРеквизита = "Упаковка", 2, 1);
	
	ИзмененныеРеквизиты.Сортировать("НомерСтроки Возр, ДопСорт Возр");
	
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура НайтиЗарегистрированныеСерии()
	
	Запрос = Новый Запрос; 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Серии.Серия КАК Серия,
	|	Серии.Номер КАК Номер,
	|	Серии.НомерКИЗГИСМ КАК НомерКИЗГИСМ,
	|	Серии.RFIDTID КАК RFIDTID,
	|	ВЫБОР
	|		КОГДА Серии.Номер = """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НомерНеУказан,
	|	Серии.ГоденДо КАК ГоденДо,
	|	ВЫБОР
	|		КОГДА Серии.ГоденДо = &ПустаяДата
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГоденДоНеУказан,
	|	Серии.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|ГДЕ
	|	Серии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	Серии.НомерСтроки
	|ИЗ
	|	Серии КАК Серии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (ВЫБОР
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерКИЗГИСМСерии
	|					ТОГДА Серии.НомерКИЗГИСМ = СерииНоменклатуры.НомерКиЗГИСМ
	|				ИНАЧЕ ВЫБОР
	|							КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерСерии
	|								ТОГДА Серии.Номер = СерииНоменклатуры.Номер
	|							ИНАЧЕ Серии.НомерНеУказан
	|						КОНЕЦ
	|						И ВЫБОР
	|							КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьСрокГодностиСерии
	|								ТОГДА Серии.ГоденДо = СерииНоменклатуры.ГоденДо
	|							ИНАЧЕ Серии.ГоденДоНеУказан
	|						КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Серии.НомерСтроки
	|ИЗ
	|	Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры.ИспользоватьRFIDМеткиСерии)
	|			И Серии.RFIDTID <> """"
	|			И Серии.RFIDTID = СерииНоменклатуры.RFIDTID
	|			И (ВЫБОР
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерКИЗГИСМСерии
	|					ТОГДА Серии.НомерКИЗГИСМ <> СерииНоменклатуры.НомерКиЗГИСМ
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерСерии
	|					ТОГДА Серии.Номер <> СерииНоменклатуры.Номер
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры",ВидНоменклатуры);
	Запрос.УстановитьПараметр("Серии",          Объект.Серии.Выгрузить());
	Запрос.УстановитьПараметр("ПустаяДата",     Дата(1, 1, 1, 0, 0, 0));

	Результат = Запрос.ВыполнитьПакет();
	ВыборкаПоСсылкам = Результат[1].Выбрать();
	ВыборкаПоОшибкамМеток = Результат[2].Выбрать();
	
	Отказ = Ложь;
	
	Пока ВыборкаПоОшибкамМеток.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана информация о серии с привязкой к RFID-метке, по которой уже зарегистрирована другая серия. Попробуйте считать информацию о метке еще раз.'");
	    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", ВыборкаПоОшибкамМеток.НомерСтроки);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Серии", ВыборкаПоОшибкамМеток.НомерСтроки, "СтатусРаботыRFID");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
	КонецЦикла;
	
	Если Отказ Тогда
		ТекстИсключения = НСтр("ru = 'Выявлены ошибки при проверке использования TID RFID-меток.'");
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
		
	Пока ВыборкаПоСсылкам.Следующий() Цикл
		Объект.Серии[ВыборкаПоСсылкам.НомерСтроки-1].Серия = ВыборкаПоСсылкам.Серия;		
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ПолучитьИнформациюПоКиЗДобавитьСерию(НомерКиЗ, ИдентификаторТекущейСтроки, КэшированныеЗначения)
	
	ТолькоРедактированиеКоличества = Ложь;
	
	Если НЕ ЗначениеЗаполнено(НомерКиЗ) Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ИнтеграцияГИСМВызовСервера.ЭтоНомерКиЗ(НомерКиЗ) Тогда
		ТекстСообщения = НСтр("ru = 'Введенные данные не являются номером КиЗ.'");
		НомерКиЗ = "";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ИнформацияПоКиЗ = ИнтеграцияГИСМ.ИнформацияОКиЗПоНомеру(НомерКиЗ);
	ИнформацияПоКиЗ.НомерКиЗ = НомерКиЗ;
	
	ПараметрыОбработки = ПодключаемоеОборудованиеРТ.ПараметрыОбработкиСчитанныхRFIDИКиЗ();
	ЗаполнитьЗначенияСвойств(ПараметрыОбработки, ЭтотОбъект);
	ОбработаннаяСтрока = ПодключаемоеОборудованиеРТ.ДобавитьСериюПоИнформацииПоКиЗ(ИнформацияПоКиЗ, ПараметрыОбработки, Объект.Серии, ИдентификаторТекущейСтроки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти