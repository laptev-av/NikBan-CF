
#Область ПрограммныйИнтерфейс

Функция ПолнотекстовыйПоискТоваров(СтрокаПоиска, РезультатПоиска) Экспорт
	
	МассивШтрихкодов = Новый Массив;
	
	// Поиск данных
	РазмерПорции = 200;
	ОбластьПоиска = Новый Массив;
	ОбластьПоиска.Добавить(Метаданные.Справочники.Номенклатура);
	ОбластьПоиска.Добавить(Метаданные.РегистрыСведений.ДополнительныеСведения);
	ОбластьПоиска.Добавить(Метаданные.РегистрыСведений.Штрихкоды);
	
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаПоиска, РазмерПорции);
	СписокПоиска.ПолучатьОписание = Ложь;
	СписокПоиска.ОбластьПоиска = ОбластьПоиска;
	СписокПоиска.ПерваяЧасть();
	
	Если СписокПоиска.СлишкомМногоРезультатов() Тогда
		Возврат "СлишкомМногоРезультатов";
	КонецЕсли;
	
	КоличествоНайденныхЭлементов = СписокПоиска.ПолноеКоличество();
	Если КоличествоНайденныхЭлементов = 0 Тогда
		Возврат "НичегоНеНайдено";
	КонецЕсли;
	
	// Обработка данных
	НачальнаяПозиция    = 0;
	КонечнаяПозиция     = ?(КоличествоНайденныхЭлементов > РазмерПорции, РазмерПорции, КоличествоНайденныхЭлементов) - 1;
	ЕстьСледующаяПорция = Истина;

	Пока ЕстьСледующаяПорция Цикл
		
		Для СчетчикЭлементов = 0 По КонечнаяПозиция Цикл
			
			Элемент       = СписокПоиска.Получить(СчетчикЭлементов);
			
			Если Элемент.Метаданные = Метаданные.Справочники.Номенклатура Тогда
				РезультатПоиска.Номенклатура.Добавить(Элемент.Значение);
			ИначеЕсли Элемент.Метаданные = Метаданные.РегистрыСведений.ДополнительныеСведения Тогда
				
				Если ТипЗнч(Элемент.Значение.Объект) = Тип("СправочникСсылка.Номенклатура") Тогда
					РезультатПоиска.Номенклатура.Добавить(Элемент.Значение.Объект);
				КонецЕсли;
				
			ИначеЕсли Элемент.Метаданные = Метаданные.РегистрыСведений.Штрихкоды Тогда
				МассивШтрихкодов.Добавить(Элемент.Значение.Штрихкод);
			Иначе
				ВызватьИсключение НСтр("ru = 'Неизвестная ошибка'");
			КонецЕсли;
			
		КонецЦикла;
		
		НачальнаяПозиция    = НачальнаяПозиция + РазмерПорции;
		ЕстьСледующаяПорция = (НачальнаяПозиция < КоличествоНайденныхЭлементов - 1);
		
		Если ЕстьСледующаяПорция Тогда
			
			КонечнаяПозиция = ?(КоличествоНайденныхЭлементов > НачальнаяПозиция + РазмерПорции,
			                    РазмерПорции,
			                    КоличествоНайденныхЭлементов - НачальнаяПозиция
			                    ) - 1;
			СписокПоиска.СледующаяЧасть();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивШтрихкодов.Количество() > 0 Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Штрихкоды.Владелец КАК Номенклатура,
		|	Штрихкоды.Характеристика КАК Характеристика
		|ИЗ
		|	РегистрСведений.Штрихкоды КАК Штрихкоды
		|ГДЕ
		|	Штрихкоды.Штрихкод В(&МассивШтрихкодов)
		|	И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура");
		Запрос.УстановитьПараметр("МассивШтрихкодов", МассивШтрихкодов);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			РезультатПоиска.Номенклатура.Добавить(Выборка.Номенклатура);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат "ВыполненоУспешно";
	
КонецФункции

Функция ПоискТоваров(СтрокаПоиска, ОписаниеОшибки) Экспорт
	
	РезультатПоиска = Новый Структура;
	РезультатПоиска.Вставить("Номенклатура", Новый Массив);
	
	Результат = ПолнотекстовыйПоискТоваров(СтрокаПоиска, РезультатПоиска);
	
	Если Результат = "ВыполненоУспешно" Тогда
		Возврат РезультатПоиска;
	ИначеЕсли Результат = "СлишкомМногоРезультатов" Тогда
		ОписаниеОшибки = НСтр("ru = 'Слишком много результатов. Уточните запрос.'");
		Возврат РезультатПоиска;
	ИначеЕсли Результат = "НичегоНеНайдено" Тогда
		// Продолжаем поиск
	Иначе
		ВызватьИсключение НСтр("ru = 'Неизвестная ошибка'");
	КонецЕсли;
	
	ОписаниеОшибки = НСтр("ru = 'Ничего не найдено'");
	Возврат РезультатПоиска;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
