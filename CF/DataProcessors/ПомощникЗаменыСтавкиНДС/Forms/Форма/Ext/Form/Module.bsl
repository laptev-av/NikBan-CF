#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Объект.ИзменятьВТранзакции = Истина;
	Объект.ПрерыватьПриОшибке  = Истина;
	ТОНастройкаПорции          = 1;
	ТОПроцентОбъектовВПорции   = 100;
	ТОЧислоОбъектовВПорции     = 1;
	
	ИнициализироватьНастройкиНСИ(0, "Справочник.Номенклатура");
	ИнициализироватьНастройкиНСИ(1, "Справочник.ВидыНоменклатуры");
	ИнициализироватьНастройкиНСИ(2, "Справочник.ДоговорыПлатежныхАгентов");
	
	Элементы.ФормаНазад.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектыКоторыеНеУдалосьИзменить

&НаКлиенте
Процедура ОбъектыКоторыеНеУдалосьИзменитьПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	Если ТипЗнч(Элемент.ТекущиеДанные.Объект) <> Тип("Строка") Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Объект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКоторыеНеУдалосьИзменитьПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Причина = Элемент.ТекущиеДанные.Причина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НастройкаОтбораНажатие(Элемент)
	
	Индекс = Число(Прав(Элемент.Имя, 1));
	ПараметрыФормы = Новый Структура("ВыбранныеТипы, Настройки",
		КомпоновщикиНастроек[Индекс].Представление,
		КомпоновщикиНастроек[Индекс].Значение.Настройки);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбранныхОбъектов", ЭтотОбъект);
	ОткрытьФорму("Обработка.ПомощникЗаменыСтавкиНДС.Форма.ВыбранныеЭлементы", ПараметрыФормы,
		,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменятьВТранзакцииПриИзменении(Элемент)
	
	Если Объект.ИзменятьВТранзакции Тогда
		Элементы.ПрерыватьПриОшибке.Доступность = Ложь;
	Иначе
		Элементы.ПрерыватьПриОшибке.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Изменить(Команда)
	
	НазначениеКнопки = "Изменить";
	Если ВыполняетсяОбработка Тогда
		НазначениеКнопки = "Прервать";
	ИначеЕсли ОбработкаЗавершена Или Элементы.Страницы.ТекущаяСтраница = Элементы.ИзменениеОбъектов Тогда
		НазначениеКнопки = "Закрыть";
		Если ОбъектыКоторыеНеУдалосьИзменить.Количество() > 0 Тогда
			НазначениеКнопки = "Повторить";
		КонецЕсли;
	КонецЕсли;
	
	Если НазначениеКнопки = "Закрыть" Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	Если НазначениеКнопки = "Прервать" Тогда
		ТекущееСостояниеИзменения.ПрерватьИзменение = Истина;
		Если Не ДлительнаяОперация.Статус = "Выполнено" Тогда
			ЗавершитьИзменениеОбъектов();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если НазначениеКнопки = "Изменить" Тогда
		
		Если Не ЕстьВыбраннаяНСИ() Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбрана НСИ для замены ставки НДС'"));
			Возврат;
		КонецЕсли;
		
		Если Не ЕстьВыбранныеОбъекты() Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Нет элементов в выбранной НСИ для замены ставки НДС'"));
			Возврат;
		КонецЕсли;
		
		Если ЕстьОтборОбъектов() Тогда
			ВыполнитьИзменениеПроверкаОтбораВыполнена();
		Иначе
			ТекстВопроса = НСтр("ru = 'Отбор не задан. Изменить все элементы?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьИзменениеПроверкаОтбораВыполнена", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,, НСтр("ru = 'Изменение элементов'"));
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Если НазначениеКнопки = "Повторить" Тогда
		ВыполнитьИзменениеПроверкиВыполнены();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	НазадСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриЗакрытииФормыВыбранныхОбъектов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат
	КонецЕсли;
	
	ПриЗакрытииФормыВыбранныхОбъектовНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииФормыВыбранныхОбъектовНаСервере(Результат)
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Для каждого Настройка Из КомпоновщикиНастроек Цикл
			Если Настройка.Представление = Результат.ВыбранныеТипы Тогда
				Настройка.Значение.ЗагрузитьНастройки(Результат.Настройки);
				ОбновитьНадписьКоличествоВыбранных(КомпоновщикиНастроек.Индекс(Настройка));
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИзменениеПроверкаОтбораВыполнена(РезультатВопроса = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьИзменениеПроверкиВыполнены();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИзменениеПроверкиВыполнены()
	
	УстановитьКнопкиНаВремяИзменения(Истина);
	ПерейтиНаСтраницуИзмененияОбъектов();
	ОбъектыКоторыеНеУдалосьИзменить.Очистить();
	
	ПодключитьОбработчикОжидания("ИзменитьОбъекты", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаСтраницуИзмененияОбъектов()
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.НастройкаИзменений Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ИзменениеОбъектов;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКнопкиНаВремяИзменения(НачалоИзменения)
	
	ВыполняетсяОбработка = НачалоИзменения;

	Элементы.ФормаИзменить.Доступность = Истина;
	
	Если НачалоИзменения Тогда
		Элементы.ФормаИзменить.Заголовок = НСтр("ru = 'Прервать'");
	Иначе
		Если ОбъектыКоторыеНеУдалосьИзменить.Количество() > 0 Тогда
			Элементы.ФормаИзменить.Заголовок = НСтр("ru = 'Повторить замену'");
		Иначе
			Элементы.ФормаИзменить.Заголовок = НСтр("ru = 'Закрыть'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КоличествоОбъектовДляОбработки()
	Количество = 0;
	
	НастройкиОтбора = НастройкиОтбора();
	НастройкиОтбора.ОбновитьСписок = Истина;
	
	Для Каждого Настройки Из КомпоновщикиНастроек Цикл
		Если Настройки.Пометка Тогда
			Количество = Количество
				+ ВыбранныеОбъекты(НастройкиОтбора, Настройки.Представление, Настройки.Значение).Количество();
		КонецЕсли;
	КонецЦикла;
	
	Возврат Количество;
КонецФункции

&НаКлиенте
Процедура ИзменитьОбъекты()
	
	ОчиститьСообщения();
	ТекущееСостояниеИзменения = Новый Структура;
	КоличествоОбъектовДляОбработки = КоличествоОбъектовДляОбработки();
	
	Если Объект.ИзменятьВТранзакции Тогда
		
		Если ТОНастройкаПорции = 1 Тогда // обработка одним вызовом
			
			ПоказатьОповещениеПользователя(НСтр("ru = 'Изменение выделенных элементов'"), ,НСтр("ru = 'Пожалуйста подождите, обработка может занять некоторое время...'"));
			ПоказыватьПроцентОбработанных = Ложь;
			
			РазмерПорции = КоличествоОбъектовДляОбработки;
			
		Иначе
			
			ПоказыватьПроцентОбработанных = Истина;
			
			Если ТОНастройкаПорции = 2 Тогда // порциями по числу объектов
				РазмерПорции = ?(ТОЧислоОбъектовВПорции < КоличествоОбъектовДляОбработки, 
									ТОЧислоОбъектовВПорции, КоличествоОбъектовДляОбработки);
			Иначе // Порциями по проценту объектов.
				РазмерПорции = Окр(КоличествоОбъектовДляОбработки * ТОПроцентОбъектовВПорции / 100);
				Если РазмерПорции = 0 Тогда
					РазмерПорции = 1;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		
		Если КоличествоОбъектовДляОбработки >= НетранзакционнаяПорцияГраницаПерехода() Тогда
			// Число объектов - постоянная величина.
			РазмерПорции = НетранзакционнаяПорцияПолученияДанныхОбъектов();
		Иначе
			// Число объектов - переменная величина, процент от общего числа.
			РазмерПорции = Окр(КоличествоОбъектовДляОбработки * НетранзакционнаяПорцияПолученияДанныхПроцент() / 100);
			Если РазмерПорции = 0 Тогда
				РазмерПорции = 1;
			КонецЕсли;
		КонецЕсли;
		
		Состояние(НСтр("ru = 'Обрабатываются элементы...'"), 0, НСтр("ru = 'Изменение выделенных элементов'"));
		
		ПоказыватьПроцентОбработанных = Истина;
	КонецЕсли;
	
	ТекущееСостояниеИзменения.Вставить("ЕстьЭлементыДляОбработки", Истина);
	// Позиция последнего обработанного элемента. 1 - первый элемент.
	ТекущееСостояниеИзменения.Вставить("ТекущаяПозиция", 0);
	ТекущееСостояниеИзменения.Вставить("КоличествоОшибок", 0);			// Инициализируем счетчик ошибок.
	ТекущееСостояниеИзменения.Вставить("КоличествоИзмененных", 0);		// Инициализируем счетчик измененных.
	ТекущееСостояниеИзменения.Вставить("ОстанавливатьИзменениеПриОшибке", Объект.ПрерыватьПриОшибке);
	ТекущееСостояниеИзменения.Вставить("КоличествоОбъектовДляОбработки", КоличествоОбъектовДляОбработки);
	ТекущееСостояниеИзменения.Вставить("РазмерПорции", РазмерПорции);
	ТекущееСостояниеИзменения.Вставить("ПоказыватьПроцентОбработанных", ПоказыватьПроцентОбработанных);
	ТекущееСостояниеИзменения.Вставить("ПрерватьИзменение", Ложь);
	
	ПодключитьОбработчикОжидания("ИзменитьПорциюОбъектов", 0.1, Истина);
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ОжиданиеОбработки;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПорциюОбъектов()
	
	ИзменитьНаСервере(ТекущееСостояниеИзменения.ОстанавливатьИзменениеПриОшибке);
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ОбработатьРезультатИзменения(ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата));
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииОперацииИзменения", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗавершенииОперацииИзменения(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		НазадСервер();
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		НазадСервер();
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	ОбработатьРезультатИзменения(ПолучитьИзВременногоХранилища(Результат.АдресРезультата));
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатИзменения(РезультатИзменения = Неопределено, ПродолжитьОбработку = Неопределено)
	Перем КоличествоОшибок, КоличествоИзмененных;
	
	Если ПродолжитьОбработку = Неопределено Тогда
		ПродолжитьОбработку = Истина;
	КонецЕсли;
	
	Пока ПродолжитьОбработку Цикл
		// Переносим информацию по обработанным объектам в таблицу.
		ЗаполнитьСостояниеОбработанных(РезультатИзменения, КоличествоОшибок, КоличествоИзмененных);
		
		ТекущееСостояниеИзменения.КоличествоОшибок = КоличествоОшибок + ТекущееСостояниеИзменения.КоличествоОшибок;
		ТекущееСостояниеИзменения.КоличествоИзмененных = КоличествоИзмененных + ТекущееСостояниеИзменения.КоличествоИзмененных;
		
		Если НЕ (ТекущееСостояниеИзменения.ОстанавливатьИзменениеПриОшибке И РезультатИзменения.ЕстьОшибки) Тогда
			Прервать;
		КонецЕсли;
		
		// При наличии ошибок в транзакции - откатываем всю транзакцию.
		Если Объект.ИзменятьВТранзакции Тогда
			ПодключитьОбработчикОжидания("ЗавершитьИзменениеОбъектов", 0.1, Истина);
			Возврат; // Досрочный выход из цикла и процедуры.
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'При изменении элементов (группы элементов) возникли ошибки.
			|Прервать изменение элементов и перейти к просмотру ошибок?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Прервать, НСтр("ru = 'Прервать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Пропустить, НСтр("ru = 'Продолжить'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Больше не спрашивать'"));
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьРезультатИзмененияОтветПолучен", ЭтотОбъект, РезультатИзменения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Прервать, НСтр("ru = 'Ошибки при изменении элементов'"));
		Возврат;
	КонецЦикла;
	
	ТекущееСостояниеИзменения.ТекущаяПозиция = ТекущееСостояниеИзменения.ТекущаяПозиция + ТекущееСостояниеИзменения.РазмерПорции;
	
	Если ТекущееСостояниеИзменения.ПоказыватьПроцентОбработанных Тогда
		// Вычисляем текущий процент обработанных объектов.
		ТекущийПроцент = Окр(ТекущееСостояниеИзменения.ТекущаяПозиция / ТекущееСостояниеИзменения.КоличествоОбъектовДляОбработки * 100);
		Состояние(НСтр("ru = 'Обрабатываются элементы...'"), ТекущийПроцент, НСтр("ru = 'Изменение выделенных элементов'"));
	КонецЕсли;
	
	ЕстьЭлементыДляОбработки = ?(ТекущееСостояниеИзменения.ТекущаяПозиция < ТекущееСостояниеИзменения.КоличествоОбъектовДляОбработки, Истина, Ложь);
	
	Если ЕстьЭлементыДляОбработки И НЕ ТекущееСостояниеИзменения.ПрерватьИзменение Тогда
		ПодключитьОбработчикОжидания("ИзменитьПорциюОбъектов", 0.1, Истина);
	Иначе
		ПодключитьОбработчикОжидания("ЗавершитьИзменениеОбъектов", 0.1, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатИзмененияОтветПолучен(РезультатВопроса, РезультатИзменения) Экспорт
	
	Если РезультатВопроса = Неопределено Или РезультатВопроса = КодВозвратаДиалога.Прервать Тогда
		ПодключитьОбработчикОжидания("ЗавершитьИзменениеОбъектов", 0.1, Истина);
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		ТекущееСостояниеИзменения.ОстанавливатьИзменениеПриОшибке = Ложь;
	КонецЕсли;
	
	ОбработатьРезультатИзменения(РезультатИзменения, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьИзменениеОбъектов()
	
	УстановитьКнопкиНаВремяИзменения(Ложь);
	ЗавершающиеДействияПриИзмененииСервер();
	
	Для Каждого Тип Из ТипыИзменяемыхОбъектов() Цикл
		ОповеститьОбИзменении(Тип);
	КонецЦикла;
	
	Оповестить("ЗавершениеГрупповогоИзмененияОбъектов");
	
	ОбработкаЗавершена = ТекущееСостояниеИзменения.КоличествоИзмененных = ТекущееСостояниеИзменения.КоличествоОбъектовДляОбработки;
	Если ОбработкаЗавершена Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Изменение реквизитов элементов'"), , 
			СтрШаблон(НСтр("ru = 'Изменены элементы (%1).'"), ТекущееСостояниеИзменения.КоличествоИзмененных));
		ПерейтиНаСтраницуВсеГотово();
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаОбъектыКоторыеНеУдалосьИзменить.Видимость = ОбъектыКоторыеНеУдалосьИзменить.Количество() > 0;
	
	Если ОбработкаЗавершена Тогда
		РезультатыОбработки = СтрШаблон(НСтр("ru = 'Изменения выполнены во всех выбранных элементах (%2).'"),
			ТекущееСостояниеИзменения.КоличествоОбъектовДляОбработки);
	Иначе
		Если Объект.ИзменятьВТранзакции Или ТекущееСостояниеИзменения.КоличествоИзмененных = 0 Тогда
			РезультатыОбработки = НСтр("ru = 'Изменения не выполнены.'");
		Иначе
			РезультатыОбработки = СтрШаблон(НСтр("ru = 'Изменения выполнены частично.
				|Изменено: %1; Не удалось изменить: %2'"),
				ТекущееСостояниеИзменения.КоличествоИзмененных, ТекущееСостояниеИзменения.КоличествоОшибок);
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ИзменятьВТранзакции И Не ОбработкаЗавершена Тогда
		КоличествоПропущенных = ТекущееСостояниеИзменения.КоличествоОбъектовДляОбработки - ТекущееСостояниеИзменения.КоличествоОшибок;
		Если КоличествоПропущенных > 0 И Не ТекущееСостояниеИзменения.ПрерватьИзменение Тогда
			СтрокаТаблицы = ОбъектыКоторыеНеУдалосьИзменить.Добавить();
			СтрокаТаблицы.Объект = СтрШаблон(НСтр("ru = '... и другие элементы (%1)'"), КоличествоПропущенных);
			СтрокаТаблицы.Причина = НСтр("ru = 'Пропущены, так как не были изменены один или более элементов.'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.НадписьРезультатыОбработки.Заголовок = РезультатыОбработки;
		
	Элементы.ФормаНазад.Видимость = Истина;
	
	ТекущееСостояниеИзменения = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура НазадСервер()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.НастройкаИзменений;
	
	ОбработкаЗавершена = Ложь;
	ОбъектыКоторыеНеУдалосьИзменить.Очистить();
	Элементы.ФормаНазад.Видимость = Ложь;
	Элементы.ФормаИзменить.Заголовок = НСтр("ru = 'Заменить ставку НДС'");
	
	Индекс = 0;
	Пока Индекс < КомпоновщикиНастроек.Количество() Цикл
		ОбновитьНадписьКоличествоВыбранных(Индекс);
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписьКоличествоВыбранных(Индекс)
	
	НастройкиОтбора = НастройкиОтбора();
	НастройкиОтбора.ОбновитьСписок = Истина;
	
	Если ЕстьНастроенныеОтборы(КомпоновщикиНастроек[Индекс].Значение) Тогда
		КоличествоВыбранных = ВыбранныеОбъекты(НастройкиОтбора, КомпоновщикиНастроек[Индекс].Представление,
			КомпоновщикиНастроек[Индекс].Значение).Количество();
		ТекстНадписи = СтрокаСЧислом(НСтр("ru = ';%1 элемент;;%1 элемента;%1 элементов;%1 элемента'"),
			КоличествоВыбранных, ВидЧисловогоЗначения.Количественное);
	Иначе
		ТекстНадписи = НСтр("ru = 'Все элементы'");
	КонецЕсли;
	
	Элементы["НастройкаОтбора"+Индекс].Заголовок = ТекстНадписи;
	
КонецПроцедуры

&НаСервере
Процедура ПерейтиНаСтраницуВсеГотово()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ВсеГотово;
	Элементы.НадписьУспешноЗавершено.Заголовок = СтрШаблон(
		НСтр("ru = 'Ставка НДС выбранных элементов была заменена.
			|Всего изменено элементов: %1'"), ТекущееСостояниеИзменения.КоличествоИзмененных);
	Элементы.ФормаИзменить.Заголовок = НСтр("ru = 'Готово'");
	Элементы.ФормаНазад.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Функция ТипыИзменяемыхОбъектов()
	Результат = Новый Массив;
	//Для Каждого ВидОбъектов Из СтрРазделить(ВидыИзменяемыхОбъектов, ",", Ложь) Цикл
	//	МенеджерОбъекта = МенеджерОбъектаПоПолномуИмени(ВидОбъектов);
	//	Результат.Добавить(ТипЗнч(МенеджерОбъекта.ПустаяСсылка()));
	//КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗавершающиеДействияПриИзмененииСервер()
	Если ДлительнаяОперация.Свойство("ИдентификаторЗадания") Тогда
		ДлительныеОперации.ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
	КонецЕсли;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ИзменениеОбъектов;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСостояниеОбработанных(РезультатИзменения, КоличествоОшибок, КоличествоИзмененных)
	
	КоличествоОшибок = 0;
	КоличествоИзмененных = 0;
	
	Для Каждого СостояниеОбработанногоОбъекта Из РезультатИзменения.СостояниеОбработки Цикл
		Если Не ПустаяСтрока(СостояниеОбработанногоОбъекта.Значение.КодОшибки) Тогда
			КоличествоОшибок = КоличествоОшибок + 1;
			
			ЗаписьОбОшибке = ОбъектыКоторыеНеУдалосьИзменить.Добавить();
			ЗаписьОбОшибке.Объект = СостояниеОбработанногоОбъекта.Ключ;
			ЗаписьОбОшибке.Причина = СостояниеОбработанногоОбъекта.Значение.СообщениеОбОшибке;
		Иначе
			КоличествоИзмененных = КоличествоИзмененных + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СледующаяПорцияОбъектовДляИзменения()
	
	НачалоВыборки = ТекущееСостояниеИзменения.ТекущаяПозиция;
	КонецВыборки = ТекущееСостояниеИзменения.ТекущаяПозиция + ТекущееСостояниеИзменения.РазмерПорции - 1;
	
	ВыбранныеОбъекты = ВсеВыбранныеОбъекты();
	Если КонецВыборки > ВыбранныеОбъекты.Количество() - 1 Тогда
		КонецВыборки = ВыбранныеОбъекты.Количество() - 1;
	КонецЕсли;
	
	Результат = Новый Массив;
	Для Индекс = НачалоВыборки По КонецВыборки Цикл
		Результат.Добавить(ВыбранныеОбъекты[Индекс]);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ИзменитьНаСервере(Знач ОстанавливатьИзменениеПриОшибке)
	
	ОбъектыДляОбработки = СледующаяПорцияОбъектовДляИзменения();
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ОбрабатываемыеОбъекты", Новый ХранилищеЗначения(ОбъектыДляОбработки));
	ПараметрыЗадания.Вставить("ОстанавливатьИзменениеПриОшибке", ОстанавливатьИзменениеПриОшибке);
	ПараметрыЗадания.Вставить("ИзменятьВТранзакции", Объект.ИзменятьВТранзакции);
	ПараметрыЗадания.Вставить("ПрерыватьПриОшибке", Объект.ПрерыватьПриОшибке);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Замена ставки НДС элементов'");
	ИмяПроцедуры = "Обработка.ПомощникЗаменыСтавкиНДС.МодульОбъекта.ИзменитьОбъекты";
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыЗадания, ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НетранзакционнаяПорцияГраницаПерехода()
	
	Возврат 100;	// Если в списке изменяемых более 100 объектов
					// изменение происходит для постоянного количества объектов
					// см . НетранзакционнаяПорцияПолученияДанныхОбъектов().
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НетранзакционнаяПорцияПолученияДанныхПроцент()
	
	Возврат 10;		// Если в списке изменяемых менее 100 объектов
					// изменение происходит порциями по проценту объектов от общей массы.
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НетранзакционнаяПорцияПолученияДанныхОбъектов()
	
	Возврат 10;		// Если в списке изменяемых более 100 объектов
					// изменение происходит порциями по постоянному
					// числу объектов.
	
КонецФункции

&НаСервереБезКонтекста
Функция НастройкиОтбора()
	Результат = Новый Структура;
	Результат.Вставить("ОбновитьСписок", Ложь);
	Результат.Вставить("ОграничитьВыборку", Ложь);
	Возврат Результат;
КонецФункции

&НаСервере
Функция ВыбранныеОбъекты(НастройкиОтбора, ВидыВыбранныхОбъектов, КомпоновщикНастроек, ТекстСообщенияОбОшибке = "")
	
	ОбновитьСписок                 = НастройкиОтбора.ОбновитьСписок;
	ОграничитьВыборку              = НастройкиОтбора.ОграничитьВыборку;
	
	АдресСпискаВыбранных = АдресаСпискаВыбранных.НайтиСтроки(Новый Структура("ВидОбъекта", ВидыВыбранныхОбъектов))[0];
	Если Не ОбновитьСписок И Не ОграничитьВыборку И Не ПустаяСтрока(АдресСпискаВыбранных.Адрес) Тогда
		Возврат ПолучитьИзВременногоХранилища(АдресСпискаВыбранных.Адрес);
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТекстЗапроса = ОбработкаОбъект.ТекстЗапроса(ВидыВыбранныхОбъектов, ОграничитьВыборку);
	СхемаКомпоновкиДанных = ОбработкаОбъект.СхемаКомпоновкиДанных(ТекстЗапроса);
	
	КомпоновщикНастроекКомпоновкиДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(КомпоновщикНастроек.Настройки);
	
	Если ОбъектыКоторыеНеУдалосьИзменить.Количество() > 0 И Не Объект.ИзменятьВТранзакции Тогда // повтор для неизмененных
		ЭлементОтбора = КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = Новый СписокЗначений;
		ЭлементОтбора.ПравоеЗначение.ЗагрузитьЗначения(ОбъектыКоторыеНеУдалосьИзменить.Выгрузить().ВыгрузитьКолонку("Объект"));
	КонецЕсли;
	
	Результат = Новый ДеревоЗначений;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Попытка
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
			КомпоновщикНастроекКомпоновкиДанных.ПолучитьНастройки(),,,
			Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	Исключение
		ТекстСообщенияОбОшибке = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат Новый Массив;
	КонецПопытки;
		
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ВыбранныеОбъекты = Новый Массив;
	
	Если Результат.Строки.Количество() <> 0 Тогда
		ВыбранныеОбъекты = Результат.Строки.ВыгрузитьКолонку("Ссылка");
		Если Не ОграничитьВыборку Тогда
			АдресСпискаВыбранных.Адрес = ПоместитьВоВременноеХранилище(ВыбранныеОбъекты, УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВыбранныеОбъекты;
	
КонецФункции

&НаСервере
Функция ВсеВыбранныеОбъекты()
	
	ОбщийРезультат = Новый Массив;
	НастройкиОтбора = НастройкиОтбора();
	Для каждого Настройки Из КомпоновщикиНастроек Цикл
		Если Настройки.Пометка Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОбщийРезультат,
				ВыбранныеОбъекты(НастройкиОтбора, Настройки.Представление, Настройки.Значение));
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбщийРезультат;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьНастройкиНСИ(Индекс, ВидОбъекта)
	
	ЕстьПравоИзменения = ПравоДоступа("Изменение", Метаданные.НайтиПоПолномуИмени(ВидОбъекта));
	
	Компоновщик = КомпоновщикиНастроек.Вставить(Индекс, Новый КомпоновщикНастроекКомпоновкиДанных, ВидОбъекта, ЕстьПравоИзменения).Значение;
	АдресаСпискаВыбранных.Вставить(Индекс).ВидОбъекта = ВидОбъекта;
	
	Если Не ЕстьПравоИзменения Тогда
		Элементы["НастройкаОтбора"+Индекс].Родитель.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТекстЗапроса = ОбработкаОбъект.ТекстЗапроса(ВидОбъекта);
	СхемаКомпоновкиДанных = ОбработкаОбъект.СхемаКомпоновкиДанных(ТекстЗапроса);
	Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор)));
	Компоновщик.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	Компоновщик.Настройки.Структура.Очистить();
	Компоновщик.Настройки.Выбор.Элементы.Очистить();
	
	ГруппировкаКомпоновкиДанных = Компоновщик.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ГруппировкаКомпоновкиДанных.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ГруппировкаКомпоновкиДанных.Использование = Истина;
	
	ПолеГруппировки = ГруппировкаКомпоновкиДанных.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("Ссылка");
	ПолеГруппировки.Использование = Истина;
	
	ПолеВыбора = Компоновщик.Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("Ссылка");
	ПолеВыбора.Использование = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЕстьНастроенныеОтборы(КомпоновщикНастроек)
	Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.Использование Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ЕстьВыбраннаяНСИ()
	Для каждого Настройка Из КомпоновщикиНастроек Цикл
		Если Настройка.Пометка Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Функция ЕстьВыбранныеОбъекты()
	НастройкиОтбора = НастройкиОтбора();
	НастройкиОтбора.ОграничитьВыборку = Истина;
	
	Для каждого Настройки Из КомпоновщикиНастроек Цикл
		Если Настройки.Пометка
			И ЗначениеЗаполнено(ВыбранныеОбъекты(НастройкиОтбора, Настройки.Представление, Настройки.Значение)) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ЕстьОтборОбъектов()
	Для каждого Настройка Из КомпоновщикиНастроек Цикл
		Если Настройка.Пометка И ЕстьНастроенныеОтборы(Настройка.Значение) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

#КонецОбласти
