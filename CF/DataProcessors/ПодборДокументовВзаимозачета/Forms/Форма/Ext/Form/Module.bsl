
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СуммаКПодбору = Параметры.СуммаКПодбору;
	
	ДокументРасчета = Параметры.ДокументРасчета;
	Магазин = Параметры.Магазин;
	Контрагент = Параметры.Контрагент;
	АдресХранилищаЭтапаОплат = Параметры.АдресХранилищаЭтапаОплат;
	
	ЗаполнитьСписок();
	
	КПодборуПоДокументу = СуммаКПодбору + Объект.Корзина.Итог("Сумма");
	КПодбору = СуммаКПодбору;
	
	УстановитьКнопкуПоУмолчаниюСервер();
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТабличнойЧастиКорзина

&НаКлиенте
Процедура КорзинаСуммаПриИзменении(Элемент)
	
	Отказ = Ложь;
	
	ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;
	ПроверитьПревышениеДопустимойСуммыВСтроке(ТекущаяСтрока.НомерСтроки - 1);
	
	ТекущиеДанные = Элементы.Корзина.ТекущиеДанные;
	ТекущиеДанные.Пометка = ?(ТекущиеДанные.Сумма > 0, Истина, Ложь);
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИмяПоле = Поле.Имя;
	ИмяРеквизита = СтрЗаменить(Поле.Имя, "Корзина", "");
	
	Если ИмяРеквизита <> "ДокументРасчета" Тогда
		Возврат;
	КонецЕсли;
	
	Значение = Элемент.ТекущиеДанные[ИмяРеквизита];
	Если ЗначениеЗаполнено(Значение) Тогда
		ПоказатьЗначение(,Значение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КорзинаПометкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Корзина.ТекущиеДанные;
	УстановитьСнятьПометку(ТекущиеДанные.Пометка);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	Для каждого Строка Из Объект.Корзина Цикл
		
		ПроверитьПревышениеДопустимойСуммыВСтроке(Строка.НомерСтроки - 1);
		
	КонецЦикла;
	
	Если Не Отказ Тогда
		ПеренестиВДокумент = Истина;
		
		Если ПеренестиВДокумент Тогда
			СтруктураРезультат = ПоместитьКорзинуВХранилище();
			ОповеститьОВыборе(СтруктураРезультат);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьСписок();
	ОбновитьИтоги();
	УстановитьКнопкуПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСуммыВзаимозачета(Команда)
	
	КПодбору = КПодборуПоДокументу;
	КПодборуСписывать = КПодбору;
	
	Для Каждого Строка Из Объект.Корзина Цикл
		
		Если КПодборуСписывать > 0 Тогда
			Строка.Сумма = Мин(КПодборуСписывать, Строка.ДоступнаяСумма);
			Строка.Пометка = Строка.Сумма > 0;
			КПодборуСписывать = КПодборуСписывать - Строка.Сумма;
			
		Иначе
			Строка.Сумма = 0;
			Строка.Пометка = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	ОбновитьИтоги();
	УстановитьКнопкуПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьСнятьПометку(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьСнятьПометку(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписок()
	
	ЭтапыОплат = ПолучитьИзВременногоХранилища(АдресХранилищаЭтапаОплат);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыОплат.ДокументВзаимозачета КАК ДокументРасчета,
	|	ЭтапыОплат.Сумма КАК Сумма,
	|	ЭтапыОплат.НомерСтроки КАК НомерСтрокиДокумента
	|ПОМЕСТИТЬ ЭтапыОплат
	|ИЗ
	|	&ЭтапыОплат КАК ЭтапыОплат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыБезТекущегоДокумента.ДокументРасчета,
	|	СУММА(РасчетыБезТекущегоДокумента.ДоступнаяСумма) КАК ДоступнаяСумма
	|ПОМЕСТИТЬ РасчетыСПоставщиками
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетыСПоставщикамиОстатки.ДокументРасчета КАК ДокументРасчета,
	|		РасчетыСПоставщикамиОстатки.КОплатеОстаток КАК ДоступнаяСумма
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками.Остатки(
	|				,
	|				Магазин = &Магазин
	|					И Поставщик = &Поставщик
	|					И ЕСТЬNULL(ДокументРасчета.Закрыт, ИСТИНА)
	|					И НЕ(ДокументРасчета = НЕОПРЕДЕЛЕНО
	|							ИЛИ ДокументРасчета = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|							ИЛИ ДокументРасчета = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.ПустаяСсылка))) КАК РасчетыСПоставщикамиОстатки
	|	ГДЕ
	|		РасчетыСПоставщикамиОстатки.КОплатеОстаток > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РасчетыСПоставщиками.ДокументРасчета,
	|		РасчетыСПоставщиками.Сумма
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|	ГДЕ
	|		РасчетыСПоставщиками.Регистратор = &ДокументРасчета
	|		И РасчетыСПоставщиками.Взаимозачет) КАК РасчетыБезТекущегоДокумента
	|ГДЕ
	|	РасчетыБезТекущегоДокумента.ДокументРасчета <> &ДокументРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыБезТекущегоДокумента.ДокументРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.ДокументРасчета КАК ДокументРасчета,
	|	МИНИМУМ(РасчетыСПоставщиками.ДоступнаяСумма) КАК ДоступнаяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА ЭтапыОплат.Сумма > РасчетыСПоставщиками.ДоступнаяСумма
	|				ТОГДА РасчетыСПоставщиками.ДоступнаяСумма
	|			ИНАЧЕ ЭтапыОплат.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	МИНИМУМ(ЭтапыОплат.НомерСтрокиДокумента) КАК НомерСтрокиДокумента,
	|	ВЫБОР
	|		КОГДА ЭтапыОплат.НомерСтрокиДокумента <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пометка
	|ИЗ
	|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЭтапыОплат КАК ЭтапыОплат
	|		ПО РасчетыСПоставщиками.ДокументРасчета = ЭтапыОплат.ДокументРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.ДокументРасчета,
	|	ВЫБОР
	|		КОГДА ЭтапыОплат.НомерСтрокиДокумента <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыСПоставщиками.ДокументРасчета.Дата";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Поставщик", Контрагент);
	Запрос.УстановитьПараметр("ЭтапыОплат", ЭтапыОплат);
	Запрос.УстановитьПараметр("ДокументРасчета", ДокументРасчета);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Корзина.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИтоги()

	КПодбору = КПодборуПоДокументу - Объект.Корзина.Итог("Сумма");

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПревышениеДопустимойСуммыВСтроке(ТекущаяСтрока)
	
	СтрокаТЧ = Объект.Корзина[ТекущаяСтрока];
	
	Если СтрокаТЧ.Сумма > СтрокаТЧ.ДоступнаяСумма Тогда
		
		ТекстСообщения = НСтр("ru = 'Сумма взаимозачета не должна превышать доступной суммы'");
		Поле = "Объект.Корзина[%ТекущаяСтрока%].Сумма";
		Поле = СтрЗаменить(Поле, "%ТекущаяСтрока%", ТекущаяСтрока);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле);
		
		Если НЕ Отказ Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьКорзинуВХранилище()
	
	ТЧКорзина = Объект.Корзина.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧКорзина.ДокументРасчета КАК ДокументРасчета,
		|	ТЧКорзина.Сумма КАК Сумма,
		|	ТЧКорзина.НомерСтрокиДокумента КАК НомерСтрокиДокумента
		|ПОМЕСТИТЬ Корзина
		|ИЗ
		|	&ТЧКорзина КАК ТЧКорзина
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Корзина.ДокументРасчета КАК ДокументВзаимозачета,
		|	Корзина.Сумма КАК Сумма,
		|	Корзина.НомерСтрокиДокумента КАК НомерСтрокиДокумента
		|ИЗ
		|	Корзина КАК Корзина
		|ГДЕ
		|	(Корзина.Сумма > 0
		|			ИЛИ Корзина.НомерСтрокиДокумента <> 0)";
		
	Запрос.УстановитьПараметр("ТЧКорзина", ТЧКорзина);
	Результат = Запрос.Выполнить();
	
	Корзина = Результат.Выгрузить();
	
	АдресКорзиныВХранилище = ПоместитьВоВременноеХранилище(Корзина, УникальныйИдентификатор);
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("АдресКорзиныВХранилище", АдресКорзиныВХранилище);
	
	Возврат СтруктураРезультат;
	
КонецФункции

&НаКлиенте
Процедура УстановитьКнопкуПоУмолчанию()
	
	Если КПодбору > 0 И Объект.Корзина.Итог("ДоступнаяСумма") > Объект.Корзина.Итог("Сумма") Тогда
		Элементы.КорзинаЗаполнитьСуммыВзаимозачета.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ФормаПеренестиВДокумент.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКнопкуПоУмолчаниюСервер()
	
	Если КПодбору > 0 И Объект.Корзина.Итог("ДоступнаяСумма") > Объект.Корзина.Итог("Сумма") Тогда
		Элементы.КорзинаЗаполнитьСуммыВзаимозачета.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ФормаПеренестиВДокумент.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометку(Пометка)
	
	ВыделенныеСтроки = Элементы.Корзина.ВыделенныеСтроки;
	
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		Строка = Объект.Корзина.НайтиПоИдентификатору(Идентификатор);
		Строка.Пометка = Пометка;
		
		Если Строка.Сумма = 0 И Пометка Тогда
			Строка.Сумма = Мин(Строка.ДоступнаяСумма, КПодбору);
			
		ИначеЕсли Не Пометка Тогда
			Строка.Сумма = 0;
		КонецЕсли;
		
		ОбновитьИтоги();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
