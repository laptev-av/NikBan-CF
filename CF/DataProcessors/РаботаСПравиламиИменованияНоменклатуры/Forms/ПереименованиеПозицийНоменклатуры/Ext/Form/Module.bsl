
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыВыбораВидаНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
		
	ЗаполнитьДанныеОбработки();	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		УстановитьДоступностьЭлементовФормы();
		ПроверитьДублиНоменклатуры();
	Иначе
		УстановитьПараметрыВыбораВидаНоменклатуры();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПараметрИменованияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда  
		СформироватьНаименованиеВСтроке(ТекущиеДанные);	
		ПроверитьДублиНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаНоменклатуры

&НаКлиенте
Процедура ТаблицаНоменклатурыНоменклатураОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("РедактированиеНоменклатурыЗавершение", ЭтотОбъект, ТекущиеДанные.Номенклатура);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента",Новый Структура("Ключ",ТекущиеДанные.Номенклатура),ЭтаФорма,,,,ОбработчикОповещения);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьЗначенияИзБазы(Команда)
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		ЗаполнитьДанныеОбработки();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗначенияВБазу(Команда)
		
	КлючиСтруктуры = "Номенклатура,Наименование";
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		КлючиСтруктуры = КлючиСтруктуры + "," + СтрокаПараметр.ИмяЭлемента;
	КонецЦикла;

	ОбработанныеСтроки = Новый Массив;
	КоличествоПропущенныхСтрок = 0;
	ВыделенныеСтроки = Элементы.ТаблицаНоменклатуры.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл
		ТекущаяСтрока = Элементы.ТаблицаНоменклатуры.ДанныеСтроки(ВыделеннаяСтрока);
		Если ТекущаяСтрока.Наименование = "" Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураСтроки = Новый Структура(КлючиСтруктуры);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки,ТекущаяСтрока);
		СтрокаОбработана = ЗаписатьИзмененияВБазу(СтруктураСтроки);
		Если СтрокаОбработана = Неопределено Тогда
			КоличествоПропущенныхСтрок = КоличествоПропущенныхСтрок + 1;
			ОбработанныеСтроки.Добавить(ВыделеннаяСтрока);
		ИначеЕсли СтрокаОбработана Тогда
			ОбработанныеСтроки.Добавить(ВыделеннаяСтрока);
		КонецЕсли;
		
	КонецЦикла;

	КоличествоОбработанныхСтрок = ОбработанныеСтроки.Количество() - КоличествоПропущенныхСтрок;
	Если КоличествоОбработанныхСтрок <> 0 Тогда
		ПоказатьОповещениеПользователя("Изменение:",,"Переименовано позиций номенклатуры: " + КоличествоОбработанныхСтрок,БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	Для Каждого ОбработаннаяСтрока из ОбработанныеСтроки Цикл
		ТекущаяСтрока = Элементы.ТаблицаНоменклатуры.ДанныеСтроки(ОбработаннаяСтрока);
		ТаблицаНоменклатуры.Удалить(ТекущаяСтрока);
	КонецЦикла;
		
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		УдалитьНоменклатуруКПереименованию();
		ВидНоменклатуры = ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.ПустаяСсылка");
		УстановитьПараметрыВыбораВидаНоменклатуры();
		Элементы.Декорация1.Видимость = Ложь;
	Иначе
		Элементы.Декорация2.Подсказка = "Позиций номенклатуры к переименованию: " + ТаблицаНоменклатуры.Количество(); 
		ПроверитьДублиНоменклатуры();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура Вставить(Команда)
		
	ТекстБуфераОбмена = ПолучитьТекстБуфераОбмена();
	Если ТекстБуфераОбмена = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееПоле = Элементы.ТаблицаНоменклатуры.ТекущийЭлемент;
	Если ТекущееПоле = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТекущейКолонки = СтрЗаменить(ТекущееПоле.Имя,"ТаблицаНоменклатуры","");
	ЗначениеБуфераОбмена = ПолучитьЗначениеБуфераОбмена(ИмяТекущейКолонки,ТекстБуфераОбмена);
	
	Если ЗначениеБуфераОбмена = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Правило = ПолучитьПравило();
	ВыделенныеСтроки = Элементы.ТаблицаНоменклатуры.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл
		ТекущаяСтрока = Элементы.ТаблицаНоменклатуры.ДанныеСтроки(ВыделеннаяСтрока);
		ТекущаяСтрока[ИмяТекущейКолонки] = ЗначениеБуфераОбмена;
		СформироватьНаименованиеВСтроке(ТекущаяСтрока,Правило);
	КонецЦикла;
	
	ПроверитьДублиНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьДанныеОбработки()
	
	ЗаполнитьПараметрыИменования();
	ЗаполнитьТаблицуНоменклатуры();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыИменования()
					
	УдалитьРеквизитыИЭлементыПравилаИменования();
	ЗаполнитьТаблицуПараметровПравилаИменования();	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатуры()
	
	ТаблицаНоменклатуры.Очистить();
	
	РезультатЗапроса = РаботаСПравиламиИменования.ПолучитьЗначенияПараметровНоменклатуры(ВидНоменклатуры,ПараметрыПравилаИменования);
	Выборка			 = РезультатЗапроса.Выбрать();
	Правило 		 = ПолучитьПравило();
	
	КлючиСтруктуры	 = "Номенклатура,ТекущееНаименование,Наименование,ОформитьНаименование";
	Для Каждого СтрокаПараметр из ПараметрыПравилаИменования Цикл
		КлючиСтруктуры = КлючиСтруктуры + ", " + СтрокаПараметр.ИмяЭлемента+ ", Оформить" + СтрокаПараметр.ИмяЭлемента;
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		
		НСтр = Новый Структура(КлючиСтруктуры);
		
		ЗаполнитьЗначенияСвойств(НСтр,Выборка);
		НСтр.ТекущееНаименование = Выборка.НоменклатураНаименование;
		
		Структура = Новый Структура;
		ПараметрыИменованияЗаполнены = Истина;
		Для Каждого СтрокаПараметр из ПараметрыПравилаИменования Цикл
			Структура.Вставить(СтрокаПараметр.ИмяЭлемента,Формат(Выборка[СтрокаПараметр.ИмяЭлемента],"ДЛФ=Д; БЛ='Ложь'; БИ='" + СтрокаПараметр.ИмяПараметра + "'"));
			Если ЗначениеЗаполнено(Выборка[СтрокаПараметр.ИмяЭлемента]) Тогда
				НСтр["Оформить" + СтрокаПараметр.ИмяЭлемента] = 1;
			Иначе	
				ПараметрыИменованияЗаполнены = Ложь;
			КонецЕсли;
		КонецЦикла;	
		Если ПараметрыИменованияЗаполнены Тогда
			НСтр.Наименование = РаботаСПравиламиИменованияКлиентСервер.ПреобразоватьСтрокуПоПравилу(Правило,Структура,"Ключ","Значение"); 
		КонецЕсли;
		
		НСтр.ОформитьНаименование = НСтр.ТекущееНаименование <> НСтр.Наименование;

		Если НСтр.ТекущееНаименование <> НСтр.Наименование Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаНоменклатуры.Добавить(),НСтр);
		КонецЕсли;
		
	КонецЦикла;

	СтрокаСортировки = "";
	Для Каждого СтрокаПараметр из ПараметрыПравилаИменования Цикл
		СтрокаСортировки = ", Оформить" + СтрокаПараметр.ИмяЭлемента + " Убыв " + СтрокаСортировки;
	КонецЦикла;
	СтрокаСортировки =  "Наименование Убыв" + СтрокаСортировки;
			
	ТаблицаНоменклатуры.Сортировать(СтрокаСортировки);
	
	Элементы.Декорация2.Подсказка = "Позиций номенклатуры к переименованию: " + ТаблицаНоменклатуры.Количество();
	
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		УдалитьНоменклатуруКПереименованию();
		ВидНоменклатуры = ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.ПустаяСсылка");
		УстановитьПараметрыВыбораВидаНоменклатуры();
		Элементы.Декорация1.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПараметровПравилаИменования()
		
	СтруктураПараметров = РаботаСПравиламиИменования.ПолучитьСтруктуруПараметровПравилаИменования(ВидНоменклатуры);

	ПараметрыПравилаИменования.Очистить();
	
	МассивПараметровПравила = Новый Массив;
	
	Для Каждого Строка Из СтруктураПараметров.ПараметрыПравилаИменования Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыПравилаИменования.Добавить(),Строка);
		МассивПараметровПравила.Добавить(Новый РеквизитФормы(Строка.ИмяЭлемента, Строка.ТипРеквизита, "ТаблицаНоменклатуры"));
		МассивПараметровПравила.Добавить(Новый РеквизитФормы("Оформить" + Строка.ИмяЭлемента,Новый ОписаниеТипов("Число"), "ТаблицаНоменклатуры"));
	КонецЦикла;
	ИзменитьРеквизиты(МассивПараметровПравила);
	
	Для Каждого Строка Из СтруктураПараметров.ПараметрыПравилаИменования Цикл
		
		НовыйЭлемент = Элементы.Добавить("ТаблицаНоменклатуры" + Строка.ИмяЭлемента, Тип("ПолеФормы"), Элементы["ТаблицаНоменклатуры"]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "ТаблицаНоменклатуры" + "." + Строка.ИмяЭлемента;
		НовыйЭлемент.Заголовок = Строка.ИмяПараметра;
		НовыйЭлемент.УстановитьДействие("ПриИзменении","Подключаемый_ПараметрИменованияПриИзменении");
		
		Если Строка.ДополнительныеЗначенияИспользуются Тогда			
			МассивПараметровВыбора = Новый Массив;
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец",Строка.ВладелецДопЗначений));				
			НовыйЭлемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
		КонецЕсли;
		
		Если Строка.ПутьКДанным = "ВидНоменклатуры" Тогда
			НовыйЭлемент.ТолькоПросмотр = Истина;	
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьПравило()
	
	Возврат РаботаСПравиламиИменованияКлиентСервер.ПреобразоватьСтрокуПоПравилу(ВидНоменклатуры.ПравилоИменования.Правило,ПараметрыПравилаИменования,"ИмяПараметра","ИмяЭлемента",Ложь);
		
КонецФункции

&НаСервере
Процедура УдалитьРеквизитыИЭлементыПравилаИменования()
	
	МассивУдаляемыхРеквизитов = Новый Массив;	
	
	Для Каждого Строка из ПараметрыПравилаИменования Цикл		
		
		МассивУдаляемыхРеквизитов.Добавить("ТаблицаНоменклатуры." + Строка.ИмяЭлемента);
		МассивУдаляемыхРеквизитов.Добавить("ТаблицаНоменклатуры.Оформить" + Строка.ИмяЭлемента);
		
		УдаляемыйЭлемент = Элементы.Найти("ТаблицаНоменклатуры" + Строка.ИмяЭлемента);
		Если УдаляемыйЭлемент <> Неопределено Тогда
			ЭтаФорма.Элементы.Удалить(УдаляемыйЭлемент);
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораВидаНоменклатуры()
	
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления",Ложь));

	ТаблицаДоступныхПараметров = РаботаСПравиламиИменования.ПолучитьДоступныеПараметры();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураКПереименованию.ВидНоменклатуры КАК ВидНоменклатуры,
	               |	НоменклатураКПереименованию.ВидНоменклатуры.НаборСвойств КАК ВидНоменклатурыНаборСвойств
	               |ИЗ
	               |	РегистрСведений.НоменклатураКПереименованию КАК НоменклатураКПереименованию";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	МассивДоступныхВидовНоменклатур = Новый Массив;
	Пока Выборка.Следующий() Цикл
		РезультатПроверкиПравила = РаботаСПравиламиИменования.ПроверитьИспользованиеПравилаИменования(Выборка.ВидНоменклатуры.ПравилоИменования,ТаблицаДоступныхПараметров,Выборка.ВидНоменклатурыНаборСвойств);
		Если РезультатПроверкиПравила.ЕстьОшибки Или РезультатПроверкиПравила.Свойство("ПравилоНельзяИспользоватьДляНабора") Тогда
			Продолжить;
		КонецЕсли;
		МассивДоступныхВидовНоменклатур.Добавить(Выборка.ВидНоменклатуры);
	КонецЦикла;
	
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивДоступныхВидовНоменклатур)));	
	ПараметрыВыбораПравилаИменования = Новый ФиксированныйМассив(МассивПараметровВыбора);	
	Элементы.ВидНоменклатуры.ПараметрыВыбора = ПараметрыВыбораПравилаИменования;

	Элементы.Декорация2.Подсказка = "Видов номенклатуры к обработке: " + МассивДоступныхВидовНоменклатур.Количество();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветПодписи);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина));
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатурыНаименование");
    
    ОтборЭлементаУсловногоОформления = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборЭлементаУсловногоОформления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.ОформитьНаименование");
    ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ОтборЭлементаУсловногоОформления.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаПодсказки);

	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатурыНоменклатура");
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатурыНаименование");
	
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
   		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры" + СтрокаПараметр.ИмяЭлемента);
	КонецЦикла;

    ОтборЭлементаУсловногоОформления = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборЭлементаУсловногоОформления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.ОформитьДубль");
    ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ОтборЭлементаУсловногоОформления.ПравоеЗначение = Истина;
	
	Для Каждого СтрокаПараметр из ПараметрыПравилаИменования Цикл
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветПодписи);
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина));
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры" + СтрокаПараметр.ИмяЭлемента);
		
		ОтборЭлементаУсловногоОформления = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлементаУсловногоОформления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.Оформить"+ СтрокаПараметр.ИмяЭлемента);
		ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлементаУсловногоОформления.ПравоеЗначение = 2;
				
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст","<Заполнить>");
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветИнформацияОшибочна);
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста));
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры" + СтрокаПараметр.ИмяЭлемента);
		
		ОтборЭлементаУсловногоОформления = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлементаУсловногоОформления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.Оформить"+ СтрокаПараметр.ИмяЭлемента);
		ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлементаУсловногоОформления.ПравоеЗначение = 0;
		
	КонецЦикла;   

КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаименованиеВСтроке(СтрокаНоменклатуры,Правило = Неопределено)
	
	Если Правило = Неопределено Тогда
		Правило = ПолучитьПравило();
	КонецЕсли;

	Структура = Новый Структура;
	ПараметрыИменованияЗаполнены = Истина;
	Для Каждого СтрокаПараметр из ПараметрыПравилаИменования Цикл
		Структура.Вставить(СтрокаПараметр.ИмяЭлемента,Формат(СтрокаНоменклатуры[СтрокаПараметр.ИмяЭлемента],"ДЛФ=Д; БЛ='Ложь'; БИ='" + СтрокаПараметр.ИмяПараметра + "'"));
		Если Не ЗначениеЗаполнено(СтрокаНоменклатуры[СтрокаПараметр.ИмяЭлемента]) Тогда
			ПараметрыИменованияЗаполнены = Ложь;
		КонецЕсли;
	КонецЦикла;	
	Если ПараметрыИменованияЗаполнены Тогда
		СтрокаНоменклатуры.Наименование = РаботаСПравиламиИменованияКлиентСервер.ПреобразоватьСтрокуПоПравилу(Правило,Структура,"Ключ","Значение");
	Иначе
		СтрокаНоменклатуры.Наименование = "";
	КонецЕсли;
	
	СтрокаНоменклатуры.ОформитьНаименование = СтрокаНоменклатуры.ТекущееНаименование <> СтрокаНоменклатуры.Наименование;		
	ЗначенияПараметровНоменклатуры = РаботаСПравиламиИменованияВызовСервера.ПолучитьЗначенияПараметровНоменклатуры(ВидНоменклатуры,ПараметрыПравилаИменования,СтрокаНоменклатуры.Номенклатура);
	Если ЗначенияПараметровНоменклатуры.Количество() > 0 Тогда
		ДанныеНоменклатуры = ЗначенияПараметровНоменклатуры[0];
		Для Каждого ЭлементСтруктуры из ДанныеНоменклатуры Цикл
			Если Не ЗначениеЗаполнено(СтрокаНоменклатуры[ЭлементСтруктуры.Ключ]) Тогда
				СтрокаНоменклатуры["Оформить" + ЭлементСтруктуры.Ключ] = 0;
			ИначеЕсли СтрокаНоменклатуры[ЭлементСтруктуры.Ключ] <> ЭлементСтруктуры.Значение Тогда
				СтрокаНоменклатуры["Оформить" + ЭлементСтруктуры.Ключ] = 2;
			Иначе
				СтрокаНоменклатуры["Оформить" + ЭлементСтруктуры.Ключ] = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УдалитьНоменклатуруКПереименованию()
	
	РаботаСПравиламиИменования.УдалитьНоменклатуруКПереименованию(ВидНоменклатуры);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьИзмененияВБазу(СтруктураСтроки)
	
	НоменклатураОбъект = СтруктураСтроки.Номенклатура.ПолучитьОбъект();
	Если НоменклатураОбъект.Наименование = СтруктураСтроки.Наименование Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Если НоменклатураОбъект.НаименованиеПолное = НоменклатураОбъект.Наименование Тогда
		НоменклатураОбъект.Наименованиеполное = СтруктураСтроки.Наименование;
	КонецЕсли;
	НоменклатураОбъект.Наименование = СтруктураСтроки.Наименование;
	
	МассивДопСведений = Новый Массив;
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		
		Если СтрокаПараметр.ЭтоДопРеквизит Тогда
			СтрокиДопРеквизитНоменклатуры = НоменклатураОбъект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",СтрокаПараметр.Свойство));
			Если СтрокиДопРеквизитНоменклатуры.Количество() = 0 Тогда
				СтрокаДопРеквизит = НоменклатураОбъект.ДополнительныеРеквизиты.Добавить();
			Иначе
				СтрокаДопРеквизит = СтрокиДопРеквизитНоменклатуры[0];
			КонецЕсли;
			СтрокаДопРеквизит.Свойство = СтрокаПараметр.Свойство;
			СтрокаДопРеквизит.Значение = СтруктураСтроки[СтрокаПараметр.ИмяЭлемента];		
		ИначеЕсли СтрокаПараметр.ЭтоДопСведение Тогда 
			СтруктураЗаписи = Новый Структура;
			СтруктураЗаписи.Вставить("Свойство",СтрокаПараметр.Свойство);
			СтруктураЗаписи.Вставить("Значение",СтруктураСтроки[СтрокаПараметр.ИмяЭлемента]);
			МассивДопСведений.Добавить(СтруктураЗаписи);
		Иначе
			НоменклатураОбъект[СтрокаПараметр.ПутьКДанным] = СтруктураСтроки[СтрокаПараметр.ИмяЭлемента];
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаОбработана = Ложь;
	Попытка
		
		НачатьТранзакцию();
		
		НоменклатураОбъект.Записать();
		
		Для Каждого ЭлементДопСведение из МассивДопСведений Цикл
			МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект = СтруктураСтроки.Номенклатура;
			МенеджерЗаписи.Свойство = ЭлементДопСведение.Свойство;
			МенеджерЗаписи.Значение = ЭлементДопСведение.Значение;
			МенеджерЗаписи.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();

		СтрокаОбработана = Истина;
				
	Исключение
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;

	КонецПопытки;
	
	Возврат СтрокаОбработана;
	
КонецФункции

&НаСервере
Функция ПолучитьЗначениеБуфераОбмена(ИмяТекущейколонки,ТекстБуфераОбмена)
	
	Если ИмяТекущейКолонки = "Наименование" Или ИмяТекущейколонки = "Номенклатура" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПромежуточнаяТЗ = ТаблицаНоменклатуры.Выгрузить(,ИмяТекущейколонки + ", Оформить" + ИмяТекущейколонки);
	ПромежуточнаяТЗ.Свернуть(ИмяТекущейколонки);

	Сравнение = "Строка";
	Если ПромежуточнаяТЗ.Колонки[ИмяТекущейколонки].ТипЗначения.СодержитТип(Тип("Число")) Тогда
		Сравнение = "Число";
	ИначеЕсли ПромежуточнаяТЗ.Колонки[ИмяТекущейколонки].ТипЗначения.СодержитТип(Тип("Дата")) Тогда
		Сравнение = "Дата";
	КонецЕсли;
	
	Для Каждого СтрокаТЗ из ПромежуточнаяТЗ Цикл
		Если Сравнение = "Число" Тогда
			Если СтрокаТЗ[ИмяТекущейколонки] = Число(ТекстБуфераОбмена) Тогда
				Возврат СтрокаТЗ[ИмяТекущейколонки];
			КонецЕсли;
		ИначеЕсли Сравнение = "Дата" Тогда
			Если Формат(СтрокаТЗ[ИмяТекущейколонки],"ДФ=dd.MM.yyyy") = ТекстБуфераОбмена Тогда
				Возврат СтрокаТЗ[ИмяТекущейколонки];
			КонецЕсли;
		Иначе
			Если Строка(СтрокаТЗ[ИмяТекущейколонки]) = ТекстБуфераОбмена Тогда
				Возврат СтрокаТЗ[ИмяТекущейколонки];
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
		
КонецФункции

&НаКлиенте
Функция ПолучитьТекстБуфераОбмена() Экспорт
	
	ТекстБуфераОбмена = "";
	
	#Если Клиент Тогда
		COMОбъект = Новый COMОбъект("htmlfile");
		ТекстБуфераОбмена = COMОбъект.ParentWindow.ClipboardData.Getdata("Text");
	#КонецЕсли

	Возврат ТекстБуфераОбмена;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступностьЭлементовФормы()
	
	Если ВидНоменклатуры.ЗапретитьРедактированиеНаименования И Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		Элементы.ТаблицаНоменклатурыНаименование.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ТаблицаНоменклатурыНаименование.ТолькоПросмотр = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактированиеНоменклатурыЗавершение(Результат,Номенклатура) Экспорт
	
	МассивСтрокНоменклатуры = ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура));
	Если МассивСтрокНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаНоменклатуры Из МассивСтрокНоменклатуры Цикл
		ДанныеСтроки = РаботаСПравиламиИменованияВызовСервера.ПолучитьЗначенияПараметровНоменклатуры(ВидНоменклатуры,ПараметрыПравилаИменования,СтрокаНоменклатуры.Номенклатура);
		Если ДанныеСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаНоменклатуры,ДанныеСтроки[0]);
			СформироватьНаименованиеВСтроке(СтрокаНоменклатуры);	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПроверитьДублиНоменклатуры()
	
	СтрокиДубли = ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("ОформитьДубль",Истина));
	Для Каждого Стр из СтрокиДубли Цикл
		Стр.ОформитьДубль = Ложь;
	КонецЦикла;
	
	КлючиСтруктуры = "Наименование";
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		КлючиСтруктуры = КлючиСтруктуры + "," + СтрокаПараметр.ИмяЭлемента;
	КонецЦикла;
	
	Таб = ТаблицаНоменклатуры.Выгрузить(,КлючиСтруктуры);
	
	Таб.Колонки.Добавить("Счетчик");
	
	Таб.ЗаполнитьЗначения(1,"Счетчик");
	
	Таб.Свернуть(КлючиСтруктуры,"Счетчик");
	
	МассивПустых = Таб.НайтиСтроки(Новый Структура("Наименование",""));
	Для Каждого СтрокаПустоеНаименование Из МассивПустых Цикл
		Таб.Удалить(СтрокаПустоеНаименование);
	КонецЦикла;
	
	МассивРазличных = Таб.НайтиСтроки(Новый Структура("Счетчик",1));
	Для Каждого Строка из МассивРазличных Цикл
		Таб.Удалить(Строка);
	КонецЦикла;
	
	КоличествоНекорректныхСтрок = 0;
	Для Каждого Строка из Таб Цикл
		СтруктураПоиск = Новый Структура(КлючиСтруктуры);
		ЗаполнитьЗначенияСвойств(СтруктураПоиск,Строка);
		ОформляемыеСтроки = ТаблицаНоменклатуры.НайтиСтроки(СтруктураПоиск);
		Для Каждого СтрокаТаб из ОформляемыеСтроки Цикл
			СтрокаТаб.ОформитьДубль = Истина;
			КоличествоНекорректныхСтрок = КоличествоНекорректныхСтрок + 1;
		КонецЦикла;
	КонецЦикла;
	
	Элементы.Декорация1.Подсказка = "Позиций с одинаковым наименованием: " + КоличествоНекорректныхСтрок;
	Элементы.Декорация1.Видимость = Таб.Количество() > 0;
		
КонецПроцедуры