#Область ОбработчикиСобытийФормы

&НаКлиенте
Перем ОбновитьИнтерфейс;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Обновление состояния элементов.
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбработчикОповещений(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьПодключаемоеОборудованиеПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбменСПодключаемымОборудованиемПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКомментарийИспользоватьПОНажатие(Элемент)
	
	ТекстСообщения = Элементы.ДекорацияКомментарийИспользоватьПО.Подсказка;
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьРабочиеМеста(Команда)
	
	ПараметрыВыполненияКоманды = Новый Структура;
	ПараметрыВыполненияКоманды.Вставить("Источник", ЭтаФорма);
	ПараметрыВыполненияКоманды.Вставить("Уникальность", УникальныйИдентификатор);
	ПараметрыВыполненияКоманды.Вставить("Окно",);
	
	МенеджерОборудованияКлиент.ОткрытьРабочиеМеста(Неопределено, ПараметрыВыполненияКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРМТекущегоСеанса(Команда)
	
	МенеджерОборудованияКлиент.ВыбратьРМТекущегоСеанса(Неопределено, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблоныРаботыДисплеяПокупателя(Команда)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Справочник.ШаблоныРаботыДисплеяПокупателя.Форма.ФормаСписка.Открытие");
	
	ОткрытьФорму("Справочник.ШаблоныРаботыДисплеяПокупателя.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПравилаОбменаСПодключаемымОборудованием(Команда)

    // &ЗамерПроизводительности
        ОценкаПроизводительностиРТКлиент.НачатьЗамер(
                 Истина, "Справочник.ПравилаОбменаСПодключаемымОборудованием.Форма.ФормаСписка.Открытие");
                 
	ОткрытьФорму("Справочник.ПравилаОбменаСПодключаемымОборудованием.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодключаемоеОборудование(Команда)
	
	ПараметрыВыполненияКоманды = Новый Структура;
	ПараметрыВыполненияКоманды.Вставить("Источник", ЭтаФорма);
	ПараметрыВыполненияКоманды.Вставить("Уникальность", УникальныйИдентификатор);
	ПараметрыВыполненияКоманды.Вставить("Окно",);
	
	МенеджерОборудованияКлиент.ОткрытьПодключаемоеОборудование(Неопределено, ПараметрыВыполненияКоманды);

	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиРаспределенияВыручкиПоСекциямФР(Команда)
	// &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.НастройкиРаспределенияВыручкиПоСекциямФР.Форма.ФормаСписка.Открытие");
             
	ОткрытьФорму("Справочник.НастройкиРаспределенияВыручкиПоСекциямФР.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСоответствиеВидовОплатыСККМOffline(Команда)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		         Истина, "Справочник.СоответствиеВидовОплатыСККМOffline.Форма.ФормаСписка.Открытие");
                 
	ОткрытьФорму("Справочник.СоответствиеВидовОплатыСККМOffline.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьКассыКОператоруФискальныхДанных(Команда)
	ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку("http://v8.1c.ru/cnt.jsp/:kd_roz:/https://portal.1c.ru/applications/56");
КонецПроцедуры

&НаКлиенте
Процедура ВсеО54ФЗ(Команда)
	ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку("http://v8.1c.ru/cnt.jsp/:kd_roz:/http://v8.1c.ru/kkt/");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если Результат <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещений(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	Результат = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Определение имени константы.
	КонстантаИмя = "";
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат КонстантаИмя;
	КонецЕсли;
	
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	ИспользоватьПодключаемоеОборудование 				= НаборКонстант.ИспользоватьПодключаемоеОборудование;
	ИспользоватьОбменСПодключаемымОборудованием 	= НаборКонстант.ИспользоватьОбменСПодключаемымОборудованием;
	
	ИспользоватьСинхронизациюДанных = Константы.ИспользоватьСинхронизациюДанных.Получить();
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьПодключаемоеОборудование"
		ИЛИ РеквизитПутьКДанным = "НаборКонстант.ИспользоватьОбменСПодключаемымОборудованием" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		Элементы.ОткрытьПодключаемоеОборудование.Доступность 					= ИспользоватьПодключаемоеОборудование;
		Элементы.ОткрытьШаблоныРаботыДисплеяПокупателя.Доступность 				= ИспользоватьПодключаемоеОборудование;
		Элементы.ОткрытьШаблоныРегистрацииНовыхКарт.Доступность 				= ИспользоватьПодключаемоеОборудование;
		Элементы.ИспользоватьОбменСПодключаемымОборудованием.Доступность		= ИспользоватьПодключаемоеОборудование;
		Элементы.ОткрытьСоответствиеВидовОплатыСККМOffline.Доступность			= ИспользоватьОбменСПодключаемымОборудованием;
		Элементы.ФорматыЗаписиКодовМагнитныхКарт.Доступность 					= ИспользоватьПодключаемоеОборудование;
		Элементы.ОткрытьНастройкиРаспределенияВыручкиПоСекциямФР.Доступность 	= ИспользоватьПодключаемоеОборудование;
		Элементы.ОткрытьПравилаОбменаСПодключаемымОборудованием.Доступность 	= ИспользоватьОбменСПодключаемымОборудованием;
		Элементы.ГруппаФЗ54.Доступность 										= ИспользоватьПодключаемоеОборудование;
		
		Если ИспользоватьОбменСПодключаемымОборудованием Тогда
			
			Элементы.ИспользоватьПодключаемоеОборудование.ТолькоПросмотр = Истина;
			Элементы.ДекорацияКомментарийИспользоватьПО.Видимость = Истина;
		Иначе
			
			Элементы.ДекорацияКомментарийИспользоватьПО.Видимость = Ложь;
			Элементы.ИспользоватьПодключаемоеОборудование.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Если ИспользоватьСинхронизациюДанных Тогда
			Если ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоМагазину") <> Неопределено
				И ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
				
			ИначеЕсли ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоРабочемуМесту") <> Неопределено
				И ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
