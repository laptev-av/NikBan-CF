
#Область ОбработчикиСобытийФормы

&НаКлиенте
Перем ОбновитьИнтерфейс;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Настройки видимости при запуске.
	
	// Обновление состояния элементов.
	УстановитьДоступность();
	ОбновитьСвойстваРеквизитаИспользоватьХарактеристикиНоменклатуры();
	ОбновитьСвойстваРеквизитаИспользоватьУпаковкиНоменклатуры();
	ОбновитьСвойстваРеквизитаИспользоватьСерииНоменклатуры();
	ОбновитьСвойстваРеквизитаИспользоватьПроверкуНаВводДробногоКоличества();
	ОбновитьСвойстваРеквизитаИспользоватьУчетИмпортныхТоваров();
	ОбновитьСвойстваРеквизитаИспользоватьКомиссионнуюТорговлю();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбработчикОповещений(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		
		КолонкаДляОтображенияНоменклатуры = "Артикул";
		
	ИначеЕсли НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		
		КолонкаДляОтображенияНоменклатуры = "Код";
		
	ИначеЕсли НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул Тогда
		
		КолонкаДляОтображенияНоменклатуры = "КодАртикул";
	Иначе
		
		КолонкаДляОтображенияНоменклатуры = "НеВыводить";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЕдиницаИзмеренияВесаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияОбъемаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьХарактеристикиНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьХарактеристикиНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУпаковкиНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьУпаковкиНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСерииНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьСерииНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПолнотекстовыйПоискПриПодбореТоваровПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНеуникальныеШтрихкодыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксШтрихкодаУзлаРИБПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаШтучногоТовараПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура КолонкаДляОтображенияНоменклатурыПриИзменении(Элемент)
	
	УстановитьДополнительнуюКолонкуНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаВесовогоТовараПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовараПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура SKUУстанавливаетсяВГлавномУзлеРИБПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическиГенерироватьSKUПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВестиСведенияДляДекларацийПоАлкогольнойПродукцииПриИзменении(Элемент)
	
	Если НаборКонстант.ВестиСведенияДляДекларацийПоАлкогольнойПродукции Тогда
		ВестиСведенияДляДекларацийПоАлкогольнойПродукцииПриИзмененииСервер();
	КонецЕсли;
	
	НаборКонстант.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС = НаборКонстант.ВестиСведенияДляДекларацийПоАлкогольнойПродукции;
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПримененияПриказа164ПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаРегистрацииРозничныхПродажВЕГАИСПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестностиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьПродажиНемаркируемойПродукцииВЕГАИСПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКомментарийНажатие(Элемент)
	
	ТекстСообщения = Элемент.Подсказка;
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПроверкуНаВводДробногоКоличестваПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьПроверкуНаВводДробногоКоличества();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомиссионнуюТорговлюПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьКомиссионнуюТорговлю();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриоритетыРеализацииТоваровПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУчетИмпортныхТоваровПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьУчетИмпортныхТоваров();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПравилаИменованияНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетМаркировкиТабачнойПродукцииПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВестиУчетМаркировкиОбувнойПродукцииПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьДиапазонГенерацииSKU(Команда)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Обработка.ПанельАдминистрированияРТ.Форма.ВводДиапазонаГенерацииSKU.Открытие");
             
	ОткрытьФорму("Обработка.ПанельАдминистрированияРТ.Форма.ВводДиапазонаГенерацииSKU", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиОбменаЕГАИС(Команда)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "РегистрСведений.НастройкиОбменаЕГАИС.Форма.ФормаСписка.Открытие");
             
    ОткрытьФорму("РегистрСведений.НастройкиОбменаЕГАИС.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
			ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
			ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если Результат <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

// Обработка оповещений от других открытых форм.
//
// Пример:
//   Если ИмяСобытия = "НаборКонстант.ПрефиксУзлаРаспределеннойИнформационнойБазы" Тогда
//     НаборКонстант.ПрефиксУзлаРаспределеннойИнформационнойБазы = Параметр;
//   КонецЕсли;
//
&НаКлиенте
Процедура ОбработчикОповещений(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		ЭтаФорма.Прочитать();
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	Результат = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьДополнительнуюКолонкуНоменклатуры()
	
	Если КолонкаДляОтображенияНоменклатуры = "Артикул" Тогда
		
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул;
		
	ИначеЕсли КолонкаДляОтображенияНоменклатуры = "Код" Тогда
		
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код;
		
	ИначеЕсли КолонкаДляОтображенияНоменклатуры = "КодАртикул" Тогда
		
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул;
		
	ИначеЕсли КолонкаДляОтображенияНоменклатуры = "НеВыводить" Тогда
		
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
		
	КонецЕсли;
	
	Результат = СохранитьЗначениеРеквизита("НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ВестиСведенияДляДекларацийПоАлкогольнойПродукцииПриИзмененииСервер()
	
	ДатаНачалаПримененияПриказа164 = НаборКонстант.ДатаНачалаПримененияПриказа164;
	Если НЕ ЗначениеЗаполнено(ДатаНачалаПримененияПриказа164) Тогда
		НаборКонстант.ДатаНачалаПримененияПриказа164 = Дата(2016, 1, 1);
		Результат = ПриИзмененииРеквизитаСервер("ДатаНачалаПримененияПриказа164");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС.Получить()) Тогда
		НаборКонстант.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС = Дата(2016, 7, 1);
		Результат = ПриИзмененииРеквизитаСервер("ДатаНачалаРегистрацииРозничныхПродажВЕГАИС");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить()) Тогда
		НаборКонстант.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности = Дата(2017, 7, 1);
		Результат = ПриИзмененииРеквизитаСервер("ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Сервер

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьУчетИмпортныхТоваров()
	Если НаборКонстант.ИспользоватьУчетИмпортныхТоваров Тогда
		Элементы.ИспользоватьУчетИмпортныхТоваров.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ИспользоватьУчетИмпортныхТоваров.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьКомиссионнуюТорговлю()
	Если НаборКонстант.ИспользоватьКомиссионнуюТорговлю Тогда
		Элементы.ИспользоватьКомиссионнуюТорговлю.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ИспользоватьКомиссионнуюТорговлю.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Определение имени константы.
	КонстантаИмя = "";
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат КонстантаИмя;
	КонецЕсли;
	
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	ИспользоватьПодключаемоеОборудование = Константы.ИспользоватьПодключаемоеОборудование.Получить();
	ИспользоватьОбменСПодключаемымОборудованием = Константы.ИспользоватьОбменСПодключаемымОборудованием.Получить();
	ИспользоватьСинхронизациюДанных = Константы.ИспользоватьСинхронизациюДанных.Получить();
	ВестиСведенияДляДекларацийПоАлкогольнойПродукции = Константы.ВестиСведенияДляДекларацийПоАлкогольнойПродукции.Получить();
	ВестиУчетМаркировкиПродукцииВГИСМ = Константы.ВестиУчетМаркировкиПродукцииВГИСМ.Получить();
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Элементы.ДекорацияКомментарийАвтоматическиГенерироватьSKU.Видимость = Ложь;
		
		ИспользоватьПолнотекстовыйПоиск = Константы.ИспользоватьПолнотекстовыйПоиск.Получить();
		
		Элементы.ИспользоватьПолнотекстовыйПоискПриПодбореТоваров.ТолькоПросмотр = НЕ ИспользоватьПолнотекстовыйПоиск;
		Элементы.ДекорацияКомментарийПолнотекстовыйПоискПриПодбореТоваров.Видимость = НЕ ИспользоватьПолнотекстовыйПоиск;
		
		Если НЕ ИспользоватьПодключаемоеОборудование Тогда
			
			КомментарийОбменомСПодключаемымОборудованием = НСтр("ru = 'Настройка штрихкодирования товара на весах недоступна, потому что:
			|- выключено использование подключаемого оборудования
			|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Подсказка = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Видимость = Истина;
			
			КомментарийОбменомСПодключаемымОборудованием = НСтр("ru = 'Настройка кодов SKU недоступна, потому что:
			|- выключено использование подключаемого оборудования
			|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.ДекорацияКомментарийКодыSKU.Подсказка = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийКодыSKU.Видимость = Истина;
			
		ИначеЕсли ИспользоватьПодключаемоеОборудование И НЕ ИспользоватьОбменСПодключаемымОборудованием Тогда
			
			КомментарийОбменомСПодключаемымОборудованием = НСтр("ru = 'Настройка штрихкодирования товара на весах недоступна, потому что:
			|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Подсказка = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Видимость = Истина;
			
			КомментарийОбменомСПодключаемымОборудованием = НСтр("ru = 'Настройка кодов SKU недоступна, потому что:
			|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.ДекорацияКомментарийКодыSKU.Подсказка = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийКодыSKU.Видимость = Истина;
			
		Иначе
			
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Видимость = Ложь;
			Элементы.ДекорацияКомментарийКодыSKU.Видимость = Ложь;
			
		КонецЕсли;
		
		Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность = ИспользоватьПодключаемоеОборудование И ИспользоватьОбменСПодключаемымОборудованием;
		Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = ИспользоватьПодключаемоеОборудование И ИспользоватьОбменСПодключаемымОборудованием;
		
		Элементы.ОткрытьДиапазонГенерацииSKU.Доступность   = ИспользоватьОбменСПодключаемымОборудованием;
		
		Если НЕ ИспользоватьОбменСПодключаемымОборудованием Тогда
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность = Ложь;

		ИначеЕсли НЕ ИспользоватьСинхронизациюДанных Тогда
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр = Истина;
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность = Истина;
		Иначе
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность = Истина;
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
		Если НЕ ИспользоватьСинхронизациюДанных И ИспользоватьОбменСПодключаемымОборудованием Тогда
			Элементы.ДекорацияКомментарийSKUУстанавливаетсяВГлавномУзлеРИБ.Видимость = Истина;
		Иначе
			Элементы.ДекорацияКомментарийSKUУстанавливаетсяВГлавномУзлеРИБ.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Если НаборКонстант.ИспользоватьСинхронизациюДанных Тогда
			Если ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоМагазину") <> Неопределено
				И ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
				
				Элементы.ИспользоватьХарактеристикиНоменклатуры.ТолькоПросмотр 	= Истина;
				Элементы.ИспользоватьУпаковкиНоменклатуры.ТолькоПросмотр 		= Истина;
				Элементы.ЕдиницаИзмеренияВеса.ТолькоПросмотр 				= Истина;
				Элементы.ЕдиницаИзмеренияОбъема.ТолькоПросмотр 			= Истина;
				Элементы.ИспользоватьНеуникальныеШтрихкоды.ТолькоПросмотр 		= Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр 		= Истина;
				Элементы.ИспользоватьПроверкуНаВводДробногоКоличества.ТолькоПросмотр = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность	= Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = Истина;
				
				Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр                = Истина;
				Элементы.ОткрытьДиапазонГенерацииSKU.Доступность = ИспользоватьОбменСПодключаемымОборудованием И НЕ НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ;
				Элементы.ВестиСведенияДляДекларацийПоАлкогольнойПродукции.ТолькоПросмотр = Истина;
				Элементы.ДатаНачалаПримененияПриказа164.ТолькоПросмотр                   = Истина;
				Элементы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС.ТолькоПросмотр   = Истина;
				Элементы.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьКомиссионнуюТорговлю.ТолькоПросмотр             = Истина;
				Элементы.ПриоритетыРеализацииТоваров.ТолькоПросмотр                  = Истина;
				Элементы.ИспользоватьУчетИмпортныхТоваров.ТолькоПросмотр             = Истина;
				Элементы.ИспользоватьПравилаИменованияНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ВестиУчетМаркировкиТабачнойПродукции.ТолькоПросмотр = Истина;
				Элементы.ВестиУчетМаркировкиОбувнойПродукции.ТолькоПросмотр = Истина;
				
				УстановитьПодсказкуАвтоматическиГенерироватьSKU();
				
			ИначеЕсли ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоРабочемуМесту") <> Неопределено
			И ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
			
				Элементы.ИспользоватьХарактеристикиНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьУпаковкиНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ЕдиницаИзмеренияВеса.ТолькоПросмотр = Истина;
				Элементы.ЕдиницаИзмеренияОбъема.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьПроверкуНаВводДробногоКоличества.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьНеуникальныеШтрихкоды.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = Истина;
				
				Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр = Истина;
				Элементы.ОткрытьДиапазонГенерацииSKU.Доступность = ИспользоватьОбменСПодключаемымОборудованием И НЕ НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ;
				Элементы.ВестиСведенияДляДекларацийПоАлкогольнойПродукции.ТолькоПросмотр = Истина;
				Элементы.ДатаНачалаПримененияПриказа164.ТолькоПросмотр = Истина;
				Элементы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС.ТолькоПросмотр = Истина;
				Элементы.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьПравилаИменованияНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ВестиУчетМаркировкиТабачнойПродукции.ТолькоПросмотр = Истина;
				Элементы.ВестиУчетМаркировкиОбувнойПродукции.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьКомиссионнуюТорговлю.ТолькоПросмотр = Истина;
				Элементы.ПриоритетыРеализацииТоваров.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьУчетИмпортныхТоваров.ТолькоПросмотр = Истина;
				
				УстановитьПодсказкуАвтоматическиГенерироватьSKU();
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность    = Ложь;
	КонецЕсли;
	
	Элементы.ДатаНачалаПримененияПриказа164.Доступность = ВестиСведенияДляДекларацийПоАлкогольнойПродукции;
	Элементы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИС.Доступность = ВестиСведенияДляДекларацийПоАлкогольнойПродукции;
	Элементы.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС.Доступность = ВестиСведенияДляДекларацийПоАлкогольнойПродукции;
	Элементы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Доступность = ВестиСведенияДляДекларацийПоАлкогольнойПродукции;
	Элементы.ОткрытьНастройкиОбменаЕГАИС.Доступность = ВестиСведенияДляДекларацийПоАлкогольнойПродукции;
	
	Элементы.ИспользоватьСерииНоменклатуры.Доступность = НЕ ВестиУчетМаркировкиПродукцииВГИСМ;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьХарактеристикиНоменклатуры()
	Если Константы.ИспользоватьХарактеристикиНоменклатуры.Получить() Тогда
		Элементы.ИспользоватьХарактеристикиНоменклатуры.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ИспользоватьХарактеристикиНоменклатуры.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьУпаковкиНоменклатуры()
	Если Константы.ИспользоватьУпаковкиНоменклатуры.Получить() Тогда
		Элементы.ИспользоватьУпаковкиНоменклатуры.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ИспользоватьУпаковкиНоменклатуры.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьСерииНоменклатуры()
	Если Константы.ИспользоватьСерииНоменклатуры.Получить() Тогда
		Элементы.ИспользоватьСерииНоменклатуры.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ИспользоватьСерииНоменклатуры.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказкуАвтоматическиГенерироватьSKU()
	
	Если НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ Тогда
	
		ЗачеркнутыйШрифт = Новый Шрифт(Элементы.АвтоматическиГенерироватьSKU.ШрифтЗаголовка,,,,,, Истина);
		Элементы.АвтоматическиГенерироватьSKU.ШрифтЗаголовка = ЗачеркнутыйШрифт;
		
		Элементы.ДекорацияКомментарийАвтоматическиГенерироватьSKU.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьПроверкуНаВводДробногоКоличества()
	Если Константы.ИспользоватьПроверкуНаВводДробногоКоличества.Получить() Тогда
		Элементы.ИспользоватьПроверкуНаВводДробногоКоличества.ОтображениеПредупрежденияПриРедактировании 
			= ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ИспользоватьПроверкуНаВводДробногоКоличества.ОтображениеПредупрежденияПриРедактировании 
			= ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#КонецОбласти