
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработкаВопросаОСозданииУникальныхНомеров(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СозданоСертификатов = СоздатьСертификаты(Ложь);
		Оповестить("СозданыСертификаты");
		ПоказатьОповещениеПользователя(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Создано %1 сертификатов'"), СозданоСертификатов));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Номенклатура.Пустая() Тогда
		
		Параметры.Свойство("ВыборВДокумент", Объект.ВыборВДокумент);
		Параметры.Свойство("ПеренестиВПодбор", ПеренестиВПодбор);
		
		Номенклатура   = Параметры.Номенклатура;
		ИспользоватьСерийныеНомера = Параметры.Номенклатура.ИспользоватьСерийныеНомера;
		
		ТипСерийногоНомера = Параметры.Номенклатура.ТипСерийногоНомера;
		Объект.ЕстьМагнитныеКоды  = (ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Магнитный ИЛИ ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Смешанный);
		Объект.ЕстьШтрихкоды       = (ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Штриховой ИЛИ ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Смешанный);
		
		Элементы.ГруппаМагнитныеИСимвольные.Видимость          = Объект.ЕстьМагнитныеКоды;
		Элементы.ГруппаШтриховые.Видимость                     = Объект.ЕстьШтрихкоды;
		Элементы.КоличествоСимволов.ОтметкаНезаполненного      = Объект.ЕстьМагнитныеКоды;
		Элементы.КоличествоСимволов.АвтоОтметкаНезаполненного  = Объект.ЕстьМагнитныеКоды;
		Элементы.ТипШтрихкодаРТ.ОтметкаНезаполненного          = Объект.ЕстьШтрихкоды;
		Элементы.ТипШтрихкодаРТ.АвтоОтметкаНезаполненного      = Объект.ЕстьШтрихкоды;
		Элементы.ПервыйШтрихкод.ОтметкаНезаполненного          = Объект.ЕстьШтрихкоды;
		Элементы.ПервыйШтрихкод.АвтоОтметкаНезаполненного      = Объект.ЕстьШтрихкоды;
		Элементы.ПервыйШтрихкодEAN13.ОтметкаНезаполненного     = Объект.ЕстьШтрихкоды;
		Элементы.ПервыйШтрихкодEAN13.АвтоОтметкаНезаполненного = Объект.ЕстьШтрихкоды;
		Элементы.ПервыйШтрихкодEAN8.ОтметкаНезаполненного      = Объект.ЕстьШтрихкоды;
		Элементы.ПервыйШтрихкодEAN8.АвтоОтметкаНезаполненного  = Объект.ЕстьШтрихкоды;
		
		ЕстьОшибкиПоМагнитнымКодам = Ложь;
		ЕстьОшибкиПоШтрихкодам     = Ложь;
		
		Если Объект.ВыборВДокумент Тогда
			
			Элементы.ФормаСформировать.Заголовок = НСтр("ru = 'Выбрать диапазон'");
			Элементы.ФормаПроверкаСерийныхНомеров.Видимость = Ложь;
			Элементы.ФормаПроверкаСерийныхНомеров.Доступность = Ложь;
									
		КонецЕсли;
				
	КонецЕсли;
	
	Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
	Элементы.СтраницыШтрихКода.ТекущаяСтраница = Элементы.СтраницаEAN13;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Параметры.Номенклатура.Пустая() Тогда
		
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не задана номенклатура для заполнения
									|диапазона номеров подарочных сертификатов'");
		ПоказатьПредупреждение(,ТекстСообщения);
		
	ИначеЕсли НЕ ИспользоватьСерийныеНомера Тогда
		
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'По номенклатуре не ведется учет
									|номеров подарочных сертификатов'");
		ПоказатьПредупреждение(,ТекстСообщения);
			
	КонецЕсли;
	
	ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипШтрихкодаПриИзменении(Элемент)
	
	ИмяСтраницы = "";
	Если Объект.ТипШтрихкодаРТ = ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыШтрихкодов.EAN13") Тогда
		ИмяСтраницы = "СтраницаEAN13";
	ИначеЕсли Объект.ТипШтрихкодаРТ = ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыШтрихкодов.EAN8") Тогда
		ИмяСтраницы = "СтраницаEAN8";
	Иначе
		ИмяСтраницы = "СтраницаCode39";
	КонецЕсли;
	
	Объект.ПервыйШтрихкод = "";
	Объект.ПервыйШтрихкодEAN13 = "";
	Объект.ПервыйШтрихкодEAN8 = "";
	ПоследнийШтрихкод = "";
	
	Если ЗначениеЗаполнено(ИмяСтраницы) Тогда
		Элементы.СтраницыШтрихКода.ТекущаяСтраница = Элементы[ИмяСтраницы];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПервыйШтрихкодПриИзменении(Элемент)
	
	ПриИзмененииПервыйШтрихкод();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоСертификатовПриИзменении(Элемент)
	
	ПриИзмененииКоличествоСертификатов();
		
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксПостфиксПриИзменении(Элемент)
	
	РассчитатьМагнитныеКоды();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		Если Объект.ВыборВДокумент Тогда
			
			Если ВыбратьДиапазон() Тогда
				
				ОповеститьОВыборе(АдресСерийныхНомеровВХранилище);
				
			Иначе
				
				ПоказатьОповещениеПользователя(НСтр("ru = 'Нет доступных номеров подарочных сертификатов'"));
				
			КонецЕсли;
			
		Иначе
			
			Если Не ПроверитьОбщуюВозможностьСозданияСертификатов() Тогда
				Возврат;
			КонецЕсли;
			
			Если НайтиПересеченияКодов() Тогда
				
				СозданоСертификатов = СоздатьСертификаты();
				Оповестить("СозданыСертификаты");
				ПоказатьОповещениеПользователя(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Создано %1 сертификатов'"), СозданоСертификатов));
				Если ПеренестиВПодбор Тогда
					Объект.ВыборВДокумент = Истина;
					Элементы.ФормаСформировать.Заголовок = НСтр("ru = 'Выбрать диапазон'");
					Элементы.ФормаПроверкаСерийныхНомеров.Видимость = Ложь;
					Элементы.ФормаПроверкаСерийныхНомеров.Доступность = Ложь;
				КонецЕсли;
			Иначе
				
				ПечатьПроверкиИспользуемыхКодов();
				
				ДополнительныеПараметры = Новый Структура;
				ОбработчикОповещения = Новый ОписаниеОповещения("ОбработкаВопросаОСозданииУникальныхНомеров", ЭтотОбъект, ДополнительныеПараметры);
				
				ТекстВопроса = НСтр("ru = 'В заданном диапазоне есть использованные ранее коды.
				|Продолжить создание только уникальных номеров подарочных сертификатов?'");
				ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСерийныхНомеров(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		
		Если НайтиПересеченияКодов() Тогда
				
			ПоказатьОповещениеПользователя(НСтр("ru = 'Проверка успешно пройдена'"));
				
		Иначе
			
			ПечатьПроверкиИспользуемыхКодов(); 
			
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьТаблицу(ПроверяемаяТаблица, ДлинаСтроки)
	
	МассивУдаляемыхСтрок = Новый Массив;
	
	Для Каждого ПроверяемаяСтрока Из ПроверяемаяТаблица Цикл
		
		Если НЕ СтрДлина(ПроверяемаяСтрока.КодКарты) = ДлинаСтроки Тогда
			
			МассивУдаляемыхСтрок.Добавить(ПроверяемаяСтрока);
			
		ИначеЕсли Объект.ВыборВДокумент Тогда
			
			СписокСерийныхНомеров.Добавить(ПроверяемаяСтрока.Карта);
	     			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаМассива Из МассивУдаляемыхСтрок Цикл
		ПроверяемаяТаблица.Удалить(СтрокаМассива);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция НайтиСуществующиеМагнитныеКоды()

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодКарты КАК КодКарты,
	|	ВложенныйЗапрос.ВладелецКарты,
	|	ВложенныйЗапрос.ВидКода,
	|	ВложенныйЗапрос.Дополнительно,
	|	ВложенныйЗапрос.Карта
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИнформационныеКарты.КодКарты КАК КодКарты,
	|		ИнформационныеКарты.ВладелецКарты КАК ВладелецКарты,
	|		&МагнитныйКод КАК ВидКода,
	|		ВЫБОР
	|			КОГДА ИнформационныеКарты.ТипКарты = ЗНАЧЕНИЕ(Перечисление.ТипыИнформационныхКарт.Регистрационная)
	|				ТОГДА &РегистрационнаяКарта
	|			ИНАЧЕ &ДисконтнаяКарта
	|		КОНЕЦ КАК Дополнительно,
	|		ИнформационныеКарты.Ссылка КАК Карта
	|	ИЗ
	|		Справочник.ИнформационныеКарты КАК ИнформационныеКарты
	|	ГДЕ
	|		ИнформационныеКарты.КодКарты >= &ПервыйКод
	|		И ИнформационныеКарты.КодКарты <= &ПоследнийКод
	|		И (ВЫРАЗИТЬ(ИнформационныеКарты.КодКарты КАК СТРОКА(200))) = ИнформационныеКарты.КодКарты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СерийныеНомера.КодСерийногоНомера,
	|		СерийныеНомера.Владелец,
	|		&МагнитныйКод,
	|		&НомерПодарочногоСертификата,
	|		СерийныеНомера.Ссылка
	|	ИЗ
	|		Справочник.СерийныеНомера КАК СерийныеНомера
	|	ГДЕ
	|		СерийныеНомера.КодСерийногоНомера >= &ПервыйКод
	|		И СерийныеНомера.КодСерийногоНомера <= &ПоследнийКод
	|		И (ВЫРАЗИТЬ(СерийныеНомера.КодСерийногоНомера КАК СТРОКА(200))) = СерийныеНомера.КодСерийногоНомера) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодКарты");
	
	Запрос.УстановитьПараметр("МагнитныйКод",                НСтр("ru = 'Магнитный код'"));
	Запрос.УстановитьПараметр("РегистрационнаяКарта",        НСтр("ru = 'Регистрационная карта'"));
	Запрос.УстановитьПараметр("ДисконтнаяКарта",             НСтр("ru = 'Дисконтная карта'"));
	Запрос.УстановитьПараметр("НомерПодарочногоСертификата", НСтр("ru = 'Номер подарочного сертификата'"));
	
	Запрос.УстановитьПараметр("ПервыйКод", ПервыйМагнитныйКод);
	Запрос.УстановитьПараметр("ПоследнийКод", ПоследнийМагнитныйКод);
	
	КоличествоСимволовВКоде = СтрДлина(ПервыйМагнитныйКод);
	Запрос.Текст            = СтрЗаменить(Запрос.Текст, "200", Формат(КоличествоСимволовВКоде, "ЧГ=0"));
	ТаблицаЗапроса          = Запрос.Выполнить().Выгрузить();
	
	ПроверитьТаблицу(ТаблицаЗапроса, КоличествоСимволовВКоде);
	
	ТаблицаМагнитныхКодов.Загрузить(ТаблицаЗапроса);
	
	Возврат ТаблицаЗапроса.Количество();

КонецФункции

&НаСервере
Функция НайтиСуществующиеШтрихКоды()

	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.СерийныеНомера
	|			ТОГДА Штрихкоды.Владелец.Владелец
	|		ИНАЧЕ Штрихкоды.Владелец
	|	КОНЕЦ КАК ВладелецКарты,
	|	Штрихкоды.Штрихкод КАК КодКарты,
	|	&ШтриховойКод КАК ВидКода,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|			ТОГДА &ЕдИзм + Штрихкоды.Упаковка.Наименование + ВЫБОР
	|					КОГДА (НЕ Штрихкоды.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|						ТОГДА &Характеристика + Штрихкоды.Характеристика.Наименование
	|					ИНАЧЕ &ПустаяСтрока
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.ИнформационныеКарты
	|					ТОГДА ВЫБОР
	|							КОГДА Штрихкоды.Владелец.ТипКарты = ЗНАЧЕНИЕ(Перечисление.ТипыИнформационныхКарт.Регистрационная)
	|								ТОГДА &РегистрационнаяКарта
	|							ИНАЧЕ &ДисконтнаяКарта
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Штрихкоды.Владелец ССЫЛКА Справочник.СерийныеНомера
	|							ТОГДА &НомерПодарочногоСертификата
	|						ИНАЧЕ &ПустаяСтрока
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Дополнительно
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Штрихкод >= &ПервыйКод
	|	И Штрихкоды.Штрихкод <= &ПоследнийКод
	|	И (ВЫРАЗИТЬ(Штрихкоды.Штрихкод КАК СТРОКА(200))) = Штрихкоды.Штрихкод");
	
	
	Запрос.УстановитьПараметр("ШтриховойКод",         НСтр("ru = 'Штриховой код'"));
	Запрос.УстановитьПараметр("ЕдИзм",                НСтр("ru = 'Ед. изм.:'") + " ");
	Запрос.УстановитьПараметр("ПустаяСтрока",         "");
	Запрос.УстановитьПараметр("Характеристика",       НСтр("ru = 'Характеристика:'") + " ");
	Запрос.УстановитьПараметр("РегистрационнаяКарта", НСтр("ru = 'Регистрационная карта'"));
	Запрос.УстановитьПараметр("ДисконтнаяКарта",      НСтр("ru = 'Дисконтная карта'"));
	Запрос.УстановитьПараметр("НомерПодарочногоСертификата", НСтр("ru = 'Номер подарочного сертификата'"));
	Если Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
		ПервыйШтрихкод = Объект.ПервыйШтрихкодEAN13;
	ИначеЕсли Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
		ПервыйШтрихкод = Объект.ПервыйШтрихкодEAN8;
	Иначе
		ПервыйШтрихкод = Объект.ПервыйШтрихкод;
	КонецЕсли;
	Запрос.УстановитьПараметр("ПервыйКод", ПервыйШтрихкод);
	Запрос.УстановитьПараметр("ПоследнийКод", ПоследнийШтрихкод);
	
	Если Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
		КоличествоСимволовВКоде = 13;
	ИначеЕсли Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
		КоличествоСимволовВКоде = 8;
	Иначе
		КоличествоСимволовВКоде = СтрДлина(ПервыйШтрихкод);
	КонецЕсли; 

	Запрос.Текст   = СтрЗаменить(Запрос.Текст, "200" , Формат(КоличествоСимволовВКоде, "ЧГ=0"));
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ПроверитьТаблицу(ТаблицаЗапроса, КоличествоСимволовВКоде);
	
	ТаблицаШтриховыхКодов.Загрузить(ТаблицаЗапроса);
	
	Возврат ТаблицаЗапроса.Количество();

КонецФункции

&НаСервере
Функция ПолучитьПредставлениеНулевогоДиапазона()

	Диапазон = "";
	Для Индекс = 1 По Объект.КоличествоСимволов Цикл
		
		Диапазон = Диапазон + "0";
		
	КонецЦикла;
	
	Возврат Диапазон;

КонецФункции

&НаСервере
Процедура РассчитатьМагнитныеКоды()
	
	КоличествоСимволовКода     = СтрДлина(Префикс) + Объект.КоличествоСимволов + СтрДлина(Постфикс);
	ЕстьОшибкиПоМагнитнымКодам = Истина;
	
	Если КоличествоСимволовКода > 200 Тогда
		
		ПервыйМагнитныйКод    = НСтр("ru = 'Количество символов превышает допустимое значение 200'");
		ПоследнийМагнитныйКод = НСтр("ru = 'Количество символов превышает допустимое значение 200'");
		
	Иначе
		
		Если НачалоДиапазона > 0  Тогда
			
			ПервыйМагнитныйКод = Префикс + Формат(НачалоДиапазона, "ЧЦ=" + Строка(Объект.КоличествоСимволов) + "; ЧВН=; ЧГ=0")+ Постфикс;
			
		Иначе
			
			ПервыйМагнитныйКод = Префикс + ПолучитьПредставлениеНулевогоДиапазона() + Постфикс;
			
		КонецЕсли; 
		
		Если КоличествоСертификатов > 0 Тогда
			
			Если СтрДлина(Формат(КоличествоСертификатов, "ЧГ=0")) > Объект.КоличествоСимволов Тогда
				
				ПоследнийМагнитныйКод = НСтр("ru = 'Код не может быть сформирован'");
				
			Иначе
				
				ПоследнийМагнитныйКод = Префикс + Формат(НачалоДиапазона + КоличествоСертификатов - 1, "ЧЦ=" + Строка(Объект.КоличествоСимволов) + "; ЧВН=; ЧГ=0")+ Постфикс;
				ЕстьОшибкиПоМагнитнымКодам = Ложь;
				
			КонецЕсли;
			
		Иначе
			
			ПоследнийМагнитныйКод = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьШтрихкод(ИмяСтраницы = "")
	
	ЕстьОшибкиПоШтрихКодам = Ложь;
	
	ЕстьОшибкиПоШтрихКодам = Ложь;
	ШтрихКод = "";
	Если Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
		ИмяСтраницы = "СтраницаEAN13";
		Если СтрДлина(Объект.ПервыйШтрихкодEAN13) >= 12 Тогда
			ШтрихКод = Лев(Объект.ПервыйШтрихкодEAN13, 12);
		Иначе
			ЕстьОшибкиПоШтрихКодам = ЗначениеЗаполнено(Объект.ПервыйШтрихкодEAN13);
		КонецЕсли;
	ИначеЕсли Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
		ИмяСтраницы = "СтраницаEAN8";
		Если СтрДлина(Объект.ПервыйШтрихкодEAN8) >= 7 Тогда
			ШтрихКод = Лев(Объект.ПервыйШтрихкодEAN8, 7);
		Иначе
			ЕстьОшибкиПоШтрихКодам = ЗначениеЗаполнено(Объект.ПервыйШтрихкодEAN8);
		КонецЕсли;
	Иначе
		ИмяСтраницы = "СтраницаCode39";
		ШтрихКод = Объект.ПервыйШтрихкод;
	КонецЕсли;
	
	Если (КоличествоСертификатов > 0) И ЗначениеЗаполнено(ШтрихКод) Тогда
		
		Если НЕ ЕстьОшибкиПоШтрихКодам Тогда
			
			ДлинаЧисловойЧасти = ПолучитьДлинуЧисловойЧасти(ШтрихКод);
			
			Если ДлинаЧисловойЧасти = СтрДлина(Штрихкод) Тогда
				// Полностью числовой штрихкод.
				ЧислоПервогоШтрихКода = Число(Штрихкод);
				ЧислоПоследнегоШтрихКода = ЧислоПервогоШтрихКода + КоличествоСертификатов - 1;
				
				Если (Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 
				   И (СтрДлина(Формат(ЧислоПоследнегоШтрихКода, "ЧГ=0")) > 12))
				   ИЛИ ЧислоПоследнегоШтрихКода = 0 Тогда
					
					ЕстьОшибкиПоШтрихКодам = Истина;
					
				Иначе
					
					Если СтрДлина(Формат(ЧислоПоследнегоШтрихКода, "ЧГ=0")) > ДлинаЧисловойЧасти Тогда
						
						ЕстьОшибкиПоШтрихКодам = Истина;
						
					Иначе
						
						ПоследнийШтрихкод = Формат(ЧислоПоследнегоШтрихКода, "ЧЦ=" + ДлинаЧисловойЧасти + "; ЧВН=; ЧГ=0")
						
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
				
				ЕстьОшибкиПоШтрихКодам = Истина;
				
			ИначеЕсли ДлинаЧисловойЧасти = 0 Тогда
				
				ЕстьОшибкиПоШтрихКодам = Истина;
				
			Иначе
				
				ЧислоПервогоШтрихКода = Число(Прав(Штрихкод, ДлинаЧисловойЧасти));
				ЧислоПоследнегоШтрихКода = ЧислоПервогоШтрихКода + КоличествоСертификатов -1;
				
				Если СтрДлина(Формат(ЧислоПоследнегоШтрихКода, "ЧГ=0")) > ДлинаЧисловойЧасти Тогда
					
					ЕстьОшибкиПоШтрихКодам = Истина;
					
				Иначе
					
					ПоследнийШтрихкод = Лев(Штрихкод,СтрДлина(Штрихкод) - ДлинаЧисловойЧасти) + Формат(ЧислоПоследнегоШтрихКода, "ЧЦ=" + ДлинаЧисловойЧасти + "; ЧВН=; ЧГ=0");
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьОшибкиПоШтрихКодам Тогда
			ПоследнийШтрихкод = НСтр("ru = 'Штрихкод не может быть сформирован'");
		ИначеЕсли  Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
			ПоследнийШтрихкод = ПоследнийШтрихкод + ПодключаемоеОборудованиеРТВызовСервера.КонтрольныйСимволEAN(ПоследнийШтрихкод, 13)
		ИначеЕсли  Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
			ПоследнийШтрихкод = ПоследнийШтрихкод + ПодключаемоеОборудованиеРТВызовСервера.КонтрольныйСимволEAN(ПоследнийШтрихкод, 8)
		КонецЕсли; 
		
	Иначе
		
		Если ЕстьОшибкиПоШтрихКодам Тогда
			ПоследнийШтрихкод = НСтр("ru = 'Штрихкод не может быть сформирован'");
		Иначе
			ПоследнийШтрихкод = "";
		КонецЕсли;
		
	КонецЕсли;
    	
КонецПроцедуры

&НаСервере
Функция ПолучитьДлинуЧисловойЧасти(ШтрихКод)
	
	ДлинаШтрихкода = СтрДлина(ШтрихКод);
	
	Если ДлинаШтрихкода > 0  Тогда
		
		ДлинаЧисловойЧасти = 0;
		
		Для Индекс = 1  По ДлинаШтрихкода Цикл
			СимволШтрихКода = Сред(Штрихкод, ДлинаШтрихкода - Индекс + 1, 1);
			
			Если Найти("0123456789",СимволШтрихКода) > 0 Тогда
				
				ДлинаЧисловойЧасти = ДлинаЧисловойЧасти + 1;
				
			Иначе
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат ДлинаЧисловойЧасти;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция НайтиПересеченияКодов()
	
	ПроверкаПройдена = Истина;
	
	Если Объект.ЕстьМагнитныеКоды 
		И НайтиСуществующиеМагнитныеКоды() > 0 Тогда
			
		ПроверкаПройдена = Ложь;
					
	КонецЕсли;
		
	Если Объект.ЕстьШтрихкоды 
		И НайтиСуществующиеШтрихКоды() > 0 Тогда
		
		ПроверкаПройдена = Ложь;
		
	КонецЕсли;
		
	Возврат ПроверкаПройдена;
		
КонецФункции

&НаСервере
Функция СоздатьСертификаты(ПроверкаПройдена = Истина)
	
	Создано = 0;
	
	Если Объект.ЕстьШтрихкоды Тогда
		
		Если Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
			
			Объект.ПервыйШтрихкод = Объект.ПервыйШтрихкодEAN13;
			Штрихкод = Лев(Объект.ПервыйШтрихкод, 12);
			ЧислоПервогоШтрихКода = Число(Штрихкод);
			
		ИначеЕсли Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
			
			Объект.ПервыйШтрихкод = Объект.ПервыйШтрихкодEAN8;
			Штрихкод = Лев(Объект.ПервыйШтрихкод, 7);
			ЧислоПервогоШтрихКода = Число(Штрихкод);
			
		Иначе
			
			Штрихкод = СокрЛП(Объект.ПервыйШтрихкод);
			ДлинаЧисловойЧасти = ПолучитьДлинуЧисловойЧасти(ШтрихКод);
			ЧислоПервогоШтрихКода = Число(Прав(Штрихкод, ДлинаЧисловойЧасти));
			ПрефиксШтрихКода = Лев(Штрихкод,СтрДлина(Штрихкод) - ДлинаЧисловойЧасти);
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	ТекстСообщения = "";
		
	Для Счетчик = 1 По КоличествоСертификатов Цикл
		
		Если Объект.ЕстьМагнитныеКоды Тогда
			
			Если (НачалоДиапазона + Счетчик -1) > 0  Тогда
				
				ТекущийМагнитныйКод = Префикс + Формат(НачалоДиапазона + Счетчик -1, "ЧЦ=" + Строка(Объект.КоличествоСимволов) + "; ЧВН=; ЧГ=0")+ Постфикс;
				
			Иначе
				
				ТекущийМагнитныйКод = Префикс + ПолучитьПредставлениеНулевогоДиапазона() + Постфикс;
				
			КонецЕсли; 
			
			Если Не ПроверкаПройдена Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("КодКарты",ТекущийМагнитныйКод);
				МассивСтрок = ТаблицаМагнитныхКодов.НайтиСтроки(СтруктураПоиска);
				
				Если МассивСтрок.Количество() > 0 Тогда
					
					ТекстСообщения = ТекстСообщения  
									 + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									 		НСтр("ru = 'Не создан номер подарочного сертификата %1'"),
											ТекущийМагнитныйКод) + Символы.ПС;
									 
					Продолжить;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТекущийШтрихкод = "";
		
		Если Объект.ЕстьШтрихкоды Тогда
			
			Если Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
				
				ЧислоТекущегоШтрихКода = ЧислоПервогоШтрихКода + Счетчик - 1;
				ТекущийШтрихкод        = Формат(ЧислоТекущегоШтрихКода, "ЧЦ=12; ЧН=000000000000; ЧВН=; ЧГ=0");
				ТекущийШтрихкод        = ТекущийШтрихкод + ПодключаемоеОборудованиеРТВызовСервера.КонтрольныйСимволEAN(ТекущийШтрихкод, 13);
				
			ИначеЕсли Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
				
				ЧислоТекущегоШтрихКода = ЧислоПервогоШтрихКода + Счетчик - 1;
				ТекущийШтрихкод        = Формат(ЧислоТекущегоШтрихКода, "ЧЦ=7; ЧН=0000000; ЧВН=; ЧГ=0");
				ТекущийШтрихкод        = ТекущийШтрихкод + ПодключаемоеОборудованиеРТВызовСервера.КонтрольныйСимволEAN(ТекущийШтрихкод, 8);
				
			Иначе // CODE39
				
				ПредставлениеНуля = "";
				Для СчетчикСимволов = 1 По ДлинаЧисловойЧасти Цикл
					ПредставлениеНуля = ПредставлениеНуля + "0";
				КонецЦикла;
				Если ПустаяСтрока(ПредставлениеНуля) Тогда
					ПредставлениеНуля = "0";
				КонецЕсли;
				
				ЧислоТекущегоШтрихКода = ЧислоПервогоШтрихКода + Счетчик -1;
				ТекущийШтрихкод        = ПрефиксШтрихКода + Формат(ЧислоТекущегоШтрихКода, "ЧЦ=" + ДлинаЧисловойЧасти + "; ЧН=" + ПредставлениеНуля + "; ЧВН=; ЧГ=0");
				
			КонецЕсли;
			
			Если НЕ ПроверкаПройдена Тогда
				
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("КодКарты",ТекущийШтрихкод);
				МассивСтрок = ТаблицаШтриховыхКодов.НайтиСтроки(СтруктураПоиска);
				
				Если МассивСтрок.Количество() > 0 Тогда
									
					ТекстСообщения = ТекстСообщения
									 + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									 		НСтр("ru = 'Не создан номер подарочного сертификата с штрихкодом %1'"),
											ТекущийШтрихкод) + Символы.ПС;
									
					Продолжить;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		НачатьТранзакцию();
		
		
		Попытка
			
			
			СерийныйНомер          = Справочники.СерийныеНомера.СоздатьЭлемент();
			СерийныйНомер.Владелец = Номенклатура;
			
			Если Объект.ЕстьМагнитныеКоды Тогда
				
				СерийныйНомер.КодСерийногоНомера = ТекущийМагнитныйКод;
				СерийныйНомер.Наименование       = ТекущийМагнитныйКод;
				
			Иначе
				
				СерийныйНомер.Наименование       = ТекущийШтрихкод;
				
			КонецЕсли;
			
			СерийныйНомер.Записать();
			
			Если Объект.ЕстьШтрихкоды Тогда
				
				ЗаписьШтрихкода              = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
				ЗаписьШтрихкода.Владелец     = СерийныйНомер.Ссылка;
				ЗаписьШтрихкода.ТипШтрихкода = Объект.ТипШтрихкодаРТ;
				ЗаписьШтрихкода.Штрихкод     = ТекущийШтрихкод;
				
				Отказ = НЕ ЗаписьШтрихкода.ПроверитьЗаполнение();
				Если НЕ Отказ  Тогда
					ЗаписьШтрихкода.Записать(Истина);
				Иначе
					ВызватьИсключение НСтр("ru = 'Дублирование штрихкодов'");
				КонецЕсли;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ИмяСобытия = НСтр("ru = 'Запасы и закупки. Создание сертификатов'",
								ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ИнформацияОбОшибке());
			ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецПопытки;
		
		Создано = Создано + 1;
				
	КонецЦикла;
	
	Возврат Создано;

КонецФункции

&НаСервере
Функция ВыбратьДиапазон()

	Если Объект.ЕстьМагнитныеКоды И НЕ ЕстьОшибкиПоМагнитнымКодам Тогда
	
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	СерийныеНомера.КодСерийногоНомера КАК КодКарты,
		|	СерийныеНомера.Ссылка КАК Карта
		|ИЗ
		|	Справочник.СерийныеНомера КАК СерийныеНомера
		|ГДЕ
		|	СерийныеНомера.КодСерийногоНомера >= &ПервыйКод
		|	И СерийныеНомера.КодСерийногоНомера <= &ПоследнийКод
		|	И (ВЫРАЗИТЬ(СерийныеНомера.КодСерийногоНомера КАК СТРОКА(200))) = СерийныеНомера.КодСерийногоНомера
		|	И СерийныеНомера.Владелец = &Номенклатура
		|УПОРЯДОЧИТЬ ПО
		|	КодКарты
		|");
		
		Запрос.УстановитьПараметр("ПервыйКод",    ПервыйМагнитныйКод);
		Запрос.УстановитьПараметр("ПоследнийКод", ПоследнийМагнитныйКод);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		КоличествоСимволовВКоде = СтрДлина(ПервыйМагнитныйКод);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "200", Формат(КоличествоСимволовВКоде, "ЧГ=0"));
		Результат = Запрос.Выполнить();
		ТаблицаЗапроса = Результат.Выгрузить();
		ПроверитьТаблицу(ТаблицаЗапроса, КоличествоСимволовВКоде);
				
	КонецЕсли;
	
	Если Объект.ЕстьШтрихкоды И НЕ ЕстьОшибкиПоШтрихКодам  Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Штрихкоды.Владелец КАК Карта,
		|	Штрихкоды.Штрихкод КАК КодКарты
		|ИЗ
		|	РегистрСведений.Штрихкоды КАК Штрихкоды
		|ГДЕ
		|	Штрихкоды.Штрихкод >= &ПервыйКод
		|	И Штрихкоды.Штрихкод <= &ПоследнийКод
		|	И (ВЫРАЗИТЬ(Штрихкоды.Штрихкод КАК СТРОКА(200))) = Штрихкоды.Штрихкод
		|	И Штрихкоды.Владелец.Владелец = &Номенклатура
		|УПОРЯДОЧИТЬ ПО
		|	КодКарты
		|");
		
		Запрос.УстановитьПараметр("ПоследнийКод", ПоследнийШтрихкод);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		Если Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
			ПервыйШтрихкод = Объект.ПервыйШтрихкодEAN13;
			КоличествоСимволовВКоде = 13;
		ИначеЕсли Объект.ТипШтрихкодаРТ = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
			ПервыйШтрихкод = Объект.ПервыйШтрихкодEAN8;
			КоличествоСимволовВКоде = 8;
		Иначе
			ПервыйШтрихкод = Объект.ПервыйШтрихкод;
			КоличествоСимволовВКоде = СтрДлина(ПервыйШтрихкод);
		КонецЕсли; 
		Запрос.УстановитьПараметр("ПервыйКод", ПервыйШтрихкод);

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "200", Формат(КоличествоСимволовВКоде, "ЧГ=0"));
		
		Результат = Запрос.Выполнить();
		ТаблицаЗапроса = Результат.Выгрузить();
		
		ПроверитьТаблицу(ТаблицаЗапроса, КоличествоСимволовВКоде);
		
	КонецЕсли;
	
	АдресСерийныхНомеровВХранилище = ПоместитьВоВременноеХранилище(СписокСерийныхНомеров.ВыгрузитьЗначения());
	
	Возврат СписокСерийныхНомеров.Количество() > 0;
	
КонецФункции

&НаСервере
Процедура ПриИзмененииПервыйШтрихкод()
	
	ИмяСтраницы = "";
	РассчитатьШтрихкод(ИмяСтраницы);
	Если ЗначениеЗаполнено(ИмяСтраницы) Тогда
		Элементы.СтраницыШтрихКода.ТекущаяСтраница = Элементы[ИмяСтраницы];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКоличествоСертификатов()
	
	Если Объект.ЕстьШтрихкоды Тогда
		
		РассчитатьШтрихкод();
		
	КонецЕсли;
	
	Если Объект.ЕстьМагнитныеКоды Тогда
		
		РассчитатьМагнитныеКоды();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПроверкиИспользуемыхКодов()
			
	СтруктураТаблиц = Новый Структура;
	
	Если ТаблицаМагнитныхКодов.Количество() > 0 Тогда
		
		СтруктураТаблиц.Вставить("ТаблицаМагнитныхКодов",ТаблицаМагнитныхКодов);
		
	КонецЕсли;	
	
	Если ТаблицаШтриховыхКодов.Количество() > 0 Тогда
		
		СтруктураТаблиц.Вставить("ТаблицаШтриховыхКодов",ТаблицаШтриховыхКодов);
		
	КонецЕсли;	
	
	ПараметрКоманды = Новый Массив;   
	ПараметрКоманды.Добавить(Объект);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Обработка.ЗаполнениеДиапазонаСерийныхНомеров", // Для вызова метода менеджера обработки "Печать".
		"ПроверкаИспользуемыхКодов",
		ПараметрКоманды,
		ЭтаФорма, 
		Новый Структура("СтруктураТаблиц",СтруктураТаблиц));
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьОбщуюВозможностьСозданияСертификатов()
	
	ПроверкаПройдена = Истина;
	Если ЕстьОшибкиПоМагнитнымКодам Тогда
		ПроверкаПройдена = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Нет возможности создания сертификатов с магнитными (символьными) кодами'"));
	КонецЕсли;
	
	Если ЕстьОшибкиПоШтрихКодам Тогда
		ПроверкаПройдена = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю
			(НСтр("ru = 'Нет возможности создания сертификатов со штриховыми кодами'"));
	КонецЕсли;
	
	Возврат ПроверкаПройдена;
	
КонецФункции

#КонецОбласти
