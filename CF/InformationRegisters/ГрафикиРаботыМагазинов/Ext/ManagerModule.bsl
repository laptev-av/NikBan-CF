
#Область ПрограммныйИнтерфейс

// Возвращает график работы магазина.
//
// Параметры:
//	Магазин			- СправочникСсылка.Магазины
//	НомерГода		- Номер года, за который необходимо прочитать календарь.
//
// Возвращаемое значение
//	ТаблицаЗначений	- график работы магазина.
//
Функция ГрафикРаботыМагазина(Магазин, НомерГода) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("НомерГода", НомерГода);
	Запрос.УстановитьПараметр("Магазин",  Магазин);
	Запрос.УстановитьПараметр("ПустойМагазин", Магазин.Пустая());
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГрафикиРаботыМагазинов.ДатаКалендаря    КАК ДатаКалендаря,
	|	ГрафикиРаботыМагазинов.ВидДня           КАК ВидДня,
	|	ГрафикиРаботыМагазинов.ВидГрафикаРаботы КАК ВидГрафикаРаботы,
	|	ГрафикиРаботыМагазинов.Магазин          КАК Магазин
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыМагазинов КАК ГрафикиРаботыМагазинов
	|ГДЕ
	|	ГрафикиРаботыМагазинов.Год = &НомерГода
	|	И ГрафикиРаботыМагазинов.Магазин = &Магазин
	|	И НЕ &ПустойМагазин
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Записывает данные графика в регистр.
//
// Параметры:
//	Магазин		- СправочникСсылка.Магазины
//	НомерГода	- Номер года, за который необходимо записать календарь.
//	СписокДат	- список значений, в котором указано, какие даты входят в календарь.
//
Процедура ЗаписатьДанныеГрафикаВРегистр(Магазин, НомерГода, ТаблицаРегистра) Экспорт
	
	НаборЗаписей = РегистрыСведений.ГрафикиРаботыМагазинов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Магазин.Установить(Магазин);
	НаборЗаписей.Отбор.Год.Установить(НомерГода);
	
	Для Каждого СтрокаТаблицыРегистра Из ТаблицаРегистра Цикл
		
		Строка = НаборЗаписей.Добавить();
		Строка.Магазин          = Магазин;
		Строка.Год              = НомерГода;
		Строка.ДатаКалендаря    = СтрокаТаблицыРегистра.ДатаКалендаря;
		Строка.ВидДня           = СтрокаТаблицыРегистра.ВидДня;
		Строка.ВидГрафикаРаботы = СтрокаТаблицыРегистра.ВидГрафикаРаботы;
		ЗаполнитьРесурсыЗаписиРегистра(Строка);
		
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

// Заполняет ресурсы "Пятидневка", "Шестидневка" и "КалендарныеДни".
//
Процедура ЗаполнитьРесурсыЗаписиРегистра(ЗаписьРегистра) Экспорт
	
	// рабочий день
	Если ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий ИЛИ
		
		ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
		
		ЗаписьРегистра.Пятидневка     = 1;
		ЗаписьРегистра.Шестидневка    = 1;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		ЗаписьРегистра.РабочийДень = 1;
		
		// суббота
	ИначеЕсли ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда
		
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 1;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		Если ЗаписьРегистра.ВидГрафикаРаботы = Перечисления.ВидыГрафиковРаботы.Пятидневка Тогда
			
			ЗаписьРегистра.РабочийДень = 0;
			
		Иначе
			
			ЗаписьРегистра.РабочийДень = 1;
			
		КонецЕсли;
		
		// воскресение
	ИначеЕсли ЗаписьРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда
		
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 0;
		ЗаписьРегистра.КалендарныеДни = 1;
		
		Если ЗаписьРегистра.ВидГрафикаРаботы = Перечисления.ВидыГрафиковРаботы.Пятидневка
		ИЛИ  ЗаписьРегистра.ВидГрафикаРаботы = Перечисления.ВидыГрафиковРаботы.Шестидневка Тогда
		
		ЗаписьРегистра.РабочийДень = 0;
			
		Иначе
			
			ЗаписьРегистра.РабочийДень = 1;
			
		КонецЕсли;
		
		// праздничный день
	Иначе
		
		ЗаписьРегистра.Пятидневка  = 0;
		ЗаписьРегистра.Шестидневка = 0;
		ЗаписьРегистра.КалендарныеДни = 0;
		
		ЗаписьРегистра.РабочийДень = 0;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти