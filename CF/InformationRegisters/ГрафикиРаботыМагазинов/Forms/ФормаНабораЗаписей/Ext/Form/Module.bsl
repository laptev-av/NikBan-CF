
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеВопросПриИзмененииВидаГрафика(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ПроверкаУспешна = ПроверитьЗаполнение();
		
		Если ПроверкаУспешна Тогда
			ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчаниюНаСервере();
			Модифицированность = Истина;
		Иначе
			ВидГрафикаРаботы = ПредыдущийВидГрафикаРаботы;
		КонецЕсли;
		
	Иначе
		ВидГрафикаРаботы = ПредыдущийВидГрафикаРаботы;
	КонецЕсли;
	
	Элементы.Календарь.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВопросПечатьГрафикаРаботыМагазина(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьКалендарныйГрафик(ОтборМагазин, НомерТекущегоГода);
		Оповестить("ГрафикРаботыИзменен");
		Модифицированность = Ложь;
		ЗавершитьПечатьГрафикаРаботыМагазина();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВопросПриИзмененииМагазина(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ПроверкаУспешна = ПроверитьЗаполнение();
		
		Если ПроверкаУспешна Тогда
			ЗаписатьКалендарныйГрафик(ПредыдущийМагазин, НомерТекущегоГода);
			Оповестить("ГрафикРаботыИзменен");
			ЗавершитьСчитываниеДанныхГрафика();
		Иначе
			ОтборМагазин = ПредыдущийМагазин;
		КонецЕсли;
	Иначе
		ОтборМагазин = ПредыдущийМагазин;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВопросПриИзмененииГода(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьКалендарныйГрафик(ОтборМагазин, НомерПредыдущегоГода);
		Оповестить("ГрафикРаботыИзменен");
	Иначе
		Модифицированность = Ложь;
	КонецЕсли;
	
	ЗавершитьСчитываниеДанныхГрафика();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВыборИзМенюВидаДня(Выбор, ДополнительныеПараметры) Экспорт
	Если НЕ Выбор = Неопределено Тогда
		
		Отбор = Новый Структура("ДатаКалендаря", ДополнительныеПараметры.ВыбраннаяДата);
		
		МассивСтрокТаблицыРегистра = ТаблицаРегистра.НайтиСтроки(Отбор);
		Если МассивСтрокТаблицыРегистра.Количество() > 0 Тогда
			МассивСтрокТаблицыРегистра[0].ВидДня = Выбор.Значение;
			
			Если Не Модифицированность Тогда
				Модифицированность = Истина;
			КонецЕсли;
			
			ДополнительныеПараметры.Элемент.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Магазин") Тогда
		
		ОтборМагазин = Параметры.Отбор.Магазин;
		Элементы.ОтборМагазин.Доступность = Ложь;
		
	КонецЕсли;	
	
	Если Параметры.Отбор.Свойство("Год") Тогда
		
		НомерТекущегоГода = Параметры.Отбор.Год;
		
	Иначе
		
		НомерТекущегоГода = Год(ТекущаяДатаСеанса());
		
	КонецЕсли;	
		
	НомерПредыдущегоГода	   = НомерТекущегоГода;
	ПредыдущийМагазин          = ОтборМагазин;
	ПредыдущийВидГрафикаРаботы = ВидГрафикаРаботы;
	
	Элементы.Календарь.НачалоПериодаОтображения	= Дата(НомерТекущегоГода, 1, 1);
	Элементы.Календарь.КонецПериодаОтображения	= Дата(НомерТекущегоГода, 12, 31);
	
	ТаблицаРегистра.Загрузить(РегистрыСведений.ГрафикиРаботыМагазинов.ГрафикРаботыМагазина(ОтборМагазин,НомерТекущегоГода));
		
	Если ТаблицаРегистра.Количество() = 0 Тогда
		
		ВидГрафикаРаботы = Перечисления.ВидыГрафиковРаботы.Пятидневка;
		ПредыдущийВидГрафикаРаботы = ВидГрафикаРаботы;
		ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчаниюНаСервере();
		Модифицированность = Истина;
		
	Иначе
		
		ВидГрафикаРаботы = ТаблицаРегистра[0].ВидГрафикаРаботы;
		ПредыдущийВидГрафикаРаботы = ВидГрафикаРаботы;
		
	КонецЕсли;
	
	ЦветаДней = Новый Структура();
	ЦветаДней.Вставить("ЦветРабочегоДня",        Новый Цвет(  0,  0,   0)); // Черный
	ЦветаДней.Вставить("ЦветСубботы",            Новый Цвет(153, 51,   0)); // Темно-красный
	ЦветаДней.Вставить("ЦветВоскресенья",        Новый Цвет(255,  0,   0)); // Красный
	ЦветаДней.Вставить("ЦветПредпраздничногоДня", Новый Цвет(  0,  0, 186)); // Темно-синий
	ЦветаДней.Вставить("ЦветПраздничногоДня",    Новый Цвет(255,  0, 255)); // Фиолетовый
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Перем НомерГода;
	
	Если Не ПараметрыЗаписи.Свойство("НомерГода", НомерГода) Тогда
		НомерГода = НомерТекущегоГода;
	КонецЕсли;
	
	ЗаписатьКалендарныйГрафик(ОтборМагазин, НомерГода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ГрафикРаботыИзменен");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерТекущегоГодаПриИзменении(Элемент)
	
	Если НомерТекущегоГода < 1900 Тогда
		НомерТекущегоГода = НомерПредыдущегоГода;
		Возврат;
	КонецЕсли;
	
	ПроверкаУспешна = ПроверитьЗаполнение();
	
	Если ПроверкаУспешна Тогда
			
		Если Модифицированность Тогда
			
			ТекстВопроса = НСтр("ru = 'Записать измененные данные за %1 год?'");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Формат(НомерПредыдущегоГода, "ЧГ=0"));
			
			ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВопросПриИзмененииГода", ЭтотОбъект);
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			ЗавершитьСчитываниеДанныхГрафика();
		КонецЕсли;
	Иначе
		НомерТекущегоГода = НомерПредыдущегоГода;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПриВыводеПериода(Элемент, ОформлениеПериода)
	
	Для каждого СтрокаОформленияПериода Из ОформлениеПериода.Даты Цикл
		
		СтруктураОтбора = Новый Структура("ДатаКалендаря",СтрокаОформленияПериода.Дата);
		
		Если НомерТекущегоГода = Год(СтрокаОформленияПериода.Дата) Тогда
			
			СтрокаТаблицыРегистра = ТаблицаРегистра[ДеньГода(СтрокаОформленияПериода.Дата)-1];
			
			ЗначениеСравнения = СтрокаТаблицыРегистра.ВидДня;
			
			Если ЗначениеСравнения = ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий") Тогда
				
				СтрокаОформленияПериода.ЦветТекста = ЦветаДней.ЦветРабочегоДня;
				
			ИначеЕсли ЗначениеСравнения = ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный") Тогда
				
				СтрокаОформленияПериода.ЦветТекста = ЦветаДней.ЦветПредпраздничногоДня;
				
			ИначеЕсли ЗначениеСравнения = ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник") Тогда
				
				СтрокаОформленияПериода.ЦветТекста = ЦветаДней.ЦветПраздничногоДня;
				
			ИначеЕсли ЗначениеСравнения = ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота") Тогда
				
				Если СтрокаТаблицыРегистра.ВидГрафикаРаботы = ПредопределенноеЗначение("Перечисление.ВидыГрафиковРаботы.Пятидневка") Тогда
					
					СтрокаОформленияПериода.ЦветТекста = ЦветаДней.ЦветСубботы;
					
				Иначе
					
					СтрокаОформленияПериода.ЦветТекста = ЦветаДней.ЦветРабочегоДня;
					
				КонецЕсли;
				
			ИначеЕсли ЗначениеСравнения = ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Воскресенье") Тогда
				
				Если Не СтрокаТаблицыРегистра.ВидГрафикаРаботы = ПредопределенноеЗначение("Перечисление.ВидыГрафиковРаботы.Полный") Тогда
					
					СтрокаОформленияПериода.ЦветТекста = ЦветаДней.ЦветВоскресенья;
					
				Иначе
					
					СтрокаОформленияПериода.ЦветТекста = ЦветаДней.ЦветРабочегоДня;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьВыбор(Элемент, ВыбраннаяДата)
	
	СписокВидыДней = Новый СписокЗначений;
	
	СписокВидыДней.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Воскресенье"));
	СписокВидыДней.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник"));
	СписокВидыДней.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный"));
	СписокВидыДней.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий"));
	СписокВидыДней.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота"));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыбраннаяДата", ВыбраннаяДата);
	ДополнительныеПараметры.Вставить("Элемент"      , Элемент);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВыборИзМенюВидаДня", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВыборИзМеню(ОбработчикОповещения, СписокВидыДней, Элементы.Календарь);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМагазинПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ОтборМагазин) Тогда
		ОтборМагазин = ПредыдущийМагазин;
		Возврат;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ПредыдущийМагазин) Тогда
		
		ТекстВопроса = НСтр("ru = 'Очистить измененные данные за %1 год?'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Формат(НомерТекущегоГода, "ЧГ=0"));
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВопросПриИзмененииМагазина", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ПроверкаУспешна = ПроверитьЗаполнение();
		Если ПроверкаУспешна Тогда
			ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчаниюНаСервере();
			ПредыдущийМагазин = ОтборМагазин;
			Элементы.ОтборМагазин.Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидГрафикаРаботыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидГрафикаПриИзменении(Элемент)
	
	ТекстВопроса = НСтр("ru = 'Заполнить данные по умолчанию для графика ""%1""?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, ВидГрафикаРаботы);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВопросПриИзмененииВидаГрафика", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НапечататьГрафикРаботыМагазина(Команда)
	
	ПроверкаУспешна = ПроверитьЗаполнение();
	
	Если ПроверкаУспешна Тогда
		
		Если Модифицированность Тогда
			
			ТекстВопроса = НСтр("ru = 'Печать графика работы возможна только после его записи, записать график работы?'");
			
			ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВопросПечатьГрафикаРаботыМагазина", ЭтотОбъект);
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			
			ЗавершитьПечатьГрафикаРаботыМагазина();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчанию()
	
	Если ВидГрафикаРаботы.Пустая() Тогда
		
		ТекстОшибки = НСтр("ru='Поле ""Вид графика"" не заполнено'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ВидГрафикаРаботы",,);
		
	Иначе
		
		ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчаниюНаСервере();
		
		Элементы.Календарь.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчаниюНаСервере()
	
	ТаблицаРегистра.Очистить();
	
	ПраздничныеДни = ПерсоналВызовСервера.МассивПраздничныхДней(НомерТекущегоГода);
	
	ПроверитьПоследнийДеньГода = Ложь;
	
	Для НомерДня = 1 По ДеньГода(КонецГода(Дата(НомерТекущегоГода, 1, 1))) Цикл
		
		СтрокаТаблицыРегистра = ТаблицаРегистра.Добавить();
		
		ДатаКалендаря = НачалоГода(Дата(НомерТекущегоГода,1,1)) + (НомерДня-1) * 86400;
		
		СтрокаТаблицыРегистра.ДатаКалендаря    = ДатаКалендаря;
		СтрокаТаблицыРегистра.ВидГрафикаРаботы = ВидГрафикаРаботы;
		
		Если ПраздничныеДни.Найти(ДатаКалендаря) <> Неопределено Тогда
			
			СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник;
			
			Если СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
				
				Если НомерДня > 1 Тогда
					
					ТаблицаРегистра[НомерДня-1].ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
					
				Иначе
					
					ПроверитьПоследнийДеньГода = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если ВидГрафикаРаботы = Перечисления.ВидыГрафиковРаботы.Пятидневка Тогда
				Если ДеньНедели(ДатаКалендаря) = 6 Тогда
					
					СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота;
					
				ИначеЕсли ДеньНедели(ДатаКалендаря) = 7 Тогда
					
					СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;
					
				Иначе
					
					СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий;
					
				КонецЕсли;
			ИначеЕсли ВидГрафикаРаботы = Перечисления.ВидыГрафиковРаботы.Шестидневка Тогда
				Если ДеньНедели(ДатаКалендаря) = 7 Тогда
					
					СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;
					
				Иначе
					
					СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий;
					
				КонецЕсли;
			Иначе
				СтрокаТаблицыРегистра.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий;
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЦикла;
	
	Если ПроверитьПоследнийДеньГода Тогда
		
		Если ТаблицаРегистра[0].ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник Тогда
			
			Индекс = ТаблицаРегистра.Количество()-1;
			ТаблицаРегистра[Индекс].ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьКалендарныйГрафик(Магазин, НомерГода)
	
	ТаблицаИзРегистра = РегистрыСведений.ГрафикиРаботыМагазинов.ГрафикРаботыМагазина(Магазин, НомерГода);
	
	Если ТаблицаИзРегистра.Количество() = 0 Тогда
		
		ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчаниюНаСервере();
		
	Иначе 
		
		ВидГрафикаРаботы = ТаблицаРегистра[0].ВидГрафикаРаботы;
		
	КонецЕсли;
	
	Возврат ТаблицаИзРегистра;
	
КонецФункции

&НаСервере
Процедура ЗаписатьКалендарныйГрафик(Знач Магазин, Знач НомерГода)
	
	Если ПроверитьЗаполнение() Тогда
		
		РегистрыСведений.ГрафикиРаботыМагазинов.ЗаписатьДанныеГрафикаВРегистр(Магазин, НомерГода, ТаблицаРегистра);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГрафикРаботыМагазинаВТаблицуНаСервере()
	
	ТаблицаРегистра.Загрузить(ПрочитатьКалендарныйГрафик(ОтборМагазин, НомерТекущегоГода));
	
	Если ТаблицаРегистра.Количество() = 0 Тогда
		
		ЗаполнитьГрафикРаботыМагазинаДаннымиПоУмолчаниюНаСервере();
		Модифицированность = Истина;
		
	Иначе
		
		ВидГрафикаРаботы = ТаблицаРегистра[0].ВидГрафикаРаботы;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПечатьГрафикаРаботыМагазина()
	
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("Магазин", ОтборМагазин);
	СтруктураОбъекта.Вставить("Год", НомерТекущегоГода);
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ОтборМагазин);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Справочник.Магазины",
		"ГрафикРаботы",
		ПараметрКоманды,
		ЭтаФорма,
		СтруктураОбъекта);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСчитываниеДанныхГрафика()
	
	НомерПредыдущегоГода = НомерТекущегоГода;
	ПредыдущийМагазин    = ОтборМагазин;
	
	Элементы.Календарь.НачалоПериодаОтображения	= Дата(НомерТекущегоГода, 1, 1);
	Элементы.Календарь.КонецПериодаОтображения	= Дата(НомерТекущегоГода, 12, 31);
	
	ЗагрузитьГрафикРаботыМагазинаВТаблицуНаСервере();
	
	Элементы.Календарь.Обновить();
	
КонецПроцедуры

#КонецОбласти