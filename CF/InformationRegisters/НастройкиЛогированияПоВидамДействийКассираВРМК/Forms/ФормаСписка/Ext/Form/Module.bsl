#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицу();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "РегистрСведений.НастройкиЛогированияПоВидамДействийКассираВРМК.Форма.ФормаСписка.Открытие");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьСервер();
	
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьСервер();
	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	ПроставитьФлажки(Истина)
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	ПроставитьФлажки(Ложь)
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовДействийИсправляющееДействиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВидовДействий.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено 
		 И ТекущиеДанные.ИсправляющееДействие Тогда
		
		ТекущиеДанные.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовДействийДействиеПодПодозрениемПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВидовДействий.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено 
		 И ТекущиеДанные.ДействиеПодПодозрением Тогда
		
		ТекущиеДанные.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовДействийИспользованиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВидовДействий.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено 
	   И НЕ ТекущиеДанные.Использование Тогда
		
		ТекущиеДанные.ДействиеПодПодозрением = Ложь;
		ТекущиеДанные.ИсправляющееДействие   = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУмолчанию(Команда)
	
	Для каждого ЭлементВыделеннаяСтрока Из Элементы.ДеревоВидовДействий.ВыделенныеСтроки Цикл
	
		СтрокаДерева = ДеревоВидовДействий.НайтиПоИдентификатору(ЭлементВыделеннаяСтрока);
		
		Если СтрокаДерева.ЭтоГруппа > 0 Тогда
			СтрокаДерева.ДействиеПодПодозрением = СтрокаДерева.ДействиеПодПодозрениемПоУмолчанию;
			СтрокаДерева.ИсправляющееДействие   = СтрокаДерева.ИсправляющееДействиеПоУмолчанию;
			
			СтрокаДерева.Использование = СтрокаДерева.ДействиеПодПодозрением ИЛИ СтрокаДерева.ИсправляющееДействие;
		Иначе
			Для каждого ПодстрокаДерева Из СтрокаДерева.ПолучитьЭлементы() Цикл
				ПодстрокаДерева.ДействиеПодПодозрением = ПодстрокаДерева.ДействиеПодПодозрениемПоУмолчанию;
				ПодстрокаДерева.ИсправляющееДействие   = ПодстрокаДерева.ИсправляющееДействиеПоУмолчанию;
				
				ПодстрокаДерева.Использование = ПодстрокаДерева.ДействиеПодПодозрением ИЛИ ПодстрокаДерева.ИсправляющееДействие;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицу()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыДействийКассираВРМК.Ссылка КАК ВидДействияКассираВРМК,
	|	ВЫБОР
	|		КОГДА НЕ НастройкиЛогированияПоВидамДействийКассираВРМК.ВидДействияКассираВРМК ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Использование,
	|	НастройкиЛогированияПоВидамДействийКассираВРМК.ДействиеПодПодозрением,
	|	НастройкиЛогированияПоВидамДействийКассираВРМК.ИсправляющееДействие
	|ИЗ
	|	Перечисление.ВидыДействийКассираВРМК КАК ВидыДействийКассираВРМК
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиЛогированияПоВидамДействийКассираВРМК КАК НастройкиЛогированияПоВидамДействийКассираВРМК
	|		ПО (НастройкиЛогированияПоВидамДействийКассираВРМК.ВидДействияКассираВРМК = ВидыДействийКассираВРМК.Ссылка)";
	
	
	Результат = Запрос.Выполнить();
	ТаблицаВидовДействий.Загрузить(Результат.Выгрузить());
	
	ПодготовитьДанныеПоМакетам();
	
	ДеревоВидов = РеквизитФормыВЗначение("ДеревоВидовДействий", Тип("ДеревоЗначений"));
	Для каждого СтрокаГрупп Из ГруппыДействий Цикл
		
		СтрокаГруппДерево = ДеревоВидов.Строки.Добавить();
		СтрокаГруппДерево.ВидДействияКассираВРМК = СтрокаГрупп.ГруппаДействий;
		СтрокаГруппДерево.ЭтоГруппа = 0;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ГруппаДействий", СтрокаГрупп.ГруппаДействий);
		
		МассивСтрок = ТаблицаВидовДействий.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаМассиваСтрок Из МассивСтрок Цикл
			
			СтрокаЭлементаДерево = СтрокаГруппДерево.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЭлементаДерево,СтрокаМассиваСтрок);
			СтрокаЭлементаДерево.ЭтоГруппа = 3;
			
		КонецЦикла;
		
	КонецЦикла;
	ЗначениеВДанныеФормы(ДеревоВидов, ДеревоВидовДействий);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСервер()
	
	ТаблицаЗаписи = ТаблицаВидовДействий.Выгрузить().Скопировать();
	ТаблицаЗаписи.Очистить();
	
	ДеревоВидов = РеквизитФормыВЗначение("ДеревоВидовДействий", Тип("ДеревоЗначений"));
	Для каждого СтрокаГрупп Из ДеревоВидов.Строки Цикл
		Для каждого СтрокаЭлемент Из СтрокаГрупп.Строки Цикл
			Если СтрокаЭлемент.Использование Тогда
				СтрокаТаблицы = ТаблицаЗаписи.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаЭлемент);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.НастройкиЛогированияПоВидамДействийКассираВРМК.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(ТаблицаЗаписи);
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьФлажки(ЗначениеФлажка)
	
	Для каждого ЭлементВыделеннаяСтрока Из Элементы.ДеревоВидовДействий.ВыделенныеСтроки Цикл
	
		СтрокаДерева = ДеревоВидовДействий.НайтиПоИдентификатору(ЭлементВыделеннаяСтрока);
		
		Если СтрокаДерева.ЭтоГруппа > 0 Тогда
			СтрокаДерева.Использование = ЗначениеФлажка;
			Если НЕ ЗначениеФлажка Тогда
				СтрокаДерева.ДействиеПодПодозрением = Ложь;
				СтрокаДерева.ИсправляющееДействие   = Ложь;
			КонецЕсли;
		Иначе
			Для каждого ПодстрокаДерева Из СтрокаДерева.ПолучитьЭлементы() Цикл
				ПодстрокаДерева.Использование = ЗначениеФлажка;
				Если НЕ ЗначениеФлажка Тогда
					ПодстрокаДерева.ДействиеПодПодозрением = Ложь;
					ПодстрокаДерева.ИсправляющееДействие   = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеПоМакетам()
	
	Макет = РегистрыСведений.НастройкиЛогированияПоВидамДействийКассираВРМК.ПолучитьМакет("НастройкиДействийПоУмолчанию");
	
	КолСтрок = Макет.ВысотаТаблицы;
	
	Для НомерСтрокиМакета = 2 По КолСтрок Цикл
		
		СтруктураПоиска = Новый Структура;
		
		СтрокаИзМакета = Макет.Область(НомерСтрокиМакета,1,НомерСтрокиМакета,1).Текст;
		Если НЕ ПустаяСтрока(СтрокаИзМакета) Тогда
			РассматриваемоеПеречисление = Перечисления.ВидыДействийКассираВРМК[СтрокаИзМакета];
			СтруктураПоиска.Вставить("ВидДействияКассираВРМК", РассматриваемоеПеречисление);
			СтрокиТаблицы = ТаблицаВидовДействий.НайтиСтроки(СтруктураПоиска);
			Если СтрокиТаблицы.Количество() > 0 Тогда
				СтрокаТаблицы = СтрокиТаблицы[0];
				СтрокаТаблицы.ДействиеПодПодозрениемПоУмолчанию = Истина;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаИзМакета = Макет.Область(НомерСтрокиМакета,2,НомерСтрокиМакета,2).Текст;
		Если НЕ ПустаяСтрока(СтрокаИзМакета) Тогда
			РассматриваемоеПеречисление = Перечисления.ВидыДействийКассираВРМК[СтрокаИзМакета];
			СтруктураПоиска.Вставить("ВидДействияКассираВРМК", РассматриваемоеПеречисление);
			СтрокиТаблицы = ТаблицаВидовДействий.НайтиСтроки(СтруктураПоиска);
			Если СтрокиТаблицы.Количество() > 0 Тогда
				СтрокаТаблицы = СтрокиТаблицы[0];
				СтрокаТаблицы.ИсправляющееДействиеПоУмолчанию = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Макет = РегистрыСведений.НастройкиЛогированияПоВидамДействийКассираВРМК.ПолучитьМакет("НастройкиДействийПоГруппам");
	
	КолСтрок = Макет.ВысотаТаблицы;
	
	Для НомерСтрокиМакета = 2 По КолСтрок Цикл
		
		СтрокаИзМакетаЭлемент = Макет.Область(НомерСтрокиМакета,1,НомерСтрокиМакета,1).Текст;
		Если НЕ ПустаяСтрока(СтрокаИзМакетаЭлемент) Тогда
			РассматриваемоеПеречисление = Перечисления.ВидыДействийКассираВРМК[СтрокаИзМакетаЭлемент];
			СтруктураПоиска.Вставить("ВидДействияКассираВРМК", РассматриваемоеПеречисление);
			СтрокиТаблицы = ТаблицаВидовДействий.НайтиСтроки(СтруктураПоиска);
			Если СтрокиТаблицы.Количество() > 0 Тогда
				СтрокаТаблицы = СтрокиТаблицы[0];
				СтрокаИзМакетаГруппа = Макет.Область(НомерСтрокиМакета,2,НомерСтрокиМакета,2).Текст;
				Если НЕ ПустаяСтрока(СтрокаИзМакетаГруппа) Тогда
					СтрокаТаблицы.ГруппаДействий = СтрокаИзМакетаГруппа;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаИзМакетаГруппа = Макет.Область(НомерСтрокиМакета,2,НомерСтрокиМакета,2).Текст;
	КонецЦикла;
	
	Для НомерСтрокиМакета = 2 По КолСтрок Цикл
		
		СтрокаИзМакета = Макет.Область(НомерСтрокиМакета,3,НомерСтрокиМакета,3).Текст;
		Если НЕ ПустаяСтрока(СтрокаИзМакета) Тогда
			
			СтрокаГрупп = ГруппыДействий.Добавить();
			СтрокаГрупп.ГруппаДействий = СтрокаИзМакета;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти