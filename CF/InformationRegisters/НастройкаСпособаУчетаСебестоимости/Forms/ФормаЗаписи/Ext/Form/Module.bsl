
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьДоступностьСпособовУчета();
	НастроитьДоступностьОбновлятьСтоимостьРегламентнымЗаданием();
	НастроитьДоступностьРаспределенияУслуг(Ложь);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособУчетаПриИзменении(Элемент)
	НастроитьДоступностьОбновлятьСтоимостьРегламентнымЗаданием();
	
	Если Запись.СпособУчета = ПредопределенноеЗначение("Перечисление.СпособыУчетаСебестоимости.ПриниматьИзУправляющейСистемы") Тогда
		НастроитьДоступностьРаспределенияУслуг(Истина);
	Иначе
		НастроитьДоступностьРаспределенияУслуг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределятьСтоимостьУслугПриИзменении(Элемент)
	Элементы.ПравилоРаспределения.ТолькоПросмотр = НЕ Запись.РаспределятьСтоимостьУслуг;
	
	Если НЕ Запись.РаспределятьСтоимостьУслуг Тогда
		Запись.ПравилоРаспределения = Неопределено;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьДоступностьСпособовУчета()
	
	КомментарийСпособУчетаСебестоимости = "";
	Если НЕ Константы.ИспользоватьСинхронизациюДанных.Получить() Тогда
		
		КомментарийСпособУчетаСебестоимости = НСтр("ru = 'Не возможен выбор ""Принимать из управляющей системы"":
		|- выключена синхронизация данных в разделе ""Синхронизация данных""
		|- нет действующих обменов с УТ.'");
		
		
		
	ИначеЕсли Константы.ИспользоватьСинхронизациюДанных.Получить() И НЕ Константы.ИспользуетсяОбменСУправлениемТорговлей.Получить() Тогда
		
		КомментарийСпособУчетаСебестоимости = НСтр("ru = 'Не возможен выбор ""Принимать из управляющей системы"":
		|- нет действующих обменов с УТ.'");
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(КомментарийСпособУчетаСебестоимости) Тогда
		
		Элементы.СпособУчета.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		Элементы.СпособУчета.Подсказка = КомментарийСпособУчетаСебестоимости;
		
		ЭлементПриниматьИзУТ = Элементы.СпособУчета.СписокВыбора.НайтиПоЗначению(Перечисления.СпособыУчетаСебестоимости.ПриниматьИзУправляющейСистемы);
		
		Если НЕ ЭлементПриниматьИзУТ = Неопределено Тогда
			
			Элементы.СпособУчета.СписокВыбора.Удалить(ЭлементПриниматьИзУТ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДоступностьОбновлятьСтоимостьРегламентнымЗаданием()
	
	Если Запись.СпособУчета = Перечисления.СпособыУчетаСебестоимости.АвтономныйУчетСредняяВзвешенная Тогда
		
		Элементы.ОбновлятьРегламентнымЗаданием.ТолькоПросмотр = Ложь;
		Элементы.ОбновлятьРегламентнымЗаданием.ОтображениеПодсказки = ОтображениеПодсказки.Авто;
		Элементы.ОбновлятьРегламентнымЗаданием.Подсказка = "";
		
	Иначе
		Запись.РассчитыватьСебестоимостьРегламентнымЗаданием = Ложь;
		Элементы.ОбновлятьРегламентнымЗаданием.ТолькоПросмотр = Истина;
		Элементы.ОбновлятьРегламентнымЗаданием.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		Элементы.ОбновлятьРегламентнымЗаданием.Подсказка = НСтр("ru = 'Доступно при расчете по средней взвешенной оценке.'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДоступностьРаспределенияУслуг(СброситьФлаг = Ложь)
	
	Если СброситьФлаг Тогда
		Запись.РаспределятьСтоимостьУслуг = Ложь;
		Запись.ПравилоРаспределения = Неопределено;
	КонецЕсли;
	
	Если Запись.СпособУчета = Перечисления.СпособыУчетаСебестоимости.ПриниматьИзУправляющейСистемы Тогда
		Элементы.РаспределятьСтоимостьУслуг.ТолькоПросмотр = Истина;
		Элементы.ПравилоРаспределения.ТолькоПросмотр = Истина;
		Элементы.ПравилоРаспределения.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		Элементы.ПравилоРаспределения.Подсказка = НСтр("ru = 'Недоступно при способе учета ""Принимать из управляющей системы""'");
		
	Иначе
		Элементы.РаспределятьСтоимостьУслуг.ТолькоПросмотр = Ложь;
		Элементы.ПравилоРаспределения.ТолькоПросмотр = Ложь;
		Элементы.ПравилоРаспределения.ОтображениеПодсказки = ОтображениеПодсказки.Авто;
		Элементы.ПравилоРаспределения.Подсказка = "";
	КонецЕсли;
	
	Элементы.ПравилоРаспределения.ТолькоПросмотр = НЕ Запись.РаспределятьСтоимостьУслуг;
	
КонецПроцедуры

#КонецОбласти
