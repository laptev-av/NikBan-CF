
#Область ПрограммныйИнтерфейс

// Возвращает таблицу учетных остатков алкогольной продукции.
//
// Параметры:
//  ДатаОстатков - Дата - дата получения остатков,
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентЕГАИС - ссылка на собственную организацию,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - торговый объект для получения остатков,
//  КорректироватьОстаткиНемаркируемойПродукции - Булево - признак корректировки остатков немаркируемой продукции.
//
// Возвращаемое значение:
//   ТаблицаЗначений - учетные остатки. Колонки таблицы:
//    * Номенклатура - ОпределяемыйТип.Номенклатура
//    * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры
//    * ПродаетсяВРозлив - Булево
//    * ОбъемДАЛ - Число
//    * ТипПродукции - ПеречислениеСсылка.ТипыПродукцииЕГАИС
//    * ОстатокСкладБазЕд - Число - остаток в базовых единицах измерения (для оптового склада)
//    * ОстатокТорговыйЗалБазЕд - Число - остаток в базовых единицах измерения (для розничного магазина)
//    * ОстатокСклад - Число - остаток в штуках для фасованной и в ДАЛах для нефасованной продукциии (для оптового склада)
//    * ОстатокТорговыйЗал - Число - остаток в штуках для фасованной и в ДАЛах для нефасованной продукциии (для розничного магазина)
//
Функция УчетныеОстатки(ДатаОстатков, Организация, ТорговыйОбъект, КорректироватьОстаткиНемаркируемойПродукции) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Магазин"     , ТорговыйОбъект);
	Запрос.УстановитьПараметр("Организация" , Организация);
	Запрос.УстановитьПараметр("ДатаОстатков", ДатаОстатков);
	Запрос.УстановитьПараметр("КорректироватьОстаткиНемаркируемойПродукции", КорректироватьОстаткиНемаркируемойПродукции);
	
	Если Справочники.Организации.КоличествоОрганизаций() > 1 Тогда
		Запрос.Текст = ТекстЗапросаТоварыОрганизаций(ТорговыйОбъект);
	Иначе
		Запрос.Текст = ТекстЗапросаТоварыНаСкладах(ТорговыйОбъект);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Заполняет в табличной части коэффициент пересчета в декалитры для базовой единицы измерения номенклатуры.
//
// Параметры:
//  ТабличнаяЧасть - ТабличнаяЧасть - табличная часть, в которой нужно обновить коэффициент.
//
Процедура ЗаполнитьКоэффициентПересчетаВДАЛ(ТабличнаяЧасть) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ТабличнаяЧасть);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТабличнаяЧасть.ОбъемДАЛ КАК КоэффициентПересчета,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.Номенклатура.ОбъемДАЛ КАК КоэффициентПересчета,
	|	ИсходнаяТаблица.НомерСтроки
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|ГДЕ
	|	ИсходнаяТаблица.Номенклатура.ОбъемДАЛ <> ИсходнаяТаблица.КоэффициентПересчета";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТабличнаяЧасть[Выборка.НомерСтроки - 1].ОбъемДАЛ = Выборка.КоэффициентПересчета;
	КонецЦикла;
	
КонецПроцедуры

// В процедуре необходимо определить значения переменных ЭтоСклад и ЭтоТорговыйЗал в зависимости от типа торгового объекта.
//
// Параметры:
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//  ЭтоСклад - Булево - признак того, что торговый объект является складским помещением. Выходной параметр,
//  ЭтоТорговыйЗал - Булево - признак того, что торговый объект является торговым залом. Выходной параметр.
//
Процедура ПриОпределенииТипаТорговогоОбъекта(ТорговыйОбъект, ЭтоСклад, ЭтоТорговыйЗал) Экспорт
	
	ЭтоСклад = Ложь;
	ЭтоТорговыйЗал = Истина;
	
КонецПроцедуры

// Проверяет наличие документа инвентаризации по складу.
//
// Параметры:
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентЕГАИС - ссылка на собственную организацию,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//  ТекстОшибкиСклад - Строка, ФорматированнаяСтрока - текст ошибки проверки инвентаризации на складе. Выходной параметр,
//  ТекстОшибкиТорговыйЗал - Строка, ФорматированнаяСтрока - текст ошибки проверки инвентаризации в торговом зале. Выходной параметр,
//  ОтчетПоРасхождениямСклад - Булево - если Истина, будет доступна ссылка на формирование отчета по излишкам/недостачам. Выходной параметр,
//  ОтчетПоРасхождениямТорговыйЗал - Булево - если Истина, будет доступна ссылка на формирование отчета по излишкам/недостачам. Выходной параметр.
//
Процедура ПроверитьНаличиеИнвентаризации(Организация, ТорговыйОбъект, ТекстОшибкиСклад, ТекстОшибкиТорговыйЗал, ОтчетПоРасхождениямСклад, ОтчетПоРасхождениямТорговыйЗал) Экспорт
	
	ТекстОшибкиСклад = "";
	ТекстОшибкиТорговыйЗал = "";
	
	Если ИспользуетсяНесколькоСкладов(ТорговыйОбъект) Тогда
		
		ТекстОшибкиСклад = ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект, Перечисления.ТипыСкладов.СкладскоеПомещение);
		
		ТекстОшибкиТорговыйЗал = ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект, Перечисления.ТипыСкладов.ТорговыйЗал);
		
	Иначе
		
		ТекстОшибкиТорговыйЗал = ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект);
		
	КонецЕсли;
	
	ОтчетПоРасхождениямСклад = НЕ ПустаяСтрока(ТекстОшибкиСклад);
	ОтчетПоРасхождениямТорговыйЗал = НЕ ПустаяСтрока(ТекстОшибкиТорговыйЗал);
	
КонецПроцедуры

// Вызывается после заполнения таблицы значений неподтвержденными документами.
//
// Параметры:
//  НеподтвержденныеДокументы - ТаблицаЗначений - таблица с найденными неподтвержденными документами,
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - собственная организация по классификатору.
//
Процедура ПриПроверкеНеподтвержденныхДокументов(НеподтвержденныеДокументы, ОрганизацияЕГАИС) Экспорт
	
	СписокСтатусов = Новый Массив;
	СписокСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден);
	СписокСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	Запрос.УстановитьПараметр("СписокСтатусов", СписокСтатусов);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТТНВходящая.Ссылка КАК ДокументСсылка
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|		ПО ТТНВходящая.Ссылка = ПоступлениеТоваров.ТТНВходящаяЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ТТНВходящая.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ТТНВходящая.Проведен
	|	И ТТНВходящая.Грузополучатель = &ОрганизацияЕГАИС
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&СписокСтатусов)
	|	И ПоступлениеТоваров.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = НеподтвержденныеДокументы.Найти(Выборка.ДокументСсылка, "ДокументСсылка");
		Если СтрокаТаблицы = Неопределено Тогда
			СтрокаТаблицы = НеподтвержденныеДокументы.Добавить();
			СтрокаТаблицы.ДокументСсылка = Выборка.ДокументСсылка;
			СтрокаТаблицы.ТипЗначения = Документы.ТТНВходящаяЕГАИС.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Вызывается после заполнения таблицы значений документами, требующих оформления.
//
// Параметры:
//  НеоформленныеДокументы - ТаблицаЗначений - таблица с найденными документами,
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - собственная организация по классификатору.
//
Процедура ПриПроверкеНеоформленныхДокументов(НеоформленныеДокументы, ОрганизацияЕГАИС) Экспорт
	
	СписокСтатусов = Новый Массив;
	СписокСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден);
	СписокСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	Запрос.УстановитьПараметр("СписокСтатусов", СписокСтатусов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящая.Ссылка КАК ДокументСсылка
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|		ПО ТТНВходящая.Ссылка = ПоступлениеТоваров.ТТНВходящаяЕГАИС
	|			И (ПоступлениеТоваров.Проведен)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ТТНВходящая.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ТТНВходящая.Проведен
	|	И ТТНВходящая.Грузополучатель = &ОрганизацияЕГАИС
	|	И СтатусыДокументовЕГАИС.Статус В(&СписокСтатусов)
	|	И ПоступлениеТоваров.Ссылка ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = НеоформленныеДокументы.Найти(Выборка.ДокументСсылка, "ДокументСсылка");
		Если СтрокаТаблицы = Неопределено Тогда
			СтрокаТаблицы = НеоформленныеДокументы.Добавить();
			СтрокаТаблицы.ДокументСсылка = Выборка.ДокументСсылка;
			СтрокаТаблицы.ТипЗначения = Документы.ТТНВходящаяЕГАИС.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

// Возвращает Истина, если у магазина есть склады с разным типом.
//
Функция ИспользуетсяНесколькоСкладов(Магазин)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склады.ТипСклада КАК ТипСклада
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Магазин = &Магазин
	|	И НЕ Склады.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество() > 1;
	
КонецФункции

// Проверяет наличие проведенного приказа на инвентаризацию по магазину.
//
Функция ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект, ТипСклада = Неопределено)
	
	МестоПроведения = ?(ТипСклада = Перечисления.ТипыСкладов.ТорговыйЗал, "ВТорговомЗале", "НаСкладе");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Магазин"    , ТорговыйОбъект);
	Запрос.УстановитьПараметр("ТипСклада"  , ТипСклада);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	ЕСТЬNULL(ПриказНаПроведениеИнвентаризацииТоваров.Ссылка, ЗНАЧЕНИЕ(Документ.ПриказНаПроведениеИнвентаризацииТоваров.ПустаяСсылка)) КАК ДокументСсылка,
	|	ЕСТЬNULL(ПриказНаПроведениеИнвентаризацииТоваров.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончания,
	|	ЕСТЬNULL(ПриказНаПроведениеИнвентаризацииТоваров.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыПриказовНаПроведениеИнвентаризацийТоваров.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказНаПроведениеИнвентаризацииТоваров КАК ПриказНаПроведениеИнвентаризацииТоваров
	|		ПО Склады.Ссылка = ПриказНаПроведениеИнвентаризацииТоваров.Склад
	|			И (ПриказНаПроведениеИнвентаризацииТоваров.Проведен)
	|			И (ПриказНаПроведениеИнвентаризацииТоваров.Магазин = &Магазин)
	|			И (ВЫБОР
	|				КОГДА Склады.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА Склады.Организация = ПриказНаПроведениеИнвентаризацииТоваров.Организация
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	НЕ Склады.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
	|				ТОГДА Склады.Организация = &Организация
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И Склады.Магазин = &Магазин
	|	И ВЫБОР
	|			КОГДА &ТипСклада = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Склады.ТипСклада = &ТипСклада
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	ДатаОкончания УБЫВ
	|ИТОГИ ПО
	|	Склад
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ТекстОшибки = "";
	
	ВыборкаСклад = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСклад.Следующий() Цикл
		
		МассивСтроки = Новый Массив;
		МассивСтроки.Добавить(?(ТипСклада = Перечисления.ТипыСкладов.ТорговыйЗал, НСтр("ru='в торговом зале'"), НСтр("ru='на складе'")));
		МассивСтроки.Добавить(" ");
		МассивСтроки.Добавить(Новый ФорматированнаяСтрока(Строка(ВыборкаСклад.Склад),,,, ПолучитьНавигационнуюСсылку(ВыборкаСклад.Склад)));
		
		ПредставлениеСклада = Новый ФорматированнаяСтрока(МассивСтроки);
		
		Выборка = ВыборкаСклад.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ДокументСсылка.Пустая() Тогда
				
				МассивСтроки = Новый Массив;
				МассивСтроки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(ПредставлениеСклада);
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(НСтр("ru='не проводилась.'"));
				
				ТекстОшибки = Новый ФорматированнаяСтрока(МассивСтроки);
				
			ИначеЕсли НачалоДня(Выборка.ДатаОкончания) < НачалоДня(ДобавитьМесяц(ТекущаяДатаСеанса(), -1)) Тогда
				
				МассивСтроки = Новый Массив;
				МассивСтроки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(ПредставлениеСклада);
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(НСтр("ru='проводилась больше месяца назад.'"));
				МассивСтроки.Добавить(Символы.ПС);
				МассивСтроки.Добавить(НСтр("ru='Рекомендуется провести повторную инвентаризацию.'"));
				
				ТекстОшибки = Новый ФорматированнаяСтрока(МассивСтроки);
				
			ИначеЕсли Выборка.Статус <> Перечисления.СтатусыПриказовНаПроведениеИнвентаризацийТоваров.Закрыт Тогда
				
				МассивСтроки = Новый Массив;
				МассивСтроки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(ПредставлениеСклада);
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(НСтр("ru='не завершена.'"));
				МассивСтроки.Добавить(Символы.ПС);
				МассивСтроки.Добавить(НСтр("ru='Перед корректировкой остатков по регистрам ЕГАИС рекомендуется завершить инвентаризацию.'"));
				
				ТекстОшибки = Новый ФорматированнаяСтрока(МассивСтроки);
				
			КонецЕсли;
			
			Прервать;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецФункции

// Возвращает текст запроса учетных остатков по регистру накопления ТоварыНаСкладах.
//
Функция ТекстЗапросаТоварыНаСкладах(ТорговыйОбъект)
	
	Если НЕ ИспользуетсяНесколькоСкладов(ТорговыйОбъект) Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПродаетсяВРозлив,
		|	ТоварыНаСкладахОстатки.Номенклатура.ОбъемДАЛ КАК ОбъемДАЛ,
		|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) КАК ТипПродукции,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток * ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ТоварыНаСкладахОстатки.Номенклатура.ОбъемДАЛ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ОстатокТорговыйЗал,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК ОстатокТорговыйЗалБазЕд,
		|	0 КАК ОстатокСклад,
		|	0 КАК ОстатокСкладБазЕд
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаОстатков,
		|			Склад.Магазин = &Магазин
		|				И Номенклатура.АлкогольнаяПродукция
		|				И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|				И ВЫБОР
		|					КОГДА НЕ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
		|						ТОГДА &КорректироватьОстаткиНемаркируемойПродукции
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ТоварыНаСкладахОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО ТоварыНаСкладахОстатки.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
		|			И ТоварыНаСкладахОстатки.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	СУММА(ВложенныйЗапрос.ОстатокСклад) КАК ОстатокСклад,
		|	СУММА(ВложенныйЗапрос.ОстатокТорговыйЗал) КАК ОстатокТорговыйЗал,
		|	СУММА(ВложенныйЗапрос.ОстатокСкладБазЕд) КАК ОстатокСкладБазЕд,
		|	СУММА(ВложенныйЗапрос.ОстатокТорговыйЗалБазЕд) КАК ОстатокТорговыйЗалБазЕд
		|ПОМЕСТИТЬ ТоварыНаСкладах
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|		ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
		|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК ОстатокСклад,
		|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК ОстатокСкладБазЕд,
		|		0 КАК ОстатокТорговыйЗал,
		|		0 КАК ОстатокТорговыйЗалБазЕд
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&ДатаОстатков,
		|				Склад.Магазин = &Магазин
		|					И Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.СкладскоеПомещение)
		|					И Номенклатура.АлкогольнаяПродукция
		|					И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|					И ВЫБОР
		|						КОГДА НЕ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
		|							ТОГДА &КорректироватьОстаткиНемаркируемойПродукции
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ) КАК ТоварыНаСкладахОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Номенклатура,
		|		ТоварыНаСкладахОстатки.Характеристика,
		|		0,
		|		0,
		|		ТоварыНаСкладахОстатки.КоличествоОстаток,
		|		ТоварыНаСкладахОстатки.КоличествоОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&ДатаОстатков,
		|				Склад.Магазин = &Магазин
		|					И Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
		|					И Номенклатура.АлкогольнаяПродукция
		|					И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|					И ВЫБОР
		|						КОГДА НЕ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
		|							ТОГДА &КорректироватьОстаткиНемаркируемойПродукции
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ) КАК ТоварыНаСкладахОстатки) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладах.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладах.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПродаетсяВРозлив,
		|	ТоварыНаСкладах.Номенклатура.ОбъемДАЛ КАК ОбъемДАЛ,
		|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) КАК ТипПродукции,
		|	ТоварыНаСкладах.ОстатокСклад * ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ТоварыНаСкладах.Номенклатура.ОбъемДАЛ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ОстатокСклад,
		|	ТоварыНаСкладах.ОстатокТорговыйЗал * ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ТоварыНаСкладах.Номенклатура.ОбъемДАЛ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ОстатокТорговыйЗал,
		|	ТоварыНаСкладах.ОстатокСкладБазЕд КАК ОстатокСкладБазЕд,
		|	ТоварыНаСкладах.ОстатокТорговыйЗалБазЕд КАК ОстатокТорговыйЗалБазЕд
		|ИЗ
		|	ТоварыНаСкладах КАК ТоварыНаСкладах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО ТоварыНаСкладах.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
		|			И ТоварыНаСкладах.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса учетных остатков по регистру накопления ТоварыОрганизаций.
//
Функция ТекстЗапросаТоварыОрганизаций(ТорговыйОбъект)
	
	Если НЕ ИспользуетсяНесколькоСкладов(ТорговыйОбъект) Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыОрганизацийОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийОстатки.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПродаетсяВРозлив,
		|	ТоварыОрганизацийОстатки.Номенклатура.ОбъемДАЛ КАК ОбъемДАЛ,
		|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) КАК ТипПродукции,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток * ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ТоварыОрганизацийОстатки.Номенклатура.ОбъемДАЛ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ОстатокТорговыйЗал,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК ОстатокТорговыйЗалБазЕд,
		|	0 КАК ОстатокСклад,
		|	0 КАК ОстатокСкладБазЕд
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			&ДатаОстатков,
		|			Склад.Магазин = &Магазин
		|				И Организация = &Организация
		|				И Номенклатура.АлкогольнаяПродукция
		|				И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|				И ВЫБОР
		|					КОГДА НЕ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
		|						ТОГДА &КорректироватьОстаткиНемаркируемойПродукции
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ТоварыОрганизацийОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО ТоварыОрганизацийОстатки.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
		|			И ТоварыОрганизацийОстатки.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	СУММА(ВложенныйЗапрос.ОстатокСклад) КАК ОстатокСклад,
		|	СУММА(ВложенныйЗапрос.ОстатокТорговыйЗал) КАК ОстатокТорговыйЗал,
		|	СУММА(ВложенныйЗапрос.ОстатокСкладБазЕд) КАК ОстатокСкладБазЕд,
		|	СУММА(ВложенныйЗапрос.ОстатокТорговыйЗалБазЕд) КАК ОстатокТорговыйЗалБазЕд
		|ПОМЕСТИТЬ ТоварыОрганизаций
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыОрганизацийОстатки.Номенклатура КАК Номенклатура,
		|		ТоварыОрганизацийОстатки.Характеристика КАК Характеристика,
		|		ТоварыОрганизацийОстатки.КоличествоОстаток КАК ОстатокСклад,
		|		ТоварыОрганизацийОстатки.КоличествоОстаток КАК ОстатокСкладБазЕд,
		|		0 КАК ОстатокТорговыйЗал,
		|		0 КАК ОстатокТорговыйЗалБазЕд
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций.Остатки(
		|				&ДатаОстатков,
		|				Склад.Магазин = &Магазин
		|					И Организация = &Организация
		|					И Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.СкладскоеПомещение)
		|					И Номенклатура.АлкогольнаяПродукция
		|					И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|					И ВЫБОР
		|						КОГДА НЕ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
		|							ТОГДА &КорректироватьОстаткиНемаркируемойПродукции
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ) КАК ТоварыОрганизацийОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыОрганизацийОстатки.Номенклатура,
		|		ТоварыОрганизацийОстатки.Характеристика,
		|		0,
		|		0,
		|		ТоварыОрганизацийОстатки.КоличествоОстаток,
		|		ТоварыОрганизацийОстатки.КоличествоОстаток
		|	ИЗ
		|		РегистрНакопления.ТоварыОрганизаций.Остатки(
		|				&ДатаОстатков,
		|				Склад.Магазин = &Магазин
		|					И Организация = &Организация
		|					И Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
		|					И Номенклатура.АлкогольнаяПродукция
		|					И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|					И ВЫБОР
		|						КОГДА НЕ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
		|							ТОГДА &КорректироватьОстаткиНемаркируемойПродукции
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ) КАК ТоварыОрганизацийОстатки) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизаций.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПродаетсяВРозлив,
		|	ТоварыОрганизаций.Номенклатура.ОбъемДАЛ КАК ОбъемДАЛ,
		|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) КАК ТипПродукции,
		|	ТоварыОрганизаций.ОстатокСклад * ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ТоварыОрганизаций.Номенклатура.ОбъемДАЛ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ОстатокСклад,
		|	ТоварыОрганизаций.ОстатокТорговыйЗал * ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ТипПродукции, ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|			ТОГДА ТоварыОрганизаций.Номенклатура.ОбъемДАЛ
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ОстатокТорговыйЗал,
		|	ТоварыОрганизаций.ОстатокСкладБазЕд КАК ОстатокСкладБазЕд,
		|	ТоварыОрганизаций.ОстатокТорговыйЗалБазЕд КАК ОстатокТорговыйЗалБазЕд
		|ИЗ
		|	ТоварыОрганизаций КАК ТоварыОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО ТоварыОрганизаций.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
		|			И ТоварыОрганизаций.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
