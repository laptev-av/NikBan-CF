#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Функция ОбработчикиТЧ()
	
	Результат = Новый Структура;
	Результат.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу");
	Результат.Вставить("ПересчитатьКоличествоУпаковок");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ПоступлениеТоваров

Процедура ЗаполнитьПоступлениеТоваровНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ДокументОбъект.ЦенаВключаетНДС = Истина;
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу");
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу");
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураПараметровСтавкиНДСУчитыватьНДС(ДокументОбъект));
	
	СтруктураНДС = ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ДокументОбъект);
	СтруктураНДС.Вставить("НеобходимоОбработатьВсюТЧ", Истина);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураНДС);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	СтруктураПараметровДействия = ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныЗакупкиВСтрокеТЧ(ДокументОбъект);
	СтруктураДействий.Вставить("ЗаполнитьЦенуЗакупки", СтруктураПараметровДействия);
	СтруктураДействий.Вставить("НеобходимоОбработатьВсюТЧ", Истина);
	
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровОтКлиента

Процедура ЗаполнитьВозвратТоваровОтПокупателяНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПродажи");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область РеализацияТоваров

Процедура ЗаполнитьРеализациюТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПродажи");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровПоставщику

Процедура ЗаполнитьВозвратТоваровПоставщикуНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);

КонецПроцедуры

#КонецОбласти

#Область ПеремещениеТоваров

Процедура ЗаполнитьПеремещениеТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.СкладОтправитель      = Реквизиты.ГрузоотправительПредприятие;
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		ДокументОбъект.СкладПолучатель       = Реквизиты.ГрузополучательПредприятие;
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаТоваровМеждуОрганизациями

Процедура ЗаполнитьПередачуТоваровМеждуОрганизациямиНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ОприходованиеТоваров

Процедура ЗаполнитьОприходованиеТоваровНаОснованииИнвентаризацииПродукцииВЕТИС (ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты,,,1);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеНедостачТоваров

Процедура ЗаполнитьСписаниеТоваровНаОснованииИнвентаризацииПродукцииВЕТИС (ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#Область СборкаТоваров

Процедура ЗаполнитьСборкуТоваровНаОснованииПроизводственнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Запрос = Новый Запрос();
	СписокЗапросов = Новый СписокЗначений();
	
	СтруктураЗапроса = Документы.ПроизводственнаяОперацияВЕТИС.СтруктураЗапросаДанныеПроизводственнойОперации();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.Реквизиты, "Реквизиты");
	СписокЗапросов.Добавить(СтруктураЗапроса.Товары,    "Товары");
	СписокЗапросов.Добавить(СтруктураЗапроса.Сырье,     "Сырье");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = ИнтеграцияГосИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаРеквизиты = РезультатЗапроса["Реквизиты"].Выбрать();
	ВыборкаРеквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(
			ДанныеЗаполнения);
			
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация;
		
		ДокументОбъект.Организация = ВыборкаРеквизиты.Организация;
		ДокументОбъект.Магазин = ВыборкаРеквизиты.ТорговыйОбъект;
		ДокументОбъект.Склад = ДокументОбъект.Магазин.СкладПоступления;
		
	КонецЕсли;
	
	ТаблицаШапка = РезультатЗапроса["Товары"].Выгрузить();
	
	Комплект = ТаблицаШапка.Скопировать();
	Комплект.Свернуть("Номенклатура, Характеристика");
	
	Если Комплект.Количество() > 1 Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% содержит несколько строк в табличной части ""Продукция"". Ввод на основании документа ""Сборка (разборка) товаров"" невозможен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Серии.Очистить();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	Если ЗначениеЗаполнено(ТаблицаШапка) Тогда
		
		ТаблицаШапка.Свернуть("Номенклатура, Характеристика", "Количество");
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ТаблицаШапка[0]);
		
		ДокументОбъект.Количество = ТаблицаШапка.Итог("Количество");
		ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ДокументОбъект, СтруктураДействий, КэшированныеЗначения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ВходящаяТранспортнаяОперацияВЕТИС

Функция ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДокументСсылка, ИмяСклада = "СкладПоступления")
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Контрагент,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Грузополучатель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Организация,
	|	ПредприятияОтправителя.ТорговыйОбъект                                             КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект                                             КАК Партнер,
	|	ПредприятияПолучателя.ТорговыйОбъект                                              КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект                                              КАК Магазин,
	|	ПредприятияПолучателя.ТорговыйОбъект." + ИмяСклада + "                            КАК Склад,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                     КАК ГрузоотправительПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                      КАК ГрузополучательПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                      КАК Подразделение,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент       КАК Перевозчик,
	|	ВходящаяТранспортнаяОперацияВЕТИС.СерияТТН                                        КАК СерияТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ДатаТТН                                         КАК ДатаТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.НомерТТН                                        КАК НомерТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТипТТН                                          КАК ТипТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Комментарий                                     КАК Комментарий,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Дата                                            КАК Дата,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Количество                                    КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения                 КАК Упаковка,
	|		Количество                                    КАК КоличествоУпаковок,
	|		ИдентификаторСтроки                           КАК ИдентификаторСтроки,
	|		ЛОЖЬ                                          КАК БылоУточнение
	|	) КАК Товары,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТоварыУточнение.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Количество                                    КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения                 КАК Упаковка,
	|		Количество                                    КАК КоличествоУпаковок,
	|		ИдентификаторСтроки                           КАК ИдентификаторСтроки
	|	) КАК ТоварыУточнение
	|ИЗ
	|	Документ.ВходящаяТранспортнаяОперацияВЕТИС КАК ВходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ВходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(ДанныеЗаполнения,ОбработчикиТЧ,ЕстьСерии = Ложь,ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",                        ДанныеЗаполнения.Товары.Выгрузить());
	Результат.Вставить("ТоварыУточнение",               ДанныеЗаполнения.ТоварыУточнение.Выгрузить());
	Результат.Вставить("ОбработчикиТЧТовары",           ОбработчикиТЧ);
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЗаполнитьСклад");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	ДанныеЗаполнения.Товары.Индексы.Добавить("ИдентификаторСтроки");
	
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.ТоварыУточнение Цикл 
		
		ИсходнаяСтрока = ДанныеЗаполнения.Товары.НайтиСтроки(Новый Структура("ИдентификаторСтроки",СтрокаТовары.ИдентификаторСтроки));
		Если ИсходнаяСтрока.Количество() = 0 Тогда 
			ИсходнаяСтрока = Новый Структура;
		Иначе 
			ИсходнаяСтрока = ИсходнаяСтрока[0];
			ИсходнаяСтрока.БылоУточнение = Истина;
		КонецЕсли;
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,ИсходнаяСтрока);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтрокаТовары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		//СтруктураТЧ = Новый Структура;
		//СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
		//ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ,  ДанныеЗаполнения.ОбработчикиТЧТовары, Неопределено);
		
	КонецЦикла;
	
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары.НайтиСтроки(Новый Структура("БылоУточнение",Ложь))Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтрокаТовары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
	
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ,  ДанныеЗаполнения.ОбработчикиТЧТовары, Неопределено);
	
КонецПроцедуры

Процедура РассчитатьСтатусОформленияВходящаяТранспортнаяОперацияВЕТИС(Источник, Отказ) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ИсходящаяТранспортнаяОперацияВЕТИС

Функция ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДокументСсылка, ИмяСклада = "СкладПоступления")
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Грузополучатель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Контрагент,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК Магазин,
	|	ПредприятияПолучателя.ТорговыйОбъект." + ИмяСклада + "                             КАК Склад,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК Партнер,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК ГрузоотправительПодразделение,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК Подразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                       КАК ГрузополучательПодразделение,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент       КАК Перевозчик,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.СерияТТН                                        КАК СерияТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ДатаТТН                                         КАК ДатаТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.НомерТТН                                        КАК НомерТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ТипТТН                                          КАК ТипТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Комментарий                                     КАК Комментарий,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Дата                                            КАК Дата,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Количество                                    КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения                 КАК Упаковка,
	|		Количество                                    КАК КоличествоУпаковок
	|	) КАК Товары
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ИсходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(ДанныеЗаполнения,ОбработчикиТЧ,ЕстьСерии = Ложь,ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",              ДанныеЗаполнения.Товары.Выбрать());
	Результат.Вставить("ОбработчикиТЧТовары", ОбработчикиТЧ);
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЗаполнитьСклад");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	Пока ДанныеЗаполнения.Товары.Следующий() Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ДанныеЗаполнения.Товары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		СтруктураТЧ = Новый Структура;
		СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ,  ДанныеЗаполнения.ОбработчикиТЧТовары, Неопределено);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьСтатусОформленияИсходящаяТранспортнаяОперацияВЕТИС(Источник, Отказ) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ИнвентаризацияПродукцииВЕТИС

Функция ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Предприятия.ТорговыйОбъект                                   КАК ТорговыйОбъект,
	|	Предприятия.ТорговыйОбъект                                   КАК Магазин,
	|	Предприятия.ТорговыйОбъект.СкладПоступления                  КАК Склад,
	|	Предприятия.ПроизводственныйОбъект                           КАК Подразделение,
	|	ИнвентаризацияПродукцииВЕТИС.Комментарий                     КАК Комментарий,
	|	ИнвентаризацияПродукцииВЕТИС.Дата                            КАК Дата,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК ХозяйствующийСубъект,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИнвентаризацияПродукцииВЕТИС.Товары.(
	|		Номенклатура                  КАК Номенклатура,
	|		Характеристика                КАК Характеристика,
	|		Серия                         КАК Серия,
	|		КоличествоИзменение           КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|		КоличествоИзменение           КАК КоличествоУпаковок
	|	) КАК Товары
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ИнвентаризацияПродукцииВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК Предприятия
	|		ПО ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект = Предприятия.Ссылка
	|			И ИнвентаризацияПродукцииВЕТИС.Предприятие = Предприятия.Предприятие
	|ГДЕ
	|	ИнвентаризацияПродукцииВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(ДанныеЗаполнения, ОбработчикиТЧ = Неопределено, ЕстьСерии = Ложь, ДопустимыйЗнакСтроки = -1)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",               ДанныеЗаполнения.Товары.Выбрать());
	Результат.Вставить("ОбработчикиТЧТовары",  ОбработчикиТЧ);
	Результат.Вставить("ДопустимыйЗнакСтроки", ДопустимыйЗнакСтроки);
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	Пока ДанныеЗаполнения.Товары.Следующий() Цикл
		
		СтруктураЗаполненияКоличества = Новый Структура("Количество,КоличествоУпаковок");
		СтруктураЗаполненияКоличества.Количество = ДанныеЗаполнения.Товары.Количество*ДанныеЗаполнения.ДопустимыйЗнакСтроки;
		СтруктураЗаполненияКоличества.КоличествоУпаковок = ДанныеЗаполнения.Товары.КоличествоУпаковок*ДанныеЗаполнения.ДопустимыйЗнакСтроки;
		
		Если СтруктураЗаполненияКоличества.Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,ДанныеЗаполнения.Товары);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтруктураЗаполненияКоличества);
		
		Если НЕ(ДанныеЗаполнения.ОбработчикиТЧТовары = Неопределено)Тогда 
			СтруктураТЧ = Новый Структура;
			СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
			
			ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ,  ДанныеЗаполнения.ОбработчикиТЧТовары, Неопределено);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьСтатусОформленияИнвентаризацияПродукцииВЕТИС(Источник, Отказ) Экспорт
	
КонецПроцедуры

#КонецОбласти


#Область СерииНоменклатуры

Функция ПараметрыУказанияСерийСоответствиеНоменклатурыВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыВЕТИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ВходящаяТранспортнаяОперацияВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийВходящаяТранспортнаяОперацияВЕТИС(Объект) Экспорт
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		
		ИмяПоляСклад = "ТорговыйОбъект";
		
	Иначе
		
		ИспользоватьСерииНоменклатуры  = Ложь;
		УчитыватьСебестоимостьПоСериям = Ложь;
		
		ИмяПоляСклад = Неопределено;
		
	КонецЕсли;
	
	ПараметрыУказанияСерийТовары = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТовары.ПолноеИмяОбъекта = "Документ.ВходящаяТранспортнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТовары.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТовары.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТовары.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	ПараметрыУказанияСерийТовары.ИменаПолейДополнительные.Добавить("ЕстьУточнения");
	
	ПараметрыУказанияСерийТовары.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерийТовары.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТовары.Дата         = Объект.Дата;
	
	
	ПараметрыУказанияСерийТоварыУточнение = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();;
	
	ПараметрыУказанияСерийТоварыУточнение.ПолноеИмяОбъекта = "Документ.ВходящаяТранспортнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТоварыУточнение.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТоварыУточнение.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТоварыУточнение.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТоварыУточнение.ИмяТЧТовары  = "ТоварыУточнение";
	ПараметрыУказанияСерийТоварыУточнение.ИмяТЧСерии   = "ТоварыУточнение";
	ПараметрыУказанияСерийТоварыУточнение.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТоварыУточнение.Дата         = Объект.Дата;
	
	ПараметрыУказанияСерий = Новый Структура;
	ПараметрыУказанияСерий.Вставить("Товары", ПараметрыУказанияСерийТовары);
	ПараметрыУказанияСерий.Вставить("ТоварыУточнение", ПараметрыУказанияСерийТоварыУточнение);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ИнвентаризацияПродукцииВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийИнвентаризацияПродукцииВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ИнвентаризацияПродукцииВЕТИС";
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		
		ИмяПоляСклад = "ТорговыйОбъект";
		
	Иначе
		
		ИспользоватьСерииНоменклатуры  = Ложь;
		УчитыватьСебестоимостьПоСериям = Ложь;
		
		ИмяПоляСклад = Неопределено;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерий.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерий.Дата         = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ПроизводственнаяОперацияВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийПроизводственнаяОперацияВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПроизводственнаяОперацияВЕТИС";
	
	Если Объект.ТорговыйОбъект = Неопределено Тогда
		
		ИспользоватьСерииНоменклатуры  = Ложь;
		УчитыватьСебестоимостьПоСериям = Ложь;
		
		ИмяПоляСклад = Неопределено;
		
	Иначе
		
		ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		
		ИмяПоляСклад = "ТорговыйОбъект";
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерий.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерий.Дата         = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ЗапросСкладскогоЖурналаВЕТИС'.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийЗапросСкладскогоЖурналаВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЗапросСкладскогоЖурналаВЕТИС";
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = Неопределено;
	ПараметрыУказанияСерий.Дата                           = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

#КонецОбласти

#КонецОбласти


