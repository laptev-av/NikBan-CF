#Область ПрограммныйИнтерфейс

Функция ВЭтомСтатусеСерииУказываютсяВТЧТовары(СтатусУказанияСерий, ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = ПараметрыУказанияСерий.ИмяТЧСерии Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтатусыСерийУказываемыхВТЧТовары(ПараметрыУказанияСерий).Найти(СтатусУказанияСерий) = Неопределено Тогда
		
		Возврат Ложь;
		
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

Функция СтатусыСерийУказываемыхВТЧТовары(ПараметрыУказанияСерий) Экспорт
	
	Статусы = Новый Массив;
	Статусы.Добавить(0);
	Статусы.Добавить(13);
	Статусы.Добавить(14);
	Статусы.Добавить(15);
	Если СерииПриПланированииОтгрузкиУказываютсяВТЧТовары(ПараметрыУказанияСерий) Тогда
		Статусы.Добавить(9);
		Статусы.Добавить(10);
		Статусы.Добавить(11);
	КонецЕсли;
	
	Возврат Статусы;
	
КонецФункции

Функция СерииПриПланированииОтгрузкиУказываютсяВТЧТовары(ПараметрыУказанияСерий) Экспорт
	
	МассивОпераций = Новый Массив; // Операции, при которых серии 10 указываются в ТЧ Серии
	МассивОпераций.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ВводОстатков"));
	МассивОпераций.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаОтПоставщика"));
	МассивОпераций.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента"));
	МассивОпераций.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов"));
	МассивОпераций.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаВРозницу"));
	МассивОпераций.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки"));
	
	Для Каждого СкладскаяОперация Из ПараметрыУказанияСерий.СкладскиеОперации Цикл
		Если МассивОпераций.Найти(СкладскаяОперация) <> Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ЗначенияПолейДляОпределенияРаспоряжения(Объект, ТекущаяСтрока, ПараметрыУказанияСерий) Экспорт
	
	ЗначенияПолейДляОпределенияРаспоряжения = Новый Структура;
	
	Для Каждого СтрМас из ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения Цикл
		
		ПоложениеРазделителя = СтрНайти(СтрМас, "_");		
		
		Если ПоложениеРазделителя = 0 Тогда
			ЗначенияПолейДляОпределенияРаспоряжения.Вставить(СтрМас, Объект[СтрМас]);
		Иначе
			ИмяПоля = Прав(СтрМас, СтрДлина(СтрМас)- ПоложениеРазделителя);
			ЗначенияПолейДляОпределенияРаспоряжения.Вставить(СтрМас, ТекущаяСтрока[ИмяПоля]);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЗначенияПолейДляОпределенияРаспоряжения;
КонецФункции

// Структура, которую возвращает форма подбора серии
//	Возвращаемое значение:
//		Структура:
//			Значение - СправочникСсылка.СерииНоменклатуры
//			ИдентификаторСтроки - Число - идентификатор строки таблицы формы, в которую, нужно подставить значение
//
Функция ВыбраннаяСерия() Экспорт
	
	Возврат Новый Структура("Значение,ИдентификаторТекущейСтроки");
	
КонецФункции

// Устанавливается свойство ОтображениеПредупрежденияПриРедактировании элемента формы.
//
Процедура ОтображениеПредупрежденияПриРедактировании(Элемент, Отображать) Экспорт
	
	Если Отображать Тогда
		Элемент.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элемент.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
	
КонецПроцедуры

// Рассчитывает представление серии. Расчет может производится по шаблону рабочего наименования серии - тогда
// фукнция должна быть вызвана с сервера. Если шаблон не задан или фукнция вызвана с клиента, то расчет производится
// по предопределенному шаблону
//
// Параметры:
//  ПараметрыШаблона	 - Структура - см. Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий
//  ЗначенияРеквизитов	 - Структура, УправляемаяФорма, СправочникОбъект.СерииНоменклатуры, ДанныеФормыЭлементКоллекции
// 
// Возвращаемое значение:
//  Строка - 
//
Функция ПредставлениеСерии(ПараметрыШаблона, ЗначенияРеквизитов, ДобавитьСловоНовая = Ложь) Экспорт
	
	Представление = "";
	
	ЧастиПредставления = Новый Массив;
	
	Если ДобавитьСловоНовая Тогда
		ЧастиПредставления.Добавить(НСтр("ru = '<Новая>'"));
	КонецЕсли;
	
	Если ПараметрыШаблона.ИспользоватьНомерСерии Тогда
		ЧастиПредставления.Добавить(НСтр("ru = '%Номер%'"));	
	КонецЕсли;
	
	Если ПараметрыШаблона.ИспользоватьСрокГодностиСерии Тогда
		ЧастиПредставления.Добавить(НСтр("ru = 'до %ГоденДо%'"));
	КонецЕсли;
	
	Если ПараметрыШаблона.ИспользоватьНомерКИЗГИСМСерии Тогда
		Если ПараметрыШаблона.ИспользоватьНомерСерии Тогда
			ЧастиПредставления.Добавить(НСтр("ru = 'КиЗ %НомерКиЗГИСМ%'"));
		Иначе
			ЧастиПредставления.Добавить(НСтр("ru = '%НомерКиЗГИСМ%'"));
		КонецЕсли;
	КонецЕсли;
	
	Представление = СтрСоединить(ЧастиПредставления, " ");	
	Представление = СтрЗаменить(Представление, "%Номер%", ЗначенияРеквизитов.Номер);
	Представление = СтрЗаменить(Представление, "%ГоденДо%", Формат(ЗначенияРеквизитов.ГоденДо,ПараметрыШаблона.ФорматнаяСтрокаСрокаГодности));
	Представление = СтрЗаменить(Представление, "%НомерКиЗГИСМ%", ЗначенияРеквизитов.НомерКиЗГИСМ);
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
