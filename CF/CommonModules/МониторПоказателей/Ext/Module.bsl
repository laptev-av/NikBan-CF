
#Область ПрограммныйИнтерфейс

// Функция формирует стандартные настройки для монитора показателей.
//
// Возвращаемое значение:
//   Структура   - структура, имеющая свойства:
//		* ТаблицаРазделов - ТаблицаЗначений - Таблица значений, в которой перечислены 
//							показатели отчета, выводимые по умолчанию и их параметры отображения.
//		* КоличествоКолонок - Число - Количество графиков, выводимых в одном ряду отчета.
//		* ПериодАвтообновления - Число - Количество минут через которое будет запущено автообновление отчета.
//		* Период - СтандартныйПериод - Период за который формируется отчет.
//		* ТочностьРасчетаДробнойЧасти - Число - Количество знаков после запятой для значений отчета.
//		* РазрезАналитики - Строка - Значение, в разрезе которого будут формироваться данные.
//		* КратностьЧисел - Перечисление.ВидыПредставленияЧисел - Коэффициент масштабирования значений.
//		* Периодичность - Перечисление.Периодичность - Периодичность формирования данных в периоде отчета.
//
Функция НастройкиПоУмолчанию() Экспорт  
	
	СтруктураНастроек = Новый Структура;
	
	ОтчетыПоУмолчанию = Перечисления.ВидыАнализаМонитора.ВидыАнализаМонитораПоУмолчанию();
	
	ТаблицаРазделов = Новый ТаблицаЗначений;
	ТаблицаРазделов.Колонки.Добавить("Доступность");
	ТаблицаРазделов.Колонки.Добавить("Показатель");
	ТаблицаРазделов.Колонки.Добавить("ВидОтображения");
	ТаблицаРазделов.Колонки.Добавить("ПалитраЦветов");
	ТаблицаРазделов.Колонки.Добавить("ЛинияТренда");
	
	Для Каждого Отчет из ОтчетыПоУмолчанию Цикл
		НовыйРаздел = ТаблицаРазделов.Добавить();
		НовыйРаздел.Доступность 	= Истина;
		НовыйРаздел.Показатель 		= Отчет;
		НовыйРаздел.ВидОтображения 	= Перечисления.ВидыДиаграмм.Гистограмма;
		НовыйРаздел.ПалитраЦветов	= ПалитраЦветовДиаграммы.Яркая;
		НовыйРаздел.ЛинияТренда		= Ложь;
	КонецЦикла;
	
	СтруктураНастроек.Вставить("ТаблицаРазделов", 				ПоместитьВоВременноеХранилище(ТаблицаРазделов, Новый УникальныйИдентификатор));
	СтруктураНастроек.Вставить("КоличествоКолонок", 			2);
	СтруктураНастроек.Вставить("ПериодАвтообновления", 			30);
	СтруктураНастроек.Вставить("Период", 						ВариантСтандартногоПериода.ЭтотМесяц);
	СтруктураНастроек.Вставить("ТочностьРасчетаДробнойЧасти", 	1);
	СтруктураНастроек.Вставить("РазрезАналитики", 				"Магазин");
	СтруктураНастроек.Вставить("КратностьЧисел", 				Перечисления.ВидыПредставленияЧисел.БезИзменений);
	СтруктураНастроек.Вставить("Периодичность",					Перечисления.Периодичность.Месяц);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Функция формирует данные для заполнения отчета.
//
// Параметры:
//  ПараметрыЗадания - Структура - структура со следующими свойствами:
//  	* РазрезАналитики - Строка - Значение, в разрезе которого будут формироваться данные.
//		* Период - СтандартныйПериод - Период за который формируется отчет.
//		* ВыбранныеОтчеты - ХранилищеЗначений - Показатели отчета, выводимые в отчете.
//		* СписокМагазинов - Массив - Список выбранных магазинов.
//		* СписокФорматовМагазина - Массив - Список выбранных форматов магазина.
//		* Периодичность - Перечисление.Периодичность - Периодичность формирования данных в периоде отчета.
//  АдресРезультата  - Строка - Адрес во временном хранилище.
//
// Возвращаемое значение:
//   АдресРезультата - Строка - Адрес во временном хранилище, по которому помещены сформированные данные.
//
Функция СформироватьДанныеОтчетаВФоне(ПараметрыЗадания, АдресРезультата) Экспорт
	
	ВыбранныеОтчеты = ПараметрыЗадания.ВыбранныеОтчеты.Получить();
	МассивРезультат = Новый Массив;
	
	Для Каждого ТекущийОтчет Из ВыбранныеОтчеты Цикл 
		
		Если ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.КоличествоЧеков Тогда
			ПолучитьДанныеОКоличествеЧеков(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		ИначеЕсли ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.СуммаПродаж Тогда	
			ПолучитьДанныеОПродажах(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		ИначеЕсли ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.СреднийЧек Тогда	
			ПолучитьДанныеОСреднемЧеке(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		ИначеЕсли ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.ОстаткиДСККМ Тогда	
			ПолучитьДанныеОбОстаткахДСККМ(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		ИначеЕсли ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.ОстаткиДС Тогда 
			ПолучитьДанныеОбОстаткахДС(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		ИначеЕсли ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.ПродажиПоКонтрагентам Тогда 
			ПолучитьДанныеОПродажахПоКонтрагентам(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		ИначеЕсли ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.ДвиженияДС Тогда 
			ПолучитьДанныеОДвиженииДенежныхСредств(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		ИначеЕсли ТекущийОтчет.Показатель = Перечисления.ВидыАнализаМонитора.ЗадолженностьПоставщикам Тогда 
			ПолучитьДанныеОЗадолженностиПоставщикам(ТекущийОтчет, ПараметрыЗадания, МассивРезультат);
		КонецЕсли;
		
	КонецЦикла;
	
	АдресРезультата = ПоместитьВоВременноеХранилище(МассивРезультат, АдресРезультата);
	Возврат АдресРезультата;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьДанныеОПродажах(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Если РазрезАналитики = СокрЛП("Магазин") Тогда 
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ) КАК Период,
		|	ПродажиОбороты.Магазин.Наименование КАК Аналитика
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&НачалоПероида, &КонецПериода, Авто, Магазин В (&Магазины)) КАК ПродажиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Магазин.Наименование,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Значение УБЫВ";
		
		Запрос.УстановитьПараметр("Магазины", МассивМагазинов);	
		
	ИначеЕсли РазрезАналитики = СокрЛП("Формат магазина") Тогда
		
		Запрос.Текст = ЗапросФорматовМагазина() + Символы.ПС +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ) КАК Период,
		|	Магазины.ФорматМагазина.Наименование КАК Аналитика
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачалоПероида,
		|			&КонецПериода,
		|			Авто,
		|			Магазин В
		|				(ВЫБРАТЬ
		|					Магазины.Магазин КАК Ссылка
		|				ИЗ
		|					Магазины КАК Магазины)) КАК ПродажиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
		|		ПО ПродажиОбороты.Магазин = Магазины.Магазин
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.ПериодДень,
		|	Магазины.ФорматМагазина.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Значение УБЫВ";
		
		Запрос.УстановитьПараметр("ФорматыМагазина", МассивФорматовМагазина);
		
	ИначеЕсли РазрезАналитики = СокрЛП("Товарная группа") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ) КАК Период,
		|	ТоварныеГруппы.Наименование КАК Аналитика
		|ИЗ
		|	Справочник.ТоварныеГруппы КАК ТоварныеГруппы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&НачалоПероида, &КонецПериода, Авто, ) КАК ПродажиОбороты
		|		ПО ТоварныеГруппы.Ссылка = ПродажиОбороты.Номенклатура.ТоварнаяГруппа
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварныеГруппы.Наименование,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Значение УБЫВ";
		
	ИначеЕсли РазрезАналитики = СокрЛП("Иерархия номенклатуры") Тогда
		
		МВТ = Новый МенеджерВременныхТаблиц;
		
		ЗапросНоменклатура 	= Новый Запрос;
		ЗапросНоменклатура.МенеджерВременныхТаблиц = МВТ;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА НЕ Номенклатура.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ Номенклатура.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|						ТОГДА Номенклатура.Родитель.Родитель.Наименование
		|					ИНАЧЕ Номенклатура.Родитель.Наименование
		|				КОНЕЦ
		|		ИНАЧЕ ""Вне группы""
		|	КОНЕЦ КАК РодительВерхнегоУровня
		|ПОМЕСТИТЬ НоменклатураПоГруппам
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ЭтоГруппа";
		
		ТекстВыборКогда = "ВЫБОР
						|КОГДА НЕ Номенклатура.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
						|	ТОГДА Номенклатура.Родитель.Родитель.Наименование
						|	ИНАЧЕ Номенклатура.Родитель.Наименование
						|КОНЕЦ";
		
		ТекстДляПоиска = "Номенклатура.Родитель.Родитель.Наименование";
		
		Для Шаг = 1 По 12 Цикл 
						
			ТекстДляВставки = СтрЗаменить(ТекстВыборКогда, "Номенклатура.Родитель.", "Номенклатура.Родитель.Родитель.");
			ТекстЗапроса 	= СтрЗаменить(ТекстЗапроса, ТекстДляПоиска, ТекстДляВставки);
			
			ТекстДляПоиска 	= СтрЗаменить(ТекстДляПоиска, "Номенклатура.Родитель.", "Номенклатура.Родитель.Родитель.");
			ТекстВыборКогда	= СтрЗаменить(ТекстВыборКогда, "Номенклатура.Родитель.", "Номенклатура.Родитель.Родитель.");
			
		КонецЦикла;
		
		ЗапросНоменклатура.Текст = ТекстЗапроса;
		
		РезультатЗапроса = ЗапросНоменклатура.Выполнить();
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МВТ;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураПоГруппам.Номенклатура КАК Номенклатура,
		|	НоменклатураПоГруппам.РодительВерхнегоУровня КАК РодительВерхнегоУровня
		|ПОМЕСТИТЬ НоменклатураИРодителиВерхнегоУровня
		|ИЗ
		|	НоменклатураПоГруппам КАК НоменклатураПоГруппам
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	РодительВерхнегоУровня
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Сумма,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ) КАК Период,
		|	ПродажиОбороты.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ Продажи
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&НачалоПероида, &КонецПериода, Авто, ) КАК ПродажиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.ПериодДень,
		|	ПродажиОбороты.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураИРодителиВерхнегоУровня.РодительВерхнегоУровня КАК РодительВерхнегоУровня,
		|	СУММА(Продажи.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ПродажиПоГруппам
		|ИЗ
		|	Продажи КАК Продажи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураИРодителиВерхнегоУровня КАК НоменклатураИРодителиВерхнегоУровня
		|		ПО Продажи.Номенклатура = НоменклатураИРодителиВерхнегоУровня.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураИРодителиВерхнегоУровня.РодительВерхнегоУровня
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 5
		|	ПродажиПоГруппам.РодительВерхнегоУровня КАК РодительВерхнегоУровня,
		|	СУММА(ПродажиПоГруппам.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ПервыеПятьГрупп
		|ИЗ
		|	ПродажиПоГруппам КАК ПродажиПоГруппам
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиПоГруппам.РодительВерхнегоУровня
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сумма УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураИРодителиВерхнегоУровня.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ПервыеПятьГрупп.РодительВерхнегоУровня ЕСТЬ NULL
		|			ТОГДА ""Прочие группы номенклатуры""
		|		ИНАЧЕ ПервыеПятьГрупп.РодительВерхнегоУровня
		|	КОНЕЦ КАК РодительВерхнегоУровня
		|ПОМЕСТИТЬ ГруппыВерхнегоУровня
		|ИЗ
		|	НоменклатураИРодителиВерхнегоУровня КАК НоменклатураИРодителиВерхнегоУровня
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПервыеПятьГрупп КАК ПервыеПятьГрупп
		|		ПО НоменклатураИРодителиВерхнегоУровня.РодительВерхнегоУровня = ПервыеПятьГрупп.РодительВерхнегоУровня
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(Продажи.Сумма) КАК Значение,
		|	Продажи.Период КАК Период,
		|	ГруппыВерхнегоУровня.РодительВерхнегоУровня КАК Аналитика
		|ИЗ
		|	Продажи КАК Продажи
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыВерхнегоУровня КАК ГруппыВерхнегоУровня
		|		ПО Продажи.Номенклатура = ГруппыВерхнегоУровня.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	Продажи.Период,
		|	ГруппыВерхнегоУровня.РодительВерхнегоУровня
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Значение УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НоменклатураИРодителиВерхнегоУровня";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПероида", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"СуммаПродаж");
	Структура.Вставить("Заголовок", 		"Сумма продаж");
	
	МассивРезультат.Добавить(Структура);
		
КонецПроцедуры

Процедура ПолучитьДанныеОКоличествеЧеков(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Если РазрезАналитики = СокрЛП("Магазин") Тогда 
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧекККМ.Ссылка) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ) КАК Период,
		|	ЧекККМ.Магазин.Наименование КАК Аналитика
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|ГДЕ
		|	ЧекККМ.Проведен
		|	И НЕ ЧекККМ.ПометкаУдаления
		|	И ЧекККМ.Магазин В(&Магазины)
		|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ),
		|	ЧекККМ.Магазин.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("Магазины", МассивМагазинов);
				
	ИначеЕсли РазрезАналитики = СокрЛП("Формат магазина") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧекККМ.Ссылка) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ) КАК Период,
		|	ФорматыМагазинов.Наименование КАК Аналитика
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФорматыМагазинов КАК ФорматыМагазинов
		|		ПО ЧекККМ.Магазин.ФорматМагазина = ФорматыМагазинов.Ссылка
		|ГДЕ
		|	ЧекККМ.Проведен
		|	И НЕ ЧекККМ.ПометкаУдаления
		|	И ФорматыМагазинов.Ссылка В(&ФорматыМагазина)
		|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ),
		|	ФорматыМагазинов.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("ФорматыМагазина", МассивФорматовМагазина);
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧекККМ.Ссылка) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ) КАК Период,
		|	ЧекККМ.Магазин.Наименование КАК Аналитика
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|ГДЕ
		|	ЧекККМ.Проведен
		|	И НЕ ЧекККМ.ПометкаУдаления
		|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ),
		|	ЧекККМ.Магазин.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"КоличествоЧеков");
	Структура.Вставить("Заголовок", 		"Количество чеков");
	
	МассивРезультат.Добавить(Структура);
	
КонецПроцедуры

Процедура ПолучитьДанныеОСреднемЧеке(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Если РазрезАналитики = СокрЛП("Магазин") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ) КАК Период,
		|	СРЕДНЕЕ(ЧекККМ.СуммаДокумента) КАК Значение,
		|	ЧекККМ.Магазин.Наименование КАК Аналитика
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|ГДЕ
		|	ЧекККМ.Проведен
		|	И НЕ ЧекККМ.ПометкаУдаления
		|	И ЧекККМ.Магазин В (&Магазины)
		|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ),
		|	ЧекККМ.Магазин.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("Магазины", МассивМагазинов);
		
	ИначеЕсли РазрезАналитики = СокрЛП("Формат магазина") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ) КАК Период,
		|	СРЕДНЕЕ(ЧекККМ.СуммаДокумента) КАК Значение,
		|	ФорматыМагазинов.Наименование КАК Аналитика
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФорматыМагазинов КАК ФорматыМагазинов
		|		ПО ЧекККМ.Магазин.ФорматМагазина = ФорматыМагазинов.Ссылка
		|ГДЕ
		|	ЧекККМ.Проведен
		|	И НЕ ЧекККМ.ПометкаУдаления
		|	И ФорматыМагазинов.Ссылка В(&ФорматыМагазина)
		|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ),
		|	ФорматыМагазинов.Наименование";
		
		Запрос.УстановитьПараметр("ФорматыМагазина", МассивФорматовМагазина);
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ) КАК Период,
		|	СРЕДНЕЕ(ЧекККМ.СуммаДокумента) КАК Значение,
		|	ЧекККМ.Магазин.Наименование КАК Аналитика
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|ГДЕ
		|	ЧекККМ.Проведен
		|	И НЕ ЧекККМ.ПометкаУдаления
		|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ),
		|	ЧекККМ.Магазин.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
	КонецЕсли;
		
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"СреднийЧек");
	Структура.Вставить("Заголовок", 		"Средний чек");
	
	МассивРезультат.Добавить(Структура);	
	
КонецПроцедуры

Процедура ПолучитьДанныеОбОстаткахДСККМ(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Если РазрезАналитики = СокрЛП("Формат магазина") Тогда 
		
		Запрос.Текст = ЗапросФорматовМагазина() + Символы.ПС +  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваККМОстаткиИОбороты.ПериодДень КАК Период,
		|	СУММА(ДенежныеСредстваККМОстаткиИОбороты.СуммаКонечныйОстаток) КАК Значение,
		|	ДенежныеСредстваККМОстаткиИОбороты.КассаККМ КАК КассаККМ
		|ПОМЕСТИТЬ ДСВКассахККМ
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваККМ.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			ДвиженияИГраницыПериода,
		|			КассаККМ.Магазин В
		|				(ВЫБРАТЬ
		|					Магазины.Магазин КАК Ссылка
		|				ИЗ
		|					Магазины КАК Магазины)) КАК ДенежныеСредстваККМОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредстваККМОстаткиИОбороты.ПериодДень,
		|	ДенежныеСредстваККМОстаткиИОбороты.КассаККМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДСВКассахККМ.Период, ДЕНЬ) КАК Период,
		|	СУММА(ДСВКассахККМ.Значение) КАК Значение,
		|	Магазины.ФорматМагазина.Наименование КАК Аналитика
		|ИЗ
		|	ДСВКассахККМ КАК ДСВКассахККМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
		|		ПО ДСВКассахККМ.КассаККМ.Магазин = Магазины.Магазин
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ДСВКассахККМ.Период, ДЕНЬ),
		|	Магазины.ФорматМагазина.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("ФорматыМагазина", МассивФорматовМагазина);
		
	Иначе
		
		Запрос.Текст = ЗапросМагазинов() + Символы.ПС + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваККМОстаткиИОбороты.ПериодДень КАК Период,
		|	СУММА(ДенежныеСредстваККМОстаткиИОбороты.СуммаКонечныйОстаток) КАК Значение,
		|	ДенежныеСредстваККМОстаткиИОбороты.КассаККМ КАК КассаККМ
		|ПОМЕСТИТЬ ДСВКассахККМ
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваККМ.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			ДвиженияИГраницыПериода,
		|			КассаККМ.Магазин В
		|				(ВЫБРАТЬ
		|					Магазины.Магазин КАК Ссылка
		|				ИЗ
		|					Магазины КАК Магазины)) КАК ДенежныеСредстваККМОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредстваККМОстаткиИОбороты.ПериодДень,
		|	ДенежныеСредстваККМОстаткиИОбороты.КассаККМ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КассаККМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДСВКассахККМ.Период, ДЕНЬ) КАК Период,
		|	СУММА(ДСВКассахККМ.Значение) КАК Значение,
		|	Магазины.Магазин.Наименование КАК Аналитика
		|ИЗ
		|	ДСВКассахККМ КАК ДСВКассахККМ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
		|		ПО ДСВКассахККМ.КассаККМ.Магазин = Магазины.Магазин
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ДСВКассахККМ.Период, ДЕНЬ),
		|	Магазины.Магазин.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("Магазины", МассивМагазинов);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"ОстаткиДСККМ");
	Структура.Вставить("Заголовок", 		"Остатки денежных средств в кассах ККМ");
	
	МассивРезультат.Добавить(Структура);
	
КонецПроцедуры

Процедура ПолучитьДанныеОбОстаткахДС(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Если РазрезАналитики = СокрЛП("Формат магазина") Тогда 
		
		Запрос.Текст = ЗапросФорматовМагазина() + Символы.ПС + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваОстаткиИОбороты.ПериодДень КАК Период,
		|	СУММА(ДенежныеСредстваОстаткиИОбороты.СуммаКонечныйОстаток) КАК Значение,
		|	ДенежныеСредстваОстаткиИОбороты.Касса КАК Касса
		|ПОМЕСТИТЬ ДСВКассах
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			ДвиженияИГраницыПериода,
		|			Касса.Магазин В
		|				(ВЫБРАТЬ
		|					Магазины.Магазин КАК Ссылка
		|				ИЗ
		|					Магазины КАК Магазины)) КАК ДенежныеСредстваОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредстваОстаткиИОбороты.ПериодДень,
		|	ДенежныеСредстваОстаткиИОбороты.Касса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДСВКассах.Период, ДЕНЬ) КАК Период,
		|	СУММА(ДСВКассах.Значение) КАК Значение,
		|	Магазины.ФорматМагазина.Наименование КАК Аналитика
		|ИЗ
		|	ДСВКассах КАК ДСВКассах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
		|		ПО ДСВКассах.Касса.Магазин = Магазины.Магазин
		|
		|СГРУППИРОВАТЬ ПО
		|	Магазины.ФорматМагазина.Наименование,
		|	НАЧАЛОПЕРИОДА(ДСВКассах.Период, ДЕНЬ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("ФорматыМагазина", МассивФорматовМагазина);
		
	Иначе
		
		Запрос.Текст = ЗапросМагазинов() + Символы.ПС + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваОстаткиИОбороты.ПериодДень КАК Период,
		|	СУММА(ДенежныеСредстваОстаткиИОбороты.СуммаКонечныйОстаток) КАК Значение,
		|	ДенежныеСредстваОстаткиИОбороты.Касса КАК Касса
		|ПОМЕСТИТЬ ДСВКассах
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			ДвиженияИГраницыПериода,
		|			Касса.Магазин В
		|				(ВЫБРАТЬ
		|					Магазины.Магазин КАК Ссылка
		|				ИЗ
		|					Магазины КАК Магазины)) КАК ДенежныеСредстваОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ДенежныеСредстваОстаткиИОбороты.ПериодДень,
		|	ДенежныеСредстваОстаткиИОбороты.Касса
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Касса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДСВКассах.Период, ДЕНЬ) КАК Период,
		|	СУММА(ДСВКассах.Значение) КАК Значение,
		|	Магазины.Магазин.Наименование КАК Аналитика
		|ИЗ
		|	ДСВКассах КАК ДСВКассах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
		|		ПО ДСВКассах.Касса.Магазин = Магазины.Магазин
		|
		|СГРУППИРОВАТЬ ПО
		|	Магазины.Магазин.Наименование,
		|	НАЧАЛОПЕРИОДА(ДСВКассах.Период, ДЕНЬ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("Магазины", МассивМагазинов);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"ОстаткиДС");
	Структура.Вставить("Заголовок", 		"Остатки денежных средств в кассах");
	
	МассивРезультат.Добавить(Структура);
	
КонецПроцедуры

Процедура ПолучитьДанныеОПродажахПоКонтрагентам(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Если РазрезАналитики = СокрЛП("Магазин") Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ) КАК Период,
		|	РеализацияТоваров.Контрагент.Наименование КАК Аналитика
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			ДокументПродажи ССЫЛКА Документ.РеализацияТоваров
		|				И Магазин В (&Магазины)) КАК ПродажиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК РеализацияТоваров
		|		ПО ПродажиОбороты.ДокументПродажи = РеализацияТоваров.Ссылка
		|			И ПродажиОбороты.Регистратор = РеализацияТоваров.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ),
		|	РеализацияТоваров.Контрагент.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("Магазины", МассивМагазинов);
		
	ИначеЕсли РазрезАналитики = СокрЛП("Формат магазина") Тогда
		
		Запрос.Текст = ЗапросФорматовМагазина() + Символы.ПС + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Значение,
		|	ПродажиОбороты.ПериодДень КАК Период,
		|	ПродажиОбороты.Магазин КАК Магазин
		|ПОМЕСТИТЬ ПродажиПоКонтрагентам
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			ДокументПродажи ССЫЛКА Документ.РеализацияТоваров
		|				И Магазин В
		|					(ВЫБРАТЬ
		|						Магазины.Магазин КАК Магазин
		|					ИЗ
		|						Магазины КАК Магазины)) КАК ПродажиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК РеализацияТоваров
		|		ПО ПродажиОбороты.ДокументПродажи = РеализацияТоваров.Ссылка
		|			И ПродажиОбороты.Регистратор = РеализацияТоваров.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Магазин,
		|	ПродажиОбороты.ПериодДень
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ПродажиПоКонтрагентам.Значение) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ПродажиПоКонтрагентам.Период, ДЕНЬ) КАК Период,
		|	Магазины.ФорматМагазина.Наименование КАК Аналитика
		|ИЗ
		|	ПродажиПоКонтрагентам КАК ПродажиПоКонтрагентам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
		|		ПО ПродажиПоКонтрагентам.Магазин = Магазины.Магазин
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ПродажиПоКонтрагентам.Период, ДЕНЬ),
		|	Магазины.ФорматМагазина.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
		Запрос.УстановитьПараметр("ФорматыМагазина", МассивФорматовМагазина);
		
	Иначе 
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ПродажиОбороты.СтоимостьОборот) КАК Значение,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ) КАК Период,
		|	РеализацияТоваров.Контрагент.Наименование КАК Аналитика
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Авто, ДокументПродажи ССЫЛКА Документ.РеализацияТоваров) КАК ПродажиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК РеализацияТоваров
		|		ПО ПродажиОбороты.ДокументПродажи = РеализацияТоваров.Ссылка
		|			И ПродажиОбороты.Регистратор = РеализацияТоваров.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваров.Контрагент.Наименование,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.ПериодДень, ДЕНЬ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"ПродажиПоКонтрагентам");
	Структура.Вставить("Заголовок", 		"Продажи по контрагентам");
	
	МассивРезультат.Добавить(Структура);
	
КонецПроцедуры

Процедура ПолучитьДанныеОДвиженииДенежныхСредств(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Если РазрезАналитики = СокрЛП("Формат магазина") Тогда
		
		Запрос.Текст = ЗапросФорматовМагазина();
		Запрос.УстановитьПараметр("ФорматыМагазина", МассивФорматовМагазина);
		
	ИначеЕсли РазрезАналитики = СокрЛП("Магазин") Тогда
		
		Запрос.Текст = ЗапросМагазинов();
		Запрос.УстановитьПараметр("Магазины", МассивМагазинов);
		
	Иначе
		
		Запрос.Текст = ЗапросПоВсемМагазинам();
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + Символы.ПС + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтчетОРозничныхПродажах.Ссылка КАК Документ,
	|	СУММА(ОтчетОРозничныхПродажах.СуммаДокумента) КАК СуммаДокумента,
	|	ОтчетОРозничныхПродажах.Дата КАК Дата
	|ПОМЕСТИТЬ ОтчетыПоПродажам
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
	|		ПО ОтчетОРозничныхПродажах.Магазин = Магазины.Магазин
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Проведен
	|	И ОтчетОРозничныхПродажах.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхПродажах.Дата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта) КАК ТипОплаты,
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма КАК Сумма,
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка КАК Документ,
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ ДвиженияДСОтчетыОПродажах
	|ИЗ
	|	ОтчетыПоПродажам КАК ОтчетыПоПродажам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ОтчетОРозничныхПродажахОплатаПлатежнымиКартами
	|		ПО ОтчетыПоПродажам.Документ = ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.БанковскийКредит),
	|	ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Сумма,
	|	ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Ссылка,
	|	ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Ссылка.Дата
	|ИЗ
	|	ОтчетыПоПродажам КАК ОтчетыПоПродажам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами КАК ОтчетОРозничныхПродажахОплатаБанковскимиКредитами
	|		ПО ОтчетыПоПродажам.Документ = ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.ПодарочныйСертификат),
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.ПодарочныйСертификат.Номинал * ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Количество,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка.Дата
	|ИЗ
	|	ОтчетыПоПродажам КАК ОтчетыПоПродажам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов КАК ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов
	|		ПО ОтчетыПоПродажам.Документ = ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.Наличные),
	|	ОтчетыПоПродажам.СуммаДокумента - ЕСТЬNULL(ПлатежныеКарты.Сумма, 0) - ЕСТЬNULL(БанковскиеКредиты.Сумма, 0) - ЕСТЬNULL(ПодарочныеСертификаты.Сумма, 0),
	|	ОтчетыПоПродажам.Документ,
	|	ОтчетыПоПродажам.Дата
	|ИЗ
	|	ОтчетыПоПродажам КАК ОтчетыПоПродажам
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОплатаПлатежнымиКартами.Ссылка КАК Ссылка,
	|			СУММА(ОплатаПлатежнымиКартами.Сумма) КАК Сумма
	|		ИЗ
	|			ОтчетыПоПродажам КАК ОтчетыПоПродажам
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ОплатаПлатежнымиКартами
	|				ПО ОтчетыПоПродажам.Документ = ОплатаПлатежнымиКартами.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОплатаПлатежнымиКартами.Ссылка) КАК ПлатежныеКарты
	|		ПО ОтчетыПоПродажам.Документ = ПлатежныеКарты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Ссылка КАК Ссылка,
	|			СУММА(ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Сумма) КАК Сумма
	|		ИЗ
	|			ОтчетыПоПродажам КАК ОтчетыПоПродажам
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами КАК ОтчетОРозничныхПродажахОплатаБанковскимиКредитами
	|				ПО ОтчетыПоПродажам.Документ = ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Ссылка) КАК БанковскиеКредиты
	|		ПО ОтчетыПоПродажам.Документ = БанковскиеКредиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка КАК Ссылка,
	|			СУММА(ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.ПодарочныйСертификат.Номинал * ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Количество) КАК Сумма
	|		ИЗ
	|			ОтчетыПоПродажам КАК ОтчетыПоПродажам
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов КАК ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов
	|				ПО ОтчетыПоПродажам.Документ = ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка) КАК ПодарочныеСертификаты
	|		ПО ОтчетыПоПродажам.Документ = ПодарочныеСертификаты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЧекККМ.Ссылка КАК ЧекККМ,
	|	ЧекККМ.Дата КАК Дата
	|ПОМЕСТИТЬ СписокЧековККМ
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
	|		ПО ЧекККМ.Магазин = Магазины.Магазин
	|ГДЕ
	|	ЧекККМ.Проведен
	|	И ЧекККМ.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|	И ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЧекККМ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ЧекККМОплата.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные)
	|				ТОГДА ЧекККМОплата.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	ЧекККМОплата.Ссылка КАК ДокументПродажи,
	|	ЧекККМОплата.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ЧекиККМ.Дата КАК Дата
	|ПОМЕСТИТЬ ЧекиККМСуммаБезналичнойОплаты
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокЧековККМ КАК ЧекиККМ
	|		ПО ЧекККМОплата.Ссылка = ЧекиККМ.ЧекККМ
	|ГДЕ
	|	ЧекККМОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМОплата.Ссылка,
	|	ЧекККМОплата.Ссылка.СуммаДокумента,
	|	ЧекиККМ.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекиККМСуммаБезналичнойОплаты.ДокументПродажи КАК ДокументПродажи,
	|	ЧекиККМСуммаБезналичнойОплаты.СуммаДокумента - ЧекиККМСуммаБезналичнойОплаты.Сумма КАК Наличные,
	|	ЧекиККМСуммаБезналичнойОплаты.Дата КАК Дата
	|ПОМЕСТИТЬ ЧекиККМСуммаНаличнойОплаты
	|ИЗ
	|	ЧекиККМСуммаБезналичнойОплаты КАК ЧекиККМСуммаБезналичнойОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ЧекККМОплата.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные)
	|				ТОГДА ЧекККМОплата.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	ЧекККМОплата.Ссылка КАК ДокументПродажи,
	|	ЧекККМОплата.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ЧекиККМ.Дата КАК Дата
	|ПОМЕСТИТЬ ЧекиККМСуммаБезналичнойОплатыВозврат
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокЧековККМ КАК ЧекиККМ
	|		ПО ЧекККМОплата.Ссылка = ЧекиККМ.ЧекККМ
	|ГДЕ
	|	ЧекККМОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМОплата.Ссылка,
	|	ЧекККМОплата.Ссылка.СуммаДокумента,
	|	ЧекиККМ.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекиККМСуммаБезналичнойОплатыВозврат.ДокументПродажи КАК ДокументПродажи,
	|	ЧекиККМСуммаБезналичнойОплатыВозврат.СуммаДокумента - ЧекиККМСуммаБезналичнойОплатыВозврат.Сумма КАК Наличные,
	|	ЧекиККМСуммаБезналичнойОплатыВозврат.Дата КАК Дата
	|ПОМЕСТИТЬ ЧекиККМСуммаНаличнойОплатыВозврат
	|ИЗ
	|	ЧекиККМСуммаБезналичнойОплатыВозврат КАК ЧекиККМСуммаБезналичнойОплатыВозврат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМОплата.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	ВЫБОР
	|		КОГДА ЧекККМОплата.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные)
	|			ТОГДА ЧекККМОплата.Сумма
	|		ИНАЧЕ ЧекиККМСуммаНаличнойОплаты.Наличные
	|	КОНЕЦ КАК Сумма,
	|	ЧекККМОплата.Ссылка КАК Ссылка,
	|	ЧекиККМСуммаНаличнойОплаты.Дата КАК Дата
	|ПОМЕСТИТЬ ЧекиККМПродажа
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЧекиККМСуммаНаличнойОплаты КАК ЧекиККМСуммаНаличнойОплаты
	|		ПО ЧекККМОплата.Ссылка = ЧекиККМСуммаНаличнойОплаты.ДокументПродажи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекиККМПродажа.ТипОплаты КАК ТипОплаты,
	|	ЧекиККМПродажа.Сумма КАК Сумма,
	|	ЧекиККМПродажа.Ссылка КАК Документ,
	|	ЧекиККМПродажа.Дата КАК Дата
	|ПОМЕСТИТЬ ЧекиККМ
	|ИЗ
	|	ЧекиККМПродажа КАК ЧекиККМПродажа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЧекККМОплата.ВидОплаты.ТипОплаты,
	|	ВЫБОР
	|		КОГДА ЧекККМОплата.ВидОплаты <> ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные)
	|			ТОГДА -ЧекККМОплата.Сумма
	|		ИНАЧЕ -ЧекиККМСуммаНаличнойОплатыВозврат.Наличные
	|	КОНЕЦ,
	|	ЧекККМОплата.Ссылка.ЧекККМПродажа,
	|	NULL
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЧекиККМСуммаНаличнойОплатыВозврат КАК ЧекиККМСуммаНаличнойОплатыВозврат
	|		ПО ЧекККМОплата.Ссылка = ЧекиККМСуммаНаличнойОплатыВозврат.ДокументПродажи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.Наличные) КАК ТипОплаты,
	|	ПриходныйКассовыйОрдер.СуммаДокумента КАК Сумма,
	|	ПриходныйКассовыйОрдер.Ссылка КАК Документ,
	|	ПриходныйКассовыйОрдер.Дата КАК Дата
	|ПОМЕСТИТЬ ПКО
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
	|		ПО ПриходныйКассовыйОрдер.Касса.Магазин = Магазины.Магазин
	|ГДЕ
	|	ПриходныйКассовыйОрдер.Проведен
	|	И ПриходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	И ПриходныйКассовыйОрдер.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта) КАК ТипОплаты,
	|	ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента КАК Сумма,
	|	ОплатаОтПокупателяПлатежнойКартой.Ссылка КАК Документ,
	|	ОплатаОтПокупателяПлатежнойКартой.Дата КАК Дата
	|ПОМЕСТИТЬ ЭквайринговыеОперации
	|ИЗ
	|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
	|		ПО ОплатаОтПокупателяПлатежнойКартой.Магазин = Магазины.Магазин
	|ГДЕ
	|	ОплатаОтПокупателяПлатежнойКартой.Проведен
	|	И ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	И ОплатаОтПокупателяПлатежнойКартой.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта) КАК ТипОплаты,
	|	ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента КАК Сумма,
	|	ОплатаОтПокупателяПлатежнойКартой.Ссылка КАК Документ,
	|	ОплатаОтПокупателяПлатежнойКартой.Дата КАК Дата
	|ПОМЕСТИТЬ ЭквайринговыеОперацииВозврат
	|ИЗ
	|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
	|		ПО ОплатаОтПокупателяПлатежнойКартой.Магазин = Магазины.Магазин
	|ГДЕ
	|	ОплатаОтПокупателяПлатежнойКартой.Проведен
	|	И ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|	И ОплатаОтПокупателяПлатежнойКартой.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.Наличные) КАК ТипОплаты,
	|	РасходныйКассовыйОрдер.СуммаДокумента КАК Сумма,
	|	РасходныйКассовыйОрдер.Ссылка КАК Документ,
	|	РасходныйКассовыйОрдер.Дата КАК Дата
	|ПОМЕСТИТЬ РКО
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
	|		ПО РасходныйКассовыйОрдер.Касса.Магазин = Магазины.Магазин
	|ГДЕ
	|	РасходныйКассовыйОрдер.Проведен
	|	И РасходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|	И РасходныйКассовыйОрдер.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДСОтчетыОПродажах.ТипОплаты КАК ТипОплаты,
	|	ДвиженияДСОтчетыОПродажах.Сумма КАК СуммаПродажа,
	|	0 КАК СуммаВозврат,
	|	ДвиженияДСОтчетыОПродажах.Документ КАК Документ,
	|	ДвиженияДСОтчетыОПродажах.Документ.Магазин КАК Магазин,
	|	ДвиженияДСОтчетыОПродажах.Дата КАК Дата
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ДвиженияДСОтчетыОПродажах КАК ДвиженияДСОтчетыОПродажах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Чеки.ТипОплаты,
	|	Чеки.Сумма,
	|	0,
	|	Чеки.Документ,
	|	Чеки.Документ.Магазин,
	|	Чеки.Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЧекиККМ.ТипОплаты КАК ТипОплаты,
	|		СУММА(ЧекиККМ.Сумма) КАК Сумма,
	|		ЧекиККМ.Документ КАК Документ,
	|		ЧекиККМ.Дата КАК Дата
	|	ИЗ
	|		ЧекиККМ КАК ЧекиККМ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЧекиККМ.ТипОплаты,
	|		ЧекиККМ.Документ,
	|		ЧекиККМ.Дата) КАК Чеки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПКО.ТипОплаты,
	|	ПКО.Сумма,
	|	0,
	|	ПКО.Документ,
	|	ПКО.Документ.Касса.Магазин,
	|	ПКО.Дата
	|ИЗ
	|	ПКО КАК ПКО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭквайринговыеОперации.ТипОплаты,
	|	ЭквайринговыеОперации.Сумма,
	|	0,
	|	ЭквайринговыеОперации.Документ,
	|	ЭквайринговыеОперации.Документ.Магазин,
	|	ЭквайринговыеОперации.Дата
	|ИЗ
	|	ЭквайринговыеОперации КАК ЭквайринговыеОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РКО.ТипОплаты,
	|	0,
	|	РКО.Сумма,
	|	РКО.Документ,
	|	РКО.Документ.Касса.Магазин,
	|	РКО.Дата
	|ИЗ
	|	РКО КАК РКО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭквайринговыеОперацииВозврат.ТипОплаты,
	|	0,
	|	ЭквайринговыеОперацииВозврат.Сумма,
	|	ЭквайринговыеОперацииВозврат.Документ,
	|	ЭквайринговыеОперацииВозврат.Документ.Магазин,
	|	ЭквайринговыеОперацииВозврат.Дата
	|ИЗ
	|	ЭквайринговыеОперацииВозврат КАК ЭквайринговыеОперацииВозврат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.ТипОплаты КАК Аналитика,
	|	СУММА(Результат.СуммаПродажа - Результат.СуммаВозврат) КАК Значение,
	|	НАЧАЛОПЕРИОДА(Результат.Дата, ДЕНЬ) КАК Период
	|ИЗ
	|	Результат КАК Результат
	|ГДЕ
	|	(Результат.СуммаПродажа <> 0
	|			ИЛИ Результат.СуммаВозврат <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	Результат.ТипОплаты,
	|	НАЧАЛОПЕРИОДА(Результат.Дата, ДЕНЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"ДвиженияДС");
	Структура.Вставить("Заголовок", 		"Движения денежных средств по типам оплат");
	
	МассивРезультат.Добавить(Структура);
	
КонецПроцедуры

Процедура ПолучитьДанныеОЗадолженностиПоставщикам(ТекущийОтчет, ПараметрыЗадания, МассивРезультат)
	
	РазрезАналитики 		= ПараметрыЗадания.РазрезАналитики;
	Период 					= ПараметрыЗадания.Период;
	МассивМагазинов 		= ПараметрыЗадания.СписокМагазинов;
	МассивФорматовМагазина 	= ПараметрыЗадания.СписокФорматовМагазина;
	Периодичность			= ПараметрыЗадания.Периодичность;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ЗапросМагазинов() + Символы.ПС + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыСПоставщикамиОбороты.ПериодДень КАК Период,
	|	СУММА(-РасчетыСПоставщикамиОбороты.СуммаОборот) КАК Значение,
	|	РасчетыСПоставщикамиОбороты.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ РасчетыСПоставщиками
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Магазин В
	|				(ВЫБРАТЬ
	|					Магазины.Магазин КАК Магазин
	|				ИЗ
	|					Магазины КАК Магазины)) КАК РасчетыСПоставщикамиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщикамиОбороты.ПериодДень,
	|	РасчетыСПоставщикамиОбороты.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 5
	|	РасчетыСПоставщиками.Поставщик КАК Поставщик,
	|	СУММА(РасчетыСПоставщиками.Значение) КАК Значение
	|ПОМЕСТИТЬ КрупнейшиеПоставщики
	|ИЗ
	|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Поставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	Значение УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, ДЕНЬ) КАК Период,
	|	СУММА(РасчетыСПоставщиками.Значение) КАК Значение,
	|	ВЫБОР
	|		КОГДА КрупнейшиеПоставщики.Поставщик ЕСТЬ NULL
	|			ТОГДА ""Прочие поставщики""
	|		ИНАЧЕ КрупнейшиеПоставщики.Поставщик.Наименование
	|	КОНЕЦ КАК Аналитика
	|ИЗ
	|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ КрупнейшиеПоставщики КАК КрупнейшиеПоставщики
	|		ПО РасчетыСПоставщиками.Поставщик = КрупнейшиеПоставщики.Поставщик
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РасчетыСПоставщиками.Период, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА КрупнейшиеПоставщики.Поставщик ЕСТЬ NULL
	|			ТОГДА ""Прочие поставщики""
	|		ИНАЧЕ КрупнейшиеПоставщики.Поставщик.Наименование
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Значение УБЫВ";
	
	Запрос.УстановитьПараметр("Магазины", 		МассивМагазинов);
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(Период.ДатаОкончания));
	
	ИзменитьЗапросВСоответствииСПериодичностью(Запрос.Текст, Периодичность);
	
	ДанныеДляОтчета = Запрос.Выполнить().Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("Данные", 			ДанныеДляОтчета);
	Структура.Вставить("ПараметрыОтчета", 	ТекущийОтчет);
	Структура.Вставить("ИмяОтчета", 		"ЗадолженностьПоставщикам");
	Структура.Вставить("Заголовок", 		"Задолженность поставщикам");
	
	МассивРезультат.Добавить(Структура);
	
КонецПроцедуры

Функция ЗапросФорматовМагазина()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Магазины.Ссылка КАК Магазин,
	|	ФорматыМагазинов.Ссылка КАК ФорматМагазина
	|ПОМЕСТИТЬ Магазины
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФорматыМагазинов КАК ФорматыМагазинов
	|		ПО Магазины.ФорматМагазина = ФорматыМагазинов.Ссылка
	|ГДЕ
	|	ФорматыМагазинов.Ссылка В(&ФорматыМагазина)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЗапросМагазинов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Магазины.Ссылка КАК Магазин
	|ПОМЕСТИТЬ Магазины
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	Магазины.Ссылка В(&Магазины)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЗапросПоВсемМагазинам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Магазины.Ссылка КАК Магазин
	|ПОМЕСТИТЬ Магазины
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИзменитьЗапросВСоответствииСПериодичностью(ТекстЗапроса, Периодичность)
	
	ПериодичностьСтрокой = "";
	
	Если Периодичность = Перечисления.Периодичность.День Тогда 
		ПериодичностьСтрокой = "ДЕНЬ";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда 
		ПериодичностьСтрокой = "НЕДЕЛЯ";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда 
		ПериодичностьСтрокой = "МЕСЯЦ";	
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда 
		ПериодичностьСтрокой = "КВАРТАЛ";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Год Тогда 
		ПериодичностьСтрокой = "ГОД";
	Иначе 
		ПериодичностьСтрокой = "ДЕНЬ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДЕНЬ", ПериодичностьСтрокой);	
	
КонецПроцедуры

#КонецОбласти