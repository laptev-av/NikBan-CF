
#Область ПрограммныйИнтерфейс

// Процедура сбрасывает флаг СкидкиРассчитаны и делает недоступными колонки табличной части.
//
Процедура СброситьФлагСкидкиРассчитаны(Форма) Экспорт
	
	Форма.Объект.СкидкиРассчитаны = Ложь;
	
КонецПроцедуры // СброситьФлагСкидкиРассчитаны()

// Проверяет заполненность реквизитов, необходимых для назначения скидок.
//
// Параметры:
// Документ                    - ДокументОбъект, для которого выполняются проверки.
// ИмяТабличнойЧасти           - Строка - имя табличной части, в которой необходимо осуществить проверку.
// ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя.
//
// Возвращаемое значение:
// Булево
// Ложь, если необходимые данные не заполнены.
//
Функция ПроверитьНеобходимостьНазначенияРучнойСкидкиНаценки(Документ, ИмяТабличнойЧасти, ПредставлениеТабличнойЧасти) Экспорт

	Если Документ[ИмяТабличнойЧасти].Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена таблица %ПредставлениеТабличнойЧасти%. Ручная скидка (наценка) не может быть назначена'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;

	Возврат Истина;

КонецФункции // ПроверитьНеобходимостьНазначенияРучнойСкидкиНаценки()

// Проверяет заполненность реквизитов, необходимых для отмены скидок.
//
// Параметры:
// Документ                    - ДокументОбъект, для которого выполняются проверки.
// ИмяТабличнойЧасти           - Строка - имя табличной части, в которой необходимо осуществить проверку.
// ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя.
//
// Возвращаемое значение:
// Булево
// Ложь, если необходимые данные не заполнены.
//
Функция ПроверитьНеобходимостьОтменыРучныхСкидокНаценок(Документ, ИмяТабличнойЧасти, ПредставлениеТабличнойЧасти) Экспорт

	Если Документ[ИмяТабличнойЧасти].Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена таблица %ПредставлениеТабличнойЧасти%. Ручные скидки (наценки) не могут быть отменены'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат Ложь;
		
	ИначеЕсли Документ[ИмяТабличнойЧасти].Итог("СуммаРучнойСкидки") = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена сумма ручной скидки в таблице %ПредставлениеТабличнойЧасти%. Ручные скидки (наценки) не могут быть отменены'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;

	Возврат Истина;

КонецФункции // ПроверитьНеобходимостьОтменыРучныхСкидокНаценок()

// Показывает оповещение пользователя об окончании назначения ручных скидок (наценок).
//
Процедура ОповеститьОбОкончанииНазначенияРучныхСкидокНаценок(СуммаСкидкиНаценки = 0, Валюта = Неопределено) Экспорт

	Если СуммаСкидкиНаценки > 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Назначена ручная скидка %СуммаСкидкиНаценки% %Валюта%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаСкидкиНаценки%", СуммаСкидкиНаценки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", Валюта);
		
	ИначеЕсли СуммаСкидкиНаценки < 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Назначена ручная наценка %СуммаСкидкиНаценки% %Валюта%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаСкидкиНаценки%", СуммаСкидкиНаценки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", Валюта);
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Ручные скидки (наценки) отменены'");
		
	КонецЕсли;
		
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Скидки (наценки)'"),
		,
		ТекстСообщения,
		БиблиотекаКартинок.Информация32);

КонецПроцедуры // ОповеститьОбОкончанииНазначенияРучныхСкидокНаценок()

// Процедура открывает форму расшифровки скидок рассчитанных по текущей строке табличной части.
//
// Параметры:
//  ТекущиеДанные  - СтрокаТабличнойЧасти - строка для которой необходимо открыть расшифровку скидок.
//  Объект  - ДанныеФормы - Объект, для которого нужно открыть форму расшифровки скидок.
//  Форма  - Форма - Форма объекта.
//
Процедура ОткрытьФормуПримененныеСкидки(ТекущиеДанные, Объект, Форма, АдресПримененныхСкидокВоВременномХранилище) Экспорт
	
	Если ТекущиеДанные <> Неопределено Тогда
	
		СтруктураТекущиеДанные = Новый Структура;
		СтруктураТекущиеДанные.Вставить("КлючСвязи",         ТекущиеДанные.КлючСвязи);
		СтруктураТекущиеДанные.Вставить("Номенклатура",      ТекущиеДанные.Номенклатура);
		СтруктураТекущиеДанные.Вставить("Характеристика",    ТекущиеДанные.Характеристика);
		СтруктураТекущиеДанные.Вставить("СуммаРучнойСкидки", ТекущиеДанные.СуммаРучнойСкидки);
		СтруктураТекущиеДанные.Вставить("СуммаБезСкидки",    ТекущиеДанные.Цена * ТекущиеДанные.КоличествоУпаковок);
		СтруктураТекущиеДанные.Вставить("Упаковка",          ТекущиеДанные.Упаковка);
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Объект", Объект);
		СтруктураПараметров.Вставить("Заголовок", НСтр("ru = 'Примененные скидки (наценки) для строки'"));
		СтруктураПараметров.Вставить("ТекущиеДанные", СтруктураТекущиеДанные);
		СтруктураПараметров.Вставить("АдресПримененныхСкидокВоВременномХранилище",          АдресПримененныхСкидокВоВременномХранилище);
		СтруктураПараметров.Вставить("ОтображатьИнформациюОСкидкахПоСтроке",                Истина);
		СтруктураПараметров.Вставить("ОтображатьИнформациюОРасчетеСкидокПоСтроке",          Истина);
		СтруктураПараметров.Вставить("ОтображатьИнформациюОРасчетеСкидокПоДокументуВЦелом", Ложь);
		СтруктураПараметров.Вставить("ОтображатьСегментИсключение", 						Истина);
		МинимальнаяЦена = СкидкиНаценкиВызовСервера.МинимальнаяЦенаНоменклатуры(СтруктураТекущиеДанные, Объект.Магазин, Объект.Дата);
		СтруктураПараметров.Вставить("МинимальнаяЦена", 									МинимальнаяЦена);
        
        // &ЗамерПроизводительности
	    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		         Истина, "ОбщаяФорма.ПримененныеСкидкиНаценки.Открытие");

		ОткрытьФорму(
			"ОбщаяФорма.ПримененныеСкидкиНаценки",
			СтруктураПараметров,
			Форма,
			Форма.УникальныйИдентификатор,
			,
			,
			,
			РежимОткрытияОкнаФормы.Независимый);
	
	КонецЕсли;
	
КонецПроцедуры // ОткрытьФормуПримененныеСкидки()

#КонецОбласти

