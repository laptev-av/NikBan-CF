#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийМодуляОбъекта

// Инициализировать документ
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//  ДанныеЗаполнения - Структура - данные заполнения.
//
Процедура ИнициализироватьДокументМаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения = Неопределено) Экспорт
	
	ДокументОбъект.Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация);
	ДокументОбъект.Магазин       = ПараметрыСеанса.ТекущийМагазин;
	ДокументОбъект.Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(ДокументОбъект.Магазин, Перечисления.ТипыСкладов.СкладскоеПомещение, ДокументОбъект.Склад);
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

// Обработка заполнения маркировка товаров
//
// Параметры:
//  ДанныеЗаполнения	 - Структура - данные заполнения.
//  СтандартнаяОбработка - Булево - стандартная обработка.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаЗаполненияМаркировкаТоваров(ДанныеЗаполнения, СтандартнаяОбработка, ДокументОбъект) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		ЗаполнитьМаркировкуТоваровПоВозвратуТоваровОтПокупателя(ДанныеЗаполнения, ДокументОбъект);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		ЗаполнитьМаркировкуТоваровПоПоступлениюТоваров(ДанныеЗаполнения, ДокументОбъект);
		
	КонецЕсли;
	
	ИнициализироватьДокументМаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Обработка проверки заполнения маркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  ПроверяемыеРеквизиты			 - Массив - массив проверяемых реквизитов.
//  МассивНепроверяемыхРеквизитов	 - Массив - массив непроверяемых реквизитов.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроверкиЗаполненияМаркировкаТоваров(Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, ДокументОбъект) Экспорт
	
	Перем МассивВсехРеквизитов;
	Перем МассивРеквизитовОперации;
	
	ПолучитьМассивыРеквизитовМаркировкиТоваров(
		ДокументОбъект.ОперацияМаркировки,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	ОбщегоНазначенияРТКлиентСервер.ЗаполнитьМассивНепроверяемыхРеквизитов(
		МассивВсехРеквизитов,
		МассивРеквизитовОперации,
		МассивНепроверяемыхРеквизитов);
		
	// Проверка характеристик в табличной части Товары и в шапке документа.
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("ИмяТЧ", "Товары");
	ПараметрыПроверки.Вставить("СуффиксДопРеквизита", "КиЗ");
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	Для каждого СтрТабл из ДокументОбъект.Товары Цикл
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Для товара %Товар% не настроено указание серий на складе %Магазин%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", ОбщегоНазначенияРТ.ПолучитьПредставлениеНоменклатуры(СтрТабл.Номенклатура, СтрТабл.Характеристика));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Магазин%", ДокументОбъект.Магазин);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрТабл.НомерСтроки, "Номенклатура");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
		КонецЕсли;
	КонецЦикла;
	Если НЕ ИнтеграцияГИСМ_РТ.ИспользоватьПодразделения() Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Подразделение");
		
	КонецЕсли;
	
	// Проверка заполнения серий в т.ч. серии.
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ДокументОбъект,
																 ПараметрыУказанияСерийМаркировкаТоваров(ДокументОбъект),
																 Отказ,
																 МассивНепроверяемыхРеквизитов);
		
	ПроверитьСоответствияGTIN(Отказ, ДокументОбъект);
	
КонецПроцедуры

// Перед записью маркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  РежимЗаписи						 - РежимЗаписи - Режим записи документа.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ПередЗаписьюМаркировкаТоваров(Отказ, РежимЗаписи, РежимПроведения, ДокументОбъект) Экспорт
	
	Если ДокументОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ДокументОбъект);
	
	ПроведениеСервер.УстановитьРежимПроведения(ДокументОбъект.Проведен, РежимЗаписи, РежимПроведения);
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый",    ДокументОбъект.ЭтоНовый());
	ДокументОбъект.ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияРТ.УдалитьНеиспользуемыеСтрокиСерий(ДокументОбъект,ПараметрыУказанияСерийМаркировкаТоваров(ДокументОбъект));
	
КонецПроцедуры

// При копировании маркировка товаров
//
// Параметры:
//  ОбъектКопирования	 - см. описание параметра в синтаксис-помощнике к обработчику "ПриКопировании"
//  ДокументОбъект	 	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ПриКопированииМаркировкаТоваров(ОбъектКопирования, ДокументОбъект) Экспорт
	
	Попытка
		ДокументОбъект.ДокументОснование = Неопределено;
	Исключение
		ДокументОбъект.Основание = Неопределено;
	КонецПопытки; 
	
	ДокументОбъект.Серии.Очистить();
	ДокументОбъект.СерииКиЗ.Очистить();
	
	ИнициализироватьДокументМаркировкаТоваров(ДокументОбъект);
	
КонецПроцедуры

// Процедура - Обработка проведения маркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроведенияМаркировкаТоваров(Отказ, РежимПроведения, ДокументОбъект) Экспорт
	
	Ссылка = ДокументОбъект.Ссылка;
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	Движения =  ДокументОбъект.Движения;
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	ИнициализироватьДанныеДокументаМаркировкаТоваров(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокументОбъект);
	
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроляМаркировкаТоваров(ДокументОбъект);
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ДокументОбъект);
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

// Обработка удаления проведения маркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаУдаленияПроведенияМаркировкаТоваров(Отказ, ДокументОбъект) Экспорт
	
	Ссылка = ДокументОбъект.Ссылка;
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокументОбъект);
	
	СформироватьСписокРегистровДляКонтроляМаркировкаТоваров(ДокументОбъект);
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ДокументОбъект);
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ИнициализироватьДанныеДокументаМаркировкаТоваров(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаркировкаТоваровГИСМ.Ссылка,
	|	МаркировкаТоваровГИСМ.ВерсияДанных,
	|	МаркировкаТоваровГИСМ.ПометкаУдаления,
	|	МаркировкаТоваровГИСМ.Основание,
	|	МаркировкаТоваровГИСМ.ОперацияМаркировки,
	|	МаркировкаТоваровГИСМ.КиЗГИСМВид,
	|	МаркировкаТоваровГИСМ.КиЗГИСМСпособВыпускаВОборот,
	|	МаркировкаТоваровГИСМ.КиЗГИСМРазмер,
	|	МаркировкаТоваровГИСМ.КиЗГИСМСИндивидуализацией,
	|	МаркировкаТоваровГИСМ.Организация,
	|	МаркировкаТоваровГИСМ.Магазин,
	|	МаркировкаТоваровГИСМ.Склад,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ОтгрузкаНаВнутренниеНужды) КАК АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаНаВнутренниеНужды) КАК СкладскаяОперация,
	|	МаркировкаТоваровГИСМ.Ответственный,
	|	МаркировкаТоваровГИСМ.Дата КАК Период
	|ИЗ
	|	Документ.МаркировкаТоваровГИСМ КАК МаркировкаТоваровГИСМ
	|ГДЕ
	|	МаркировкаТоваровГИСМ.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.GTIN,
	|	Товары.НоменклатураКиЗ,
	|	Товары.ХарактеристикаКиЗ,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.МаркировкаТоваровГИСМ.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураКиЗ КАК Номенклатура,
	|	Товары.ХарактеристикаКиЗ КАК Характеристика,
	|	Товары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаХозяйственнойОперации,
	|	&Склад,
	|	&Ссылка КАК Регистратор,
	|	&Период
	|ИЗ
	|	Товары КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.НоменклатураКиЗ КАК Номенклатура,
	|	ТаблицаТовары.ХарактеристикаКиЗ КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	Товары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.МаркировкаТоваровГИСМ.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	-ТаблицаСерии.Количество,
	|	&Магазин,
	|	&СкладскаяОперация,
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ТаблицаСерии.НомерСтроки
	|ИЗ
	|	Документ.МаркировкаТоваровГИСМ.СерииКиЗ КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"          , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"        , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"     , Результат[3].Выгрузить());
	
КонецПроцедуры

Процедура ПроверкаУникальностиКиЗ(НоменклатураОбъект, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.КиЗГИСМВид,
	|	Номенклатура.КиЗГИСМСпособВыпускаВОборот,
	|	Номенклатура.КиЗГИСМРазмер,
	|	Номенклатура.КиЗГИСМGTIN,
	|	Номенклатура.Наименование
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка <> &НоменклатураСсылка
	|	И Номенклатура.КиЗГИСМ
	|	И Номенклатура.КиЗГИСМВид = &КиЗГИСМВид
	|	И Номенклатура.КиЗГИСМСпособВыпускаВОборот = &КиЗГИСМСпособВыпускаВОборот
	|	И Номенклатура.КиЗГИСМGTIN = &КиЗГИСМGTIN
	|	И Номенклатура.КиЗГИСМРазмер = &КиЗГИСМРазмер";
	
	Запрос.УстановитьПараметр("НоменклатураСсылка"         , НоменклатураОбъект.Ссылка);
	Запрос.УстановитьПараметр("КиЗГИСМВид"                 , НоменклатураОбъект.КиЗГИСМВид);
	Запрос.УстановитьПараметр("КиЗГИСМСпособВыпускаВОборот", НоменклатураОбъект.КиЗГИСМСпособВыпускаВОборот);
	Запрос.УстановитьПараметр("КиЗГИСМGTIN"                , НоменклатураОбъект.КиЗГИСМGTIN);
	Запрос.УстановитьПараметр("КиЗГИСМРазмер"              , НоменклатураОбъект.КиЗГИСМРазмер);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Текст = НСтр("ru = 'Номенклатура с аналогичными реквизитами КиЗ уже существует:'");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Текст = Текст + Символы.ПС + Выборка.Наименование;
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			НоменклатураОбъект,
			"КиЗГИСМВид" ,
			,
			Отказ);
		
		
	КонецЕсли;
	
КонецПроцедуры

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерийПеремаркировкаТоваров(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерииНоменклатуры);
	ПараметрыУказанияСерий.Вставить("ПолноеИмяОбъекта", "Документ.ПеремаркировкаТоваровГИСМ");
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерииНоменклатуры);
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.МаркировкаПродукцииДляГИСМ);
	ПараметрыУказанияСерий.Вставить("Магазин", Объект.Магазин);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.ТолькоПросмотр = Ложь;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("ИменаПолейСтатусУказанияСерий", Новый Структура);
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Вставить("СтатусУказанияСерий");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Вставить("СтатусУказанияСерийСписываемаяСерия");
	
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("GTIN");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("НоменклатураКиЗ");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("ХарактеристикаКиЗ");
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("СписываемаяСерия");
	
	ПараметрыУказанияСерий.ОсобеннаяПроверкаСтатусовУказанияСерий = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерийМаркировкаТоваров(Объект) Экспорт
	
	ПоляСвязи = Новый Массив;
	ПоляСвязи.Добавить("GTIN");
	ПоляСвязи.Добавить("НоменклатураКиЗ");
	ПоляСвязи.Добавить("ХарактеристикаКиЗ");
	ПоляСвязи.Добавить("РегистрационныйНомерДекларации");
	ПоляСвязи.Добавить("КодТаможенногоОргана");
	ПоляСвязи.Добавить("ДатаРегистрацииДекларации");
	ПоляСвязи.Добавить("НомерТовараВДекларации");
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	ПараметрыУказанияСерий.Вставить("ИмяКолонкиКоличествоУпаковок", "Количество");
	ПараметрыУказанияСерий.Вставить("ИспользоватьТолькоБазовыеЕдиницы", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.МаркировкаПродукцииДляГИСМ);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииФормыДокумента

// Заполняет номенклатуру КиЗ в строке документа
//
// Параметры:
//  ТекущаяСтрока				 - ТекущаяСтрока - текущая строка таблицы Товары/
//  СписокНоменклатураКиЗ		 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//  КиЗГИСМСИндивидуализацией	 - Булево - Признак получения КиЗ по GTIN или без GTIN.
//
Процедура ЗаполнитьНоменклатуруКиЗВСтроке(ТекущаяСтрока, СписокНоменклатураКиЗ, КиЗГИСМСИндивидуализацией) Экспорт
	
	GTIN = ?(КиЗГИСМСИндивидуализацией, ТекущаяСтрока.GTIN, "");
	ТаблицаРезультат = ПолучитьКизы(СписокНоменклатураКиЗ, GTIN);
	
	Если ТаблицаРезультат.Количество() = 1 Тогда
		СтрокаРезультат = ТаблицаРезультат.Получить(0);
		ТекущаяСтрока.НоменклатураКиЗ = СтрокаРезультат.НоменклатураКиЗ;
		ТекущаяСтрока.ХарактеристикаКиЗ = СтрокаРезультат.ХарактеристикаКиЗ;
		ТекущаяСтрока.ХарактеристикиКизИспользуются = СтрокаРезультат.ХарактеристикиКизИспользуются;
	ИначеЕсли ТаблицаРезультат.Количество() = 0 Тогда
		ТекущаяСтрока.НоменклатураКиЗ = Неопределено;
		ТекущаяСтрока.ХарактеристикаКиЗ = Неопределено;
		ТекущаяСтрока.ХарактеристикиКизИспользуются = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет номенклатуру КиЗ в строках документа
//
// Параметры:
//  Объект				 		 - ДокументОбъект.* - текущая строка таблицы Товары.
//  СписокНоменклатураКиЗ		 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//  ЗаполнятьСерии				 - Булево - Признак заполнения серий в ТЧ Серии.
//
Процедура ЗаполнитьНоменклатуруКиЗВСтроках(ДокументОбъект, СписокНоменклатураКиЗ, ЗаполнятьСерии = Истина) Экспорт
	
	GTIN = ?(ДокументОбъект.КиЗГИСМСИндивидуализацией, ДокументОбъект.Товары.Выгрузить(,"GTIN").ВыгрузитьКолонку("GTIN"),"");
	ТаблицаРезультат = ПолучитьКизы(СписокНоменклатураКиЗ, GTIN);
	
	СтруктураПоиска = Новый Структура("GTIN","");
	Для каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
		
		Если ДокументОбъект.КиЗГИСМСИндивидуализацией Тогда
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТовары);
		КонецЕсли;
		НайденныеСтроки = ТаблицаРезультат.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 1 Тогда
			НайденнаяСтрока = НайденныеСтроки.Получить(0);
			СтрокаТовары.НоменклатураКиЗ = НайденнаяСтрока.НоменклатураКиЗ;
			СтрокаТовары.ХарактеристикаКиЗ = НайденнаяСтрока.ХарактеристикаКиЗ;
			СтрокаТовары.ХарактеристикиКизИспользуются = НайденнаяСтрока.ХарактеристикиКизИспользуются;
		ИначеЕсли НайденныеСтроки.Количество() = 0 Тогда
			СтрокаТовары.НоменклатураКиЗ = Неопределено;
			СтрокаТовары.ХарактеристикаКиЗ = Неопределено;
			СтрокаТовары.ХарактеристикиКизИспользуются = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗаполнятьСерии Тогда
		Для каждого СтрокаСерии Из ДокументОбъект.Серии Цикл
			Если ДокументОбъект.КиЗГИСМСИндивидуализацией Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаСерии);
			КонецЕсли;
			НайденныеСтроки = ТаблицаРезультат.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() = 1 Тогда
				НайденнаяСтрока = НайденныеСтроки.Получить(0);
				СтрокаСерии.НоменклатураКиЗ = НайденнаяСтрока.НоменклатураКиЗ;
				СтрокаСерии.ХарактеристикаКиЗ = НайденнаяСтрока.ХарактеристикаКиЗ;
			ИначеЕсли НайденныеСтроки.Количество() = 0 Тогда
				СтрокаСерии.НоменклатураКиЗ = Неопределено;
				СтрокаСерии.ХарактеристикаКиЗ = Неопределено;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// Заполняет список КиЗ, подходящих для заполнения документ по выбранным категориям КиЗ.
//
// Параметры:
//  Объект				 		 - ДокументОбъект.* - текущая строка таблицы Товары.
//  СписокНоменклатураКиЗ		 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//
Процедура ПолучитьКиЗДляЗаполнения(ДокументОбъект, СписокНоменклатураКиЗ) Экспорт
	
	СписокНоменклатураКиЗ.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.КиЗГИСМВид)
		И НЕ ЗначениеЗаполнено(ДокументОбъект.КиЗГИСМРазмер)
		И НЕ ЗначениеЗаполнено(ДокументОбъект.КиЗГИСМСпособВыпускаВОборот) Тогда
		
		Возврат
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК НоменклатураКиЗ
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.КиЗГИСМВид = &КиЗГИСМВид
	|	И Номенклатура.КиЗГИСМСпособВыпускаВОборот = &КиЗГИСМСпособВыпускаВОборот
	|	И Номенклатура.КиЗГИСМРазмер = &КиЗГИСМРазмер
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &КиЗГИСМСИндивидуализацией = ЛОЖЬ
	|					И Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
	|					И Номенклатура.КиЗГИСМGTIN ПОДОБНО """"
	|				ТОГДА ИСТИНА
	|			КОГДА (Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|				ИЛИ Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|					ИЛИ НЕ Номенклатура.КиЗГИСМGTIN ПОДОБНО """")
	|					И &КиЗГИСМСИндивидуализацией = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("КиЗГИСМВид",                  ДокументОбъект.КиЗГИСМВид);
	Запрос.УстановитьПараметр("КиЗГИСМРазмер",               ДокументОбъект.КиЗГИСМРазмер);
	Запрос.УстановитьПараметр("КиЗГИСМСпособВыпускаВОборот", ДокументОбъект.КиЗГИСМСпособВыпускаВОборот);
	Запрос.УстановитьПараметр("КиЗГИСМСИндивидуализацией",   ДокументОбъект.КиЗГИСМСИндивидуализацией);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокНоменклатураКиЗ.Добавить(Выборка.НоменклатураКиЗ);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет служебные реквизиты табличной части
//
// Параметры:
//  Товары	 - ТаблицаФормы - ТЧ Товары документа.
//
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧасти(Товары) Экспорт
	
	СтруктураДействий = Новый Структура;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Номенклатура", "Номенклатура");
	СтруктураПараметров.Вставить("ХарактеристикиИспользуются", "ХарактеристикиИспользуются");
	
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", СтруктураПараметров);
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , Товары);
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, Неопределено);
	
	СтруктураПараметров.Вставить("Номенклатура", "НоменклатураКиЗ");
	СтруктураПараметров.Вставить("ХарактеристикиИспользуются", "ХарактеристикиКиЗИспользуются");
	
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", СтруктураПараметров);
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , Товары);
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, Неопределено);
	
КонецПроцедуры

// Заполняет GTINВСтроках
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект. - Документ для заполнения GTIN
//
Процедура ЗаполнитьGTINВСтроках(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Товары КАК Товары;
	|
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Владелец КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
	|	ШтрихкодыНоменклатуры.Штрихкод КАК GTIN
	|ИЗ
	|	ВтТовары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
	|		ПО ШтрихкодыНоменклатуры.Владелец = Товары.Номенклатура
	|			И ШтрихкодыНоменклатуры.Характеристика = Товары.Характеристика");
	
	Запрос.УстановитьПараметр("Товары", ДокументОбъект.Товары.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
	МассивGTIN = Новый Массив;
	Для каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТовары);
		НайденныеСтроки = ТаблицаРезультат.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		ИначеЕсли НайденныеСтроки.Количество() = 1
			И МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(НайденныеСтроки[0].GTIN) Тогда
			
			СтрокаТовары.GTIN = НайденныеСтроки[0].GTIN;
			
		Иначе
			МассивGTIN.Очистить();
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(НайденнаяСтрока.GTIN) Тогда
					МассивGTIN.Добавить(НайденнаяСтрока.GTIN);
				КонецЕсли;
			КонецЦикла;
			Если МассивGTIN.Количество() = 1 Тогда
				СтрокаТовары.GTIN = МассивGTIN.Получить(0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункциииФормыДокумента

// Заполняет списки выбора реквизитов шапки.
//
// Параметры:
//  Форма	 - УправляемаяФорма - форма документа
//
Процедура ЗаполнитьСпискиВыбораРеквизитовШапки(Форма) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМВид
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМСпособВыпускаВОборот
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМРазмер
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ";
		
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаКиЗГИСМВид = ПакетРезультатов[0].Выбрать();
	ВыборкаКиЗГИСМСпособВыпускаВОборот = ПакетРезультатов[1].Выбрать();
	ВыборкаКиЗГИСМРазмер = ПакетРезультатов[2].Выбрать();
	
	Форма.Элементы.КиЗГИСМВид.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Очистить();
	
	Пока ВыборкаКиЗГИСМВид.Следующий() Цикл
		Форма.Элементы.КиЗГИСМВид.СписокВыбора.Добавить(ВыборкаКиЗГИСМВид.КиЗГИСМВид);
	КонецЦикла;
	Если ВыборкаКиЗГИСМВид.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМВид = ВыборкаКиЗГИСМВид.КиЗГИСМВид;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМРазмер.Следующий() Цикл
		Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Добавить(ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер);
	КонецЦикла;
	Если ВыборкаКиЗГИСМРазмер.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМРазмер = ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМСпособВыпускаВОборот.Следующий() Цикл
		Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Добавить(ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот);
	КонецЦикла;
	Если ВыборкаКиЗГИСМСпособВыпускаВОборот.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМСпособВыпускаВОборот = ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот;
	КонецЕсли;
	
	Форма.Элементы.ОперацияМаркировки.СписокВыбора.Очистить();
	
	Если ВыборкаКиЗГИСМВид.Количество() > 0 И ВыборкаКиЗГИСМРазмер.Количество() > 0 И ВыборкаКиЗГИСМСпособВыпускаВОборот.Количество() > 0 Тогда
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаОстатковНа12082016);
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровВозвращенныхПокупателем);
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровПринятыхНаКомиссию);
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаИмпортированныхТоваров);
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаПроизведеннойПродукции);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.Объект.ОперацияМаркировки) 
		И Форма.Элементы.ОперацияМаркировки.СписокВыбора.НайтиПоЗначению(Форма.Объект.ОперацияМаркировки) = Неопределено Тогда
		
		ВызватьИсключение НСтр("ru='Выбранная операция маркировки отличается от доступных для выбора операций маркировки'");
		
	ИначеЕсли Форма.Элементы.ОперацияМаркировки.СписокВыбора.Количество() = 0 Тогда
		
		ВызватьИсключение НСтр("ru='Перед созданием маркировки необходимо ввести контрольные идентификационные знаки в справочник ""Номенлкатура"".'");
		
	КонецЕсли;
	
КонецПроцедуры

// Управляет доступностью элементов формы
//
// Параметры:
//  Форма	 - УправляемаяФорма - форма документа.
//
Процедура УправлениеДоступностью(Форма) Экспорт
	
	МаркировкаТоваровГИСМ.УправлениеДоступностью(Форма);
	
КонецПроцедуры

// Обработчик Категория КиЗ при изменении
//
// Параметры:
//  ДокументОбъект			 - ДокументОбъект.* - обрабатываемый документ.
//  СписокНоменклатураКиЗ	 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//  ЗаполнятьСерии			 - Булево - Признак заполнения серий в ТЧ Серии.
//
Процедура КатегорияКиЗПриИзменении(ДокументОбъект, СписокНоменклатураКиЗ, ЗаполнятьСерии=Истина) Экспорт
	МаркировкаТоваровГИСМРТ.ПолучитьКиЗДляЗаполнения(ДокументОбъект, СписокНоменклатураКиЗ);
	МаркировкаТоваровГИСМРТ.ЗаполнитьНоменклатуруКиЗВСтроках(ДокументОбъект, СписокНоменклатураКиЗ, ЗаполнятьСерии);
КонецПроцедуры

#КонецОбласти

#Область ПеремаркировкаТоваров

#Область ОбработчикиСобытийМодуляОбъекта

// Инициализировать документ
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//  ДанныеЗаполнения - Структура - данные заполнения.
//
Процедура ИнициализироватьДокументПеремаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения = Неопределено) Экспорт
	
	ДокументОбъект.Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация);
	ДокументОбъект.Магазин       = ПараметрыСеанса.ТекущийМагазин;
	ДокументОбъект.Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(ДокументОбъект.Магазин, Перечисления.ТипыСкладов.СкладскоеПомещение, ДокументОбъект.Склад);
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

// Обработка заполнения перемаркировка товаров
//
// Параметры:
//  ДанныеЗаполнения	 - Структура - данные заполнения.
//  СтандартнаяОбработка - Булево - стандартная обработка.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаЗаполненияПеремаркировкаТоваров(ДанныеЗаполнения, СтандартнаяОбработка, ДокументОбъект) Экспорт
	
	ИнициализироватьДокументПеремаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Обработка проверки заполнения перемаркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  ПроверяемыеРеквизиты			 - Массив - массив проверяемых реквизитов.
//  МассивНепроверяемыхРеквизитов	 - Массив - массив непроверяемых реквизитов.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроверкиЗаполненияПеремаркировкаТоваров(Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, ДокументОбъект) Экспорт
	
	// Проверка характеристик в табличной части Товары и в шапке документа.
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("СуффиксДопРеквизита", "КиЗ");
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	Для каждого СтрТабл из ДокументОбъект.Товары Цикл
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Для товара %Товар% не настроено указание серий на магазине %Магазин%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", ОбщегоНазначенияРТ.ПолучитьПредставлениеНоменклатуры(СтрТабл.Номенклатура, СтрТабл.Характеристика));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Магазин%", ДокументОбъект.Магазин);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрТабл.НомерСтроки, "Номенклатура");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
		КонецЕсли;
	КонецЦикла;	
	
	Если НЕ ИнтеграцияГИСМ_РТ.ИспользоватьПодразделения() Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Подразделение");
		
	КонецЕсли;
	
	
	// Проверка заполнения серий, в т.ч. серии.
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ДокументОбъект,
																 ПараметрыУказанияСерийПеремаркировкаТоваров(ДокументОбъект),
																 Отказ,
																 МассивНепроверяемыхРеквизитов);
		
		
КонецПроцедуры

// Перед записью перемаркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  РежимЗаписи						 - РежимЗаписи - Режим записи документа.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ПередЗаписьюПеремаркировкаТоваров(Отказ, РежимЗаписи, РежимПроведения, ДокументОбъект) Экспорт
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ДокументОбъект);
	
	ПроведениеСервер.УстановитьРежимПроведения(ДокументОбъект.Проведен, РежимЗаписи, РежимПроведения);
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый",    ДокументОбъект.ЭтоНовый());
	ДокументОбъект.ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияРТ.УдалитьНеиспользуемыеСтрокиСерий(ДокументОбъект,ПараметрыУказанияСерийПеремаркировкаТоваров(ДокументОбъект));
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьЗаполнитьСерииКиЗПеремаркировкаТоваров(ДокументОбъект, Отказ);
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ДокументОбъект.СерииКиЗ.Очистить();
	КонецЕсли;
	
КонецПроцедуры

// При копировании перемаркировка товаров
//
// Параметры:
//  ОбъектКопирования	 - см. описание параметра в синтаксис-помощнике к обработчику "ПриКопировании"
//  ДокументОбъект	 	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ПриКопированииПеремаркировкаТоваров(ОбъектКопирования, ДокументОбъект) Экспорт
	
	ДокументОбъект.СерииКиЗ.Очистить();
	
	ИнициализироватьДокументперемаркировкаТоваров(ДокументОбъект);
	
КонецПроцедуры

// Обработка проведения перемаркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроведенияПеремаркировкаТоваров(Отказ, РежимПроведения, ДокументОбъект) Экспорт
	
	Ссылка = ДокументОбъект.Ссылка;
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	Движения =  ДокументОбъект.Движения;
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	ИнициализироватьДанныеДокументаПеремаркировкаТоваров(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокументОбъект);
	
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроляМаркировкаТоваров(ДокументОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ДокументОбъект);
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

// Обработка удаления проведения перемаркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаУдаленияПроведенияПеремаркировкаТоваров(Отказ, ДокументОбъект) Экспорт
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументОбъект.Ссылка, ДокументОбъект.ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокументОбъект);
	
	СформироватьСписокРегистровДляКонтроляМаркировкаТоваров(ДокументОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ДокументОбъект);
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДокументОбъект.ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ИнициализироватьДанныеДокументаПеремаркировкаТоваров(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремаркировкаТоваровГИСМ.Ссылка,
	|	ПеремаркировкаТоваровГИСМ.ВерсияДанных,
	|	ПеремаркировкаТоваровГИСМ.ПометкаУдаления,
	|	ПеремаркировкаТоваровГИСМ.КиЗГИСМВид,
	|	ПеремаркировкаТоваровГИСМ.КиЗГИСМСпособВыпускаВОборот,
	|	ПеремаркировкаТоваровГИСМ.КиЗГИСМРазмер,
	|	ПеремаркировкаТоваровГИСМ.КиЗГИСМСИндивидуализацией,
	|	ПеремаркировкаТоваровГИСМ.Организация,
	|	ПеремаркировкаТоваровГИСМ.Магазин,
	|	ПеремаркировкаТоваровГИСМ.Склад,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ОтгрузкаНаВнутренниеНужды) КАК АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) КАК СкладскаяОперация,
	|	ПеремаркировкаТоваровГИСМ.Ответственный,
	|	ПеремаркировкаТоваровГИСМ.Дата КАК Период
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ КАК ПеремаркировкаТоваровГИСМ
	|ГДЕ
	|	ПеремаркировкаТоваровГИСМ.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПеремаркировкаТоваровГИСМТовары.Номенклатура,
	|	ПеремаркировкаТоваровГИСМТовары.Характеристика,
	|	ПеремаркировкаТоваровГИСМТовары.GTIN,
	|	ПеремаркировкаТоваровГИСМТовары.НоменклатураКиЗ,
	|	ПеремаркировкаТоваровГИСМТовары.ХарактеристикаКиЗ,
	|	ПеремаркировкаТоваровГИСМТовары.Количество,
	|	ПеремаркировкаТоваровГИСМТовары.СтатусУказанияСерий,
	|	ПеремаркировкаТоваровГИСМТовары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ПеремаркировкаТоваровГИСМТовары
	|ГДЕ
	|	ПеремаркировкаТоваровГИСМТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураКиЗ КАК Номенклатура,
	|	Товары.ХарактеристикаКиЗ КАК Характеристика,
	|	Товары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаХозяйственнойОперации,
	|	&Склад,
	|	&Ссылка КАК Регистратор,
	|	&Период
	|ИЗ
	|	Товары КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.НоменклатураКиЗ КАК Номенклатура,
	|	ТаблицаТовары.ХарактеристикаКиЗ КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	Товары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремаркировкаТоваровГИСМСерииКиЗ.Номенклатура КАК Номенклатура,
	|	ПеремаркировкаТоваровГИСМСерииКиЗ.Характеристика КАК Характеристика,
	|	ПеремаркировкаТоваровГИСМСерииКиЗ.Серия КАК Серия,
	|	-ПеремаркировкаТоваровГИСМСерииКиЗ.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ПеремаркировкаТоваровГИСМСерииКиЗ.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ.СерииКиЗ КАК ПеремаркировкаТоваровГИСМСерииКиЗ
	|ГДЕ
	|	ПеремаркировкаТоваровГИСМСерииКиЗ.Ссылка = &Ссылка
	|	И ПеремаркировкаТоваровГИСМСерииКиЗ.Количество <> 0
	|	И ПеремаркировкаТоваровГИСМСерииКиЗ.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Магазин,
	|	&СкладскаяОперация,
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ТаблицаСерии.НомерСтроки
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.СписываемаяСерия КАК Серия,
	|	-ТаблицаСерии.Количество,
	|	&Магазин,
	|	&СкладскаяОперация,
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ТаблицаСерии.НомерСтроки
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"          , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"        , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"     , Результат[3].Выгрузить());
	
	
КонецПроцедуры

#КонецОбласти

// Заполняет списки выбора реквизитов шапки.
//
// Параметры:
//  Форма	 - УправляемаяФорма - форма документа
//
Процедура ЗаполнитьСпискиВыбораРеквизитовШапкиПеремаркировкаТоваров(Форма) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМВид
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМСпособВыпускаВОборот
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМРазмер
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ";
		
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаКиЗГИСМВид = ПакетРезультатов[0].Выбрать();
	ВыборкаКиЗГИСМСпособВыпускаВОборот = ПакетРезультатов[1].Выбрать();
	ВыборкаКиЗГИСМРазмер = ПакетРезультатов[2].Выбрать();
	
	Форма.Элементы.КиЗГИСМВид.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Очистить();
	
	Пока ВыборкаКиЗГИСМВид.Следующий() Цикл
		Форма.Элементы.КиЗГИСМВид.СписокВыбора.Добавить(ВыборкаКиЗГИСМВид.КиЗГИСМВид);
	КонецЦикла;
	Если ВыборкаКиЗГИСМВид.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМВид = ВыборкаКиЗГИСМВид.КиЗГИСМВид;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМРазмер.Следующий() Цикл
		Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Добавить(ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер);
	КонецЦикла;
	Если ВыборкаКиЗГИСМРазмер.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМРазмер = ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМСпособВыпускаВОборот.Следующий() Цикл
		Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Добавить(ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот);
	КонецЦикла;
	Если ВыборкаКиЗГИСМСпособВыпускаВОборот.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМСпособВыпускаВОборот = ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнениеМаркировкаТоваров

// Процедура - Заполнить маркировку товаров по возврату товаров от покупателя
//
// Параметры:
//  ДанныеЗаполнения - 	 - 
//  ДокументОбъект	 - 	 - 
//
Процедура ЗаполнитьМаркировкуТоваровПоВозвратуТоваровОтПокупателя(ДанныеЗаполнения, ДокументОбъект)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
	|	ВозвратТоваровОтПокупателя.Организация КАК Организация,
	|	ВозвратТоваровОтПокупателя.Склад КАК Склад,
	|	ВозвратТоваровОтПокупателя.Магазин КАК Магазин,
	|	ВозвратТоваровОтПокупателя.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.Характеристика,
	|	ВозвратТоваровОтПокупателяТовары.Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка = &Ссылка
	|	И ВозвратТоваровОтПокупателяТовары.Номенклатура.ПродукцияМаркируемаяДляГИСМ");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетРезультатов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка);
		
	Если ПакетРезультатов[1].Пустой() Тогда
		ТекстОшибки = НСтр("ru='Документ %Документ% не содержит маркируемых товаров для ГИСМ. Ввод на основании такого документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения.Ссылка);
		
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	ДокументОбъект.ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровВозвращенныхПокупателем;
	ДокументОбъект.Основание = ДанныеЗаполнения.Ссылка;
	
	ДокументОбъект.Товары.Загрузить(ПакетРезультатов[1].Выгрузить());
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетРезультатов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	ЗаполнитьGTINВСтроках(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьМаркировкуТоваровПоПоступлениюТоваров(ДанныеЗаполнения, ДокументОбъект)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка КАК Ссылка,
	|	ПоступлениеТоваров.Организация КАК Организация,
	|	ПоступлениеТоваров.Склад КАК Склад,
	|	ПоступлениеТоваров.Ответственный КАК Ответственный,
	|	ПоступлениеТоваров.Магазин КАК Магазин
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.Номенклатура,
	|	ПоступлениеТоваровТовары.Характеристика,
	|	ПоступлениеТоваровТовары.Количество
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
	|	И ПоступлениеТоваровТовары.Номенклатура.ПродукцияМаркируемаяДляГИСМ");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетРезультатов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка);
		
	Если ПакетРезультатов[1].Пустой() Тогда
		ТекстОшибки = НСтр("ru='Документ %Документ% не содержит маркируемых товаров для ГИСМ. Ввод на основании такого документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения.Ссылка);
		
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка, ,"Ссылка");
	ДокументОбъект.ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаИмпортированныхТоваров;
	
	ДокументОбъект.Товары.Загрузить(ПакетРезультатов[1].Выгрузить());
	ЗаполнитьGTINВСтроках(ДокументОбъект);
	
КонецПроцедуры

// Функция возвращает таблицу реквизитов, зависимых от хозяйственной операции документа.
//
Функция ПолучитьМассивыРеквизитовМаркировкиТоваров(ОперацияМаркировки, МассивВсехРеквизитов, МассивРеквизитовОперации)
	
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
КонецФункции

Процедура СформироватьСписокРегистровДляКонтроляМаркировкаТоваров(ДокументОбъект)

	Массив = Новый Массив;
	// Контроль при перепроведении и отмене проведения
	
	Если ДокументОбъект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Массив.Добавить(ДокументОбъект.Движения.ТоварыНаСкладах);
		
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

#Область СерииКиЗ

Процедура ПроверитьЗаполнитьСерииКиЗПеремаркировкаТоваров(ДокументОбъект, Отказ)
	
	МаркируемыеСерии = ДокументОбъект.Товары.Выгрузить();
	
	Если Не ДокументОбъект.Проведен
		ИЛИ ПроверитьИзменениеЗависмыхРеквизитовСерийПеремаркировкаТоваров(ДокументОбъект)
		ИЛИ ПроверитьИзменениеЗависмыхРеквизитовСерийДокументаПеремаркировкаТоваров(ДокументОбъект) Тогда
		
		ЗаполнитьСерииКиЗ(ДокументОбъект, МаркируемыеСерии, Ложь);
		СообщитьОбОшибкахЗаполненияСерииКиЗ(ДокументОбъект, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСерииКиЗ(ДокументОбъект, МаркируемыеСерии, ОперацияИдентификации)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументОбъект.СерииКиЗ.Очистить();
	
	Если ОперацияИдентификации Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	МаркируемыеСерии.Серия КАК Серия,
	|	МаркируемыеСерии.Количество КАК Количество,
	|	МаркируемыеСерии.Номенклатура КАК Номенклатура,
	|	МаркируемыеСерии.Характеристика КАК Характеристика,
	|	МаркируемыеСерии.GTIN КАК GTIN,
	|	МаркируемыеСерии.НоменклатураКиЗ КАК НоменклатураКиЗ,
	|	МаркируемыеСерии.ХарактеристикаКиЗ КАК ХарактеристикаКиЗ
	|ПОМЕСТИТЬ МаркируемыеСерии
	|ИЗ
	|	&МаркируемыеСерии КАК МаркируемыеСерии;
	|
	|ВЫБРАТЬ
	|	МаркируемыеСерии.Серия КАК Серия,
	|	ВЫРАЗИТЬ(МаркируемыеСерии.Серия КАК Справочник.СерииНоменклатуры).НомерКиЗГИСМ КАК НомерКиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ВыпущенныеКиЗ.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК КизВыпущен,
	|	МаркируемыеСерии.Количество КАК Количество,
	|	МаркируемыеСерии.Номенклатура КАК Номенклатура,
	|	МаркируемыеСерии.Характеристика КАК Характеристика,
	|	МаркируемыеСерии.GTIN КАК GTIN,
	|	МаркируемыеСерии.НоменклатураКиЗ КАК НоменклатураКиЗ,
	|	МаркируемыеСерии.ХарактеристикаКиЗ КАК ХарактеристикаКиЗ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(МаркируемыеСерии.ХарактеристикаКиЗ КАК Справочник.ХарактеристикиНоменклатуры).КиЗГИСМGTIN, ВЫРАЗИТЬ(МаркируемыеСерии.НоменклатураКиЗ КАК Справочник.Номенклатура).КиЗГИСМGTIN) КАК GTINКИЗ,
	|	ВЫРАЗИТЬ(МаркируемыеСерии.НоменклатураКиЗ КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатурыКиЗ
	|ПОМЕСТИТЬ ВтМаркируемыеСерии
	|ИЗ
	|	МаркируемыеСерии КАК МаркируемыеСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК ВыпущенныеКиЗ
	|		ПО (ВыпущенныеКиЗ.НомерКиЗ = ВЫРАЗИТЬ(МаркируемыеСерии.Серия КАК Справочник.СерииНоменклатуры).НомерКиЗГИСМ)
	|			И (ВыпущенныеКиЗ.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПринятоГИСМ))
	|			И (ВыпущенныеКиЗ.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	ВтМаркируемыеСерии.Количество КАК Количество,
	|	ВтМаркируемыеСерии.НоменклатураКиЗ КАК Номенклатура,
	|	ВтМаркируемыеСерии.ХарактеристикаКиЗ КАК Характеристика,
	|	ВтМаркируемыеСерии.GTINКИЗ КАК GTIN,
	|	ВтМаркируемыеСерии.НомерКиЗГИСМ КАК НомерКиЗГИСМ
	|ПОМЕСТИТЬ ВтСерииКиЗ
	|ИЗ
	|	ВтМаркируемыеСерии КАК ВтМаркируемыеСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры.ИспользоватьСерии 
	|				ИЛИ СерииНоменклатуры.ВидНоменклатуры = ВтМаркируемыеСерии.ВидНоменклатурыКиЗ)
	|			И (СерииНоменклатуры.НомерКиЗГИСМ = ВтМаркируемыеСерии.НомерКиЗГИСМ)
	|			И СерииНоменклатуры.ПометкаУдаления = ЛОЖЬ
	|ГДЕ
	|	НЕ СерииНоменклатуры.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтМаркируемыеСерии.Серия,
	|	ВЫРАЗИТЬ(ВтМаркируемыеСерии.Серия КАК Справочник.СерииНоменклатуры).ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтМаркируемыеСерии.НомерКиЗГИСМ,
	|	ВтМаркируемыеСерии.КизВыпущен,
	|	ВтМаркируемыеСерии.Количество,
	|	ВтМаркируемыеСерии.Номенклатура,
	|	ВтМаркируемыеСерии.Характеристика,
	|	ВтМаркируемыеСерии.GTIN,
	|	ВтМаркируемыеСерии.НоменклатураКиЗ,
	|	ВтМаркируемыеСерии.ХарактеристикаКиЗ,
	|	ВтМаркируемыеСерии.GTINКИЗ,
	|	ВтМаркируемыеСерии.ВидНоменклатурыКиЗ
	|ПОМЕСТИТЬ 
	|	ГенерируемыеСерии
	|ИЗ
	|	ВтМаркируемыеСерии КАК ВтМаркируемыеСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерииКиЗ КАК ВтСерииКиЗ
	|		ПО (ВтСерииКиЗ.НомерКиЗГИСМ = ВтМаркируемыеСерии.НомерКиЗГИСМ)
	|			И (ВтСерииКиЗ.GTIN = ВтМаркируемыеСерии.GTINКИЗ)
	|ГДЕ
	|	ВтСерииКиЗ.НомерКиЗГИСМ ЕСТЬ NULL;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГенерируемыеСерии.Серия,
	|	ГенерируемыеСерии.НомерКиЗГИСМ,
	|	ГенерируемыеСерии.КизВыпущен,
	|	ГенерируемыеСерии.Количество,
	|	ГенерируемыеСерии.Номенклатура,
	|	ГенерируемыеСерии.Характеристика,
	|	ГенерируемыеСерии.GTIN,
	|	ГенерируемыеСерии.НоменклатураКиЗ,
	|	ГенерируемыеСерии.ХарактеристикаКиЗ,
	|	ГенерируемыеСерии.GTINКИЗ,
	|	ГенерируемыеСерии.ВидНоменклатурыКиЗ
	|ИЗ 
	|	ГенерируемыеСерии КАК ГенерируемыеСерии;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтСерииКиЗ.Серия,
	|	ВтСерииКиЗ.Количество,
	|	ВтСерииКиЗ.Номенклатура,
	|	ВтСерииКиЗ.Характеристика,
	|	ВтСерииКиЗ.GTIN,
	|	ВтСерииКиЗ.НомерКиЗГИСМ
	|ИЗ
	|	ВтСерииКиЗ КАК ВтСерииКиЗ
	|";
	
	Запрос.УстановитьПараметр("МаркируемыеСерии", МаркируемыеСерии);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДокументОбъект.СерииКиЗ.Загрузить(РезультатыЗапроса[5].Выгрузить());
	ВыборкаГенерируемыеСерии = РезультатыЗапроса[4].Выбрать();
	Пока ВыборкаГенерируемыеСерии.Следующий() Цикл
		СтрокаСерииКиЗ = ДокументОбъект.СерииКиЗ.Добавить();
		НоваяСерия = СгенерироватьСериюКиЗ(ВыборкаГенерируемыеСерии);
		Если ЗначениеЗаполнено(НоваяСерия) Тогда
			СтрокаСерииКиЗ.Серия = НоваяСерия;
		КонецЕсли;
		СтрокаСерииКиЗ.Номенклатура   = ВыборкаГенерируемыеСерии.НоменклатураКиЗ;
		СтрокаСерииКиЗ.Характеристика = ВыборкаГенерируемыеСерии.ХарактеристикаКиЗ;
		СтрокаСерииКиЗ.GTIN           = ВыборкаГенерируемыеСерии.GTINКИЗ;
		СтрокаСерииКиЗ.Количество     = ВыборкаГенерируемыеСерии.Количество;
	КонецЦикла;
	
КонецПроцедуры

Функция СгенерироватьСериюКиЗ(Данные)
	
	ШаблонОшибкиЗаписать = НСтр("ru='Не удалось записать серию КиЗ. %ОписаниеОшибки%'");
	
	НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
	НоваяСерия.НомерКиЗГИСМ = Данные.НомерКиЗГИСМ;
	НоваяСерия.ВидНоменклатуры = Данные.ВидНоменклатурыКиЗ;
	
	Попытка
		НоваяСерия.Записать();
	Исключение
		ТекстОшибки = СтрЗаменить(ШаблонОшибкиЗаписать, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, НоваяСерия);
	КонецПопытки;
	
	Возврат НоваяСерия.Ссылка
	
КонецФункции

Функция ПроверитьИзменениеЗависмыхРеквизитовСерийДокументаПеремаркировкаТоваров(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Склад <> &Склад ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РеквизитыИзменены
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	";
	
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеквизитыИзменены = Выборка.РеквизитыИзменены;
	Иначе
		РеквизитыИзменены = Ложь;
	КонецЕсли;
	
	Возврат РеквизитыИзменены;
	
КонецФункции

Функция ПроверитьИзменениеЗависмыхРеквизитовСерийПеремаркировкаТоваров(ДокументОбъект)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МаркировкаТоваровГИСМСерии.Серия,
	|	МаркировкаТоваровГИСМСерии.Количество,
	|	МаркировкаТоваровГИСМСерии.Номенклатура,
	|	МаркировкаТоваровГИСМСерии.Характеристика,
	|	МаркировкаТоваровГИСМСерии.GTIN,
	|	МаркировкаТоваровГИСМСерии.НоменклатураКиЗ,
	|	МаркировкаТоваровГИСМСерии.ХарактеристикаКиЗ
	|ПОМЕСТИТЬ
	|	ВтСерии
	|ИЗ
	|	&Серии КАК МаркировкаТоваровГИСМСерии;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия КАК Серия
	|ИЗ (
	|	ВЫБРАТЬ
	|		МаркировкаТоваровГИСМСерии.Серия,
	|		МаркировкаТоваровГИСМСерии.Количество,
	|		МаркировкаТоваровГИСМСерии.Номенклатура,
	|		МаркировкаТоваровГИСМСерии.Характеристика,
	|		МаркировкаТоваровГИСМСерии.GTIN,
	|		МаркировкаТоваровГИСМСерии.НоменклатураКиЗ,
	|		МаркировкаТоваровГИСМСерии.ХарактеристикаКиЗ
	|	ИЗ
	|		ВтСерии КАК МаркировкаТоваровГИСМСерии
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПеремаркировкаТоваровГИСТовары.Серия,
	|		-ПеремаркировкаТоваровГИСТовары.Количество,
	|		ПеремаркировкаТоваровГИСТовары.Номенклатура,
	|		ПеремаркировкаТоваровГИСТовары.Характеристика,
	|		ПеремаркировкаТоваровГИСТовары.GTIN,
	|		ПеремаркировкаТоваровГИСТовары.НоменклатураКиЗ,
	|		ПеремаркировкаТоваровГИСТовары.ХарактеристикаКиЗ
	|	ИЗ
	|		Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ПеремаркировкаТоваровГИСТовары
	|	ГДЕ
	|		ПеремаркировкаТоваровГИСТовары.Ссылка = &Маркировка
	|	) КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаСерий.Количество) <> 0
	|");
	
	Запрос.УстановитьПараметр("Серии", ДокументОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("Маркировка", ДокументОбъект.Ссылка);
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Процедура СообщитьОбОшибкахЗаполненияСерииКиЗ(ДокументОбъект, Отказ)
	//
	//Для каждого СтрокаСерии Из ДокументОбъект.СерииКиЗ Цикл
	//	Если Не ЗначениеЗаполнено(СтрокаСерии.Серия) Тогда
	//		
	//		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//			НСтр("ru='Для КиЗ %1 отсутствуют серии.'"),
	//			НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
	//				СтрокаСерии.Номенклатура,
	//				СтрокаСерии.Характеристика));
	//		
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//			ТекстСообщения,
	//			ДокументОбъект.Ссылка,
	//			,
	//			,
	//			Отказ);
	//		
	//	КонецЕсли;
	//КонецЦикла;
	//
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииФормыДокумента

Функция ПолучитьКизы(СписокНоменклатураКиЗ, GTIN)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК НоменклатураКИЗ,
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаКиЗ,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.КиЗГИСМGTIN, Номенклатура.КиЗГИСМGTIN) КАК GTIN,
	|	ВЫБОР
	|		КОГДА 
	|		Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|		ИЛИ Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиКиЗИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|				ИЛИ Номенклатура.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец)
	|ГДЕ
	|	Номенклатура.Ссылка В (&СписокНоменклатураКиЗ)
	|	И ЕСТЬNULL(ХарактеристикиНоменклатуры.КиЗГИСМGTIN, Номенклатура.КиЗГИСМGTIN) В(&GTIN)";
	
	Запрос.УстановитьПараметр("GTIN", GTIN);
	Запрос.УстановитьПараметр("СписокНоменклатураКиЗ", СписокНоменклатураКиЗ);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат
	
КонецФункции

#КонецОбласти 

#Область Прочее

Процедура ПроверитьСоответствияGTIN(Отказ, ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.НоменклатураКиЗ,
		|	Товары.ХарактеристикаКиЗ,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.GTIN
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.НоменклатураКиЗ,
		|	Товары.ХарактеристикаКиЗ,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.GTIN,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(Товары.ХарактеристикаКиЗ КАК Справочник.ХарактеристикиНоменклатуры).КиЗГИСМGTIN, ВЫРАЗИТЬ(Товары.НоменклатураКиЗ КАК Справочник.Номенклатура).КиЗГИСМGTIN) КАК GTINКИЗ
		|ИЗ
		|	ВтТовары КАК Товары
		|ГДЕ
		|	ЕСТЬNULL(ВЫРАЗИТЬ(Товары.ХарактеристикаКиЗ КАК Справочник.ХарактеристикиНоменклатуры).КиЗГИСМGTIN, ВЫРАЗИТЬ(Товары.НоменклатураКиЗ КАК Справочник.Номенклатура).КиЗГИСМGTIN) <> Товары.GTIN
		|	И НЕ ЕСТЬNULL(ВЫРАЗИТЬ(Товары.ХарактеристикаКиЗ КАК Справочник.ХарактеристикиНоменклатуры).КиЗГИСМGTIN, ВЫРАЗИТЬ(Товары.НоменклатураКиЗ КАК Справочник.Номенклатура).КиЗГИСМGTIN) ПОДОБНО """"
		|";
		
	Запрос.УстановитьПараметр("Товары", ДокументОбъект.Товары.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ШаблонСообщения = НСтр("ru='GTIN КиЗ %1 %2 отличается от GTIN товара %3 в строке %4.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСообщения,
			ОбщегоНазначенияРТ.ПолучитьПредставлениеНоменклатуры(Выборка.НоменклатураКиЗ, Выборка.ХарактеристикаКиЗ),
			СокрЛП(Выборка.GTINКИЗ),
			ОбщегоНазначенияРТ.ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
			СокрЛП(Выборка.GTIN));
			
		НомерСтроки = Выборка.НомерСтроки - 1;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			ДокументОбъект.Ссылка,
			"Объект.Товары[" + НомерСтроки + "].GTIN",
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Устанавливаем условное оформление для характеристик номенклатуры
//
// Параметры:
// 		Форма - Форма - Содержит данную форму 
// 		ИмяПоляВводаХарактеристики - Строка - Наименование элемента формы, содержащего характеристики номенклатуры,
//											   если оно отличается от "ТоварыХарактеристика"
// 		ПутьКПолюОтбора - Строка - Полный путь к реквизиту "характеристики используются",
//									если он отличается от "Объект.Товары.ХарактеристикиИспользуются"
// 
Процедура УстановитьУсловноеОформлениеХарактеристикНоменклатуры(Форма,
	                                                            ИмяПоляВводаХарактеристики = "ТоварыХарактеристика",
																ПутьКПолюОтбора = "Объект.Товары.ХарактеристикиИспользуются") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
																
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаХарактеристики].Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<характеристики не используются>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

#Область ПроцедурыИФункцииЗаполненияСлужебныхРеквизитовПоНоменклатуре

// Возвращает структуру дополнительной информации получения служебных реквизитов
//
// Параметры:
// 		СтруктураДействий - Структура - Структура с действиями по получения служебных реквизитов
//
// Возвращаемое значение:
// 		Структура
//
Функция ПолучитьСтруктуруДополнительнойИнформации(СтруктураДействий) Экспорт
	
	СтруктураИсточников = Новый Структура;
	СтрокаРеквизитовЗаполнения = "";
	СтрокаРеквизитовВыгрузки = "";
	
	Для Каждого Действие Из СтруктураДействий Цикл
		Если ЗначениеЗаполнено(Действие.Значение) Тогда
			Для Каждого Поле Из Действие.Значение Цикл
				Если Не СтруктураИсточников.Свойство(Поле.Ключ) Тогда
					СтруктураИсточников.Вставить(Поле.Ключ);
					СтрокаРеквизитовВыгрузки = СтрокаРеквизитовВыгрузки + ", " + Поле.Ключ;
				КонецЕсли;
				Если ЗначениеЗаполнено(Поле.Значение) Тогда
					СтрокаРеквизитовЗаполнения = СтрокаРеквизитовЗаполнения + ", " + Поле.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый Структура(
		"СтруктураИсточников, РеквизитыЗаполнения, РеквизитыВыгрузки",
		СтруктураИсточников,
		Сред(СтрокаРеквизитовЗаполнения, 2), // Отрезать первый символ строки, т.к. это запятая
		СтрокаРеквизитовВыгрузки);
	
КонецФункции // ПолучитьСтруктуруДополнительнойИнформации()

// Структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа (обработки)
// Содержит свойства:
//
// ОБЯЗАТЕЛЬНЫЕ:
//	ИспользоватьСерииНоменклатуры - признак, нужно ли в документе заполнять статусы указания серий 
//	ПоляСвязиСерий - массив с именами реквизитов ТЧ Товары и ТЧ Серии, по которым устанавливается
//					 связь между табличными частями (поля связи "Номенклатура" и "Характеристика" 
//					 присутсвуют всегда, их отдельно указывать не нужно)
//	СкладскиеОперации - массив значений ПеречислениеСсылка.СкладскиеОперации - складские операции, оформляемые документом
//	ПолноеИмяОбъекта - Строка - полное имя объекта. Например, Документ.РеализацияТоваровУслуг
//	
//
// НЕОБЯЗАТЕЛЬНЫЕ:
//  ТолькоПросмотр - признак того, что серии в документе можно только просматривать (значение по умолчанию ЛОЖЬ)
//	ТоварВШапке - признак, что параметры указания серий определены для товара в шапке (иначе - для товара в ТЧ) (значение по умолчанию ЛОЖЬ)
//	БлокироватьДанныеФормы - признак того, что перед открытием форму указания серий, нужно заблокировать форму документа (значение по умолчанию ИСТИНА)
//								если ТолькоПросмотр = Истина, то данные формы не блокируются
//  
//	ИмяТЧТовары - имя табличной части со списком товаров (значение по умолчанию - "Товары")
//  ИмяТЧСерии - имя табличной части со списком серий (значение по умолчанию - "Серии")
//  ИмяПоляКоличество - имя поля в ТЧ "Товары", в котором пользователь редактирует количество (значение по умолчанию - "КоличествоУпаковок")
//  ИмяПоляСклад     - имя реквизита склада (значение по умолчанию - "Склад")
//	ИмяПоляПомещение - имя реквизита помещения, если не задано, значит в документе нет помещений
//	ИмяПоляДокументаРаспоряжения - Строка - если серии указываются в расходном ордере, то в этом параметре записывается имя поля распоряжения на отгрузку.
//											если серии указываются в накладной на поступление, то в этом параметрые записывается имя поле распоряжения на 
//												поступление.
//						                    Значение поля используются для отображения остатков в формах.										
//  
//	ЭтоОрдер - признак того, что документ является ордером (значение по умолчанию ЛОЖЬ)
//	ЭтоЗаказ - признак того, что документ является заказом (значение по умолчанию ЛОЖЬ)
//	ЭтоНакладная - признак того, что документ является накладной (значение по умолчанию ЛОЖЬ)
//
//	ТолькоСерииДляСебестоимости - нужно указывать только серии, по которым ведется учет себестоимости (значение по умолчанию ЛОЖЬ)
//	ПланированиеОтгрузки - использование параметра политики указания серий "УказыватьПриПланированииОтгрузки" (значение по умолчанию ЛОЖЬ)
//	ПланированиеОтора    - использование параметра политики указания серий "УказыватьПриПланированииОтбора" (значение по умолчанию ЛОЖЬ)
//	ПроверкаОтбора       - на адресном скакладе перед проверкой должны быть заполнены все серии, по которым ведется учет остатков
//	ФактОтбора - использование параметра политики указания серий "УказыватьПоФактуОтбора" (значение по умолчанию ЛОЖЬ)
//  ПодготовкаОрдера - параметр указывает, что ордер находится в статусе, когда происходит подготовка ордера и указание серий не обязательна (значение по умолчанию ЛОЖЬ)
//	ИменаПолейСтатусУказанияСерий - Массив - если в объекте несколько полей со статусом указания серий, то нужно добавить их имена в этот массив (значение по умолчанию пустой массив)
//	ИменаПолейДляОпределенияРаспоряжения - Массив - имена полей для определение распоржения, по которому отображаются остатки в форме подбора серий
//													имена полей табличной части указываются в формате Товары_ДокументРезерваСерий (значение по умолчанию пустой массив)
//	ИспользоватьАдресноеХранение - Булево -  на складе, по которому оформлен документ, используется адресное хранение (значение по умолчанию ЛОЖЬ)
//	ИмяИсточникаЗначенийВФормеОбъекта - Строка - значение по умолчанию "Объект", если данные хранятся в реквизитах формы, то нужно указать "ЭтоФорма"
//  ОтборПроверяемыхСтрок
//  ТолькоСерииСУчетомОстатков - Булево - необходимо указывать серии только тогда, когда по ним ведется учет остатков. (значение по умолчанию - ЛОЖЬ)
//	Спецификация - спецификация маршрутного листа
//	ОсобеннаяПроверкаСтатусовУказанияСерий - Булево - признак, что в модуле менеджера объявлена процедура ТекстЗапросаПроверкиЗаполненияСерий(ПараметрыУказанияСерий)(значение по умолчанию - ЛОЖЬ)
//
Функция ПараметрыУказанияСерий() Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ИспользоватьСерииНоменклатуры",Ложь);
	СтруктураПараметров.Вставить("УчитыватьСебестоимостьПоСериям",Ложь);
	СтруктураПараметров.Вставить("СкладскиеОперации",Новый Массив); 
	СтруктураПараметров.Вставить("ПоляСвязи", Новый Массив);
	СтруктураПараметров.Вставить("ПолноеИмяОбъекта", "");
	
	СтруктураПараметров.Вставить("ТолькоПросмотр",Ложь);
	СтруктураПараметров.Вставить("ТоварВШапке",Ложь);
	СтруктураПараметров.Вставить("БлокироватьДанныеФормы",Истина);
	СтруктураПараметров.Вставить("ИмяТЧТовары","Товары");
	СтруктураПараметров.Вставить("ИмяТЧСерии","Серии");
	СтруктураПараметров.Вставить("ИмяПоляКоличество","Количество");
	СтруктураПараметров.Вставить("ИмяПоляМагазин","Магазин");
	СтруктураПараметров.Вставить("ИмяПоляМагазинОтправитель",Неопределено);
	СтруктураПараметров.Вставить("ИмяПоляМагазинПолучатель",Неопределено);
	СтруктураПараметров.Вставить("ИмяПоляПомещение",Неопределено);
	СтруктураПараметров.Вставить("ЭтоОрдер",Ложь);
	СтруктураПараметров.Вставить("ЭтоЗаказ",Ложь);      
	СтруктураПараметров.Вставить("ЭтоНакладная",Ложь);
	СтруктураПараметров.Вставить("ТолькоСерииДляСебестоимости",Ложь);
	СтруктураПараметров.Вставить("ПланированиеОтгрузки",Ложь);
	СтруктураПараметров.Вставить("ПланированиеОтбора",Ложь);
	СтруктураПараметров.Вставить("ПроверкаОтбора",Ложь);
	СтруктураПараметров.Вставить("ФактОтбора",Ложь);                                    
	СтруктураПараметров.Вставить("ПодготовкаОрдера",Ложь);
	СтруктураПараметров.Вставить("РегистрироватьСерии", Истина);
	СтруктураПараметров.Вставить("Дата",Дата(1,1,1));
	СтруктураПараметров.Вставить("ИменаПолейСтатусУказанияСерий",Новый Массив);
	СтруктураПараметров.Вставить("ИменаПолейДляОпределенияРаспоряжения",Новый Массив);
	СтруктураПараметров.Вставить("ИменаПолейДополнительные",Новый Массив);
	СтруктураПараметров.Вставить("ИспользоватьАдресноеХранение",Ложь);
	СтруктураПараметров.Вставить("ИмяИсточникаЗначенийВФормеОбъекта","Объект");
	СтруктураПараметров.Вставить("ОтборПроверяемыхСтрок", Неопределено);
	СтруктураПараметров.Вставить("ТолькоСерииСУчетомОстатков", Ложь);             
	СтруктураПараметров.Вставить("Спецификация",Неопределено);
	СтруктураПараметров.Вставить("ОсобеннаяПроверкаСтатусовУказанияСерий", Ложь);
	СтруктураПараметров.Вставить("НужноОкруглятьКоличество", Истина);
	СтруктураПараметров.Вставить("ИмяПоляСклад", "Магазин");
	
	СтруктураПараметров.Вставить("ОперацияДокумента", Неопределено);
	СтруктураПараметров.Вставить("Товары");
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти
