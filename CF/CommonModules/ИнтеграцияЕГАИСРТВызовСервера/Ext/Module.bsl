
#Область ПрограммныйИнтерфейс

Функция ДанныеАлкогольнойПродукции(Номенклатура) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.ДанныеАлкогольнойПродукции(Номенклатура);
	
КонецФункции

Функция ПроверитьУникальностьАкцизнойМарки(Операция, КодАкцизнойМарки, ТекстОшибки, ОрганизацияЕГАИС = Неопределено) Экспорт
	
	АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(Операция, КодАкцизнойМарки, ТекстОшибки, ОрганизацияЕГАИС);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС);
	
КонецФункции

Функция АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры);
	
КонецФункции

Функция ПроверятьНеобходимостьСозданияДокументовЕГАИС() Экспорт
	
	Возврат Константы.ПроверятьНеобходимостьСозданияДокументовЕГАИС.Получить();
	
КонецФункции

Функция ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС() Экспорт
	
	Возврат Константы.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС.Получить()
	
КонецФункции

Функция ТТНПолностьюСопоставлена(ТТНСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ТТНСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИСТовары.НомерСтроки КАК НомерСтроки,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &Ссылка
	|	И СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

Функция НесопоставленныеТоварыВТТН(ДокументСсылка) Экспорт
	
	ИмяТаблицы = "Документ" + "." + ДокументСсылка.Метаданные().Имя + "." + "Товары";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.ИдентификаторУпаковки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ИмяТаблицы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицы", ИмяТаблицы);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("АлкогольнаяПродукция");
	
КонецФункции

Функция ПолучитьСкладыМагазина(Магазин) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Магазин = &Магазин
	|	И НЕ Склады.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция АлкогольнаяПродукцияПоНоменклатуре(Номенклатура, Характеристика) Экспорт
	
	Результат = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеЕГАИС
	|ГДЕ
	|	СоответствиеЕГАИС.Номенклатура = &Номенклатура
	|	И СоответствиеЕГАИС.Характеристика = &Характеристика";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.АлкогольнаяПродукция;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НоменклатураПоАлкогольнойПродукции(АлкогольнаяПродукция) Экспорт
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = &АлкогольнаяПродукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Новый Структура("Номенклатура, Характеристика", Выборка.Номенклатура, Выборка.Характеристика));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции

Функция ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);
	
КонецФункции

Процедура ОтменитьСтатусыУпаковок(ДокументСсылка) Экспорт 

	ИнтеграцияЕГАИСРТ.ОтменитьСтатусыУпаковок(ДокументСсылка);

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

Функция СоздатьНоменклатуру(АдресПараметровСозданияНоменклатуры) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.СоздатьНоменклатуру(АдресПараметровСозданияНоменклатуры);
	
КонецФункции

#КонецОбласти
