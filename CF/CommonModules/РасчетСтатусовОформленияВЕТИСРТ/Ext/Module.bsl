#Область ПрограммныйИнтерфейс

// Позволяет переопределить имена реквизитов документа-основания для документа ВЕТИС.
// 
// Параметры:
// 	см. РасчетСтатусовОформленияВЕТИСПереопределяемый.ПриОпределенииИменРеквизитовДокументаДляРасчетаСтатусаОформленияДокументаВЕТИС
//
Процедура ПриОпределенииИменРеквизитовДокументаДляРасчетаСтатусаОформленияДокументаВЕТИС(
			МетаданныеДокументаОснования, МетаданныеДокументаВЕТИС, Реквизиты) Экспорт
	
	// Зададим имена реквизитов по умолчанию.
	Реквизиты.Контрагент             			= "Организация";
	Реквизиты.ТорговыйИлиПроизводственныйОбъект = "Магазин";
	
	// Определим имя реквизита "Ответственный".
	Если МетаданныеДокументаОснования.Реквизиты.Найти("Менеджер") <> Неопределено Тогда
		Реквизиты.Ответственный = "Менеджер";
	Иначе
		Реквизиты.Ответственный = "Ответственный";
	КонецЕсли;
		
	// Уточним имена реквизитов для конкретных документов.
	Если МетаданныеДокументаОснования =  Метаданные.Документы.СписаниеТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования =  Метаданные.Документы.ОприходованиеТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования =  Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "Организация";
			
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "ОрганизацияПолучатель";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования =  Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "Организация";
			Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СкладОтправитель";
			
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			Реквизиты.Контрагент = "ОрганизацияПолучатель";
			Реквизиты.ТорговыйИлиПроизводственныйОбъект = "СкладПолучатель";
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПересортицаТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РеализацияТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаТоваров Тогда
		
		Реквизиты.Ответственный = "Ответственный";
		
	КонецЕсли;
	
КонецПроцедуры

// Позволяет переопределить текст запроса выборки данных из документа-основания для расчета статуса оформления документа ВЕТИС.
// 
// Параметры:
// 	см. РасчетСтатусовОформленияВЕТИСПереопределяемый.ПриОпределенииТекстаЗапросаДляРасчетаСтатусаОформленияДокументаВЕТИС
//
Процедура ПриОпределенииТекстаЗапросаДляРасчетаСтатусаОформленияДокументаВЕТИС(
			МетаданныеДокументаОснования, МетаданныеДокументаВЕТИС, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента();
	ТоварыРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента();
	ТабличныеЧастиДокумента = Новый Массив;
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.СписаниеТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыРасход);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровОтПокупателя Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыПриход);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ВозвратТоваровПоставщику Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыРасход);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ОприходованиеТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыПриход);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ""; // не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыРасход);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПеремещениеТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ""; // не формируем - будет получен через обмен
		ИначеЕсли МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыРасход);
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПересортицаТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
			
			// Товары - приход и расход в одной ТЧ
			ТоварыПриход.ИмяПоляНоменклатураТЧТовары 	= "НоменклатураОприходование";
			ТоварыПриход.ИмяПоляХарактеристикаТЧТовары 	= "ХарактеристикаОприходование";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(ТоварыПриход);
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТабличныеЧастиДокумента);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.ПоступлениеТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыПриход);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.РеализацияТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ИсходящаяТранспортнаяОперацияВЕТИС Тогда
			
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТоварыРасход);
			
		КонецЕсли;
		
	ИначеЕсли МетаданныеДокументаОснования = Метаданные.Документы.СборкаТоваров Тогда
		
		Если МетаданныеДокументаВЕТИС = Метаданные.Документы.ПроизводственнаяОперацияВЕТИС Тогда
			
			// Номенклатура в шапке при сборке (приход)
			НоменклатураПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураПриход.ДопОтборы_Общие =
				"И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)";
			
			// Номенклатура в шапке при разборке (расход)
			НоменклатураРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("", "Серии");
			НоменклатураРасход.ДопОтборы_Общие =
				"И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)";
			
			// Товары при разборке (приход)
			ТоварыПриход = ШаблонОписанияПриходнойТабличнойЧастиДокумента("Товары", "Серии");
			ТоварыПриход.ДопОтборы_Общие =
				"И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)";
		
			// Товары при сборке (расход)
			ТоварыРасход = ШаблонОписанияРасходнойТабличнойЧастиДокумента("Товары", "Серии");
			ТоварыРасход.ДопОтборы_Общие =
				"И ТаблицаДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)";
			
			// Все ТЧ документа
			ТабличныеЧастиДокумента.Добавить(НоменклатураПриход);
			ТабличныеЧастиДокумента.Добавить(НоменклатураРасход);
			ТабличныеЧастиДокумента.Добавить(ТоварыПриход);
			ТабличныеЧастиДокумента.Добавить(ТоварыРасход);
			
			ТекстЗапроса = ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ТабличныеЧастиДокумента);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ШаблонОписанияПриходнойТабличнойЧастиДокумента(ИмяТабличнойЧастиТовары = "Товары", ИмяТабличнойЧастиСерии = NULL)
	
	Возврат ШаблонОписанияТабличнойЧастиДокумента(Истина, ИмяТабличнойЧастиТовары, ИмяТабличнойЧастиСерии);
	
КонецФункции

Функция ШаблонОписанияРасходнойТабличнойЧастиДокумента(ИмяТабличнойЧастиТовары = "Товары", ИмяТабличнойЧастиСерии = NULL)
	
	Возврат ШаблонОписанияТабличнойЧастиДокумента(Ложь, ИмяТабличнойЧастиТовары, ИмяТабличнойЧастиСерии);
	
КонецФункции

Функция ШаблонОписанияТабличнойЧастиДокумента(ВидДвиженияПриход = Истина,
			ИмяТабличнойЧастиТовары = "Товары", ИмяТабличнойЧастиСерии = NULL)
			
	ОписаниеТЧ = Новый Структура;
	// Вид движения
	ОписаниеТЧ.Вставить("ВидДвиженияПриход", 	         ВидДвиженияПриход);
	// ТЧ Товары
	ОписаниеТЧ.Вставить("ИмяТабличнойЧастиТовары",       ИмяТабличнойЧастиТовары);
	// ТЧ Серии
	ОписаниеТЧ.Вставить("ИмяТабличнойЧастиСерии",  	     ИмяТабличнойЧастиСерии);
	ОписаниеТЧ.Вставить("АвтоПоискСерий", 		   	     (ИмяТабличнойЧастиСерии = NULL));
	// Имена полей ТЧ Товары
	ОписаниеТЧ.Вставить("ИмяПоляНоменклатураТЧТовары",   "Номенклатура");
	ОписаниеТЧ.Вставить("ИмяПоляХарактеристикаТЧТовары", "Характеристика");
	ОписаниеТЧ.Вставить("ИмяПоляНазначениеТЧТовары", 	 "Назначение");
	ОписаниеТЧ.Вставить("ИмяПоляСерияТЧТовары",   		 "Серия");
	// Имена полей ТЧ Серии
	ОписаниеТЧ.Вставить("ИмяПоляНоменклатураТЧСерии",    "Номенклатура");
	ОписаниеТЧ.Вставить("ИмяПоляХарактеристикаТЧСерии",  "Характеристика");
	ОписаниеТЧ.Вставить("ИмяПоляНазначениеТЧСерии", 	 "Назначение");
	ОписаниеТЧ.Вставить("ИмяПоляСерияТЧСерии",   		 "Серия");
	// Модификаторы текста запроса.
	ОписаниеТЧ.Вставить("ДопСоединения_Общие",   		 "");
	ОписаниеТЧ.Вставить("ДопСоединения_ТаблицаТовары",   "");
	ОписаниеТЧ.Вставить("ДопСоединения_ТаблицаСерии",    "");
	ОписаниеТЧ.Вставить("ДопОтборы_Общие",       		 "");
	ОписаниеТЧ.Вставить("ДопОтборы_ТаблицаТовары",       "");
	ОписаниеТЧ.Вставить("ДопОтборы_ТаблицаСерии",        "");
	
	Возврат ОписаниеТЧ;
	
КонецФункции

Функция ТекстЗапросаДляРасчетаСтатусаОформления(МетаданныеДокументаОснования, ОписаниеТабличныхЧастей)
	
	Если ТипЗнч(ОписаниеТабличныхЧастей) <> Тип("Массив") Тогда
		// Передано описание единственной табличной части
		ТабличныеЧастиОснования = Новый Массив;
		ТабличныеЧастиОснования.Добавить(ОписаниеТабличныхЧастей);
	Иначе
		ТабличныеЧастиОснования = ОписаниеТабличныхЧастей;
	КонецЕсли;
	
	КоличествоТЧ = ТабличныеЧастиОснования.Количество();
	Если КоличествоТЧ = 0 Тогда
		УточнениеОшибки = НСтр("ru='Некорректный вызов ТекстЗапросаДляРасчетаСтатусаОформления'");
		ВызватьИсключение ИнтеграцияИСКлиентСервер.ТекстОшибкиВЕТИС(УточнениеОшибки); // Некорректный вызов ТекстЗапросаДляРасчетаСтатусаОформления
	КонецЕсли;
	
	ШаблонЗапросаБезСерий =
	"ВЫБРАТЬ
	|	%ПсевдонимТабличнойЧастиТовары%.Ссылка КАК Ссылка,
	|	%ВидДвиженияПриход% КАК ЭтоДвижениеПриход,
	|	%ПсевдонимТабличнойЧастиТовары%.%ИмяПоляНоменклатураТЧТовары% КАК Номенклатура,
	|	%ПсевдонимТабличнойЧастиТовары%.%ИмяПоляХарактеристикаТЧТовары% КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	%ПсевдонимТабличнойЧастиТовары%.Количество КАК Количество
	|%СозданиеВременнойТаблицы%
	|ИЗ
	|	Документ.%ИмяДокумента%%ИмяТабличнойЧастиТовары% КАК %ПсевдонимТабличнойЧастиТовары%
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.%ИмяДокумента% КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = %ПсевдонимТабличнойЧастиТовары%.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СправочникНоменклатура.Ссылка = %ПсевдонимТабличнойЧастиТовары%.%ИмяПоляНоменклатураТЧТовары%
	|%ДопСоединения_Общие%
	|%ДопСоединения_ТаблицаТовары%
	|
	|ГДЕ
	|	%ПсевдонимТабличнойЧастиТовары%.Ссылка В (&МассивДокументов)
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|%ДопОтборы_Общие%
	|%ДопОтборы_ТаблицаТовары%
	|";
	
	ШаблонОбъединениеЗапросов = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|";
	
	ТекстЗапроса = "";
	
	Для НомерТаблицы = 0 По КоличествоТЧ - 1 Цикл
		
		ОписаниеТЧ = ТабличныеЧастиОснования[НомерТаблицы];
		
		ШаблонТекстаЗапроса = ШаблонЗапросаБезСерий;
		
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяДокумента%", МетаданныеДокументаОснования.Имя);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%СозданиеВременнойТаблицы%",
			?(НомерТаблицы = 0, "ПОМЕСТИТЬ " + РасчетСтатусовОформленияВЕТИС.ИмяВременнойТаблицыДляВыборкиДанныхДокумента(), ""));
		
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ВидДвиженияПриход%",
			Формат(ОписаниеТЧ.ВидДвиженияПриход, "БЛ=Ложь; БИ=Истина"));
		
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяТабличнойЧастиТовары%",
			?(ОписаниеТЧ.ИмяТабличнойЧастиТовары = "", "", ".") + ОписаниеТЧ.ИмяТабличнойЧастиТовары);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ПсевдонимТабличнойЧастиТовары%", "ТаблицаТовары");
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляНоменклатураТЧТовары%",   ОписаниеТЧ.ИмяПоляНоменклатураТЧТовары);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляХарактеристикаТЧТовары%", ОписаниеТЧ.ИмяПоляХарактеристикаТЧТовары);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляНазначениеТЧТовары%", 	  ОписаниеТЧ.ИмяПоляНазначениеТЧТовары);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляСерияТЧТовары%", 		  ОписаниеТЧ.ИмяПоляСерияТЧТовары);
		
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ДопСоединения_Общие%", 		  ОписаниеТЧ.ДопСоединения_Общие);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ДопСоединения_ТаблицаТовары%",   ОписаниеТЧ.ДопСоединения_ТаблицаТовары);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ДопОтборы_Общие%", 			  ОписаниеТЧ.ДопОтборы_Общие);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ДопОтборы_ТаблицаТовары%", 	  ОписаниеТЧ.ДопОтборы_ТаблицаТовары);
		
		Если ОписаниеТЧ.ИмяТабличнойЧастиСерии <> Неопределено Тогда
			
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяТабличнойЧастиСерии%",
				?(ОписаниеТЧ.ИмяТабличнойЧастиСерии = "", "", ".") + ОписаниеТЧ.ИмяТабличнойЧастиСерии);
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ПсевдонимТабличнойЧастиСерии%", "ТаблицаСерии");
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляНоменклатураТЧСерии%",   ОписаниеТЧ.ИмяПоляНоменклатураТЧСерии);
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляХарактеристикаТЧСерии%", ОписаниеТЧ.ИмяПоляХарактеристикаТЧСерии);
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляНазначениеТЧСерии%",     ОписаниеТЧ.ИмяПоляНазначениеТЧСерии);
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ИмяПоляСерияТЧСерии%",   		 ОписаниеТЧ.ИмяПоляСерияТЧСерии);
			
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ДопСоединения_ТаблицаСерии%",   ОписаниеТЧ.ДопСоединения_ТаблицаСерии);
			ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "%ДопОтборы_ТаблицаСерии%", 		 ОписаниеТЧ.ДопОтборы_ТаблицаСерии);
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ?(НомерТаблицы > 0, ШаблонОбъединениеЗапросов, "") + ШаблонТекстаЗапроса;
		
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
