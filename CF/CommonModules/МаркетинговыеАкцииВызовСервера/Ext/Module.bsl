
#Область ПрограммныйИнтерфейс

// Передает управление по поиску серийных номеров
// одноименной функции модуля МаркетинговыеАкцииСервер.
//
// Параметры:
//  СтруктураПараметров - Структура параметров.
//  Текст   - введенный текст
//  СтандартнаяОбработка - Флаг стандартной обработки выбора. Здесь сбрасывается.
//
Функция ОбработатьВведенныйТекстСерийногоНомера(СтруктураПараметров, Текст, СтандартнаяОбработка) Экспорт
	
	Возврат МаркетинговыеАкцииСервер.ОбработатьВведенныйТекстСерийногоНомера(СтруктураПараметров, Текст, СтандартнаяОбработка);
	
КонецФункции

// Передает управление по заполнению приемника по данным подарочного сертификата
// одноименной функции модуля МаркетинговыеАкцииСервер.
//
// Параметры:
//  СерийныйНомер - серийный номер.
//
// Возвращаемое значение
//  Структура
//
Функция ПолучитьДанныеПодарочногоСертификата(СерийныйНомер) Экспорт

	Возврат МаркетинговыеАкцииСервер.ПолучитьДанныеПодарочногоСертификата(СерийныйНомер);

КонецФункции

Процедура НачатьРассылкуНефискальныхДокументов(Параметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОтправкаЭлектронныхЧековПослеПробитияЧека = Константы.ОтправкаЭлектронныхЧековПослеПробитияЧека.Получить();
	
	Для Каждого НефискальныйДокумент Из Параметры.НефискальныеДокументы Цикл
		ИтоговыйТекст = "";
		Для Каждого НефискальнаяСтрока ИЗ НефискальныйДокумент Цикл
			Если НефискальнаяСтрока.Свойство("ШтрихКод") И ЗначениеЗаполнено(НефискальнаяСтрока.ШтрихКод) Тогда
				ИтоговыйТекст = ИтоговыйТекст + НефискальнаяСтрока.ТипШтрихКода + ": " + НефискальнаяСтрока.ШтрихКод + Символы.ПС;
			ИначеЕсли НефискальнаяСтрока.Свойство("Текст") И ЗначениеЗаполнено(НефискальнаяСтрока.Текст) Тогда
				ИтоговыйТекст = ИтоговыйТекст + НефискальнаяСтрока.Текст + Символы.ПС;
			КонецЕсли;
		КонецЦикла;
			
		ИтоговыйТекст = СокрЛП(ИтоговыйТекст);
		
		Если Параметры.Отправляет1СSMS Тогда
			СтрокаЦифровыхСимволов = "0123456789";
			НомерТелефонаТолькоЦифры = "";
			ДлинаНомера = СтрДлина(Параметры.ПокупательНомер);
			Для Индекс = 1 По ДлинаНомера Цикл
				Символ = Сред(Параметры.ПокупательНомер, Индекс, 1);
				Если СтрНайти(СтрокаЦифровыхСимволов, Символ) > 0 Тогда
					НомерТелефонаТолькоЦифры = НомерТелефонаТолькоЦифры + Символ;
				КонецЕсли;
			КонецЦикла;
			Рассылка = Документы.ИнформационнаяРассылка.СоздатьДокумент();
			Рассылка.Заполнить(Неопределено);
			Рассылка.Дата = ТекущаяДатаСеанса();
			Рассылка.УстановитьНовыйНомер();
			Рассылка.ТипРассылки = Перечисления.ТипыИнформационныхРассылок.SMS;
			Рассылка.ДокументОснование = Параметры.ДокументОснование;
			
			НоваяСтрока = Неопределено;
			НоваяСтрока = Рассылка.Адресаты.Добавить();
			НоваяСтрока.НомерТелефона = Параметры.ПокупательНомер;
			НоваяСтрока.НомерДляОтправки = НомерТелефонаТолькоЦифры;
			НоваяСтрока.ТекстСообщения = ИтоговыйТекст;
		
			Если ОтправкаЭлектронныхЧековПослеПробитияЧека Тогда
				МассивНомеров = Новый Массив;
				МассивНомеров.Добавить(НомерТелефонаТолькоЦифры);
				РезультатОтправки = ОтправкаSMS.ОтправитьSMS(МассивНомеров, ИтоговыйТекст, Неопределено, Ложь);
				
				Если РезультатОтправки.ОтправленныеСообщения.Количество() = 0 Тогда
					НоваяСтрока.ИдентификаторСообщения = "";
					НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.НеУдалосьПередатьПровайдеру;
					Рассылка.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.НеДоставлено;
				Иначе	
					Для Каждого ОтправленноеСообщение Из РезультатОтправки.ОтправленныеСообщения Цикл
						НоваяСтрока.ИдентификаторСообщения = ОтправленноеСообщение.ИдентификаторСообщения;
						НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.ОтправляетсяПровайдером;
						Рассылка.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.Доставляется;
					КонецЦикла;
				КонецЕсли;
				Если РезультатОтправки.Свойство("ОписаниеОшибки")
					И ЗначениеЗаполнено(РезультатОтправки.ОписаниеОшибки) Тогда
					НоваяСтрока.ТекстОшибки = РезультатОтправки.ОписаниеОшибки;
					НоваяСтрока.ИдентификаторСообщения = "";
					Если НЕ ЗначениеЗаполнено(НоваяСтрока.СостояниеСообщения) Тогда
						НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.НеУдалосьПередатьПровайдеру;
					КонецЕсли;
					Рассылка.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.НеДоставлено;
				КонецЕсли;
			Иначе
				НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.ОтправляетсяПровайдером;
				
				ПараметрыСообщения = Новый Структура;
				ПараметрыСообщения.Вставить("НомерПолучателя", НомерТелефонаТолькоЦифры);
				ПараметрыСообщения.Вставить("ТекстСообщения" , ИтоговыйТекст);
				ПараметрыСообщенияХранилище = Новый ХранилищеЗначения(ПараметрыСообщения);
				
				ЭлементОбъект = Справочники.ОчередьЭлектронныхЧековКОтправке.СоздатьЭлемент();
				ЭлементОбъект.ТипРассылки  = Перечисления.ТипыРассылкиЭлектронныхЧеков.СообщениеSMS;
				ЭлементОбъект.Наименование = Параметры.ПокупательНомер;
				ЭлементОбъект.ПараметрыСообщения = ПараметрыСообщенияХранилище;
				ЭлементОбъект.ДатаПостановкиВОчередь = ТекущаяДатаСеанса();
				
				ЭлементОбъект.Записать();
			КонецЕсли;
			Рассылка.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		КонецЕсли;
		
		// Потом электронная почта.
		Если Параметры.Отправляет1СEmail Тогда
			
			Если НЕ ПустаяСтрока(ИтоговыйТекст) Тогда
				Рассылка = Документы.ИнформационнаяРассылка.СоздатьДокумент();
				Рассылка.Заполнить(Неопределено);
				Рассылка.Дата = ТекущаяДатаСеанса();
				Рассылка.УстановитьНовыйНомер();
				Тема = НСтр("ru = 'Квитанция к чеку №%1'");
				Тема = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Тема, Параметры.НомерЧека);
				Рассылка.Тема = Тема;
				Рассылка.ТипРассылки = Перечисления.ТипыИнформационныхРассылок.EMail;
				Рассылка.ДокументОснование = Параметры.ДокументОснование;
				
				НоваяСтрока = Рассылка.Адресаты.Добавить();
				НоваяСтрока.АдресEMailДляОтправки = Параметры.ПокупательEmail;
				НоваяСтрока.ТекстСообщения = ИтоговыйТекст;
				
				ПараметрыПисьма = Новый Структура;
				ПараметрыПисьма.Вставить("Кому", НоваяСтрока.АдресEMailДляОтправки);
				ПараметрыПисьма.Вставить("Тема", Тема);
				ПараметрыПисьма.Вставить("Тело", ИтоговыйТекст);
				Если ОтправкаЭлектронныхЧековПослеПробитияЧека Тогда
					Попытка
						УчетнаяЗапись = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
						ИдентификаторСообщения = РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
						НоваяСтрока.ИдентификаторСообщения = ИдентификаторСообщения;
						НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.ОтправленоПровайдером;
						НоваяСтрока.ТекстОшибки = "";
						Рассылка.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.Доставляется;
					Исключение
						НоваяСтрока.ТекстОшибки = ОписаниеОшибки();
						НоваяСтрока.ИдентификаторСообщения = "";
						НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.НеУдалосьПередатьПровайдеру;
						Рассылка.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.НеДоставлено;
					КонецПопытки;
				Иначе
					НоваяСтрока.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.ОтправляетсяПровайдером;
					
					ПараметрыПисьмаХранилище = Новый ХранилищеЗначения(ПараметрыПисьма);
					
					ЭлементОбъект = Справочники.ОчередьЭлектронныхЧековКОтправке.СоздатьЭлемент();
					ЭлементОбъект.ТипРассылки  = Перечисления.ТипыРассылкиЭлектронныхЧеков.ЭлектронноеПисьмо;
					ЭлементОбъект.Наименование = НоваяСтрока.АдресEMailДляОтправки;
					ЭлементОбъект.ПараметрыСообщения = ПараметрыПисьмаХранилище;
					ЭлементОбъект.ДатаПостановкиВОчередь = ТекущаяДатаСеанса();
					
					ЭлементОбъект.Записать();
					
				КонецЕсли;
					
				Рассылка.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти
