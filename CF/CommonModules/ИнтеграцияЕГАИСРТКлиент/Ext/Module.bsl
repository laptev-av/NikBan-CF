
#Область СлужебныйПрограммныйИнтерфейс

Процедура ВвестиАкцизнуюМарку(Форма, СтрокаТовара, ПараметрыСканированияАкцизнойМарки = Неопределено, СтруктураПараметровКлиента = Неопределено) Экспорт
	
	Если ПараметрыСканированияАкцизнойМарки = Неопределено Тогда
		ПараметрыСканированияАкцизнойМарки = ИнтеграцияЕГАИСРТКлиентСервер.ПараметрыСканированияАкцизнойМарки();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Номенклатура"             , СтрокаТовара.Номенклатура);
	ПараметрыФормы.Вставить("ПредставлениеНоменклатуры", Строка(СтрокаТовара.Номенклатура) 
															+ ?(ЗначениеЗаполнено(СтрокаТовара.Характеристика), ", " + Строка(СтрокаТовара.Характеристика),"")
															+ ?(ЗначениеЗаполнено(СтрокаТовара.Упаковка), "[" + Строка(СтрокаТовара.Упаковка) + "]",""));
	ПараметрыФормы.Вставить("ТекущийКлючСвязи"         , СтрокаТовара.КлючСвязи);
	ПараметрыФормы.Вставить("Количество"               , СтрокаТовара.Количество);
	ПараметрыФормы.Вставить("Операция"                 , ПараметрыСканированияАкцизнойМарки.Операция);
	Если ПараметрыСканированияАкцизнойМарки.Свойство("КодыМаркировки") Тогда
		ПараметрыФормы.Вставить("КодыМаркировки", ПараметрыСканированияАкцизнойМарки.КодыМаркировки);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИдентификаторСтроки", СтрокаТовара.ПолучитьИдентификатор());
	ДополнительныеПараметры.Вставить("ТекущийКлючСвязи"   , СтрокаТовара.КлючСвязи);
	ДополнительныеПараметры.Вставить("ТекущееПоле"        , ПараметрыСканированияАкцизнойМарки.ТекущееПоле);
	Если СтруктураПараметровКлиента <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("СтруктураПараметровКлиента", СтруктураПараметровКлиента);
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВводаАкцизнойМарки", Форма, ДополнительныеПараметры);
	РежимБлокировки = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	Если ПараметрыСканированияАкцизнойМарки.Свойство("КодыМаркировки") Тогда
		ИмяФормыМарки = "ОбщаяФорма.ФормаВводаАкцизнойМарки";
	ИначеЕсли СтрокаТовара.Количество > 1 ИЛИ ПараметрыСканированияАкцизнойМарки.ТекущееПоле <> "" ИЛИ ПараметрыСканированияАкцизнойМарки.ОткрытьФормуМножественногоВвода Тогда
		ИмяФормыМарки = "ОбщаяФорма.ФормаВводаАкцизныхМарок";
		ПараметрыФормы.Вставить("АдресВХранилище", ПараметрыСканированияАкцизнойМарки.АдресВХранилище);
		ПараметрыФормы.Вставить("ЗапретитьУдалениеМарки", ПараметрыСканированияАкцизнойМарки.ЗапретитьУдалениеМарки);
	Иначе
		ИмяФормыМарки = "ОбщаяФорма.ФормаВводаАкцизнойМарки";
	КонецЕсли;
	
	ОткрытьФорму(ИмяФормыМарки, ПараметрыФормы, Форма,,,, ОбработчикОповещения, РежимБлокировки);
	
КонецПроцедуры

#Область ПроцедурыСопоставления

// Процедура открывает форму сопоставления контрагентов
//
// Параметры:
//  Форма - Форма в поторой будет выполнен обработчик оповещения
//  МассивАлкогольнойПродукции - Массив элементов справочника "КлассификаторАлкогольнойПродукцииЕГАИС"
//  ТТНВходящаяЕГАИС - Документ "ТТНВходящаяЕГАИС", зададется для документа "Поступление товаров"
//  ИмяПроцедуры - Имя обработчика формы, выполняется при закрытие сопоставления.
//
Процедура СопоставитьКонтрагентов(Форма, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС = Неопределено, ИмяПроцедуры = "") Экспорт
	
	УникальныйИдентификатор = Форма.УникальныйИдентификатор;
	
	АдресВХранилище = ИнтеграцияЕГАИСРТВызовСервера.АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС);
	
	СтруктураПараметры = Новый Структура("АдресВХранилище", АдресВХранилище);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Если ЗначениеЗаполнено(ИмяПроцедуры) Тогда
		ДополнительныеПараметры = Новый Структура;
		ОбработчикОповещения = Новый ОписаниеОповещения(ИмяПроцедуры, Форма, ДополнительныеПараметры);
		ОткрытьФорму("Обработка.СопоставлениеОрганизацийЕГАИСРТ.Форма", СтруктураПараметры, УникальныйИдентификатор,,,, ОбработчикОповещения, Режим);
	Иначе
		ОткрытьФорму("Обработка.СопоставлениеОрганизацийЕГАИСРТ.Форма", СтруктураПараметры, УникальныйИдентификатор,,,,, Режим);
	КонецЕсли;
	
КонецПроцедуры

// Процедура открывает форму сопоставления контрагентов
//
// Параметры:
//  Форма - Форма в поторой будет выполнен обработчик оповещения
//  МассивАлкогольнойПродукции - Массив элементов справочника "КлассификаторАлкогольнойПродукцииЕГАИС"
//  МассивИдентификаторовСтрок - Массив идентификаторов строк
//  ИмяПроцедуры - Имя обработчика формы, выполняется при закрытие сопоставления.
//
Процедура СопоставитьНоменклатуру(Форма, МассивАлкогольнойПродукции, МассивИдентификаторовСтрок, ИмяПроцедуры) Экспорт
	
	УникальныйИдентификатор = Форма.УникальныйИдентификатор;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("АлкогольнаяПродукция", МассивАлкогольнойПродукции);
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(СтруктураДанных, УникальныйИдентификатор);
	СтруктураПараметры = Новый Структура("АдресВХранилище", АдресВХранилище);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("АлкогольнаяПродукция", МассивИдентификаторовСтрок);
	
	ОбработчикОповещения = Новый ОписаниеОповещения(ИмяПроцедуры, Форма, ДополнительныеПараметры);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму("Обработка.СопоставлениеНоменклатурыЕГАИСРТ.Форма", СтруктураПараметры, УникальныйИдентификатор,,,, ОбработчикОповещения, Режим);
	
КонецПроцедуры

// Процедура открывает форму сопоставления контрагентов
//
// Параметры:
//  Форма - Форма в поторой будет выполнен обработчик оповещения
//  МассивАлкогольнойПродукции - Массив элементов справочника "КлассификаторАлкогольнойПродукцииЕГАИС"
//  ТТНВходящаяЕГАИС - Документ "ТТНВходящаяЕГАИС", зададется для документа "Поступление товаров"
//  ИмяПроцедуры - Имя обработчика формы, выполняется при закрытие сопоставления.
//
Процедура СопоставитьОрганизацииЕГАИС(Форма, МассивНоменклатуры) Экспорт
	
	УникальныйИдентификатор = Форма.УникальныйИдентификатор;
	
	АдресВХранилище = ИнтеграцияЕГАИСРТВызовСервера.АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры);
	
	СтруктураПараметры = Новый Структура("АдресВХранилище", АдресВХранилище);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("Обработка.СопоставлениеОрганизацийЕГАИСРТ.Форма", СтруктураПараметры, УникальныйИдентификатор,,,,, Режим);
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Открывает форму печати этикеток и ценников из входящей ТТН.
//
// Параметры:
//  ТТНСсылка - ДокументСсылка.ТТНВходящаяЕГАИС - накладная ЕГАИС, из которой открывается форма,
//  Параметры - Структура - параметры печати этикеток.
//
Процедура ПечатьЭтикетокСправок2ЕГАИС(ТТНСсылка, Параметры) Экспорт
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ОбъектыПечати", Параметры.МассивСсылок);
	ПараметрыПечати.Вставить("ДополнительныеПараметры", Параметры.ОписаниеКоманды.ДополнительныеПараметры);
	
	УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиЦенниковИЭтикеток(ПараметрыПечати);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаЭлементовЕГАИСвТЧ

Процедура УстановитьВидимостьКолонкиАкцизныхМарок(КолонкаСтатусУказанияАкцизныхМарок, УчетАлкогольнойПродукции) Экспорт
	
	КолонкаСтатусУказанияАкцизныхМарок.Видимость = УчетАлкогольнойПродукции;
	
КонецПроцедуры

Процедура ЗаполнитьКоличествоАкцизныхМарок(РеквизитОбъектаТовары, РеквизитОбъектаАкцизныеМарки) Экспорт
	
	Для Каждого СтрокаТаблицы Из РеквизитОбъектаТовары Цикл
		
		ЗаполнитьКоличествоАкцизныхМарокВСтроке(СтрокаТаблицы, РеквизитОбъектаАкцизныеМарки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКоличествоАкцизныхМарокВСтроке(СтрокаТаблицыТовары, РеквизитОбъектаАкцизныеМарки) Экспорт
	
	Если СтрокаТаблицыТовары = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПоискаАМ = Новый Структура("КлючСвязи");
	СтруктураПоискаАМ.КлючСвязи = СтрокаТаблицыТовары.КлючСвязи;
	СтрокиМарок = РеквизитОбъектаАкцизныеМарки.НайтиСтроки(СтруктураПоискаАМ);
	СтрокаТаблицыТовары.КоличествоАкцизныхМарок = СтрокиМарок.Количество();
	
КонецПроцедуры

Процедура УстановитьЗначениеСтатусАкцизныхМарок(РеквизитОбъектаТовары) Экспорт
	
	//Объект.Товары
	Для Каждого СтрокаТаблицы Из РеквизитОбъектаТовары Цикл
		
		УстановитьЗначениеСтатусАкцизныхМарокВСтроке(СтрокаТаблицы)
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЗначениеСтатусАкцизныхМарокВСтроке(СтрокаТаблицыТовары) Экспорт
	
	Если СтрокаТаблицыТовары <> Неопределено Тогда
		Если СтрокаТаблицыТовары.НеобходимостьВводаАкцизнойМарки Тогда
			
			Если СтрокаТаблицыТовары.Количество = СтрокаТаблицыТовары.КоличествоАкцизныхМарок
				и не СтрокаТаблицыТовары.Количество = 0 Тогда
				СтрокаТаблицыТовары.СтатусУказанияАкцизныхМарок = 1;
				
			Иначе
				СтрокаТаблицыТовары.СтатусУказанияАкцизныхМарок = 2;
				
			КонецЕсли;
			
		Иначе
			СтрокаТаблицыТовары.СтатусУказанияАкцизныхМарок = 0;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

Процедура ОповещениеОткрытьФормуВыбораДанныхПоиска(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	ИсходныеДанные = ДополнительныеПараметры.СтруктураПараметровКлиента;
	ИсходныеДанные.Вставить("ДанныеПоискаПоШтрихкоду", Результат);
	
	РезультатОбработкиШтрихкода = Новый Структура;
	РезультатОбработкиШтрихкода.Вставить("ТребуетсяОбработкаШтрихкода", Истина);
	РезультатОбработкиШтрихкода.Вставить("ИсходныеДанные", ИсходныеДанные);
	
	Форма.ПослеОбработкиШтрихкодов(РезультатОбработкиШтрихкода, ИсходныеДанные.КэшированныеЗначения);
	
КонецПроцедуры

Процедура ПриОтменеОперации(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	ИнтеграцияЕГАИСРТВызовСервера.ОтменитьСтатусыУпаковок(ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

Процедура СоздатьНоменклатуру_Завершение(ПараметрыСозданияНоменклатуры, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПараметрыСозданияНоменклатуры) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	АдресПараметровСозданияНоменклатуры = ПоместитьВоВременноеХранилище(ПараметрыСозданияНоменклатуры, ПараметрыСозданияНоменклатуры.УникальныйИдентификаторФормыВладелеца);
	
	СозданнаяПродукция = ИнтеграцияЕГАИСРТВызовСервера.СоздатьНоменклатуру(АдресПараметровСозданияНоменклатуры);
	Если ПараметрыСозданияНоменклатуры <> Неопределено
		И ПараметрыСозданияНоменклатуры.Свойство("МассивЭлементов")
		И ПараметрыСозданияНоменклатуры.МассивЭлементов <> Неопределено
		И ПараметрыСозданияНоменклатуры.МассивЭлементов.Количество() > 0 Тогда
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Ссылка", ПараметрыСозданияНоменклатуры.МассивЭлементов[0]);
		Оповестить("ИзменениеСопоставленияАлкогольнойПродукцииЕГАИС", ПараметрыОповещения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСозданияНоменклатуры(ФормаВладелец, Реквизиты) Экспорт
	
	Если Реквизиты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	АлкогольнаяПродукцияЕГАИС = Новый Массив;
	АлкогольнаяПродукцияЕГАИС.Добавить(Реквизиты.АлкогольнаяПродукцияЕГАИС);
	
	АдресСпискаАлкогольнойПродукции = ПоместитьВоВременноеХранилище(АлкогольнаяПродукцияЕГАИС, ФормаВладелец.УникальныйИдентификатор);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресСпискаАлкогольнойПродукции", АдресСпискаАлкогольнойПродукции);
	ПараметрыФормы.Вставить("УникальныйИдентификаторФормыВладелеца", ФормаВладелец.УникальныйИдентификатор);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("СоздатьНоменклатуру_Завершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.СопоставлениеНоменклатурыЕГАИСРТ.Форма.ФормаСозданияНоменклатуры", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеПриЗавершении);
	
КонецПроцедуры


#КонецОбласти
