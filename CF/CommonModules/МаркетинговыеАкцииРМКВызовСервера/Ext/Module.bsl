
#Область ПрограммныйИнтерфейс

// Процедура выполняет аутентификацию пользователя
// по владельцу информационной карты.
Функция АвторизацияПользователяПоВладельцуКарты(ВладелецКарты, ТекущийМагазин) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(ВладелецКарты) = Тип("СправочникСсылка.Пользователи") Тогда
		
		Если ЗначениеЗаполнено(ВладелецКарты.ИдентификаторПользователяИБ)  Тогда
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ВладелецКарты.ИдентификаторПользователяИБ);
		Иначе
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ВладелецКарты.Наименование);
		КонецЕсли;
		
		Если ПользовательИБ = Неопределено Тогда
		
			Возврат Неопределено;
		
		КонецЕсли;
		
		ПользовательКарты = ВладелецКарты;
		
	ИначеЕсли ТипЗнч(ВладелецКарты) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		ПользовательКарты = ОпределитьПользователяПоФизическомуЛицу(ВладелецКарты, ТекущийМагазин);
		Если Не ЗначениеЗаполнено(ПользовательКарты) Тогда
			Возврат Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПользовательКарты;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает список пользователей, связанных
// с пользователями текущей информационной базы.
Функция СписокПользователейИнформационнойБазы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивПользователейИБ = Новый Массив;
	МассивПользователейБазы = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для Каждого ПользовательИБ Из МассивПользователейБазы Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ 
		|	Пользователи.Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Наименование = &ИдентификаторНаименованияПользователяИБ
		|	ИЛИ Пользователи.ИдентификаторПользователяИБ = &ИдентификаторПользователяИБ";
		
		Запрос.УстановитьПараметр("ИдентификаторПользователяИБ", ПользовательИБ.УникальныйИдентификатор);
		Запрос.УстановитьПараметр("ИдентификаторНаименованияПользователяИБ", ПользовательИБ.Имя);
		
		Результат = Запрос.Выполнить();
		ТаблицаЗапроса = Результат.Выгрузить();
		
		Для каждого СтрокаЗапроса  Из ТаблицаЗапроса Цикл
			МассивПользователейИБ.Добавить(СтрокаЗапроса.Ссылка);
		КонецЦикла; 
		
	КонецЦикла;
	
	Возврат МассивПользователейИБ;
	
КонецФункции

// Процедура определяет пользователя по переданному
// физическому лицу.
//
Функция ОпределитьПользователяПоФизическомуЛицу(ФизЛицо, ТекущийМагазин)
	
	Результат = Справочники.Пользователи.ПустаяСсылка();
	
	МассивПользователейИБ = СписокПользователейИнформационнойБазы();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Пользователи.Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ФизическоеЛицо = &ФизЛицо
	|	И Пользователи.ФизическоеЛицо.ПометкаУдаления = ЛОЖЬ
	|	И Пользователи.Ссылка В(&МассивПользователейИБ)";
	
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("МассивПользователейИБ", МассивПользователейИБ);
	Запрос.УстановитьПараметр("Магазин", ?(ЗначениеЗаполнено(ТекущийМагазин), ТекущийМагазин, ПараметрыСеанса.ТекущийМагазин));
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Если Выборка.Количество() >= 1 Тогда
		
		Результат = Выборка[0].Ссылка;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
