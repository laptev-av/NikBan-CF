
// Функция возвращает список документов продажи, в ТЧ Товары которых
// присутствует передаваемая как параметр Номенклатура.
//
// Параметры:
//  СтруктураПараметров - структура.
//
// Возвращаемое значение:
//  СписокЗначений - таблица документов и реквизитов.
//
Функция ПолучитьСписокДокументовСодержащихНоменклатуру(СтруктураПараметров) Экспорт
	
	Результат = Новый СписокЗначений;
	ЗаданРеквизитЦенаВключаетНДС = Ложь;
	ПреварительныйМассивДокументов = Новый Массив;
	
	Если СтруктураПараметров.Свойство("ЦенаВключаетНДС") Тогда
		
		ЗаданРеквизитЦенаВключаетНДС = Истина;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ОтчетОРозничныхПродажах.Ссылка
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|ГДЕ
		|	ОтчетОРозничныхПродажах.Магазин = &Магазин
		|	И ОтчетОРозничныхПродажах.Дата МЕЖДУ &ДатаС И &ДатаПо
		|	И ОтчетОРозничныхПродажах.ЦенаВключаетНДС = &ЦенаВключаетНДС
		|	И ОтчетОРозничныхПродажах.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваров.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваров КАК РеализацияТоваров
		|ГДЕ
		|	РеализацияТоваров.Магазин = &Магазин
		|	И РеализацияТоваров.Дата МЕЖДУ &ДатаС И &ДатаПо
		|	И РеализацияТоваров.Проведен
		|	И РеализацияТоваров.ЦенаВключаетНДС = &ЦенаВключаетНДС";
		
		Запрос.УстановитьПараметр("ДатаС", СтруктураПараметров.ДатаС);
		Запрос.УстановитьПараметр("ДатаПо", ТекущаяДатаСеанса() + 24*60*60); // Смена иногда переходит на новые сутки.
		Запрос.УстановитьПараметр("Магазин", СтруктураПараметров.Магазин);
		Запрос.УстановитьПараметр("ЦенаВключаетНДС", СтруктураПараметров.ЦенаВключаетНДС);
		
		ПредварительныйРезультат = Запрос.Выполнить();
		ПреварительныйМассивДокументов = ПредварительныйРезультат.Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПродажиОбороты.ДокументПродажи КАК ДокументПродажи
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&ДатаС,
	|			&ДатаПо,
	|			,
	|			НЕ ДокументПродажи ССЫЛКА Документ.ЧекККМ
	|				И Номенклатура = &Номенклатура
	|				И Характеристика = &Характеристика
	|				И Магазин = &Магазин
	|				И (НЕ &ЗаданРеквизитЦенаВключаетНДС
	|					ИЛИ ДокументПродажи В (&ПреварительныйМассивДокументов))) КАК ПродажиОбороты
	|ГДЕ
	|	ПродажиОбороты.КоличествоОборот > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ДокументПродажи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументПродажи
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Номенклатура", СтруктураПараметров.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", СтруктураПараметров.Характеристика);
	Запрос.УстановитьПараметр("Магазин", СтруктураПараметров.Магазин);
	Запрос.УстановитьПараметр("ДатаС", СтруктураПараметров.ДатаС);
	Запрос.УстановитьПараметр("ДатаПо", ТекущаяДатаСеанса() + 24*60*60); // Смена иногда переходит на новые сутки.
	Запрос.УстановитьПараметр("ДатаС", СтруктураПараметров.ДатаС);
	Запрос.УстановитьПараметр("ПреварительныйМассивДокументов", ПреварительныйМассивДокументов);
	Запрос.УстановитьПараметр("ЗаданРеквизитЦенаВключаетНДС"  , ЗаданРеквизитЦенаВключаетНДС);
	
	МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументПродажи");
	
	Результат.ЗагрузитьЗначения(МассивДокументов);
	
	Возврат Результат;

КонецФункции

// Функция получения документа-основания на оформление излишков и недостач товаров.
//
Функция ПолучитьОснованиеОформленияИзлишковНедостачТоваров(ДокументСсылка) Экспорт 
	
	Основание = Неопределено;
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриказНаПроведениеИнвентаризацииТоваров") Тогда
		
		Основание = ДокументСсылка;
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОрдерНаОтражениеРезультатовПересчетовТоваров") Тогда 
		
		Основание = ДокументСсылка.ДокументОснование;
		
	Иначе
		
		Основание = ДокументСсылка;
		
	КонецЕсли;
	
	Возврат Основание;
	
	
КонецФункции

