////////////////////////////////////////////////////////////////////////////////
// Модуль "ЦенообразованиеПереопределяемый", содержит процедуры и функции для 
// настройки параметров и определения доступной функциональности подсистемы "Ценообразование".
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОПРЕДЕЛЕНИЯ ИСПОЛЬЗОВАНИЯ ФУНКЦИОНАЛА

// Функция определяет наличие валютного учета в конфигурации.
// Возвращаемое значение:
// Булево - результат анализа
Функция ИспользуютсяВалюты() Экспорт
	
	Возврат Ложь;
	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОПРЕДЕЛЕНИЯ ПАРАМЕТРОВ ПОДСИСТЕМЫ 	

// Функция возвращает значение валюты розничных продаж, валюты регламентированного учета.
// Возвращаемое значение - СправочникСсылка.Валюты, Неопределено.
Функция ПолучитьВалютуРегламентированногоУчета() Экспорт
	
	Возврат Неопределено;
	
КонецФункции	

// Функция возвращает сформированную структуру данных о текущем объекте ценообразования.
//
// Возвращаемое значение - Структура.
//	Ключи:	 ИмяМетаданныхОбъекта - Строка. 
//  	     Ссылка - пустая ссылка на справочник - объект ценообразования.
//      	 ПредставлениеОбъекта - строковое представление объекта метаданных.
Функция ИспользуемыйОбъектЦенообразования()   Экспорт
	
	СтруктураОбъекта = Новый Структура;
	СтруктураОбъекта.Вставить("ИмяМетаданныхОбъекта","Магазины");
	СтруктураОбъекта.Вставить("Ссылка", Справочники.Магазины.ПустаяСсылка());
	СтруктураОбъекта.Вставить("ПредставлениеОбъекта", "Магазин");
	
	Возврат СтруктураОбъекта;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕРЕОПРЕДЕЛЯМЫХ ОБРАБОТЧИКОВ  

// Процедура - обработчик события "Обработка заполнения" документа "Установка цен номенклатуры".
// Параметры: 
//	Объект - ДокументОбъект.УстановкаЦенНоменклатуры
//	ДанныеЗаполнения - Структура, ДокументСсылка
//	СтандартнаяОбработка - Булево, Ложь
Процедура ОбработкаЗаполненияУстановкиЦенНоменклатуры(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Ссылка") Тогда
		
			Если ТипЗнч(ДанныеЗаполнения.Ссылка) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
				
				ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения.Ссылка);
				
				Объект.ДокументОснование = ДанныеЗаполнения.Ссылка;
				
				Если ДанныеЗаполнения.Действие = "УстановкаЦенПоИзмененнымЦенам" Тогда
					
					Запрос = Новый Запрос;
					Запрос.Текст = "
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	МАКСИМУМ(ПоступлениеТоваровТовары.НомерСтроки) КАК НомерСтрокиОснования,
					|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
					|	ПоступлениеТоваровТовары.Характеристика КАК Характеристика,
					|	МАКСИМУМ(ПоступлениеТоваровТовары.Цена) КАК Цена,
					|	МАКСИМУМ(ПоступлениеТоваровТовары.Упаковка) КАК Упаковка
					|ПОМЕСТИТЬ ВТ_Товары
					|ИЗ
					|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
					|ГДЕ
					|	ПоступлениеТоваровТовары.Ссылка = &Ссылка
					|
					|СГРУППИРОВАТЬ ПО
					|	ПоступлениеТоваровТовары.Номенклатура,
					|	ПоступлениеТоваровТовары.Характеристика
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Товары.НомерСтрокиОснования КАК НомерСтрокиОснования,
					|	Товары.Номенклатура КАК Номенклатура,
					|	Товары.Характеристика КАК Характеристика,
					|	МАКСИМУМ(ПрошлыеЗакупки.ДатаПрошлойЗакупки) КАК ДатаПрошлойЗакупки
					|ПОМЕСТИТЬ ВТ_ТаблицаСтрокЗакупки
					|ИЗ
					|	ВТ_Товары КАК Товары
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					|			ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
					|			ПоступлениеТоваровТовары.Характеристика КАК Характеристика,
					|			ПоступлениеТоваровТовары.Ссылка.Дата КАК ДатаПрошлойЗакупки
					|		ИЗ
					|			Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
					|		ГДЕ
					|			ПоступлениеТоваровТовары.Ссылка.Дата <= &Период
					|			И ПоступлениеТоваровТовары.Ссылка <> &Ссылка
					|			И ПоступлениеТоваровТовары.Ссылка.Проведен
					|			И ПоступлениеТоваровТовары.Ссылка.Контрагент = &Контрагент
					|			И ПоступлениеТоваровТовары.Ссылка.Магазин = &Магазин) КАК ПрошлыеЗакупки
					|		ПО Товары.Номенклатура = ПрошлыеЗакупки.Номенклатура
					|			И Товары.Характеристика = ПрошлыеЗакупки.Характеристика
					|
					|СГРУППИРОВАТЬ ПО
					|	Товары.НомерСтрокиОснования,
					|	Товары.Номенклатура,
					|	Товары.Характеристика
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ТаблицаСтрокЗакупкиСДатами.НомерСтрокиОснования КАК НомерСтрокиОснования,
					|	ТаблицаСтрокЗакупкиСДатами.Номенклатура КАК Номенклатура,
					|	ТаблицаСтрокЗакупкиСДатами.Характеристика КАК Характеристика,
					|	ТаблицаСтрокЗакупкиСЦенами.Цена КАК Цена,
					|	ТаблицаСтрокЗакупкиСЦенами.Упаковка КАК Упаковка
					|ПОМЕСТИТЬ ВТ_ПрошлыеЗакупки
					|ИЗ
					|	ВТ_ТаблицаСтрокЗакупки КАК ТаблицаСтрокЗакупкиСДатами
					|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					|			ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
					|			ПоступлениеТоваровТовары.Характеристика КАК Характеристика,
					|			ПоступлениеТоваровТовары.Ссылка.Дата КАК ДатаПрошлойЗакупки,
					|			ПоступлениеТоваровТовары.Цена КАК Цена,
					|			ПоступлениеТоваровТовары.Упаковка КАК Упаковка
					|		ИЗ
					|			Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
					|		ГДЕ
					|			ПоступлениеТоваровТовары.Ссылка.Дата < &Период
					|			И ПоступлениеТоваровТовары.Ссылка <> &Ссылка
					|			И ПоступлениеТоваровТовары.Ссылка.Проведен
					|			И ПоступлениеТоваровТовары.Ссылка.Контрагент = &Контрагент
					|			И ПоступлениеТоваровТовары.Ссылка.Магазин = &Магазин) КАК ТаблицаСтрокЗакупкиСЦенами
					|		ПО ТаблицаСтрокЗакупкиСДатами.Номенклатура = ТаблицаСтрокЗакупкиСЦенами.Номенклатура
					|			И ТаблицаСтрокЗакупкиСДатами.Характеристика = ТаблицаСтрокЗакупкиСЦенами.Характеристика
					|			И ТаблицаСтрокЗакупкиСДатами.ДатаПрошлойЗакупки = ТаблицаСтрокЗакупкиСЦенами.ДатаПрошлойЗакупки
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ВидыЦен.Ссылка КАК ВидЦены
					|ПОМЕСТИТЬ ВидыЦенДляУстановкиЦенПриПоступлении
					|ИЗ
					|	Справочник.ВидыЦен КАК ВидыЦен
					|ГДЕ
					|	НЕ ВидыЦен.ПометкаУдаления
					|	И ВидыЦен.СпособЗаданияЦены = ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияЦен.ЗаполнятьПоДаннымИБПриПоступлении)
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ВидыЦенВлияющиеВидыЦен.Ссылка КАК ВидЦены
					|ПОМЕСТИТЬ ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении
					|ИЗ
					|	Справочник.ВидыЦен.ВлияющиеВидыЦен КАК ВидыЦенВлияющиеВидыЦен
					|ГДЕ
					|	ВидыЦенВлияющиеВидыЦен.ВлияющийВидЦен В
					|			(ВЫБРАТЬ
					|				ВидыЦенДляУстановкиЦенПриПоступлении.ВидЦены
					|			ИЗ
					|				ВидыЦенДляУстановкиЦенПриПоступлении КАК ВидыЦенДляУстановкиЦенПриПоступлении)
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВидыЦенДляУстановкиЦенПриПоступлении.ВидЦены
					|ПОМЕСТИТЬ ВидыЦенДляУстановкиЦен
					|ИЗ
					|	ВидыЦенДляУстановкиЦенПриПоступлении КАК ВидыЦенДляУстановкиЦенПриПоступлении
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении.ВидЦены
					|ИЗ
					|	ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении КАК ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Товары.НомерСтрокиОснования КАК НомерСтрокиОснования,
					|	Товары.Номенклатура КАК Номенклатура,
					|	Товары.Характеристика КАК Характеристика,
					|	Товары.Упаковка КАК Упаковка,
					|	ВидыЦенДляУстановкиЦен.ВидЦены КАК ВидЦены
					|ПОМЕСТИТЬ ВТ_ТаблицаУстановкиЦен
					|ИЗ
					|	ВидыЦенДляУстановкиЦен КАК ВидыЦенДляУстановкиЦен
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК Товары
					|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					|				ПрошлыеЗакупки.Номенклатура КАК Номенклатура,
					|				ПрошлыеЗакупки.Характеристика КАК Характеристика,
					|				ПрошлыеЗакупки.Цена КАК Цена,
					|				ПрошлыеЗакупки.Упаковка КАК Упаковка
					|			ИЗ
					|				ВТ_ПрошлыеЗакупки КАК ПрошлыеЗакупки) КАК ЦеныПрошлыхЗакупок
					|			ПО Товары.Номенклатура = ЦеныПрошлыхЗакупок.Номенклатура
					|				И Товары.Характеристика = ЦеныПрошлыхЗакупок.Характеристика
					|		ПО (ИСТИНА)
					|ГДЕ
					|	ЕСТЬNULL(ЦеныПрошлыхЗакупок.Цена, 0) / ЕСТЬNULL(ЦеныПрошлыхЗакупок.Упаковка.Коэффициент, 1) <> Товары.Цена / ВЫБОР
					|			КОГДА Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
					|				ТОГДА Товары.Упаковка.Коэффициент
					|			ИНАЧЕ 1
					|		КОНЕЦ
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					// 7
					|ВЫБРАТЬ
					|	ВТ_ТаблицаУстановкиЦен.НомерСтрокиОснования КАК НомерСтрокиОснования,
					|	ВТ_ТаблицаУстановкиЦен.Номенклатура КАК Номенклатура,
					|	ВТ_ТаблицаУстановкиЦен.Характеристика КАК Характеристика,
					|	ВТ_ТаблицаУстановкиЦен.Упаковка,
					|	ВТ_ТаблицаУстановкиЦен.ВидЦены
					|ИЗ
					|	ВТ_ТаблицаУстановкиЦен КАК ВТ_ТаблицаУстановкиЦен
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
					|		ПО (СправочникНоменклатура.Ссылка = ВТ_ТаблицаУстановкиЦен.Номенклатура)
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
					|		ПО (ВидыНоменклатуры.Ссылка = СправочникНоменклатура.ВидНоменклатуры)
					|ГДЕ
					|	(ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
					|			ИЛИ ВТ_ТаблицаУстановкиЦен.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ВТ_ТаблицаУстановкиЦен.НомерСтрокиОснования,
					|	ВТ_ТаблицаУстановкиЦен.Номенклатура,
					|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
					|	ВТ_ТаблицаУстановкиЦен.Упаковка,
					|	ВТ_ТаблицаУстановкиЦен.ВидЦены
					|ИЗ
					|	ВТ_ТаблицаУстановкиЦен КАК ВТ_ТаблицаУстановкиЦен
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
					|		ПО (СправочникНоменклатура.Ссылка = ВТ_ТаблицаУстановкиЦен.Номенклатура)
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
					|		ПО (ВидыНоменклатуры.Ссылка = СправочникНоменклатура.ВидНоменклатуры)
					|ГДЕ
					|	ВидыНоменклатуры.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
					|
					|УПОРЯДОЧИТЬ ПО
					|	НомерСтрокиОснования,
					|	Номенклатура,
					|	Характеристика
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВидыЦенДляУстановкиЦен.ВидЦены КАК ВидЦены
					|ИЗ
					|	ВидыЦенДляУстановкиЦен КАК ВидыЦенДляУстановкиЦен";
					
					РеквизитыПоступления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения.Ссылка, "Дата, Контрагент, Магазин");
					
					Запрос.УстановитьПараметр("Ссылка", 	ДанныеЗаполнения.Ссылка);
					Запрос.УстановитьПараметр("Период", 	РеквизитыПоступления.Дата);
					Запрос.УстановитьПараметр("Контрагент", РеквизитыПоступления.Контрагент);
					Запрос.УстановитьПараметр("Магазин", 	РеквизитыПоступления.Магазин);
					
					РезультатыЗапроса = Запрос.ВыполнитьПакет();
					ТаблицаТоваров    = РезультатыЗапроса[7].Выгрузить();
					ТаблицаВидовЦен   = РезультатыЗапроса[8].Выгрузить();
					
					Если ТаблицаВидовЦен.Количество() = 0 Тогда
						
						ТекстОшибки = НСтр("ru='Нет доступных видов цен для установки цен номенклатуры.
						|Оформление документа не требуется. 
						|Заполнение документа не выполнено.'");
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения.Ссылка);
						
						ВызватьИсключение ТекстОшибки;
					
					ИначеЕсли ТаблицаТоваров.Количество() = 0 Тогда
						
						ТекстОшибки = НСтр("ru='По документу %1 цены закупки не изменились.
						|Оформление документа не требуется. 
						|Заполнение документа не выполнено.'");
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения.Ссылка);
						
						ВызватьИсключение ТекстОшибки;
						
					Иначе
						
						Объект.ВидыЦен.Загрузить(ТаблицаВидовЦен);
						Объект.Товары.Загрузить(ТаблицаТоваров);
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ДанныеЗаполнения.Свойство("НовыйДокументУстановкиЦенСтруктура") Тогда
			СтруктураИсточник = ДанныеЗаполнения.НовыйДокументУстановкиЦенСтруктура;
			
			Объект.Дата = СтруктураИсточник.Дата;
			Объект.ДокументОснование = СтруктураИсточник.ДокументОснование;
			Объект.Комментарий = СтруктураИсточник.Комментарий;
			Объект.Номер = СтруктураИсточник.Номер;
			Объект.Ответственный = СтруктураИсточник.Ответственный;
			Объект.Согласован = СтруктураИсточник.Согласован;
			
			Объект.ВидыЦен.Загрузить(СтруктураИсточник.ВидыЦен.Выгрузить());
			Объект.Товары.Загрузить(СтруктураИсточник.Товары.Выгрузить());
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИзменениеАссортимента") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		АссортиментСервер.ПроверитьНеобходимостьУстановкиЦенНаОсновании(ДанныеЗаполнения);
		
		Объект.ДокументОснование = ДанныеЗаполнения;
		
		РезультатПакетаВидыЦенИТовары = АссортиментСервер.РезультатПакетаВидыЦенИТоварыДляУстановкиПоАссортименту(ДанныеЗаполнения, Объект);
		ТаблицаТоваров    = РезультатПакетаВидыЦенИТовары[1].Выгрузить();
		ТаблицаВидовЦен   = РезультатПакетаВидыЦенИТовары[2].Выгрузить();
		
		Если ТаблицаВидовЦен.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru='В документе %1
			|нет доступных видов цен для установки цен номенклатуры.
			|Оформление документа не требуется. 
			|Заполнение документа не выполнено.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
			
			ВызватьИсключение ТекстОшибки;
			
		Иначе	
			
			Объект.ВидыЦен.Загрузить(ТаблицаВидовЦен);
			Объект.Товары.Загрузить(ТаблицаТоваров);
			
		КонецЕсли;
			
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров")
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров")
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		Объект.ДокументОснование = ДанныеЗаполнения;
		ИмяМетаданных = ДанныеЗаполнения.Метаданные().Имя;
		
		Запрос = Новый Запрос;
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВидыЦен.Ссылка КАК ВидЦены
		|ПОМЕСТИТЬ ВидыЦенДляУстановкиЦенПриПоступлении
		|ИЗ
		|	Справочник.ВидыЦен КАК ВидыЦен
		|ГДЕ
		|	НЕ ВидыЦен.ПометкаУдаления
		|	И ВидыЦен.СпособЗаданияЦены = ЗНАЧЕНИЕ(Перечисление.СпособыЗаданияЦен.ЗаполнятьПоДаннымИБПриПоступлении)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВидыЦенВлияющиеВидыЦен.Ссылка КАК ВидЦены
		|ПОМЕСТИТЬ ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении
		|ИЗ
		|	Справочник.ВидыЦен.ВлияющиеВидыЦен КАК ВидыЦенВлияющиеВидыЦен
		|ГДЕ
		|	ВидыЦенВлияющиеВидыЦен.ВлияющийВидЦен В
		|			(ВЫБРАТЬ
		|				ВидыЦенДляУстановкиЦенПриПоступлении.ВидЦены
		|			ИЗ
		|				ВидыЦенДляУстановкиЦенПриПоступлении КАК ВидыЦенДляУстановкиЦенПриПоступлении)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЦенДляУстановкиЦенПриПоступлении.ВидЦены
		|ПОМЕСТИТЬ ВидыЦенДляУстановкиЦен
		|ИЗ
		|	ВидыЦенДляУстановкиЦенПриПоступлении КАК ВидыЦенДляУстановкиЦенПриПоступлении
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении.ВидЦены
		|ИЗ
		|	ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении КАК ЗависимыеВидыЦенДляУстановкиЦенПриПоступлении
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтрокиОснования,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	МАКСИМУМ(Товары.Упаковка) КАК Упаковка
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.%ИмяМетаданных%.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	ТоварыОбъекта.Номенклатура КАК Номенклатура,
		|	ТоварыОбъекта.Характеристика КАК Характеристика,
		|	ТоварыОбъекта.Упаковка КАК Упаковка,
		|	ТоварыОбъекта.ВидЦены КАК ВидЦены,
		|	ТоварыОбъекта.Цена КАК Цена
		|ПОМЕСТИТЬ ТоварыОбъекта
		|ИЗ &ТоварыОбъекта КАК ТоварыОбъекта
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтрокиОснования КАК НомерСтрокиОснования,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка КАК Упаковка,
		|	ВидыЦенДляУстановкиЦен.ВидЦены КАК ВидЦены,
		|	ЕСТЬNULL(ТоварыОбъекта.Цена, 0) КАК Цена
		|ИЗ
		|	ВидыЦенДляУстановкиЦен КАК ВидыЦенДляУстановкиЦен
		|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыОбъекта КАК ТоварыОбъекта
		|		ПО Товары.Номенклатура = ТоварыОбъекта.Номенклатура
		|			И Товары.Характеристика = ТоварыОбъекта.Характеристика
		|			И Товары.Упаковка = ТоварыОбъекта.Упаковка
		|			И ВидыЦенДляУстановкиЦен.ВидЦены = ТоварыОбъекта.ВидЦены
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товары.НомерСтрокиОснования,
		|	Товары.Номенклатура,
		|	Товары.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЦенДляУстановкиЦен.ВидЦены КАК ВидЦены
		|ИЗ
		|	ВидыЦенДляУстановкиЦен КАК ВидыЦенДляУстановкиЦен";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяМетаданных%", ИмяМетаданных);
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("ТоварыОбъекта", Объект.Товары.Выгрузить());
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		ТаблицаТоваров    = РезультатыЗапроса[5].Выгрузить();
		ТаблицаВидовЦен   = РезультатыЗапроса[6].Выгрузить();
		
		Если ТаблицаВидовЦен.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Нет доступных видов цен для установки цен номенклатуры.
			|Оформление документа не требуется. 
			|Заполнение документа не выполнено.'");
			
			ВызватьИсключение ТекстОшибки;
			
		Иначе	
			
			Объект.ВидыЦен.Загрузить(ТаблицаВидовЦен);
			Объект.Товары.Загрузить(ТаблицаТоваров);
			
		КонецЕсли;
			
	КонецЕсли;	
		
КонецПроцедуры	

// Процедура - обработчик события "Обработка заполнения" документа "Установка цен номенклатуры".
// Параметры: 
//	Объект - ДокументОбъект.ПрименениеЦенНоменклатуры
//	ДанныеЗаполнения - Структура, ДокументСсылка
//	СтандартнаяОбработка - Булево, Ложь
Процедура ОбработкаЗаполненияПримененияЦенНоменклатуры(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Объект.ОбъектЦенообразования  = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Объект.ОбъектЦенообразования);	
	Если ЗначениеЗаполнено(Объект.ОбъектЦенообразования) Тогда
		Если Объект.ОбъектЦенообразования.ИспользоватьПрименениеЦен Тогда
			Запрос = Новый Запрос;
			ПоДокументуОснованию = ЗначениеЗаполнено(Объект.ДокументОснование);
			Запрос.Текст = Документы.ПрименениеЦенНоменклатуры.ТекстЗапросаЗаполненияЦен(ПоДокументуОснованию, Объект.ОбъектЦенообразования);
			Если ПоДокументуОснованию Тогда		
				Запрос.УстановитьПараметр("ОграниченияЗапроса", Объект.ДокументОснование);
			КонецЕсли;		
			Запрос.УстановитьПараметр("ПравилоЦенообразования", Объект.ОбъектЦенообразования.ПравилоЦенообразования);
			Запрос.УстановитьПараметр("ОбъектЦенообразования",Объект.ОбъектЦенообразования);
			//
			Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования",Объект.ОбъектЦенообразования.ФорматМагазина);
			//
			Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);	
			Запрос.УстановитьПараметр("Дата",?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()));
			Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());  		
		Иначе
			Объект.ОбъектЦенообразования = Справочники.Магазины.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;                                                    	
	
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ПЕЧАТИ ЭТИКЕТОК И ЦЕННИКОВ ИЗ ОБРАБОТКИ ПРИМЕНЕНИЕ ЦЕН НОМЕНКЛАТУРЫ

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище.
//
Функция ПодготовитьСтруктуруПечатиЦенников(ЭтаФорма, Объект) Экспорт

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьМагазин"               , Объект.ОбъектЦенообразования);
	СтруктураДействий.Вставить("УстановитьДатуПолученияЦен"     , Объект.ДатаАнализа);
	СтруктураДействий.Вставить("ЗаполнитьПравилоЦенообразования", Объект.ПравилоЦенообразования);
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию"           , Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад"                 , Неопределено);
	СтруктураДействий.Вставить("УстановитьРежим"                , "ПечатьЦенников");
	СтруктураДействий.Вставить("УстановитьСпособПолученияЦен"   , Ложь);
	СтруктураДействий.Вставить("УстановитьСостояниеЦен"         , Ложь);
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("РежимПечатиИзОбработки", Истина);
	
	ДеревоЗначений = ДанныеФормыВЗначение(ЭтаФорма.ТаблицаЦен, Тип("ДеревоЗначений"));
	Товары = Новый ТаблицаЗначений;
	Если ДеревоЗначений.Строки.Количество() > 0 Тогда
		СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
		
		Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		Товары.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		Товары.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиНоменклатуры"));
		Товары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
		Товары.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
			
		Для каждого СтрокаНоменклатура Из ДеревоЗначений.Строки Цикл
			
			СтрокаТовары                = Товары.Добавить();
			СтрокаТовары.Цена           = СтрокаНоменклатура.Цена0;
			СтрокаТовары.Номенклатура   = СтрокаНоменклатура.Номенклатура;
			СтрокаТовары.Упаковка       = СтрокаНоменклатура.Упаковка;
			СтрокаТовары.Количество     = 1;
			
			Для каждого СтрокаХарактеристика Из СтрокаНоменклатура.Строки Цикл
				
				СтрокаТовары                = Товары.Добавить();
				СтрокаТовары.Цена           = СтрокаХарактеристика.Цена0;
				СтрокаТовары.Номенклатура   = СтрокаХарактеристика.Номенклатура;
				СтрокаТовары.Характеристика = СтрокаХарактеристика.Характеристика;
				СтрокаТовары.Упаковка       = СтрокаХарактеристика.Упаковка;
				СтрокаТовары.Количество     = 1;
				
			КонецЦикла;	
			
		КонецЦикла;
	КонецЕсли;			
	// Подготовка данных для заполнения табличной части обработки печати ценников и этикеток.
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", Товары);
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	СтруктураПараметры = Новый Структура("АдресВХранилище", ПоместитьВоВременноеХранилище(СтруктураРезультат));
	СтруктураРезультат.Вставить("МассивДокументов", Новый Массив);
	
	Возврат СтруктураПараметры;
	
КонецФункции 

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище.
//
Функция ПодготовитьСтруктуруПечатиЭтикеток(ЭтаФорма, Объект) Экспорт

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьМагазин"               , Объект.ОбъектЦенообразования);
	СтруктураДействий.Вставить("УстановитьДатуПолученияЦен"     , Объект.ДатаАнализа);
	СтруктураДействий.Вставить("ЗаполнитьПравилоЦенообразования", Объект.ПравилоЦенообразования);
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию"           , Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад"                 , Неопределено);
	СтруктураДействий.Вставить("УстановитьРежим"                , "ПечатьЭтикеток");
	СтруктураДействий.Вставить("УстановитьСпособПолученияЦен"   , Ложь);
	СтруктураДействий.Вставить("УстановитьСостояниеЦен"         , Ложь);
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("РежимПечатиИзОбработки", Истина);
	
	ДеревоЗначений = ДанныеФормыВЗначение(ЭтаФорма.ТаблицаЦен, Тип("ДеревоЗначений"));
	Товары         = Новый ТаблицаЗначений;
	Если ДеревоЗначений.Строки.Количество() > 0 Тогда
		СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");	
		Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		Товары.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		Товары.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиНоменклатуры"));
		Товары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
		Товары.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
			
		Для каждого СтрокаНоменклатура Из ДеревоЗначений.Строки Цикл
			
			СтрокаТовары                = Товары.Добавить();
			СтрокаТовары.Цена           = СтрокаНоменклатура.Цена0;
			СтрокаТовары.Номенклатура   = СтрокаНоменклатура.Номенклатура;
			СтрокаТовары.Упаковка       = СтрокаНоменклатура.Упаковка;
			СтрокаТовары.Количество     = 1;
			
			Для каждого СтрокаХарактеристика Из СтрокаНоменклатура.Строки Цикл
				
				СтрокаТовары                = Товары.Добавить();
				СтрокаТовары.Цена           = СтрокаХарактеристика.Цена0;
				СтрокаТовары.Номенклатура   = СтрокаХарактеристика.Номенклатура;
				СтрокаТовары.Характеристика = СтрокаХарактеристика.Характеристика;
				СтрокаТовары.Упаковка       = СтрокаХарактеристика.Упаковка;
				СтрокаТовары.Количество     = 1;
				
			КонецЦикла;	
			
		КонецЦикла;
	КонецЕсли;
				
	// Подготовка данных для заполнения табличной части обработки печати ценников и этикеток.
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", Товары);
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	СтруктураПараметры = Новый Структура("АдресВХранилище", ПоместитьВоВременноеХранилище(СтруктураРезультат));	
	Возврат СтруктураПараметры;
    		
КонецФункции 

#КонецОбласти
