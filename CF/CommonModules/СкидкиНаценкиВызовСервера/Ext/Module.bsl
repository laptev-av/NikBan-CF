
#Область ПрограммныйИнтерфейс

// Функция получает минимальную цену номенклатуры в указанном магазине.
Функция МинимальнаяЦенаНоменклатуры(СтруктураНоменклатуры, Магазин, Дата) Экспорт
	
	ВидЦены = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Магазин, "ВидМинимальныхЦенПродажи");
	Цена = ЗапасыСервер.ПолучитьЦенуПоВидуЦен(ВидЦены,
				Дата,
				СтруктураНоменклатуры.Номенклатура,
				СтруктураНоменклатуры.Характеристика,
				СтруктураНоменклатуры.Упаковка);
	
	Возврат Цена;
	
КонецФункции

// Функция возвращает значение функциональной опции "ИспользоватьЗапретРозничнойПродажиАлкоголя".
// 
Функция ПолучитьФункциональнуюОпциюИспользованияЗапретаРозничнойПродажиАлкоголя() Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ИспользоватьЗапретРозничнойПродажиАлкоголя");
	Если Результат <> Истина Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция выполняет проверку необходимости отражения продаж в дисконтном сервере.
// И в случае обновления возвращает результат обновления.
// Также функция создает информационную рассылку о начислении бонусных баллов.
// Если в этом есть необходимость
// 
Функция РезультатОбработкиНакопленийВДисконтномСервере(ДокументСсылка) Экспорт
	РезультатОбработки = Новый Структура;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДисконтныйСервер") Тогда
		ЕстьОшибкиДисконтногоСервера = Ложь;
		ДисконтныйСерверВызовСервера.ОтразитьПродажиВДисконтномСервере(ДокументСсылка, ЕстьОшибкиДисконтногоСервера);
		Если ЕстьОшибкиДисконтногоСервера Тогда
			СтрокаСообщения = НСтр("ru = 'При обновлении накоплений в дисконтном сервере возникли ошибки (см. журнал регистрации). Обратитесь к администратору'");
			РезультатОбработки.Вставить("СообщениеПользователю", СтрокаСообщения);
		КонецЕсли;
	КонецЕсли;
	
	Возврат РезультатОбработки;
КонецФункции

// Возвращает имя формы настроек.
// Для внешней обработки.
Функция ИмяФормыНастроекВнешнейОбработки(ВнешняяОбработка, АдресНастроекВнешнейОбработки) Экспорт
	
	ИмяОбработки = СкидкиНаценкиПовтИсп.ПодключитьВнешнююОбработку(ВнешняяОбработка);
	ВнешнийОбъект = СкидкиНаценкиПовтИсп.ОбъектВнешнейОбработки(ВнешняяОбработка);
	
	УстановитьБезопасныйРежим(Истина);
	Попытка
		ИмяФормыНастроек = ВнешнийОбъект.ИмяФормыНастроек();
		Если ТипЗнч(ИмяФормыНастроек) <> Тип("Строка") Тогда
			ИмяФормыНастроек = "";
		КонецЕсли;
	Исключение
		ИмяФормыНастроек = "";
	КонецПопытки;
	УстановитьБезопасныйРежим(Ложь);
	
	Если ЗначениеЗаполнено(ИмяФормыНастроек) Тогда
		Возврат "ВнешняяОбработка."+ ИмяОбработки +".Форма."+ИмяФормыНастроек;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Процедура ПогаситьОднократныеСкидки(ДокументСсылка, Магазин, ДатаАктивации) Экспорт
	
	СкидкиНаценкиСерверПереопределяемый.ПогаситьОднократныеСкидки(ДокументСсылка, Магазин, ДатаАктивации);
	
КонецПроцедуры

#КонецОбласти
