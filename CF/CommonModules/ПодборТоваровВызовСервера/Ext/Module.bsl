#Область ПрограммныйИнтерфейс

// Функция получения общих свойств номенклатуры.
//
Функция ПолучитьОбщиеСвойстваНоменклатуры() Экспорт
	
	ВозвращаемыйМассив = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Свойство.ТипЗначения               КАК ТипЗначения,
	|	ДополнительныеРеквизиты.Свойство.Ссылка                    КАК Ссылка,
	|	ДополнительныеРеквизиты.Свойство.ЭтоДополнительноеСведение КАК ЭтоДополнительноеСведение
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Свойство.ТипЗначения,
	|	ДополнительныеСведения.Свойство.Ссылка,
	|	ДополнительныеСведения.Свойство.ЭтоДополнительноеСведение
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие)");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	БулевоТип = Новый ОписаниеТипов("Булево");
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗначения = БулевоТип Тогда
			ВозвращаемыйМассив.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВозвращаемыйМассив;
	
КонецФункции // ПолучитьОбщиеКатегорииНоменклатуры()

// Функция получения общих свойств вида номенклатуры.
//
Функция ПолучитьСвойстваВидаНоменклатуры(ВидНоменклатуры) Экспорт
	
	ВозвращаемыйМассив = Новый Массив;
	
	// Номенклатура
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ДополнительныеРеквизиты.Значение КАК Значение
	|ПОМЕСТИТЬ ЗначенияСвойств
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка.ВидНоменклатуры = &ВидНоменклатуры
	|	И ДополнительныеРеквизиты.Свойство В
	|		(	ВЫБРАТЬ
	|				ДополнительныеРеквизиты.Свойство
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|					ПО ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
	|					И ДополнительныеРеквизиты.Ссылка = ВидыНоменклатуры.НаборСвойств)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &ВидНоменклатуры
	|	И ДополнительныеСведения.Свойство В
	|		(	ВЫБРАТЬ
	|				ДополнительныеСведения.Свойство
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|					ПО ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
	|					И ДополнительныеСведения.Ссылка = ВидыНоменклатуры.НаборСвойств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойств.Свойство КАК Свойство,
	|	ЗначенияСвойств.Значение КАК Значение
	|ИЗ
	|	ЗначенияСвойств КАК ЗначенияСвойств
	|ИТОГИ ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияСвойств.Свойство
	|ПОМЕСТИТЬ РазличныеСвойства
	|ИЗ
	|	ЗначенияСвойств КАК ЗначенияСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РазличныеСвойства.Свойство КАК Свойство,
	|	РазличныеСвойства.Свойство.ТипЗначения КАК ТипЗначения,
	|	РазличныеСвойства.Свойство.ЭтоДополнительноеСведение КАК ЭтоДополнительноеСведение
	|ИЗ
	|	РазличныеСвойства КАК РазличныеСвойства";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПараметрыСвойств = Результат[3].Выгрузить();
	
	// Обход по значениям свойств
	ВыборкаПоСвойствам = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСвойствам.Следующий() Цикл
		
		МассивЗначенийСвойства = Новый Массив;
		
		ВыборкаПоЗначениямСвойств = ВыборкаПоСвойствам.Выбрать();
		Пока ВыборкаПоЗначениямСвойств.Следующий() Цикл
			МассивЗначенийСвойства.Добавить(ВыборкаПоЗначениямСвойств.Значение);
		КонецЦикла;
		
		ПараметрыСвойства = ТаблицаПараметрыСвойств.Найти(ВыборкаПоСвойствам.Свойство, "Свойство");
		
		СтруктураСвойств = Новый Структура(
			"Свойство,
			|ЭтоДополнительноеСведение,
			|ТипЗначения,
			|Значение,
			|СвойствоХарактеристики",
			ВыборкаПоСвойствам.Свойство,
			ПараметрыСвойства.ЭтоДополнительноеСведение,
			ПараметрыСвойства.ТипЗначения,
			МассивЗначенийСвойства,
			Ложь
		);
		
		ВозвращаемыйМассив.Добавить(СтруктураСвойств);
		
	КонецЦикла;
	
	// Характеристики
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ДополнительныеРеквизиты.Значение КАК Значение
	|ПОМЕСТИТЬ ЗначенияСвойств
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка.Владелец = &ВидНоменклатуры
	|	И ДополнительныеРеквизиты.Свойство В
	|		(	ВЫБРАТЬ
	|				ДополнительныеРеквизиты.Свойство
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|					ПО ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
	|					И ДополнительныеРеквизиты.Ссылка = ВидыНоменклатуры.НаборСвойствХарактеристик)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &ВидНоменклатуры
	|	И ДополнительныеСведения.Свойство В
	|		(	ВЫБРАТЬ
	|				ДополнительныеСведения.Свойство
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|					ПО ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
	|					И ДополнительныеСведения.Ссылка = ВидыНоменклатуры.НаборСвойствХарактеристик)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка.Владелец.ВидНоменклатуры = &ВидНоменклатуры
	|	И ДополнительныеРеквизиты.Свойство В
	|		(	ВЫБРАТЬ
	|				ДополнительныеРеквизиты.Свойство
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|					ПО ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
	|					И ДополнительныеРеквизиты.Ссылка = ВидыНоменклатуры.НаборСвойствХарактеристик)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект.ВидНоменклатуры = &ВидНоменклатуры
	|	И ДополнительныеСведения.Свойство В
	|		(	ВЫБРАТЬ
	|				ДополнительныеСведения.Свойство
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|					ПО ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
	|					И ДополнительныеСведения.Ссылка = ВидыНоменклатуры.НаборСвойствХарактеристик)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойств.Свойство КАК Свойство,
	|	ЗначенияСвойств.Значение КАК Значение
	|ИЗ
	|	ЗначенияСвойств КАК ЗначенияСвойств
	|ИТОГИ ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияСвойств.Свойство
	|ПОМЕСТИТЬ РазличныеСвойства
	|ИЗ
	|	ЗначенияСвойств КАК ЗначенияСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РазличныеСвойства.Свойство КАК Свойство,
	|	РазличныеСвойства.Свойство.ТипЗначения КАК ТипЗначения,
	|	РазличныеСвойства.Свойство.ЭтоДополнительноеСведение КАК ЭтоДополнительноеСведение
	|ИЗ
	|	РазличныеСвойства КАК РазличныеСвойства";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПараметрыСвойств = Результат[3].Выгрузить();
	
	// Обход по значениям свойств
	ВыборкаПоСвойствам = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСвойствам.Следующий() Цикл
		
		МассивЗначенийСвойства = Новый Массив;
		
		ВыборкаПоЗначениямСвойств = ВыборкаПоСвойствам.Выбрать();
		Пока ВыборкаПоЗначениямСвойств.Следующий() Цикл
			МассивЗначенийСвойства.Добавить(ВыборкаПоЗначениямСвойств.Значение);
		КонецЦикла;
		
		ПараметрыСвойства = ТаблицаПараметрыСвойств.Найти(ВыборкаПоСвойствам.Свойство, "Свойство");
		
		СтруктураСвойств = Новый Структура(
			"Свойство,
			|ЭтоДополнительноеСведение,
			|ТипЗначения,
			|Значение,
			|СвойствоХарактеристики",
			ВыборкаПоСвойствам.Свойство,
			ПараметрыСвойства.ЭтоДополнительноеСведение,
			ПараметрыСвойства.ТипЗначения,
			МассивЗначенийСвойства,
			Истина
		);
		
		ВозвращаемыйМассив.Добавить(СтруктураСвойств);
		
	КонецЦикла;
	
	Возврат ВозвращаемыйМассив;
	
КонецФункции // ПолучитьСвойстваВидаНоменклатуры()

// Функция получения вида номенклатуры по ссылке.
//
Функция ПолучитьВидНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ВидНоменклатуры;
	КонецЕсли;
	
КонецФункции

// Функция получения родителя номенклатуре по ссылке.
//
Функция ПолучитьРодителяНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Родитель КАК Родитель
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Родитель;
	КонецЕсли;
	
КонецФункции

// Функция получения сегмента номенклатуре по ссылке.
//
Функция ПолучитьСегментНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НоменклатураСегмента.Сегмент
	|ИЗ
	|	РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
	|ГДЕ
	|	НоменклатураСегмента.Номенклатура = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Сегмент;
	КонецЕсли;
	
КонецФункции  

// Функция получения цены продажи и остатка номенклатуры.
//
Функция ПолучитьЦенуПродажиИОстаткиНоменклатуры(Номенклатура, Характеристика, Магазин, ОстаткиПоВсемМагазинам, ПриводитьКМинимальнойЦене) Экспорт
		
	ТекущиеОстатки = ПолучитьСтруктуруОстатковНоменклатуры(Номенклатура, Характеристика, Магазин, ОстаткиПоВсемМагазинам);
	Цена = ЗапасыСервер.ПолучитьЦенуПродажи(Магазин, ТекущаяДатаСеанса(), Номенклатура, Характеристика, Справочники.УпаковкиНоменклатуры.ПустаяСсылка() , ПриводитьКМинимальнойЦене);
	СтруктураЦены = Новый Структура("Цена, ЕдиницаИзмерения", Цена, Номенклатура.ЕдиницаИзмерения);
		
	Возврат Новый Структура("ТекущиеОстатки, Цена", ТекущиеОстатки, СтруктураЦены);
	
КонецФункции

// Функция получения остатков номенклатуры.
//
Функция ПолучитьОстаткиНоменклатуры(Номенклатура, Характеристика, Магазин, ОстаткиПоВсемМагазинам = Ложь) Экспорт
	
	ТекущиеОстатки = ПолучитьСтруктуруОстатковНоменклатуры(Номенклатура, Характеристика, Магазин, ОстаткиПоВсемМагазинам);

	Возврат Новый Структура("ТекущиеОстатки", ТекущиеОстатки);
	
КонецФункции

// Функция получения цены закупки и остатка номенклатуры.
//
Функция ПолучитьЦенуЗакупкиИОстаткиНоменклатуры(Номенклатура, Характеристика, Магазин, ОстаткиПоВсемМагазинам, Контрагент, СсылкаНаПоступление) Экспорт
	
	ТекущиеОстатки = ПолучитьСтруктуруОстатковНоменклатуры(Номенклатура, Характеристика, Магазин, ОстаткиПоВсемМагазинам);
	Цена = ЗапасыСервер.ПолучитьЦенуПоследнейЗакупки(ТекущаяДатаСеанса(), Магазин, Контрагент, СсылкаНаПоступление, Номенклатура, Характеристика, Справочники.УпаковкиНоменклатуры.ПустаяСсылка()); 
	СтруктураЦены = Новый Структура("Цена, ЕдиницаИзмерения", Цена, Номенклатура.ЕдиницаИзмерения);
	
	Возврат Новый Структура("ТекущиеОстатки, Цена", ТекущиеОстатки, СтруктураЦены);
	
КонецФункции

// Функция получения цены продажи номенклатуры.
//
Функция ПолучитьЦенуПродажи(Номенклатура, Характеристика, Магазин, ПриводитьКМинимальнойЦене) Экспорт
	
	Цена = ЗапасыСервер.ПолучитьЦенуПродажи(Магазин, ТекущаяДатаСеанса(), Номенклатура, Характеристика, Справочники.УпаковкиНоменклатуры.ПустаяСсылка() , ПриводитьКМинимальнойЦене);
	СтруктураЦены = Новый Структура("Цена, ЕдиницаИзмерения", Цена, Номенклатура.ЕдиницаИзмерения);
	
	Возврат Новый Структура("Цена", СтруктураЦены);
	
КонецФункции

// Функция получения цены закупки номенклатуры.
//
Функция ПолучитьЦенуЗакупки(Номенклатура, Характеристика, Магазин, Контрагент, СсылкаНаПоступление) Экспорт
	
	Цена = ЗапасыСервер.ПолучитьЦенуПоследнейЗакупки(ТекущаяДатаСеанса(), Магазин, Контрагент, СсылкаНаПоступление, Номенклатура, Характеристика, Справочники.УпаковкиНоменклатуры.ПустаяСсылка()); 
	СтруктураЦены = Новый Структура("Цена, ЕдиницаИзмерения", Цена, Номенклатура.ЕдиницаИзмерения);
	
	Возврат Новый Структура("Цена", СтруктураЦены);
	
КонецФункции

// Функция получения списка номенклатуры по части штрихкода.
//
Функция СписокНоменклатурыПоЧастиШтрихкода(ЧастьШтрихКода) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Штрихкоды.Владелец КАК Номенклатура
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО Штрихкоды.Владелец = Номенклатура.Ссылка
	|ГДЕ
	|	Штрихкоды.Штрихкод ПОДОБНО &ЧастьШтрихКода";
	
	Запрос.УстановитьПараметр("ЧастьШтрихКода", "%"+ЧастьШтрихКода+"%");
	
	Результат = Новый СписокЗначений;
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	
	Результат.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("Номенклатура"));
	
	Возврат Результат
	
КонецФункции

// Функция получения списка номенклатуры с поиском по штрихкоду, наименованию, 
// коду, артикулу и полному наименованию.
//
Функция СписокНоменклатурыПоискВезде(Текст) Экспорт
	
	Результат = Новый СписокЗначений;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Штрихкоды.Владелец КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Штрихкод ПОДОБНО &Текст
	|	И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|	И НЕ Штрихкоды.Владелец.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	(Номенклатура.Наименование ПОДОБНО &Текст
	|			ИЛИ Номенклатура.Код ПОДОБНО &Текст
	|			ИЛИ Номенклатура.Артикул ПОДОБНО &Текст
	|			ИЛИ Номенклатура.НаименованиеПолное ПОДОБНО &Текст)
	|	И НЕ Номенклатура.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры";
	
	Запрос.УстановитьПараметр("Текст", "%"+Текст+"%");
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	
	Результат.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("Ссылка"));
	
	Возврат Результат
	
КонецФункции // СписокНоменклатурыПоискВезде()

// Функция получения флаг учета по характеристикам.
Функция ФлагУчетаХарактеристик(Номенклатура) Экспорт
	
	Результат = Ложь;
	ИспользованиеХарактеристик = Неопределено;
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	Если ИспользоватьХарактеристикиНоменклатуры Тогда
		ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ВидНоменклатуры");
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			ИспользованиеХарактеристик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "ИспользованиеХарактеристик");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИспользованиеХарактеристик)Тогда
		Результат = ИспользованиеХарактеристик <> Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция получения структуры данных по учету характеристик.
Функция СтруктураИспользованияХарактеристикПоНоменклатуре(Номенклатура) Экспорт
	
	ВидНоменклатуры = Номенклатура.ВидНоменклатуры;
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	СтруктураИспользованияХарактеристик = Новый Структура;
	СтруктураИспользованияХарактеристик.Вставить("ВидНоменклатуры", ВидНоменклатуры);
	СтруктураИспользованияХарактеристик.Вставить("Номенклатура", Номенклатура);
	СтруктураИспользованияХарактеристик.Вставить("Владелец", "");
	СтруктураИспользованияХарактеристик.Вставить("ИспользованиеХарактеристик", Ложь);
	
	Если НЕ ИспользоватьХарактеристикиНоменклатуры 
	 ИЛИ НЕ ЗначениеЗаполнено(ВидНоменклатуры)
	 ИЛИ НЕ ЗначениеЗаполнено(ВидНоменклатуры.ИспользованиеХарактеристик)Тогда
		Возврат СтруктураИспользованияХарактеристик
	КонецЕсли;
	
	Если ВидНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры Тогда
		СтруктураИспользованияХарактеристик.Вставить("Владелец", Номенклатура);
		СтруктураИспользованияХарактеристик.Вставить("ИспользованиеХарактеристик", Истина);
	ИначеЕсли ВидНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры Тогда
		СтруктураИспользованияХарактеристик.Вставить("Владелец", ВидНоменклатуры);
		СтруктураИспользованияХарактеристик.Вставить("ИспользованиеХарактеристик", Истина);
	КонецЕсли;
	Возврат СтруктураИспользованияХарактеристик;
	
КонецФункции // ИспользованиеХарактеристикПоНоменклатуре()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаОстаткиНоменклатуры()
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	Магазины.Ссылка КАК Магазин
	|ПОМЕСТИТЬ Магазины
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	&ИспользоватьОстаткиПоМагазинам
	|	И (НЕ Магазины.Ссылка В (&ОграничениеРИБПоМагазинам))
	|   И (&ОстаткиПоВсемМагазинам ИЛИ Магазины.Ссылка = &Магазин)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	Склады.Ссылка КАК Склад,
	|	Склады.Магазин КАК Магазин,
	|	Склады.ТипСклада КАК ТипСклада
	|ПОМЕСТИТЬ Склады
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	&ИспользоватьОстаткиПоСкладам
	|	И Склады.Магазин В(&ОграничениеРИБПоСкладам)
	|   И (&ОстаткиПоВсемМагазинам ИЛИ Склады.Магазин = &Магазин)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад
	|;
	|
	|ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад
	|ПОМЕСТИТЬ СкладыОперативныхОстатков
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	(НЕ &ИспользоватьОстаткиПоМагазинам
	|	ИЛИ Склады.Магазин В(&ОграничениеРИБПоМагазинам))
	|   И (&ОстаткиПоВсемМагазинам ИЛИ Склады.Магазин = &Магазин)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ПРЕДСТАВЛЕНИЕ(Склады.Магазин) КАК Магазин,
	|	ПРЕДСТАВЛЕНИЕ(Остатки.Склад) КАК Склад,
	|	Остатки.КоличествоОстаток - Остатки.РезервОстаток КАК ВНаличии,
	|	1 КАК ПорядокМагазинов,
	|	ВЫБОР
	|		КОГДА Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ПорядокСкладов,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(,
	|    Склад В (ВЫБРАТЬ 
	|					Т.Склад 
	|					ИЗ 
	|					СкладыОперативныхОстатков КАК Т)
	|   %ОтборПоНоменклатуреОстатки%
	|) КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Остатки.Склад = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Остатки.Номенклатура = СпрНоменклатура.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(ОстаткиПоМагазинам.Магазин),
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ОстаткиПоМагазинам.Количество,
	|	2,
	|	2,
	|	СпрНоменклатура.ЕдиницаИзмерения
	|ИЗ
	|	РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам КАК ОстаткиПоМагазинам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Магазины КАК Магазины
	|		ПО (Магазины.Магазин = ОстаткиПоМагазинам.Магазин)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ОстаткиПоМагазинам.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ОстаткиПоМагазинам.Количество <> 0
	|	И &ИспользоватьОстаткиПоМагазинам
	|   %ОтборПоНоменклатуреОстатки%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(Склады.Магазин),
	|	ПРЕДСТАВЛЕНИЕ(Остатки.Склад),
	|	Остатки.Количество,
	|	1,
	|	ВЫБОР
	|		КОГДА Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ,
	|	СпрНоменклатура.ЕдиницаИзмерения
	|ИЗ
	|	РегистрСведений.ИнформативныеОстаткиТоваровПоСкладам КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Склады КАК Склады
	|		ПО Остатки.Склад = Склады.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Остатки.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	Остатки.Количество <> 0
	|	И &ИспользоватьОстаткиПоСкладам
	|   %ОтборПоНоменклатуреОстатки%
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокМагазинов, ПорядокСкладов
	|ИТОГИ
	|	МАКСИМУМ(ПорядокМагазинов),
	|	МАКСИМУМ(ПорядокСкладов),
	|	СУММА(ВНаличии),
	|   МАКСИМУМ(ЕдиницаИзмерения)	
	|ПО
	|	Магазин
	|;";
	
	Возврат Текст;

КонецФункции

// Функция получения структуры остатков номенклатуры.
//
Функция ПолучитьСтруктуруОстатковНоменклатуры(Номенклатура, Характеристика, Магазин, ОстаткиПоВсемМагазинам = Ложь)
	
	Запрос = Новый Запрос(ПолучитьТекстЗапросаОстаткиНоменклатуры());
	
	Если Не ЗначениеЗаполнено(Характеристика) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоНоменклатуреОстатки%", "И Номенклатура = &Номенклатура");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоНоменклатуреОстатки%", "И Номенклатура = &Номенклатура И Характеристика = &Характеристика");
	КонецЕсли;
	
	ЗаполнитьУсловияПоОстаткамВРИБ(Запрос, Магазин, ОстаткиПоВсемМагазинам);
		
	Запрос.УстановитьПараметр("Номенклатура",     Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",   Характеристика);
	Запрос.УстановитьПараметр("Магазин",          Магазин);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаМагазинов = Результат[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТекущиеОстатки = Новый Массив;
	
	Пока ВыборкаМагазинов.Следующий() Цикл
		НоваяСтрока = Новый Структура("МестоХранения, ВНаличии, ЭтоМагазин", ВыборкаМагазинов.Магазин, ВыборкаМагазинов.ВНаличии, Истина);
		ТекущиеОстатки.Добавить(НоваяСтрока);
		ВыборкаСкладов = ВыборкаМагазинов.Выбрать();
		Пока ВыборкаСкладов.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаСкладов.Склад) Тогда
				НоваяСтрока = Новый Структура("МестоХранения, ВНаличии, ЭтоМагазин", ВыборкаСкладов.Склад, ВыборкаСкладов.ВНаличии, Ложь);
				ТекущиеОстатки.Добавить(НоваяСтрока);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТекущиеОстатки;
	
КонецФункции

Процедура ЗаполнитьУсловияПоОстаткамВРИБ(Запрос, Магазин, ОстаткиПоВсемМагазинам)
	
	Запрос.УстановитьПараметр("ОстаткиПоВсемМагазинам", ОстаткиПоВсемМагазинам);
	Запрос.УстановитьПараметр("Магазин", Магазин);
  	
	СтруктураПараметров = ПланыОбмена.ПоМагазину.ПолучитьУсловияПоОстаткамВРИБ();
	Для каждого Параметр Из СтруктураПараметров Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;	
	
КонецПроцедуры	

#КонецОбласти