
#Область ПрограммныйИнтерфейс

// Подготавливает массив для передачи в алкогольных данных в ЕГАИС
// Параметры:
//  ПодготовленнаяСтрока - строка таблицы значений
// Возвращаемое значение
//  Массив
Функция ПараметрыАлкогольнойПродукции(ПодготовленнаяСтрока) Экспорт
	
	ПараметрыАлкогольнойПродукции = Новый Массив;
	Если ПодготовленнаяСтрока.АлкогольнаяПродукция Тогда
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.Маркируемый);      // 1 - Признак передаваемой акцизной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.КодАкцизнойМарки); // 2 - Штрихкод марки алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(10 * ПодготовленнаяСтрока.ОбъемДАЛ);    // 3 - Объем алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.Крепость);         // 4 - Крепость алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.КодВидаПродукции); // 5 - КодВидаПродукции - код вида продукции по классификатору
	КонецЕсли;
	
	Возврат ПараметрыАлкогольнойПродукции;
	
КонецФункции // ПараметрыАлкогольнойПродукции()
//
Процедура ПроверитьДанныеЕГАИС(
	ТаблицаТоваров,
	ТаблицаНедостающихМарок,
	ДанныеЕГАИСДостаточны,
	ДокументОбъект,
	ОсобыйВыводСообщения = Ложь,
	ТекстПолногоСообщения = "",
	ПроверятьМарки = Истина) Экспорт
	
	ДанныеЕГАИСДостаточны = Истина;
	
	ТекстПолногоСообщения = "" ;
	Отступ = Символы.ПС + " ";
	ЭтоПервоеСообщение = Истина;
	ПоследняяСтрока = 0;
	ДополнительныйСимвол = "";
	
	Если ПроверятьМарки Тогда
		Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
			
			ЕстьОшибкиВСтроке = Ложь;
			
			ТекстТекущейОшибки = НСтр("ru = 'Строка №%1:'");
			ТекстТекущейОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстТекущейОшибки,
				СтрокаТовара.НомерСтроки);
			ОткрываемоеПоле = "СтатусУказанияАкцизныхМарок";
			
			Если СтрокаТовара.Маркируемый
				И ПустаяСтрока(СтрокаТовара.КодАкцизнойМарки) Тогда
				ТекстТекущейОшибки = ТекстТекущейОшибки + Отступ + НСтр("ru = 'акцизная марка'");
				ЕстьОшибкиВСтроке = Истина;
			КонецЕсли;
			
			Если ЕстьОшибкиВСтроке  Тогда
				ДанныеЕГАИСДостаточны = Ложь;
				Если НЕ ОсобыйВыводСообщения Тогда
					Если ЭтоПервоеСообщение Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							НСтр("ru = 'Не хватает данных для передачи в ЕГАИС:'"),
							ДокументОбъект);
						ЭтоПервоеСообщение = Ложь;
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстТекущейОшибки,
						ДокументОбъект,
						"Товары[" + (СтрокаТовара.НомерСтроки - 1) + "]." + ОткрываемоеПоле,
						"Объект");
				КонецЕсли;
				
				ТекстПолногоСообщения = ТекстПолногоСообщения + ДополнительныйСимвол + ТекстТекущейОшибки;
				ДополнительныйСимвол = Символы.ПС;
			КонецЕсли;
			
			ПоследняяСтрока = СтрокаТовара.НомерСтроки;
			
		КонецЦикла;
		
		Для Каждого НеполнаяСтрока Из ТаблицаНедостающихМарок Цикл
			ДанныеЕГАИСДостаточны = Ложь;
			ТекстТекущейОшибки = НСтр("ru = 'В строке №%1 не совпадает количество марок и количество алкогольной продукции.'");
			ТекстТекущейОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстТекущейОшибки, НеполнаяСтрока.НомерСтроки);
			Если НЕ ОсобыйВыводСообщения Тогда
				Если ЭтоПервоеСообщение Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Не хватает данных для передачи в ЕГАИС:'"),
						ДокументОбъект);
					ЭтоПервоеСообщение = Ложь;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстТекущейОшибки,
					ДокументОбъект,
					"Товары[" + (НеполнаяСтрока.НомерСтроки - 1) + "].СтатусУказанияАкцизныхМарок",
					"Объект");
			КонецЕсли;
			ТекстПолногоСообщения = ТекстПолногоСообщения + ДополнительныйСимвол + ТекстТекущейОшибки;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//
Функция ПроверкаДанныхДляВскрытияТары(ДокументОбъект, ДанныеЕГАИСДостаточны, ОсобыйВыводСообщения = Ложь, ТекстПолногоСообщения = "") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.КлючСвязи,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(Товары.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	Товары.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТоварыЧека
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.КлючСвязи,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	ЕСТЬNULL(Товары.Номенклатура.ОбъемДАЛ, 0) КАК ОбъемДАЛ,
	|	ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК Маркируемый,
	|	ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Код, """") КАК КодВидаПродукции,
	|	ЕСТЬNULL(Товары.Номенклатура.АлкогольнаяПродукция, ЛОЖЬ) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(Товары.Номенклатура.Крепость, 0) КАК Крепость
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ТаблицаТоварыЧека КАК Товары
	|ГДЕ
	|	ЕСТЬNULL(Товары.Номенклатура.АлкогольнаяПродукция, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.НомерСтроки,
	|	АкцизныеМарки.КлючСвязи,
	|	АкцизныеМарки.КодАкцизнойМарки
	|ПОМЕСТИТЬ ТаблицаАкцизныхМарок
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.Маркируемый КАК Маркируемый,
	|	ТаблицаТовары.КодВидаПродукции КАК КодВидаПродукции,
	|	ТаблицаТовары.ОбъемДАЛ КАК ОбъемДАЛ,
	|	ТаблицаТовары.Крепость КАК Крепость,
	|	ТаблицаТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Маркируемый 
	|				ТОГДА ЕСТЬNULL(ТаблицаАкцизныхМарок.КодАкцизнойМарки, """")
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодАкцизнойМарки
	|ПОМЕСТИТЬ ТаблицаСМарками
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАкцизныхМарок КАК ТаблицаАкцизныхМарок
	|		ПО ТаблицаТовары.КлючСвязи = ТаблицаАкцизныхМарок.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.Маркируемый КАК Маркируемый,
	|	ТаблицаТовары.КодВидаПродукции КАК КодВидаПродукции,
	|	ТаблицаТовары.ОбъемДАЛ КАК ОбъемДАЛ,
	|	ТаблицаТовары.Крепость КАК Крепость,
	|	ТаблицаТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаТовары.КодАкцизнойМарки КАК КодАкцизнойМарки,
	|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	|ИЗ
	|	ТаблицаСМарками КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТаблицаТовары.Номенклатура = Штрихкоды.Владелец
	|		И Штрихкоды.ТипШтрихкода В(&ТипыШтрихкодов)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.Маркируемый,
	|	ТаблицаТовары.КодВидаПродукции,
	|	ТаблицаТовары.ОбъемДАЛ,
	|	ТаблицаТовары.Крепость,
	|	ТаблицаТовары.АлкогольнаяПродукция,
	|	ТаблицаТовары.КодАкцизнойМарки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныхМарок.КодАкцизнойМарки) КАК КоличествоАкцизныхМарок
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАкцизныхМарок КАК ТаблицаАкцизныхМарок
	|		ПО ТаблицаТовары.КлючСвязи = ТаблицаАкцизныхМарок.КлючСвязи
	|ГДЕ
	|	ТаблицаТовары.Маркируемый
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныхМарок.КодАкцизнойМарки) <> ТаблицаТовары.Количество
	|	И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныхМарок.КодАкцизнойМарки) <> 0
	|";
	
	Запрос.УстановитьПараметр("Товары", ДокументОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("АкцизныеМарки", ДокументОбъект.АкцизныеМарки.Выгрузить());
	МассивТиповШтрихкодов = Новый Массив;
	МассивТиповШтрихкодов.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	МассивТиповШтрихкодов.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8);
	МассивТиповШтрихкодов.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.ITF14);
	Запрос.УстановитьПараметр("ТипыШтрихкодов", МассивТиповШтрихкодов);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваровЕГАИС = Результат[4].Выгрузить();
	ТаблицаНедостающихМарокЕГАИС = Результат[5].Выгрузить();
	
	ПроверитьДанныеЕГАИС(ТаблицаТоваровЕГАИС, ТаблицаНедостающихМарокЕГАИС, ДанныеЕГАИСДостаточны, ДокументОбъект, ОсобыйВыводСообщения, ТекстПолногоСообщения);
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ТаблицаТоваровЕГАИС", ТаблицаТоваровЕГАИС);
	
	Возврат СтруктураТаблиц;
	
КонецФункции

// Копирует связь между номенклатурой и алкогольной продукцией
// для новой позиции номенклатуры
//
// Параметры:
//  Источник						 - СправочникСсылка.Номенклатура - Номенклатура для которой существует связь.
//  Приемник						 - СправочникСсылка.Номенклатура - Номенклатура, для которой копируется связь.
//  УстановитьСвязиДляХарактеристик	 - Булево - Требуется ли задать связь для характеристик номенклатуры-приемника
//
Процедура КопироватьСвязьСКлассификаторомАлкогольнойПродукцииЕГАИС(Источник, Приемник, УстановитьСвязиДляХарактеристик) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТХарактеристики
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &НоменклатураПриемник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(ВТХарактеристики.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХарактеристики КАК ВТХарактеристики
	|		ПО (&УстановитьСвязиДляХарактеристик)
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &НоменклатураИсточник";
	
	Запрос.УстановитьПараметр("НоменклатураИсточник", Источник);
	Запрос.УстановитьПараметр("НоменклатураПриемник", Приемник);
	Запрос.УстановитьПараметр("УстановитьСвязиДляХарактеристик", УстановитьСвязиДляХарактеристик);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Приемник);
	
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Номенклатура         = Приемник;
		НоваяЗапись.Характеристика       = Выборка.Характеристика;
		НоваяЗапись.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры


Функция ПроверкаДанныхДляВозвратаОтПокупателя(ДокументОбъект, ДанныеЕГАИСДостаточны, ОсобыйВыводСообщения = Ложь, ТекстПолногоСообщения = "") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.КлючСвязи,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(Товары.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТоварыЧека
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.КлючСвязи,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	ЕСТЬNULL(Товары.Номенклатура.ОбъемДАЛ, 0) КАК ОбъемДАЛ,
	|	ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК Маркируемый,
	|	ЕСТЬNULL(Товары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Код, """") КАК КодВидаПродукции,
	|	ЕСТЬNULL(Товары.Номенклатура.АлкогольнаяПродукция, ЛОЖЬ) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(Товары.Номенклатура.Крепость, 0) КАК Крепость
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ТаблицаТоварыЧека КАК Товары
	|ГДЕ
	|	ЕСТЬNULL(Товары.Номенклатура.АлкогольнаяПродукция, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(Товары.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.НомерСтроки,
	|	АкцизныеМарки.КлючСвязи,
	|	АкцизныеМарки.КодАкцизнойМарки
	|ПОМЕСТИТЬ ТаблицаАкцизныхМарок
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.Маркируемый КАК Маркируемый,
	|	ТаблицаТовары.КодВидаПродукции КАК КодВидаПродукции,
	|	ТаблицаТовары.ОбъемДАЛ КАК ОбъемДАЛ,
	|	ТаблицаТовары.Крепость КАК Крепость,
	|	ТаблицаТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Маркируемый 
	|				ТОГДА ЕСТЬNULL(ТаблицаАкцизныхМарок.КодАкцизнойМарки, """")
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодАкцизнойМарки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАкцизныхМарок КАК ТаблицаАкцизныхМарок
	|		ПО ТаблицаТовары.КлючСвязи = ТаблицаАкцизныхМарок.КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныхМарок.КодАкцизнойМарки) КАК КоличествоАкцизныхМарок
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАкцизныхМарок КАК ТаблицаАкцизныхМарок
	|		ПО ТаблицаТовары.КлючСвязи = ТаблицаАкцизныхМарок.КлючСвязи
	|ГДЕ
	|	ТаблицаТовары.Маркируемый
	|	И &ПроверятьМарки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.КлючСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоУпаковок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныхМарок.КодАкцизнойМарки) <> ТаблицаТовары.Количество
	|	И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныхМарок.КодАкцизнойМарки) <> 0
	|";
	
	ПроверятьМарки = Истина;
	Запрос.УстановитьПараметр("Товары", ДокументОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("АкцизныеМарки", ДокументОбъект.АкцизныеМарки.Выгрузить());
	Запрос.УстановитьПараметр("ПроверятьМарки", ПроверятьМарки);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваровЕГАИС = Результат[3].Выгрузить();
	ТаблицаНедостающихМарокЕГАИС = Результат[4].Выгрузить();
	
	ПроверитьДанныеЕГАИС(ТаблицаТоваровЕГАИС, ТаблицаНедостающихМарокЕГАИС, ДанныеЕГАИСДостаточны, ДокументОбъект, ОсобыйВыводСообщения, ТекстПолногоСообщения, ПроверятьМарки);
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("ТаблицаТоваровЕГАИС", ТаблицаТоваровЕГАИС);
	
	Возврат СтруктураТаблиц;
	
КонецФункции

//
Процедура ПроверитьЗаполнениеСправок2(Объект, МассивНепроверяемыхРеквизитов, Отказ) Экспорт
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Справка2");
	
	Если НЕ НужноРаботатьСЕГАИС(Объект.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.Товары.Выгрузить(,"НомерСтроки, Номенклатура, Справка2"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.Номенклатура
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаТоваров.Номенклатура.АлкогольнаяПродукция, ЛОЖЬ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru='В строке %1 не заполнено значение поля ""Справка 2""'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.НомерСтроки);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Справка2");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, Поле, "Объект", Отказ);
	КонецЦикла;
	
КонецПроцедуры

// Проверят использование механизма регистрации складских операций в ЕГАИС.
//
// Параметры:
//  ДатаПроверки  - Дата - дата, на которую нужно проверить использование функций интеграции с ЕГАИС.
//                        Если не указана, то проверяться будет текущая дата сеанса.
//
// Возвращаемое значение:
//   Булево   - признак использования функций интеграции с ЕГАИС.
//
Функция НужноРаботатьСЕГАИС(Знач ДатаПроверки = Неопределено) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПроверки) Тогда
		ДатаПроверки = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ДатаНачалаРегистрации = Константы.ДатаНачалаПримененияПриказа164.Получить();
	
	РезультатПроверки = ДатаПроверки >= ДатаНачалаРегистрации И ЗначениеЗаполнено(ДатаНачалаРегистрации);
	
	Возврат РезультатПроверки;

КонецФункции

// Найти, а при необходимости, создать поступление товаров на основании ТТН.
//
// Параметры:
//  ТТНВходящаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС.
//  ТолькоПоиск - Булево
//  ЗаказПоставщику
//
// Возвращаемое значение
//  Неопределено, ДокументССылка.ПоступлениеТоваров
Функция СоздатьНайтиПоступление(ТТНВходящаяЕГАИС, ТолькоПоиск, ЗаказПоставщику = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.ТТНВходящаяЕГАИС = &ТТНВходящаяЕГАИС";
	
	Запрос.УстановитьПараметр("ТТНВходящаяЕГАИС", ТТНВходящаяЕГАИС);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Если ТолькоПоиск Тогда
		Возврат Неопределено
	КонецЕсли;
	
	ПоступлениеТоваровОбъект = Документы.ПоступлениеТоваров.СоздатьДокумент();
	ПоступлениеТоваровОбъект.Дата = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.НомерТТН КАК НомерВходящегоДокумента,
	|	ТТНВходящаяЕГАИС.ДатаТТН КАК ДатаВходящегоДокумента,
	|	ТТНВходящаяЕГАИС.Ссылка КАК ТТНВходящаяЕГАИС,
	|	ТТНВходящаяЕГАИС.Грузополучатель.ТорговыйОбъект КАК Магазин,
	|	ТТНВходящаяЕГАИС.Грузополучатель.Контрагент КАК Организация,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Поставщик = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Грузоотправитель
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Поставщик
	|	КОНЕЦ КАК Поставщик
	|ПОМЕСТИТЬ ТаблицаВЗапросе
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.НомерВходящегоДокумента,
	|	ТаблицаВЗапросе.ДатаВходящегоДокумента,
	|	ТаблицаВЗапросе.ТТНВходящаяЕГАИС,
	|	ТаблицаВЗапросе.Магазин,
	|	ТаблицаВЗапросе.Организация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаВЗапросе.Поставщик.Сопоставлено, ЛОЖЬ)
	|				И НЕ ТаблицаВЗапросе.Поставщик.СоответствуетОрганизации
	|			ТОГДА ТаблицаВЗапросе.Поставщик.Контрагент
	|		ИНАЧЕ &КонтрагентЗаказа
	|	КОНЕЦ КАК Контрагент
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе";
	
	Запрос.УстановитьПараметр("Ссылка", ТТНВходящаяЕГАИС);
	
	Если ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		Запрос.УстановитьПараметр("КонтрагентЗаказа", ЗаказПоставщику.Контрагент);
	Иначе
		Запрос.УстановитьПараметр("КонтрагентЗаказа", Справочники.Контрагенты.ПустаяСсылка());
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПоступлениеТоваровОбъект, Выборка);
	КонецЕсли;
	
	ПоступлениеТоваровОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ПоступлениеТоваровОбъект.Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(
											 ПоступлениеТоваровОбъект.Магазин,,, 
											 ПоступлениеТоваровОбъект.Ответственный);
	ПоступлениеТоваровОбъект.БанковскийСчетОрганизации = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(
														 ПоступлениеТоваровОбъект.Организация,,);
											 
											 
	ПоступлениеТоваровОбъект.Контрагент    = ЗначениеНастроекПовтИсп.ПолучитьПоставщикаПоУмолчанию(
											 ПоступлениеТоваровОбъект.Ответственный, 
											 ПоступлениеТоваровОбъект.Контрагент);
	ПоступлениеТоваровОбъект.БанковскийСчетКонтрагента = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетКонтрагентаПоУмолчанию(
														 ПоступлениеТоваровОбъект.Контрагент);
	ПоступлениеТоваровОбъект.УчитыватьНДС    = Истина;
	ПоступлениеТоваровОбъект.ЦенаВключаетНДС = Истина;
	ПоступлениеТоваровОбъект.ЗаказПоставщику = ЗаказПоставщику;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.Количество КАК Количество,
	|	ТТНВходящаяЕГАИСТовары.Количество КАК КоличествоУпаковок,
	|	ТТНВходящаяЕГАИСТовары.Сумма КАК Сумма,
	|	ТТНВходящаяЕГАИСТовары.Цена КАК Цена,
	|	ТТНВходящаяЕГАИСТовары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ТТНВходящаяЕГАИСТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТаблицаЕГАИС
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЕГАИС.Количество КАК Количество,
	|	ТаблицаЕГАИС.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаЕГАИС.Сумма КАК Сумма,
	|	ТаблицаЕГАИС.Цена КАК Цена,
	|	ТаблицаЕГАИС.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ТаблицаЕГАИС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Номенклатура
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Характеристика
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Характеристика
	|	КОНЕЦ КАК Характеристика
	|ИЗ
	|	ТаблицаЕГАИС КАК ТаблицаЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЕГАИС.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И (СоответствиеНоменклатурыЕГАИС.Порядок = 1)";
	
	Запрос.УстановитьПараметр("Ссылка", ТТНВходящаяЕГАИС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = ПоступлениеТоваровОбъект.ТоварыПоДаннымПоставщика.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
	КонецЦикла;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураПараметровСтавкиНДСУчитыватьНДС(ПоступлениеТоваровОбъект));
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(ПоступлениеТоваровОбъект));
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , ПоступлениеТоваровОбъект.ТоварыПоДаннымПоставщика);
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, Неопределено);
	
	ПоступлениеТоваровОбъект.Записать();
	
	Возврат ПоступлениеТоваровОбъект.Ссылка;
	
КонецФункции

// Проверить возможность ввода поступления на основании ТТН с учетом заказа
//
// Параметры:
//  ЗаказПоставщику - ДокументССылка.ЗаказПоставщику
//  ПараметрыФормы - параметры формы выбора ТТН
//  ТекстСообщения - текст причины почему нельзя выбрать ТТН
//
// Возвращаемое значение:
//  Булево
// 
Функция ВозможностьВводаПоступленияНаОснованииТТН(ЗаказПоставщику, ПараметрыФормы, ТекстСообщения) Экспорт
	
	Если НЕ ЗаказПоставщику.Проведен Тогда
		ТекстСообщения = НСтр("ru = 'Документ %1 не проведен'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ЗаказПоставщику);
		Возврат Ложь;
	КонецЕсли;
	
	Если ЗаказПоставщику.Закрыт Тогда
		ТекстСообщения = НСтр("ru = 'Документ %1 закрыт'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ЗаказПоставщику);
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПоступлениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.ЗаказПоставщику = &ЗаказПоставщику";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТекстСообщения = НСтр("ru = 'По документу %1 уже существуют поступления товаров. Ввод на основании документа не возможен.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Ссылка);
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗаказПоставщикуТовары.Ссылка
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка = &ЗаказПоставщику
	|	И ЗаказПоставщикуТовары.Номенклатура.АлкогольнаяПродукция";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'В документе %1 нет алкогольной продукции'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Ссылка);
		Возврат Ложь;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗаказПоставщику.Магазин,
	|	ЗаказПоставщику.Организация
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Ссылка = &ЗаказПоставщику";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ПараметрыФормы.Вставить("Магазин"             , Неопределено);
	ПараметрыФормы.Вставить("Организация"         , Неопределено);
	ПараметрыФормы.Вставить("ПроверитьПоступление", Истина);
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ПараметрыФормы, Выборка);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ВозможностьВвоодаТТН()

//
Функция НайтиПеремещениеПоВходящейТТН(ТТН) Экспорт
	
	ИдентификаторПеремещения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТТН, "Идентификатор");
	ПеремещениеСсылка = НайтиПеремещениеПоИдентификатору(ИдентификаторПеремещения, ТТН);
	
	Возврат ПеремещениеСсылка;
	
КонецФункции

//
Функция НайтиПеремещениеПоИдентификатору(ИдентификаторПеремещения, ТТН = Неопределено) Экспорт
	
	ПеремещениеСсылка = Неопределено;
	ТекстОшибки = "";
	Если ЗначениеЗаполнено(ИдентификаторПеремещения) Тогда
		Если СтрДлина(ИдентификаторПеремещения) = 36 Тогда
			НовыйИдентификатор = Новый УникальныйИдентификатор(ИдентификаторПеремещения);
			СсылкаДляЗапроса = Документы.ПеремещениеТоваров.ПолучитьСсылку(НовыйИдентификатор);
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Док.Ссылка КАК Ссылка,
			|	Док.ТТНВходящаяЕГАИС КАК ТТН
			|ИЗ
			|	Документ.ПеремещениеТоваров КАК Док
			|ГДЕ
			|	Док.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", СсылкаДляЗапроса);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Если ЗначениеЗаполнено(ТТН) Тогда
					Если Выборка.ТТН <> ТТН Тогда
						ПеремещениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
						Если ПеремещениеОбъект <> Неопределено Тогда
							ПеремещениеОбъект.ОбменДанными.Загрузка = Истина;
							ПеремещениеОбъект.ТТНВходящаяЕГАИС = ТТН;
							ПеремещениеОбъект.Записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ПеремещениеСсылка = Выборка.Ссылка;
			КонецЕсли;
		Иначе
			ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	Возврат ПеремещениеСсылка;
	
КонецФункции

//
Функция НайтиТТНПоИдентификаторуПеремещения(ИдентификаторПеремещения) Экспорт
	
	ТТНСсылка = Неопределено;
	ТекстОшибки = "";
	Если ЗначениеЗаполнено(ИдентификаторПеремещения) Тогда
		Если СтрДлина(ИдентификаторПеремещения) = 36 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Док.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ТТНВходящаяЕГАИС КАК Док
			|ГДЕ
			|	Док.Идентификатор = &ИдентификаторПеремещения";
			Запрос.УстановитьПараметр("ИдентификаторПеремещения", ИдентификаторПеремещения);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ТТНСсылка = Выборка.Ссылка;
			КонецЕсли;
		Иначе
			ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	Возврат ТТНСсылка;
	
КонецФункции

//
Функция ДанныеАлкогольнойПродукции(Номенклатура) Экспорт
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Маркируемый"                 , Ложь);
	СтруктураРезультат.Вставить("ПродаетсяВРозлив"            , Ложь);
	СтруктураРезультат.Вставить("ЭтоАлкогольнаяПродукция"     , Ложь);
	СтруктураРезультат.Вставить("ВидАлкогольнойПродукцииЕГАИС", Неопределено);
	СтруктураРезультат.Вставить("ЕдиницаИзмерения"            , Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС КАК ВидАлкогольнойПродукцииЕГАИС,
	|	ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК Маркируемый,
	|	ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ) КАК ПродаетсяВРозлив,
	|	ЕСТЬNULL(СправочникНоменклатура.АлкогольнаяПродукция, ЛОЖЬ) КАК ЭтоАлкогольнаяПродукция,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Выборка);
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

//
Процедура ОтменитьПроведениеСвязанныхДокументов(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
		
		Запрос.УстановитьПараметр("АктСписанияЕГАИС", ДокументСсылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СписаниеТоваров.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СписаниеТоваров КАК СписаниеТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
		|		ПО СписаниеТоваров.Ссылка = АктСписанияЕГАИС.ДокументОснование
		|ГДЕ
		|	СписаниеТоваров.Проведен
		|	И АктСписанияЕГАИС.Ссылка = &АктСписанияЕГАИС";
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		Запрос.УстановитьПараметр("ТТНВходящаяЕГАИС", ДокументСсылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоступлениеТоваров.Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
		|ГДЕ
		|	ПоступлениеТоваров.Проведен
		|	И ПоступлениеТоваров.ТТНВходящаяЕГАИС = &ТТНВходящаяЕГАИС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПеремещениеТоваров.Ссылка
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	ПеремещениеТоваров.Проведен
		|	И ПеремещениеТоваров.ТТНВходящаяЕГАИС = &ТТНВходящаяЕГАИС";
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		Запрос.УстановитьПараметр("ТТНИсходящаяЕГАИС", ДокументСсылка);
		
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ВидОперации");
		
		Если ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВозвратТоваровПоставщику.Ссылка
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
			|ГДЕ
			|	ВозвратТоваровПоставщику.ТТНИсходящаяЕГАИС = &ТТНИсходящаяЕГАИС
			|	И ВозвратТоваровПоставщику.Проведен";
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ПеремещениеТоваров.Ссылка
			|ИЗ
			|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
			|ГДЕ
			|	ПеремещениеТоваров.ТТНИсходящаяЕГАИС = &ТТНИсходящаяЕГАИС
			|	И ПеремещениеТоваров.Проведен";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Док.ДополнительныеСвойства.Вставить("ЗагрузкаДанныхИзЕГАИС");
		Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает список складов, для которых нужно создать акт списания ЕГАИС
//
// Параметры:
//  
//
// Возвращаемое значение:
//   Массив элементов СправочникаСсылка.Склады
//
Функция СписокСкладовДляКоторыхНужноСоздаватьАктыСписания(СсылкаНаОтчет, ДобавитьМаркируемуюПродукцию, ДобавитьНеМаркируемуюПродукцию) Экспорт
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОтчет, "Организация, Магазин");
	
	Если НЕ ИнтеграцияЕГАИСВызовСервера.ИспользуетсяРегистрацияРозничныхПродажВЕГАИС(ЗначенияРеквизитов.Организация, ЗначенияРеквизитов.Магазин, СсылкаНаОтчет.Дата) Тогда
		
		Возврат Новый Массив;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОтчетОРозничныхПродажахТовары.Склад КАК Склад
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|	И ОтчетОРозничныхПродажахТовары.Номенклатура.АлкогольнаяПродукция
	|	И (НЕ ОтчетОРозничныхПродажахТовары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|				И &ДобавитьНеМаркируемуюПродукцию
	|			ИЛИ ОтчетОРозничныхПродажахТовары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|				И &ДобавитьМаркируемуюПродукцию)
	|	И НЕ ЕСТЬNULL(ОтчетОРозничныхПродажахТовары.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)";
	Запрос.УстановитьПараметр("ДобавитьМаркируемуюПродукцию", ДобавитьМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("ДобавитьНеМаркируемуюПродукцию", ДобавитьНеМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОтчет);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Склад");
	
КонецФункции // СписокСкладовДляКоторыхНужноСоздаватьАктыСписания()

#Область ПроцедурыСопоставления

Функция АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Импортер
	|ПОМЕСТИТЬ ТаблицаАлкогольнойПродукции
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка В(&МассивАлкогольнойПродукции)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подзапрос.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаАлкогольнойПродукции.Производитель КАК ОрганизацияЕГАИС
	|	ИЗ
	|		ТаблицаАлкогольнойПродукции КАК ТаблицаАлкогольнойПродукции
	|	ГДЕ
	|		ТаблицаАлкогольнойПродукции.Производитель <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаАлкогольнойПродукции.Импортер
	|	ИЗ
	|		ТаблицаАлкогольнойПродукции КАК ТаблицаАлкогольнойПродукции
	|	ГДЕ
	|		ТаблицаАлкогольнойПродукции.Импортер <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТН.Поставщик
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		&Ссылка <> НЕОПРЕДЕЛЕНО
	|		И ТТН.Ссылка = &Ссылка
	|		И ТТН.Поставщик <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТН.Грузоотправитель
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		&Ссылка <> НЕОПРЕДЕЛЕНО
	|		И ТТН.Ссылка = &Ссылка
	|		И ТТН.Грузоотправитель <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТН.Грузополучатель
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		&Ссылка <> НЕОПРЕДЕЛЕНО
	|		И ТТН.Ссылка = &Ссылка
	|		И ТТН.Грузополучатель <> &ПустаяОрганизация) КАК Подзапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	Подзапрос.ОрганизацияЕГАИС";
	
	Запрос.УстановитьПараметр("МассивАлкогольнойПродукции", МассивАлкогольнойПродукции);
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	Запрос.УстановитьПараметр("Ссылка", ТТНВходящаяЕГАИС);
	
	Результат = Запрос.Выполнить();
	ТаблицаКонтрагентов = Результат.Выгрузить();
	
	МассивКонтрагентов = ТаблицаКонтрагентов.ВыгрузитьКолонку("ОрганизацияЕГАИС");
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ОрганизацииЕГАИС", МассивКонтрагентов);
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(СтруктураДанных, УникальныйИдентификатор);
	
	Возврат АдресВХранилище;
	
КонецФункции

Функция АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Производитель,
	|	Номенклатура.ПроизводительИмпортерАлкогольнойПродукции
	|ПОМЕСТИТЬ ТаблицаВЗапросе
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В (&МассивНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.Производитель КАК Контрагент
	|ПОМЕСТИТЬ ТаблицаКонтрагентов
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	ТаблицаВЗапросе.Производитель <> &ПустойКонтрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.ПроизводительИмпортерАлкогольнойПродукции
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	ТаблицаВЗапросе.ПроизводительИмпортерАлкогольнойПродукции <> &ПустойКонтрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаКонтрагентов.Контрагент
	|ИЗ
	|	ТаблицаКонтрагентов КАК ТаблицаКонтрагентов";
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Результат = Запрос.Выполнить();
	ТаблицаКонтрагентов = Результат.Выгрузить();
	
	МассивКонтрагентов = ТаблицаКонтрагентов.ВыгрузитьКолонку("Контрагент");
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Контрагенты", МассивКонтрагентов);
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(СтруктураДанных, УникальныйИдентификатор);
	
	Возврат АдресВХранилище;
	
КонецФункции

Функция ДанныеНоменклатурыПоСправке2(Справка2) Экспорт
	
	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("АлкогольнаяПродукция", Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка());
	СтруктураРезультат.Вставить("Номенклатура"        , Справочники.Номенклатура.ПустаяСсылка());
	СтруктураРезультат.Вставить("Характеристика"      , Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	СтруктураРезультат.Вставить("Упаковка"            , Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	СтруктураРезультат.Вставить("Справка2"            , Справка2);
	СтруктураРезультат.Вставить("Уникальность"        , Ложь);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 2
	               |	СоответствиеНоменклатуры.АлкогольнаяПродукция,
	               |	СоответствиеНоменклатуры.Номенклатура,
	               |	СоответствиеНоменклатуры.Характеристика
	               |ИЗ
	               |	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатуры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2
	               |		ПО СоответствиеНоменклатуры.АлкогольнаяПродукция = Справки2.АлкогольнаяПродукция
	               |ГДЕ
	               |	Справки2.Ссылка = &Справка2";
	
	Запрос.УстановитьПараметр("Справка2", Справка2);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Результат);
		
		Если Не Результат.Следующий() Тогда
			
			СтруктураРезультат.Уникальность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

// Получаем контрагента по ИНН и КПП
// Параметры:
//  ИНН - Строка
//  КПП - Строка
//
// Возвращаемое значение:
//  Справочники.Контрагенты.Ссылка
//
Функция КонтрагентПоИННКПП(ИНН, КПП) Экспорт;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И Контрагенты.КПП = &КПП";
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	
КонецФункции // КонтрагентПоИННКПП()
 
#КонецОбласти

// Процедура возвращает необходимость формирования напоминаний пользователю
// о создании документов ЕГАИС
Функция ПолучитьНапоминаниеЕГАИС(Объект) Экспорт
	
	/// нужно ли проверять
	ПроверкаВключена = ИнтеграцияЕГАИСРТПовтИсп.ПроверятьНеобходимостьСозданияДокументовЕГАИС();
	
	Если Не ПроверкаВключена Тогда
		Возврат "";
	КонецЕсли;
	
	/// используется ли егаис
	ИспользуетсяЕГАИС = ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции");
	
	Если не ИспользуетсяЕГАИС Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли товары в ТЧ
	Если Объект.Товары.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли движение по складам продажи
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ОтправкаСоСкладаПродажи = Ложь;
		ПриемкаНаСкладПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Склад, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ОтправкаСоСкладаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Склад, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
		ПриемкаНаСкладПродажи = Ложь;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОтправкаСоСкладаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СкладОтправитель, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
		ПриемкаНаСкладПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СкладПолучатель, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		ОтправкаСоСкладаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СкладОтправитель, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
		ПриемкаНаСкладПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СкладПолучатель, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
	Иначе
		ОтправкаСоСкладаПродажи = Ложь;
		ПриемкаНаСкладПродажи = Ложь;
	КонецЕсли;
	
	Если Не ОтправкаСоСкладаПродажи и не ПриемкаНаСкладПродажи Тогда
		Возврат "";
	КонецЕсли;
	
	Если ОтправкаСоСкладаПродажи и ПриемкаНаСкладПродажи и ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли созданный документ егаис
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.ВозвратИзРегистра2ЕГАИС)
		или не ПравоДоступа("Чтение", Метаданные.Документы.ПередачаВРегистр2ЕГАИС) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ОтправкаСоСкладаПродажи Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(1) КАК Количество
		|ИЗ
		|	Документ.ВозвратИзРегистра2ЕГАИС КАК ВозвратИзРегистра2ЕГАИС
		|ГДЕ
		|	ВозвратИзРегистра2ЕГАИС.Проведен
		|	И ВозвратИзРегистра2ЕГАИС.ДокументОснование = &ПроверяемыйДокумент";
		Запрос.УстановитьПараметр("ПроверяемыйДокумент", Объект.Ссылка);
		Результат = Запрос.Выполнить().Выбрать();
		Результат.Следующий();
		СозданВозвратИзТЗ = не Результат.Количество = 0;
	КонецЕсли;
	
	Если ПриемкаНаСкладПродажи Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(1) КАК Количество
		|ИЗ
		|	Документ.ПередачаВРегистр2ЕГАИС КАК ПередачаВРегистр2ЕГАИС
		|ГДЕ
		|	ПередачаВРегистр2ЕГАИС.Проведен
		|	И ПередачаВРегистр2ЕГАИС.ДокументОснование = &ПроверяемыйДокумент";
		Запрос.УстановитьПараметр("ПроверяемыйДокумент", Объект.Ссылка);
		Результат = Запрос.Выполнить().Выбрать();
		Результат.Следующий();
		СозданаПередачаВТЗ = не Результат.Количество = 0;
	КонецЕсли;
	
	Если (не ОтправкаСоСкладаПродажи или (ОтправкаСоСкладаПродажи И СозданВозвратИзТЗ))
		и (не ПриемкаНаСкладПродажи или (ПриемкаНаСкладПродажи И СозданаПередачаВТЗ)) Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли алкоголь в документе
	ЕстьАлкогольВДокументе = Ложь;
	Если Объект.Товары[0].Свойство("НеобходимостьВводаСправкиНаАлкоголь") Тогда /// сначала проверим по маркам
		Для Каждого СтрокаТовары Из Объект.Товары Цикл
			Если СтрокаТовары.НеобходимостьВводаСправкиНаАлкоголь Тогда
				ЕстьАлкогольВДокументе = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если не ЕстьАлкогольВДокументе и ИнтеграцияЕГАИСРТПовтИсп.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС() Тогда // если в документе нет марочного алкоголя, возможно ведется передача пива
		
		МассивНоменклатуры = Объект.Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура");
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(1) КАК Количество
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&МассивНоменклатуры)
		|	И Номенклатура.АлкогольнаяПродукция";
		Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
		Результат = Запрос.Выполнить().Выбрать();
		Результат.Следующий();
		
		ЕстьАлкогольВДокументе = не Результат.Количество = 0;
		
	КонецЕсли;
	
	Если Не ЕстьАлкогольВДокументе Тогда
		Возврат "";
	КонецЕсли;
	
	// если дошли сюда - нужно сформировать уведомление
	ТекстСообщения = "";
	Если ОтправкаСоСкладаПродажи и ПриемкаНаСкладПродажи Тогда
		Если не СозданВозвратИзТЗ Тогда
			ТекстСообщения = НСтр("ru = 'Товары отправляются из торгового зала. Возможно, следует оформить передачу на регистр учета товаров №1 ЕГАИС'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Товары принимаются в торговый зал. Возможно, следует оформить передачу на регистр учета товаров №2 ЕГАИС'");
		КонецЕсли;
	ИначеЕсли ОтправкаСоСкладаПродажи Тогда
		ТекстСообщения = НСтр("ru = 'Товары отправляются из торгового зала. Возможно, следует оформить передачу на регистр учета товаров №1 ЕГАИС'");
	ИначеЕсли ПриемкаНаСкладПродажи Тогда
		ТекстСообщения = НСтр("ru = 'Товары принимаются в торговый зал. Возможно, следует оформить передачу на регистр учета товаров №2 ЕГАИС'");
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

// Проверяет есть ли в таблице товары алкогольная продукция ЕГАИС по реквизиту НеобходимостьВводаАкцизнойМарки
//
Функция ЕстьАлкогольнаяПродукцияЕГАИС(ТаблицаТовары) Экспорт
	
	Для Каждого Стр Из ТаблицаТовары Цикл
		Если Стр.НеобходимостьВводаАкцизнойМарки Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Проверяет заполнение реквизита ОбъемДАЛ для продукции, продаваемой в розлив.
//
Функция ПроверитьКоэффициентПересчетаВДАЛ(Форма, ТаблицаТоваров) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(СпрНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|	И СпрНоменклатура.ОбъемДАЛ = 0";
	
	Отказ = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru='В строке %1 у номенклатуры %2 не заполнен объем в декалитрах'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(Выборка.НомерСтроки, "ЧГ=0"), СокрЛП(Выборка.Номенклатура));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			Форма.Объект.Ссылка,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
			"Объект",
			Отказ);
	КонецЦикла;
	
	Возврат НЕ Отказ;
	
КонецФункции

#Область ОбработкаЭлементовЕГАИСвТЧ

Процедура УстановитьВидимостьКолонкиАкцизныхМарок(КолонкаСтатусУказанияАкцизныхМарок, УчетАлкогольнойПродукции) Экспорт
	
	КолонкаСтатусУказанияАкцизныхМарок.Видимость = УчетАлкогольнойПродукции;
	
КонецПроцедуры

#КонецОбласти

Функция ДанныеОформленияДокументовПоПриоритетам(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыОформленияДокументовЕГАИС.Документ,
	|	СтатусыОформленияДокументовЕГАИС.СтатусОформления КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|ГДЕ
	|	СтатусыОформленияДокументовЕГАИС.Основание = &Основание
	|");
	
	Запрос.УстановитьПараметр("Основание", ДокументСсылка);
	УстановитьПривилегированныйРежим(Истина);
	ДанныеПоСтатусам = Запрос.Выполнить().Выгрузить();
	
	ДокументыПоОснованию = ИнтеграцияЕГАИСВызовСервера.ДокументыПоОснованию(ДокументСсылка);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	СтатусыОформления = Новый Структура;
	Для Каждого СтрокаТЧ Из ДанныеПоСтатусам Цикл
		СтатусыОформления.Вставить(СтрокаТЧ.Документ.Метаданные().Имя, СтрокаТЧ.Статус);
	КонецЦикла;
	
	ТипДокумента = ТипЗнч(ДокументСсылка);
	
	ОформлениеДокументовПоПриоритетам = Новый Соответствие;
	Для Каждого КлючИЗначение Из СтатусыОформления Цикл
		
		Если КлючИЗначение.Ключ = Метаданные.Документы.АктСписанияЕГАИС.Имя Тогда
			
			Если Метаданные.ОпределяемыеТипы.ОснованиеАктаСписанияЕГАИС.Тип.СодержитТип(ТипДокумента) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.АктСписанияЕГАИС, ДокументыПоОснованию, СтатусыОформления);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 1, Данные);
			КонецЕсли;
			
		КонецЕсли;
		
		Если КлючИЗначение.Ключ = Метаданные.Документы.АктПостановкиНаБалансЕГАИС.Имя Тогда
			
			Если Метаданные.ОпределяемыеТипы.ОснованиеАктаПостановкиНаБалансЕГАИС.Тип.СодержитТип(ТипДокумента) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.АктПостановкиНаБалансЕГАИС, ДокументыПоОснованию, СтатусыОформления);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 2, Данные);
			КонецЕсли;
			
		КонецЕсли;
		
		Если КлючИЗначение.Ключ = Метаданные.Документы.ТТНИсходящаяЕГАИС.Имя
			Или КлючИЗначение.Ключ = Метаданные.Документы.ТТНВходящаяЕГАИС.Имя Тогда
			
			Если Метаданные.ОпределяемыеТипы.ОснованиеТТНИсходящаяЕГАИС.Тип.СодержитТип(ТипДокумента) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ТТНИсходящаяЕГАИС, ДокументыПоОснованию, СтатусыОформления);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 3, Данные);
			КонецЕсли;
			Если Метаданные.ОпределяемыеТипы.ОснованиеТТНВходящаяЕГАИС.Тип.СодержитТип(ТипДокумента) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ТТНВходящаяЕГАИС, ДокументыПоОснованию, СтатусыОформления);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 4, Данные);
			КонецЕсли;
			
		КонецЕсли;
		
		Если КлючИЗначение.Ключ = Метаданные.Документы.ЧекЕГАИС.Имя
			Или КлючИЗначение.Ключ = Метаданные.Документы.ЧекЕГАИСВозврат.Имя Тогда
			
			Если Метаданные.ОпределяемыеТипы.ОснованиеЧекаЕГАИС.Тип.СодержитТип(ТипДокумента) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ЧекЕГАИС, ДокументыПоОснованию, СтатусыОформления);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 1, Данные);
			КонецЕсли;
			Если Метаданные.ОпределяемыеТипы.ОснованиеЧекаЕГАИСВозврат.Тип.СодержитТип(ТипДокумента) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ЧекЕГАИСВозврат, ДокументыПоОснованию, СтатусыОформления);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 6, Данные);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОформлениеДокументовПоПриоритетам;
	
КонецФункции

Процедура СформироватьТекстДокументаЕГАИС(Форма, ОчищатьВместоИзмененияВидимости = Истина) Экспорт
	
	ОформлениеДокументовПоПриоритетам = ДанныеОформленияДокументовПоПриоритетам(
		Форма.Объект.Ссылка);
	
	ЕстьАлкогольнаяПродукция = ОформлениеДокументовПоПриоритетам.Количество() > 0;
	
	Если Не ОчищатьВместоИзмененияВидимости Тогда
		Форма.Элементы.ТекстДокументаЕГАИС.Видимость = ЕстьАлкогольнаяПродукция;
	Иначе
		Форма.ТекстДокументаЕГАИС = "";
	КонецЕсли;
	
	Если Не ЕстьАлкогольнаяПродукция Тогда
		Возврат;
	КонецЕсли;
	
	ФорматированныеСтроки = Новый Массив;
	Для Каждого КлючИЗначение Из ОформлениеДокументовПоПриоритетам Цикл
		Данные = КлючИЗначение.Значение;
		
		ЕстьДокументыСЧастичнымОформлением = Ложь;
		Для Каждого ДанныеДокументаЕГАИС Из Данные Цикл
			Если ДанныеДокументаЕГАИС.МассивДокументов.Количество() > 0 Тогда
				ЕстьДокументыСЧастичнымОформлением = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ДанныеДокументаЕГАИС Из Данные Цикл
			
			Если ЕстьДокументыСЧастичнымОформлением Тогда
				Если ДанныеДокументаЕГАИС.МассивДокументов.Количество() = 0 Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если ФорматированныеСтроки.Количество() <> 0 Тогда
				Если Данные.Количество() > 1 Тогда
					ФорматированныеСтроки.Добавить(" " + НСтр("ru = 'или'") + " ");
				Иначе
					ФорматированныеСтроки.Добавить("," + " ");
				КонецЕсли;
			КонецЕсли;
			
			ФорматированныеСтроки.Добавить(ДанныеДокументаЕГАИС.Представление);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Форма.ТекстДокументаЕГАИС = Новый ФорматированнаяСтрока(ФорматированныеСтроки);
	
КонецПроцедуры

Функция ТребуетсяОформлениеДокументовЕГАИС(Основание, МетаданныеДокументаЕГАИС) Экспорт
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь)
									ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			
			Возврат ТребуетсяОформление;
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			Возврат ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь)
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИСВозврат Тогда
			
			Возврат ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь);
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			
			Если (НЕ ТребуетсяОформление)
				И Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() >= ТекущаяДатаСеанса() Тогда
				ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь);
			КонецЕсли;
			
			Возврат ТребуетсяОформление;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь)
									ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			Возврат ТребуетсяОформление;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", "НоменклатураОприходование", Ложь)
								 ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары", "НоменклатураОприходование", Ложь);
			
			Возврат ТребуетсяОформление;
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", "Номенклатура", Ложь)
								 ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары", "Номенклатура", Ложь);
			
			Возврат ТребуетсяОформление;
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь)
									ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			Возврат ТребуетсяОформление;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь)
									ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			Возврат ТребуетсяОформление;
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			
			Возврат Ложь;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь)
									ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			Возврат ТребуетсяОформление;
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			
			Возврат Ложь;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			Возврат ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
				
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИСВозврат Тогда
			
			Возврат ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь);
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СборкаТоваров.Номенклатура.АлкогольнаяПродукция, ЛОЖЬ) КАК ЕстьАлкогольнаяПродукция,
		|	ЕСТЬNULL(СборкаТоваров.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК ЕстьМаркируемаяАлкогольнаяПродукция
		|ИЗ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|ГДЕ
		|	СборкаТоваров.Ссылка = &Основание
		|	И НЕ ЕСТЬNULL(СборкаТоваров.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
		|";
		
		Запрос.УстановитьПараметр("Основание", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
		
			Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
				
				Возврат Выборка.ЕстьАлкогольнаяПродукция;
				
			ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
				
				Возврат Выборка.ЕстьМаркируемаяАлкогольнаяПродукция;
				
			Иначе
				
				Возврат Ложь;
				
			КонецЕсли;
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары", , Ложь)
								ИЛИ ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
		Возврат ТребуетсяОформление;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратИзРегистра2ЕГАИС")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		
		ТребуетсяОформление = ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары",,Истина);
		Возврат ТребуетсяОформление;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не реализована процедура ""ИнтеграцияЕГАИСРТ.ТребуетсяОформлениеДокументовЕГАИС""'"));
	
КонецФункции

Функция ОбработатьНеобходимостьВводаАкцизнойМарки(СтруктураПараметров, Объект, ТекущаяСтрока) Экспорт
	
	Если СтруктураПараметров.Свойство("ШтрихкодУпаковкиЕГАИС")
		И СтруктураПараметров.Свойство("ТипУпаковки") Тогда
		Если СтруктураПараметров.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("КодАкцизнойМарки", СтруктураПараметров.Штрихкод);
			НайденныеСтроки = Объект.АкцизныеМарки.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяАкцизнаяСтрока = Объект.АкцизныеМарки.Добавить();
				НоваяАкцизнаяСтрока.КлючСвязи = ТекущаяСтрока.КлючСвязи;
				НоваяАкцизнаяСтрока.КодАкцизнойМарки = СтруктураПараметров.ШтрихКод;
				Если ЗначениеЗаполнено(СтруктураПараметров.ШтрихкодУпаковкиЕГАИС) Тогда
					НоваяАкцизнаяСтрока.АкцизнаяМарка = СтруктураПараметров.ШтрихкодУпаковкиЕГАИС;
					
					ЗапросСправка = Новый Запрос;
					ЗапросСправка.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
					|	АкцизныеМаркиЕГАИС.Справка2 КАК Справка2
					|ИЗ
					|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
					|ГДЕ
					|	АкцизныеМаркиЕГАИС.АкцизнаяМарка = &АкцизнаяМарка
					|	И АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС.Контрагент = &Организация
					|	И АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС.ТорговыйОбъект = &Магазин";
					ЗапросСправка.УстановитьПараметр("АкцизнаяМарка", СтруктураПараметров.ШтрихкодУпаковкиЕГАИС);
					ЗапросСправка.УстановитьПараметр("Организация", Объект.Организация);
					ЗапросСправка.УстановитьПараметр("Магазин", Объект.Магазин);
					Выборка = ЗапросСправка.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						НоваяАкцизнаяСтрока.Справка2 = Выборка.Справка2;
					КонецЕсли;
				Иначе
					УстановитьПривилегированныйРежим(Истина);
					ШтрихкодУпаковкиЕГАИС = Справочники.ШтрихкодыУпаковокТоваров.СгенерироватьАкцизнуюМарку(
												СтруктураПараметров.Штрихкод,
												ТекущаяСтрока.Номенклатура,
												ТекущаяСтрока.Характеристика);
					НоваяАкцизнаяСтрока.АкцизнаяМарка = ШтрихкодУпаковкиЕГАИС;
				КонецЕсли;
			КонецЕсли;
				
			ИнтеграцияЕГАИСРТКлиентСервер.ЗаполнитьКоличествоАкцизныхМарокВСтроке(ТекущаяСтрока, Объект.АкцизныеМарки);
			ИнтеграцияЕГАИСРТКлиентСервер.УстановитьЗначениеСтатусАкцизныхМарокВСтроке(ТекущаяСтрока);
			
		Иначе
			СтруктураПараметров.Вставить("НеобходимостьВводаАкцизнойМарки", Истина);
		КонецЕсли;
	Иначе
		СтруктураПараметров.Вставить("НеобходимостьВводаАкцизнойМарки", Истина);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработкаЗаполнения

#Область АктПостановкиНаБалансЕГАИС

Процедура ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
	КонецЕсли;
	
	ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.Организация               = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект            = РеквизитыОснования.Магазин;
		ДокументОбъект.ДокументОснование         = ДанныеЗаполнения;
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
		
		ЗаполнитьТоварыАктаПостановкиНаБалансПоОприходованиюТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.Организация               = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект            = РеквизитыОснования.Магазин;
		ДокументОбъект.ДокументОснование         = ДанныеЗаполнения;
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	АктСписанияЕГАИС.Ссылка КАК АктСписанияЕГАИС
		|ИЗ
		|	Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
		|ГДЕ
		|	АктСписанияЕГАИС.ДокументОснование = &ДокументОснование
		|	И АктСписанияЕГАИС.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричиныСписанийЕГАИС.Пересортица)";
		
		ВыборкаАктыСписания = Запрос.Выполнить().Выбрать();
		Если ВыборкаАктыСписания.Количество() = 1 Тогда
			ВыборкаАктыСписания.Следующий();
			ДокументОбъект.АктСписанияЕГАИС = ВыборкаАктыСписания.АктСписанияЕГАИС;
		КонецЕсли;
		
		ЗаполнитьТоварыАктаПостановкиНаБалансПоПересортицеТоваров(ДокументОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("АкцизныеМаркиВРегистр3") Тогда
		
		ДокументОбъект.ОрганизацияЕГАИС = ДанныеЗаполнения.ОрганизацияЕГАИС;
		ДокументОбъект.ВидДокумента     = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3;
		
		ТаблицаТовары = Новый ТаблицаЗначений;
		ТаблицаТовары.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
		ТаблицаТовары.Колонки.Добавить("Справка2",             Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
		
		Для Каждого ДанныеАкцизнойМарки Из ДанныеЗаполнения.АкцизныеМарки Цикл
			НоваяСтрока = ДокументОбъект.АкцизныеМарки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеАкцизнойМарки);
			НоваяСтрока.Количество = 1;
			
			НоваяСтрокаТовары = ТаблицаТовары.Добавить();
			НоваяСтрокаТовары.АлкогольнаяПродукция = ДанныеАкцизнойМарки.АлкогольнаяПродукция;
			НоваяСтрокаТовары.Справка2             = ДанныеАкцизнойМарки.Справка2;
		КонецЦикла;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	Т.Справка2 КАК Справка2,
		|	1 КАК Количество
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&Товары КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.АлкогольнаяПродукция,
		|	Т.Справка2 КАК Справка2,
		|	СУММА(Т.Количество) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	втТовары КАК Т
		|СГРУППИРОВАТЬ ПО
		|	Т.АлкогольнаяПродукция,
		|	Т.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2 КАК Справка2,
		|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура,
		|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Характеристика) КАК Характеристика
		|ПОМЕСТИТЬ СопоставленыеПозиции
		|ИЗ
		|	Товары КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция
		|			И СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2
		|ГДЕ
		|	Не СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) = 1
		|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Характеристика) < 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СопоставленыеПозиции.Номенклатура   КАК Номенклатура,
		|	СопоставленыеПозиции.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2             КАК Справка2,
		|	ТабличнаяЧасть.Количество           КАК Количество,
		|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок
		|ИЗ
		|	Товары КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
		|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленыеПозиции.АлкогольнаяПродукция
		|			И ТабличнаяЧасть.Справка2 = СопоставленыеПозиции.Справка2
		|			И НЕ СопоставленыеПозиции.АлкогольнаяПродукция ЕСТЬ NULL
		|");
		Запрос.УстановитьПараметр("Товары", ТаблицаТовары);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный  = Пользователи.ТекущийПользователь();
	ДокументОбъект.ТорговыйОбъект = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(ДокументОбъект.ТорговыйОбъект);
	ДокументОбъект.Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация, ДокументОбъект.Ответственный);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

// Заполняет товары акта постановки на баланс по оприходованию товаров.
//
Процедура ЗаполнитьТоварыАктаПостановкиНаБалансПоОприходованиюТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СопоставленыеПозиции.Номенклатура КАК Номенклатура,
	|	СопоставленыеПозиции.Характеристика КАК Характеристика
	|ИЗ
	|	СопоставленыеПозиции КАК СопоставленыеПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0");
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Имя));
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 1].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 2].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0 Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары акта постановки на баланс по пересортице товаров.
//
Процедура ЗаполнитьТоварыАктаПостановкиНаБалансПоПересортицеТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ПересортицаТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НоменклатураОприходование КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаОприходование КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СопоставленыеПозиции.Номенклатура КАК Номенклатура,
	|	СопоставленыеПозиции.Характеристика КАК Характеристика
	|ИЗ
	|	СопоставленыеПозиции КАК СопоставленыеПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаСоответствий = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаДокумента    = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0 Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область АктСписанияЕГАИС

Процедура ОбработкаЗаполненияАктаСписанияЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ПроверитьВозможностьВводаНаОсновании = Истина;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ПроверитьВозможностьВводаНаОсновании") Тогда
			ПроверитьВозможностьВводаНаОсновании = ДанныеЗаполнения.ПроверитьВозможностьВводаНаОсновании;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		Если ПроверитьВозможностьВводаНаОсновании Тогда
			ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "ОрганизацияЕГАИС, ТорговыйОбъект, Организация");
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыОснования);
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ВидДокумента      = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Склад");
		ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Склад, "ТипСклада");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ВидДокумента      = ?(ТипСклада = Перечисления.ТипыСкладов.СкладскоеПомещение,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2);
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Недостача;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ВидДокумента      = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Склад");
		ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Склад, "ТипСклада");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ВидДокумента      = ?(ТипСклада = Перечисления.ТипыСкладов.СкладскоеПомещение,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2);
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Пересортица;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Склад");
		ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Склад, "ТипСклада");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ВидДокумента      = ?(ТипСклада = Перечисления.ТипыСкладов.СкладскоеПомещение,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1,
		                                   Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2);
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный  = Пользователи.ТекущийПользователь();
	ДокументОбъект.ТорговыйОбъект = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(ДокументОбъект.ТорговыйОбъект);
	ДокументОбъект.Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация, ДокументОбъект.Ответственный);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

// Заполняет товары акта списания по передаче в регистр №2.
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(НЕ СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Упаковка,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	ДокументОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения акта списания на основании отчета о розничных продажах
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка "ОтчетОРозничныхПродажах"
//
Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ДобавитьМаркируемуюПродукцию = Неопределено, ДобавитьНеМаркируемуюПродукцию = Истина) Экспорт
	
	ДокументОбъект.ВидДокумента      = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
	ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
	ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
	ДокументОбъект.Дата              = НачалоДня(ДанныеЗаполнения.Дата);
	ДокументОбъект.Ответственный     = Пользователи.ТекущийПользователь();
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДанныеЗаполнения.Организация, ДанныеЗаполнения.Магазин);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	КонецЕсли;
	
	Если ДобавитьМаркируемуюПродукцию = Неопределено Тогда
		ДобавитьМаркируемуюПродукцию = Ложь;
		
		Если ЗначениеЗаполнено(ОрганизацияЕГАИС) Тогда
			НаходитсяВСельскойМестности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияЕГАИС, "НаходитсяВСельскойМестности");
			Если НаходитсяВСельскойМестности
				И Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() > ДокументОбъект.Дата Тогда
				ДобавитьМаркируемуюПродукцию = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ДобавитьМаркируемуюПродукцию, ДобавитьНеМаркируемуюПродукцию);
	
КонецПроцедуры

// Процедура заполнения ТЧ Товары акта списания на основании документа
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ДобавитьМаркируемуюПродукцию, ДобавитьНеМаркируемуюПродукцию = Истина)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование"             , ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"               , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ДобавитьМаркируемуюПродукцию"  , ДобавитьМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("ДобавитьНеМаркируемуюПродукцию", ДобавитьНеМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("ЭтаСсылка"                     , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Цена КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (&ДобавитьМаркируемуюПродукцию
	|				И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|			ИЛИ &ДобавитьНеМаркируемуюПродукцию
	|				И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ))
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.Цена,
	|	-ОформленныеТовары.Сумма,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	ТоварыКОформлению.Цена КАК Цена,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Цена КАК Цена,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения ТЧ Товары акта списания на основании документа
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения ТЧ Товары акта списания на основании документа
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Упаковка,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Упаковка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Упаковка КАК Упаковка,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование"              , ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС"        , Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"                      , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	СборкаТоваров.Номенклатура КАК Номенклатура,
	|	СборкаТоваров.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТаблицаАлкогольнаяПродукция
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СборкаТоваров.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И СборкаТоваров.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|ГДЕ
	|	СборкаТоваров.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ЕСТЬNULL(ТаблицаАлкогольнаяПродукция.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАлкогольнаяПродукция КАК ТаблицаАлкогольнаяПродукция
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаАлкогольнаяПродукция.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаАлкогольнаяПродукция.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.АлкогольнаяПродукция
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.АлкогольнаяПродукция
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументыЧекЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАлкогольнаяПродукция.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаАлкогольнаяПродукция.Номенклатура КАК Номенклатура,
	|	ТаблицаАлкогольнаяПродукция.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаАлкогольнаяПродукция КАК ТаблицаАлкогольнаяПродукция";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратИзРегистра2ЕГАИС

Процедура ОбработкаЗаполненияВозвратаИзРегистра2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
	КонецЕсли;
	
	Если ДокументОбъект.Метаданные().Реквизиты["ДокументОснование"].Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, МагазинОтправитель");
		
		ДокументОбъект.Организация = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект = РеквизитыОснования.МагазинОтправитель;
		
		ЗаполнитьТоварыВозвратаИзРегистра2ПоПеремещению(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.Организация = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект = РеквизитыОснования.Магазин;
		
		ЗаполнитьТоварыВозвратаИзРегистра2ПоОрдеру(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, ТорговыйОбъект, Грузоотправитель");
		
		ДокументОбъект.Организация = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект = РеквизитыОснования.ТорговыйОбъект;
		ДокументОбъект.ОрганизацияЕГАИС = РеквизитыОснования.Грузоотправитель;
		
		ЗаполнитьТоварыВозвратаИзРегистра2ПоИсходящейТТН(ДокументОбъект);
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный  = Пользователи.ТекущийПользователь();
	ДокументОбъект.ТорговыйОбъект = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(ДокументОбъект.ТорговыйОбъект);
	ДокументОбъект.Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация, ДокументОбъект.Ответственный);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

// Заполняет товары возврата из регистра №2 по ордеру на перемещение.
//
Процедура ЗаполнитьТоварыВозвратаИзРегистра2ПоОрдеру(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ВозвратИзРегистра2ЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары возврата из регистра №2 по перемещению товаров.
//
Процедура ЗаполнитьТоварыВозвратаИзРегистра2ПоПеремещению(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ВозвратИзРегистра2ЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары возврата из регистра №2 по исходящей ТТН.
//
Процедура ЗаполнитьТоварыВозвратаИзРегистра2ПоИсходящейТТН(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ВозвратИзРегистра2ЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения";
	
	ДокументОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОстаткиЕГАИС

Процедура ОбработкаЗаполненияОстатковЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ДокументОбъект.Ответственный  = Пользователи.ТекущийПользователь();
	ДокументОбъект.ТорговыйОбъект = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(ДокументОбъект.ТорговыйОбъект);
	ДокументОбъект.Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация, ДокументОбъект.Ответственный);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаВРегистр2ЕГАИС

Процедура ОбработкаЗаполненияПередачиВРегистр2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Товары") Тогда
			ЗаполнитьТоварыПередачиВРегистр2ИзМассива(ДокументОбъект, ДанныеЗаполнения.Товары);
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		ДокументОбъект.Организация = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект = РеквизитыОснования.Магазин;
		
		ЗаполнитьТоварыПередачиВРегистр2ПоПоступлению(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "ОрганизацияПолучатель, МагазинПолучатель");
		ДокументОбъект.ТорговыйОбъект = РеквизитыОснования.МагазинПолучатель;
		ДокументОбъект.Организация = РеквизитыОснования.ОрганизацияПолучатель;
		
		ЗаполнитьТоварыПередачиВРегистр2ПоПеремещению(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		ДокументОбъект.ТорговыйОбъект = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация = РеквизитыОснования.Организация;
		
		ЗаполнитьТоварыПередачиВРегистр2ПоОрдеру(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Грузополучатель, ТорговыйОбъект");
		ДокументОбъект.ОрганизацияЕГАИС = РеквизитыОснования.Грузополучатель;
		ДокументОбъект.ТорговыйОбъект 	= РеквизитыОснования.ТорговыйОбъект;
		
		ЗаполнитьТоварыПередачиВРегистр2ПоВходящейТТН(ДокументОбъект);
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный  = Пользователи.ТекущийПользователь();
	ДокументОбъект.ТорговыйОбъект = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(ДокументОбъект.ТорговыйОбъект);
	ДокументОбъект.Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация, ДокументОбъект.Ответственный);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

// Заполняет товары передачи в регистр №2 по массиву алкогольной продукции.
//
Процедура ЗаполнитьТоварыПередачиВРегистр2ИзМассива(ДокументОбъект, МассивТоваров)
	
	ТаблицаПередачиВРегистр2 = Новый ТаблицаЗначений;
	ТаблицаПередачиВРегистр2.Колонки.Добавить("АлкогольнаяПродукция", 	Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаПередачиВРегистр2.Колонки.Добавить("Количество", 			Новый ОписаниеТипов("Число"));
	ТаблицаПередачиВРегистр2.Колонки.Добавить("Справка2", 				Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	
	Для Каждого СтруктураЗначений Из МассивТоваров Цикл
		СтрокаТаблицы = ТаблицаПередачиВРегистр2.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтруктураЗначений);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаПередачиВРегистр2", ТаблицаПередачиВРегистр2);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&ТаблицаПередачиВРегистр2 КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	СУММА(Т.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	втТовары КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция)
	|			И (СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленыеПозиции.Номенклатура КАК Номенклатура,
	|	СопоставленыеПозиции.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленыеПозиции.АлкогольнаяПродукция
	|			И ТабличнаяЧасть.Справка2 = СопоставленыеПозиции.Справка2
	|			И (НЕ СопоставленыеПозиции.АлкогольнаяПродукция ЕСТЬ NULL)";
	
	Результат = Запрос.Выполнить();
	
	ДокументОбъект.Товары.Очистить();
	
	Если НЕ Результат.Пустой() Тогда
		ДокументОбъект.Товары.Загрузить(Результат.Выгрузить());
		
		Документы.ПередачаВРегистр2ЕГАИС.ПодобратьСправки2(ДокументОбъект);
	КонецЕсли;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары передачи в регистр №2 по ордеру на перемещение.
//
Процедура ЗаполнитьТоварыПередачиВРегистр2ПоОрдеру(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ПередачаВРегистр2ЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары передачи в регистр №2 по поступлению товаров.
//
Процедура ЗаполнитьТоварыПередачиВРегистр2ПоПоступлению(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("ТТН"              , ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДокументОснование, "ТТНВходящаяЕГАИС"));
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ПередачаВРегистр2ЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТТН.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(ТТН.Справка2, ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС.Товары КАК ТТН
	|		ПО (ТТН.Ссылка = &ТТН)
	|			И ТабличнаяЧасть.ИдентификаторСтроки = ТТН.ИдентификаторСтроки
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Справка2 КАК Справка2,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары передачи в регистр №2 по перемещению товаров.
//
Процедура ЗаполнитьТоварыПередачиВРегистр2ПоПеремещению(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("ТТН"              , ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДокументОснование, "ТТНВходящаяЕГАИС"));
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ПередачаВРегистр2ЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТТН.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(ТТН.Справка2, ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоотвестсвиеНоменклатуры
	|		ПО ТабличнаяЧасть.Номенклатура = СоотвестсвиеНоменклатуры.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = СоотвестсвиеНоменклатуры.Характеристика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС.Товары КАК ТТН
	|		ПО (ТТН.Ссылка = ТабличнаяЧасть.Ссылка.ТТНВходящаяЕГАИС)
	|			И (СоотвестсвиеНоменклатуры.АлкогольнаяПродукция = ТТН.АлкогольнаяПродукция)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Справка2 КАК Справка2,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары передачи в регистр №2 по входящей ттн.
//
Процедура ЗаполнитьТоварыПередачиВРегистр2ПоВходящейТТН(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("ПустаяУпаковка",    ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("Упаковка"));
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ПередачаВРегистр2ЕГАИС.КонечныеСтатусы());

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура         КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика       КАК Характеристика,
	|	ТабличнаяЧасть.КоличествоФакт       КАК Количество,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2             КАК Справка2
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Справка2 КАК Справка2,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	
	
КонецПроцедуры

#КонецОбласти

#Область ТТНИсходящаяЕГАИС

Процедура ОбработкаЗаполненияТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеТранспортногоРаздела = Неопределено;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Номер, Дата, Контрагент, ДанныеТранспортногоРаздела, ЦенаВключаетНДС");
		
		ДанныеТранспортногоРаздела = РеквизитыОснования.ДанныеТранспортногоРаздела.Получить();
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
		ДокументОбъект.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
		ДокументОбъект.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
		ДокументОбъект.ДатаОтгрузки      = РеквизитыОснования.Дата;
		ДокументОбъект.ДатаТТН           = РеквизитыОснования.Дата;
		ДокументОбъект.Упакована         = Истина;
		ДокументОбъект.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
		                                   РеквизитыОснования.Контрагент,
		                                   ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.ТорговыйОбъектЕГАИС.Имя),
		                                   Ложь);
		
		ЗаполнитьТоварыТТНИсходящейПоВозвратуПоставщику(ДокументОбъект, РеквизитыОснования);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Номер, Дата, Контрагент, ДанныеТранспортногоРаздела, ЦенаВключаетНДС");
		
		ДанныеТранспортногоРаздела = РеквизитыОснования.ДанныеТранспортногоРаздела.Получить();
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		ДокументОбъект.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
		ДокументОбъект.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
		ДокументОбъект.ДатаОтгрузки      = РеквизитыОснования.Дата;
		ДокументОбъект.ДатаТТН           = РеквизитыОснования.Дата;
		ДокументОбъект.Упакована         = Истина;
		ДокументОбъект.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
		                                   РеквизитыОснования.Контрагент,
		                                   ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.ТорговыйОбъектЕГАИС.Имя),
		                                   Ложь);
		
		ЗаполнитьТоварыТТНИсходящейПоРеализацииТоваров(ДокументОбъект, РеквизитыОснования);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, ОрганизацияПолучатель, МагазинОтправитель, МагазинПолучатель, Номер, Дата, ДанныеТранспортногоРаздела");
		
		ДанныеТранспортногоРаздела = РеквизитыОснования.ДанныеТранспортногоРаздела.Получить();
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.МагазинОтправитель;
		ДокументОбъект.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		ДокументОбъект.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
		ДокументОбъект.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
		ДокументОбъект.ДатаОтгрузки      = РеквизитыОснования.Дата;
		ДокументОбъект.ДатаТТН           = РеквизитыОснования.Дата;
		ДокументОбъект.Упакована         = Истина;
		ДокументОбъект.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.ОрганизацияПолучатель, РеквизитыОснования.МагазинПолучатель);
		
		ЗаполнитьТоварыТТНИсходящейПоПеремещениюТоваров(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, ОрганизацияПолучатель, Магазин, Номер, Дата");
		
		ДанныеТранспортногоРаздела = РеквизитыОснования.ДанныеТранспортногоРаздела.Получить();
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		ДокументОбъект.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
		ДокументОбъект.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
		ДокументОбъект.ДатаОтгрузки      = РеквизитыОснования.Дата;
		ДокументОбъект.ДатаТТН           = РеквизитыОснования.Дата;
		ДокументОбъект.Упакована         = Истина;
		ДокументОбъект.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.ОрганизацияПолучатель, РеквизитыОснования.Магазин);
		
		ЗаполнитьТоварыТТНИсходящейПоПередачеТоваровМеждуОрганизациями(ДокументОбъект);
		
	КонецЕсли;
	
	Если ДанныеТранспортногоРаздела <> Неопределено Тогда
		ДокументОбъект.ТипДоставки    = ДанныеТранспортногоРаздела.ВидПеревозки;
		ДокументОбъект.Перевозчик     = ДанныеТранспортногоРаздела.Перевозчик;
		ДокументОбъект.Автомобиль     = ДанныеТранспортногоРаздела.МаркаАвтомобиля + " " + ДанныеТранспортногоРаздела.ГосНомерАвтомобиля;
		ДокументОбъект.Прицеп         = ДанныеТранспортногоРаздела.МаркаПрицепа    + " " + ДанныеТранспортногоРаздела.ГосНомерПрицепа;
		ДокументОбъект.Заказчик       = ДанныеТранспортногоРаздела.Заказчик;
		ДокументОбъект.Водитель       = ДанныеТранспортногоРаздела.Водитель;
		ДокументОбъект.ПунктПогрузки  = ДанныеТранспортногоРаздела.ПунктПогрузки;
		ДокументОбъект.ПунктРазгрузки = ДанныеТранспортногоРаздела.ПунктРазгрузки;
	КонецЕсли;
	
	ДокументОбъект.Ответственный  = Пользователи.ТекущийПользователь();
	ДокументОбъект.ТорговыйОбъект = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(ДокументОбъект.ТорговыйОбъект);
	ДокументОбъект.Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация, ДокументОбъект.Ответственный);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Грузоотправитель) Тогда
		ДокументОбъект.Грузоотправитель = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ДокументОбъект.Поставщик = ДокументОбъект.Грузоотправитель;
	ДокументОбъект.СуммаДокумента = ДокументОбъект.Товары.Итог("Сумма");
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

Процедура ЗаполнитьТоварыТТНИсходящейПоВозвратуПоставщику(ДокументОбъект, РеквизитыОснования)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТабличнаяЧасть.Справка2.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТабличнаяЧасть.СуммаНДС / ТабличнаяЧасть.КоличествоУпаковок
	|	КОНЕЦ КАК ЦенаНДС,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма,
	|	0,
	|	NULL
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	СУММА(ТоварыКОформлению.ЦенаНДС) КАК ЦенаНДС,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Справка2 КАК Справка2,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ЕСТЬNULL(ТаблицаЗаполнения.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ) КАК ПродаетсяВРозлив,
	|	ТаблицаЗаполнения.ЦенаНДС КАК ЦенаНДС,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
		Если РеквизитыОснования.ЦенаВключаетНДС Тогда
			Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
				СтрокаТЧ.Цена = СтрокаДокумента.Сумма;
			Иначе
				СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4);
			КонецЕсли;
		Иначе
			Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
				СтрокаТЧ.Цена = СтрокаДокумента.Сумма + СтрокаДокумента.ЦенаНДС;
			Иначе
				СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4) + СтрокаДокумента.ЦенаНДС;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДокумента.ПродаетсяВРозлив Тогда
			ДокументОбъект.Упакована = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыТТНИсходящейПоПеремещениюТоваров(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТабличнаяЧасть.Справка2.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма,
	|	NULL
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Справка2 КАК Справка2,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ЕСТЬNULL(ТаблицаЗаполнения.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ) КАК ПродаетсяВРозлив,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
			СтрокаТЧ.Цена = СтрокаДокумента.Сумма;
		Иначе
			СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4);
		КонецЕсли;
		
		Если СтрокаДокумента.ПродаетсяВРозлив Тогда
			ДокументОбъект.Упакована = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыТТНИсходящейПоПередачеТоваровМеждуОрганизациями(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТабличнаяЧасть.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ЕСТЬNULL(ТаблицаЗаполнения.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ) КАК ПродаетсяВРозлив
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
			СтрокаТЧ.Цена = СтрокаДокумента.Сумма;
		Иначе
			СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4);
		КонецЕсли;
		
		Если СтрокаДокумента.ПродаетсяВРозлив Тогда
			ДокументОбъект.Упакована = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыТТНИсходящейПоРеализацииТоваров(ДокументОбъект, РеквизитыОснования)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТабличнаяЧасть.СуммаНДС / ТабличнаяЧасть.КоличествоУпаковок
	|	КОНЕЦ КАК ЦенаНДС
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма,
	|	0
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	СРЕДНЕЕ(ТоварыКОформлению.ЦенаНДС) КАК ЦенаНДС
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ЕСТЬNULL(ТаблицаЗаполнения.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ) КАК ПродаетсяВРозлив,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок,
	|	ТаблицаЗаполнения.ЦенаНДС КАК ЦенаНДС
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
		Если РеквизитыОснования.ЦенаВключаетНДС Тогда
			Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
				СтрокаТЧ.Цена = СтрокаДокумента.Сумма;
			Иначе
				СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4);
			КонецЕсли;
		Иначе
			Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
				СтрокаТЧ.Цена = СтрокаДокумента.Сумма + СтрокаДокумента.ЦенаНДС;
			Иначе
				СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4) + СтрокаДокумента.ЦенаНДС;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДокумента.ПродаетсяВРозлив Тогда
			ДокументОбъект.Упакована = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЧекЕГАИС

Процедура ОбработкаЗаполненияЧекаЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
	КонецЕсли;
	
	РеквизитыОснования = Неопределено;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("ВидОперации") И ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары Тогда
			Если ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда
				ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло("1" + Формат(ДокументОбъект.Дата, "ДФ=yyyyMMdd"));
			Иначе
				ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло("1" + Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMdd"));
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, ТорговыйОбъект, Номер");
		РеквизитыОснования.Вставить("Магазин", РеквизитыОснования.ТорговыйОбъект);
		
		ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары;
		ДокументОбъект.НомерЧекаККМ = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Истина));
		ДокументОбъект.НомерСмены   = ДокументОбъект.НомерЧекаККМ;
		
		ЗаполнитьТоварыЧекаЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Номер");
		
		ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.РеализацияЮридическомуЛицуСБезналичнойОплатой;
		ДокументОбъект.НомерЧекаККМ = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Истина));
		ДокументОбъект.НомерСмены   = ДокументОбъект.НомерЧекаККМ;
		
		ЗаполнитьТоварыЧекаЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары;
		ЗаполнитьТоварыЧекаЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если РеквизитыОснования <> Неопределено Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.Магазин);
		ДокументОбъект.СерийныйНомерККМ = СерийныйНомерККМ(РеквизитыОснования.Магазин);
	Иначе
		ДокументОбъект.СерийныйНомерККМ = СерийныйНомерККМ();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество,
	|	СУММА(ТабличнаяЧасть.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Ссылка <> &ЭтаСсылка
	|	И ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.АлкогольнаяПродукция";
	
	РеквизитыОрганизацииЕГАИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ОрганизацияЕГАИС, "ТорговыйОбъект, Контрагент");
	
	Если ЗначениеЗаполнено(РеквизитыОрганизацииЕГАИС.ТорговыйОбъект) Тогда
		Склад = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОрганизацииЕГАИС.ТорговыйОбъект, "СкладПродажи");
	Иначе
		Склад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
	ДокументОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		
		СтруктураЗаполненияЦены = Новый Структура;
		СтруктураЗаполненияЦены.Вставить("Дата"                     , ?(ЗначениеЗаполнено(ДокументОбъект.Дата), ДокументОбъект.Дата, ТекущаяДатаСеанса()));
		СтруктураЗаполненияЦены.Вставить("ОбъектЦенообразования"    , РеквизитыОрганизацииЕГАИС.ТорговыйОбъект);
		СтруктураЗаполненияЦены.Вставить("ПриводитьКМинимальнойЦене", Ложь);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьСумму"    , Неопределено);
		СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", СтруктураЗаполненияЦены);
		
		КэшированныеЗначения = ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(СтрокаТЧ, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Штрихкод КАК Штрихкод,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи,
	|	ТабличнаяЧасть.Цена КАК Цена
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьАкцизныеМарки.КлючСвязи КАК КлючСвязи,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК АкцизнаяМарка
	|ИЗ
	|	Документ.РеализацияТоваров.АкцизныеМарки КАК ТабличнаяЧастьАкцизныеМарки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ТабличнаяЧастьАкцизныеМарки.КодАкцизнойМарки = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|ГДЕ
	|	ТабличнаяЧастьАкцизныеМарки.Ссылка = &ДокументОснование";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваров = МассивРезультатов[0].Выгрузить();
	ТаблицаАкцизныхМарок = МассивРезультатов[1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаТовары Из ТаблицаТоваров Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТовары);
		
		Если НЕ СтрокаТЧ.Количество = 0 Тогда
			СтрокаТЧ.Цена = СтрокаТЧ.Сумма / СтрокаТЧ.Количество;
		КонецЕсли;
		
		АкцизныеМарки = ТаблицаАкцизныхМарок.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		
		Если АкцизныеМарки.Количество() <> 0 Тогда
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			
			Для Каждого СтрокаАкцизныеМарки Из АкцизныеМарки Цикл
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
				СтрокаТЧАкцизныеМарки.АкцизнаяМарка		  = СтрокаАкцизныеМарки.АкцизнаяМарка;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.СборкаТоваров КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Ссылка <> &ЭтаСсылка
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Порядок КАК Порядок,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Порядок,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество";
	
	ДокументОбъект.Товары.Очистить();
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Магазин", "Магазин");
	СтруктураРеквизитов.Вставить("Номер", "Номер");
	СтруктураРеквизитов.Вставить("Дата", "Дата");
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, СтруктураРеквизитов);
	
	ДокументОбъект.НомерЧекаККМ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РеквизитыОснования.Номер, Истина, Истина);
	ДокументОбъект.НомерСмены = "1" + Формат(РеквизитыОснования.Дата, "ДФ=yyyyMMdd");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
		СтрокаТЧ.Цена = ЗапасыСервер.ПолучитьЦенуПродажи(РеквизитыОснования.Магазин, ТекущаяДатаСеанса(), СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика, СтрокаТЧ.Упаковка, Истина);
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.КоличествоУпаковок;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЧекЕГАИСВозврат

Процедура ОбработкаЗаполненияЧекаЕГАИСВозврат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Номер, Дата, ДокументОснование");
		
		ДокументОбъект.ВидОперации      = Перечисления.ВидыОперацийЧекаЕГАИСВозврат.ВозвратОтЮридическогоЛицаСБезналичнойОплатой;
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.Магазин);
		ДокументОбъект.НомерЧекаККМ     = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Истина));
		ДокументОбъект.СерийныйНомерККМ = СерийныйНомерККМ(РеквизитыОснования.Магазин);
		
		Если ЗначениеЗаполнено(РеквизитыОснования.ДокументОснование) Тогда
			НомерНакладной = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.ДокументОснование, "Номер");
			ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерНакладной, Истина, Истина));
		КонецЕсли;
		
		ЗаполнитьТоварыЧекаЕГАИСВозвратНаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДокументОбъект.НомерСмены = 0 Тогда
			ДокументОбъект.НомерСмены = ДокументОбъект.НомерЧекаККМ;
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСВозвратНаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Цена КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Штрихкод КАК Штрихкод,
	|	ТабличнаяЧасть.ДокументПродажи КАК ДокументПродажи,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))) КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТабличнаяЧасть.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Ссылка <> &ЭтаСсылка
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.Количество,
	|	ТабличнаяЧасть.Цена,
	|	ТабличнаяЧасть.Сумма,
	|	ТабличнаяЧасть.Штрихкод,
	|	ТабличнаяЧасть.ДокументПродажи,
	|	ТабличнаяЧасть.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьАкцизныеМарки.КлючСвязи КАК КлючСвязи,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК АкцизнаяМарка
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.АкцизныеМарки КАК ТабличнаяЧастьАкцизныеМарки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ТабличнаяЧастьАкцизныеМарки.КодАкцизнойМарки = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|ГДЕ
	|	ТабличнаяЧастьАкцизныеМарки.Ссылка = &ДокументОснование";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваров = МассивРезультатов[0].Выгрузить();
	ТаблицаАкцизныхМарок = МассивРезультатов[1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаТовары Из ТаблицаТоваров Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТовары);
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) Тогда
			ТипШтрихкодаТовара = МенеджерОборудованияКлиентСервер.ОпределитьТипШтрихкода(СтрокаТовары.Штрихкод);
			Если НЕ (ТипШтрихкодаТовара = "EAN13"
						ИЛИ ТипШтрихкодаТовара = "ITF14"
						ИЛИ ТипШтрихкодаТовара = "EAN8") Тогда
				СтрокаТЧ.Штрихкод = "";
			КонецЕсли;
		КонецЕсли;
		
		АкцизныеМарки = ТаблицаАкцизныхМарок.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		
		Если АкцизныеМарки.Количество() <> 0 Тогда
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			
			Для Каждого СтрокаАкцизныеМарки Из АкцизныеМарки Цикл
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
				СтрокаТЧАкцизныеМарки.АкцизнаяМарка		  = СтрокаАкцизныеМарки.АкцизнаяМарка;
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТовары.ДокументПродажи) И ДокументОбъект.НомерСмены = 0 Тогда
			НомерНакладной = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовары.ДокументПродажи, "Номер");
			ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерНакладной, Истина, Истина));
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область РасчетСтатусаОформления

Функция СтруктураРеквизитыРасчетаСтатусаОформления()
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Проведен"      , Ложь);
	Реквизиты.Вставить("Дата"          , Неопределено);
	Реквизиты.Вставить("Номер"         , Неопределено);
	Реквизиты.Вставить("Ответственный" , Неопределено);
	Реквизиты.Вставить("ТорговыйОбъект", Неопределено);
	Реквизиты.Вставить("Контрагент"    , Неопределено);
	
	Возврат Реквизиты;
	
КонецФункции

// Рассчитать новый статус оформления документов ЕГАИС по документу-основанию.
//
// Параметры:
//  МетаданныеДокумента - Метаданные - Метаданные проверяемого документа.
//  ДокументОснование - ДокументСсылка - Ссылка на документ-основание.
//  РеквизитыДокументаОснования - Структура - Реквизиты документа-основания.
//  ЗаписьТребуется - Булево - Признак необходимости записи.
//
Процедура РассчитатьСтатусОформленияДляОбновления(МетаданныеДокумента, ДокументОснование, РеквизитыДокументаОснования, ЗаписьТребуется) Экспорт
	
	ПустаяСсылка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеДокумента.ПолноеИмя()).ПустаяСсылка();
	
	ВыполнятьЗаписьВРегистр = Ложь;
	ДанныеЗаписи = РегистрыСведений.СтатусыОформленияДокументовЕГАИС.ЗначенияПоУмолчанию(ДокументОснование, ПустаяСсылка);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыОформления.СтатусОформления КАК СтатусОформления,
	|	СтатусыОформления.Контрагент       КАК Контрагент,
	|	СтатусыОформления.ТорговыйОбъект   КАК ТорговыйОбъект,
	|	СтатусыОформления.Ответственный    КАК Ответственный,
	|	СтатусыОформления.Дата             КАК Дата,
	|	СтатусыОформления.Номер            КАК Номер
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформления
	|ГДЕ
	|	СтатусыОформления.Основание = &Основание
	|	И СтатусыОформления.Документ = &ПустаяСсылка
	|");
	
	Запрос.УстановитьПараметр("Основание",    ДокументОснование);
	Запрос.УстановитьПараметр("ПустаяСсылка", ПустаяСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если (Не РеквизитыДокументаОснования.Проведен Или Не ЗаписьТребуется) Тогда
			
			НаборЗаписей = РегистрыСведений.СтатусыОформленияДокументовЕГАИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Основание.Установить(ДокументОснование);
			НаборЗаписей.Отбор.Документ.Установить(ПустаяСсылка);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			Возврат;
			
		Иначе
			
			ВыполнятьЗаписьВРегистр = Истина;
			ДанныеЗаписи.СтатусОформления = ИнтеграцияЕГАИС.СтатусОформления(МетаданныеДокумента, ДокументОснование);
			ЗаполнитьЗначенияСвойств(ДанныеЗаписи, РеквизитыДокументаОснования);
			
		КонецЕсли;
		
	ИначеЕсли РеквизитыДокументаОснования.Проведен И ЗаписьТребуется Тогда
		
		ВыполнятьЗаписьВРегистр = Истина;
		ДанныеЗаписи.СтатусОформления = ИнтеграцияЕГАИС.СтатусОформления(МетаданныеДокумента, ДокументОснование);
		ЗаполнитьЗначенияСвойств(ДанныеЗаписи, РеквизитыДокументаОснования);
		
	КонецЕсли;
	
	Если ВыполнятьЗаписьВРегистр Тогда
		
		НаборЗаписей = РегистрыСведений.СтатусыОформленияДокументовЕГАИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(ДанныеЗаписи.Документ);
		НаборЗаписей.Отбор.Основание.Установить(ДанныеЗаписи.Основание);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеЗаписи);
		
		НоваяЗапись.Документ         = ДанныеЗаписи.Документ;
		НоваяЗапись.Основание        = ДанныеЗаписи.Основание;
		НоваяЗапись.СтатусОформления = ДанныеЗаписи.СтатусОформления;
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
	Иначе
		
		НаборЗаписей = РегистрыСведений.СтатусыОформленияДокументовЕГАИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(ПустаяСсылка);
		НаборЗаписей.Отбор.Основание.Установить(ДокументОснование);
		
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
		
	КонецЕсли;
	
КонецПроцедуры

#Область АктПостановкиНаБалансЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс
//
Процедура РассчитатьСтатусОформленияАктПостановкиНаБалансЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен      КАК Проведен,
			|	Таблица.Дата          КАК Дата,
			|	Таблица.Номер         КАК Номер,
			|	Таблица.Ответственный КАК Ответственный,
			|	Таблица.Магазин       КАК ТорговыйОбъект,
			|	Таблица.Организация   КАК Контрагент
			|ИЗ
			|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ОприходованиеТоваров")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ОприходованиеТоваров") Тогда
			ДокументОснование = Источник.ДокументОснование;
		Иначе
			ДокументОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		Если ТипЗнч(ДокументОснование) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС") Тогда
			Возврат;
		Иначе
			ИсточникСсылка = Источник.Ссылка;
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
			
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
			
		КонецЕсли;
	Иначе
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.АктПостановкиНаБалансЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.АктПостановкиНаБалансЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс
//
Функция ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИСНаОснованииОприходованияТовара(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
	
		Возврат ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИСНаОснованииПересортицыТоваров(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИСНаОснованииОприходованияТовара(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыАктПостановкиНаБалансЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК План,
	|	0                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИСНаОснованииПересортицыТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыАктПостановкиНаБалансЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область АктСписанияЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс
//
Процедура РассчитатьСтатусОформленияАктСписанияЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьДокументаОснования = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктСписанияЕГАИС")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			ИмяРеквизитаТорговыйОбъект = ?(ИсточникСсылка.Метаданные().Реквизиты.Найти("ТорговыйОбъект") = Неопределено, "Магазин", "ТорговыйОбъект");
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен      КАК Проведен,
			|	Таблица.Дата          КАК Дата,
			|	Таблица.Номер         КАК Номер,
			|	Таблица.Ответственный КАК Ответственный,
			|	Таблица." + ИмяРеквизитаТорговыйОбъект + " КАК ТорговыйОбъект,
			|	Таблица.Организация   КАК Контрагент
			|ИЗ
			|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеТоваров")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеТоваров") Тогда
			ДокументОснование = Источник.ДокументОснование;
		Иначе
			ДокументОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		Если ТипЗнч(ДокументОснование) = Тип("ДокументОбъект.АктСписанияЕГАИС")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
			Возврат;
		Иначе
			
			ЗаписьДокументаОснования = Истина;
			
			ИсточникСсылка = Источник.Ссылка;
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
			
			ЗначенияРеквизитов.Контрагент = Источник.Организация;
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "Магазин") Тогда
				ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		
		ЗаписьДокументаОснования = Истина;
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Контрагент = Источник.Организация;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "Магазин") Тогда
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.АктСписанияЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.АктСписанияЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
	Если Не ЗаписьДокументаОснования Тогда
		
		ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
			ИсточникСсылка,
			Метаданные.Документы.ЧекЕГАИС);
		
		ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
			Метаданные.Документы.ЧекЕГАИС,
			ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс
//
Функция ЗапросСтатусаОформленияАктСписанияЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииСписаниеНедостачТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииПересортицаТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииОтчетОРозничныхПродажах(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииРеализацииТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииСборкаТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииПередачаВРегистр2ЕГАИС(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратИзРегистра2ЕГАИС") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииВозвратИзРегистра2ЕГАИС(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииПересортицаТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество                                  КАК План,
	|	0                                                          КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииОтчетОРозничныхПродажах(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество                                  КАК План,
	|	0                                                          КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииРеализацииТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество                                  КАК План,
	|	0                                                          КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииСборкаТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество                                  КАК План,
	|	0                                                          КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыЧекЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииПередачаВРегистр2ЕГАИС(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество                                  КАК План,
	|	0                                                          КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииВозвратИзРегистра2ЕГАИС(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество                                  КАК План,
	|	0                                                          КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииСписаниеНедостачТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваровТовары.Номенклатура КАК Номенклатура,
	|	СписаниеТоваровТовары.Характеристика КАК Характеристика,
	|	СУММА(СписаниеТоваровТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СписаниеТоваровТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СписаниеТоваровТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеТоваровТовары.Характеристика,
	|	СписаниеТоваровТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ Соответствие
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	(СоответствиеНоменклатурыЕГАИС.Номенклатура, СоответствиеНоменклатурыЕГАИС.Характеристика) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика
	|			ИЗ
	|				ТаблицаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Соответствие.АлкогольнаяПродукция, &ПустаяСсылка) КАК АлкогольнаяПродукция,
	|	ТаблицаТоваров.Количество КАК План,
	|	0 КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Соответствие КАК Соответствие
	|		ПО ТаблицаТоваров.Номенклатура = Соответствие.Номенклатура
	|			И ТаблицаТоваров.Характеристика = Соответствие.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	0,
	|	ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.Факт > 0
	|			И Т.План > 0) КАК ЕстьОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.Факт >= 0
	|			И Т.План > Т.Факт) КАК ЕстьНеОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.План <= Т.Факт) КАК ЕстьПолностьюОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.АлкогольнаяПродукция = &ПустаяСсылка) КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.План < Т.Факт) КАК ЕстьОшибкиОформления");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область ВозвратИзРегистра2ЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс
//
Процедура РассчитатьСтатусОформленияВозвратИзРегистра2ЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьТребуется = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.ВозвратИзРегистра2ЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка)
			И ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	НЕ Таблица.ПометкаУдаления              КАК Проведен,
			|	Таблица.Дата                            КАК Дата,
			|	Таблица.Номер                           КАК Номер,
			|	Таблица.Ответственный                   КАК Ответственный,
			|	Таблица.Грузоотправитель                КАК Грузоотправитель,
			|	Таблица.Грузоотправитель.ТорговыйОбъект КАК ТорговыйОбъект,
			|	Таблица.Грузоотправитель.Контрагент     КАК Контрагент
			|ИЗ
			|	Документ.ТТНИсходящаяЕГАИС КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТТНИсходящаяЕГАИСТовары.НомерСтроки КАК НомерСтроки,
			|	ТТНИсходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
			|	ТТНИсходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
			|	ТТНИсходящаяЕГАИСТовары.Характеристика КАК Характеристика,
			|	ТТНИсходящаяЕГАИСТовары.Упаковка КАК Упаковка,
			|	ТТНИсходящаяЕГАИСТовары.Количество КАК Количество,
			|	ТТНИсходящаяЕГАИСТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТТНИсходящаяЕГАИСТовары.Справка2 КАК Справка2
			|ИЗ
			|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
			|ГДЕ
			|	ТТНИсходящаяЕГАИСТовары.Ссылка = &Ссылка
			|	И ТТНИсходящаяЕГАИСТовары.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)";
			
			СтруктураПересчетаСуммы = ИнтеграцияЕГАИСКлиентСервер.СтруктураПересчетаСуммы("КоличествоУпаковок");
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ЗаписьТребуется = НЕ РезультатЗапроса.Пустой()
				И ИнтеграцияЕГАИС.ПодобратьСправки2ДляВозвратаИзРегистра2(
					РезультатЗапроса.Выгрузить(),
					Выборка.Грузоотправитель,
					Неопределено,
					СтруктураПересчетаСуммы);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		ИсточникСсылка = Источник.Ссылка;
		
		СтруктураПересчетаСуммы = ИнтеграцияЕГАИСКлиентСервер.СтруктураПересчетаСуммы("КоличествоУпаковок");
		
		ПараметрыОтбора = Новый Структура("Справка2", Справочники.Справки2ЕГАИС.ПустаяСсылка());
		ТоварыБезСерий = Источник.Товары.Выгрузить(ПараметрыОтбора);
		
		ЗаписьТребуется = ТоварыБезСерий.Количество() <> 0
			И ИнтеграцияЕГАИС.ПодобратьСправки2ДляВозвратаИзРегистра2(
				ТоварыБезСерий,
				Источник.Грузоотправитель,
				Неопределено,
				СтруктураПересчетаСуммы);
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		ЗначенияРеквизитов.Проведен = НЕ Источник.ПометкаУдаления;
		
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Грузоотправитель, "ТорговыйОбъект, Контрагент");
		
		ЗначенияРеквизитов.Контрагент     = РеквизитыОбъекта.Контрагент;
		ЗначенияРеквизитов.ТорговыйОбъект = РеквизитыОбъекта.ТорговыйОбъект;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ВозвратИзРегистра2ЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс
//
Функция ЗапросСтатусаОформленияВозвратИзРегистра2ЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		Возврат ЗапросСтатусаОформленияВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящаяЕГАИС(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящаяЕГАИС(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыВозвратИзРегистра2ЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Количество           КАК План,
	|	0                           КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.АлкогольнаяПродукция = &ПустаяСсылка) КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область ПередачаВРегистр2ЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс
//
Процедура РассчитатьСтатусОформленияПередачаВРегистр2ЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьТребуется    = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка)
			И ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен                       КАК Проведен,
			|	Таблица.Дата                           КАК Дата,
			|	Таблица.Номер                          КАК Номер,
			|	Таблица.Ответственный                  КАК Ответственный,
			|	Таблица.Грузополучатель                КАК Грузополучатель,
			|	Таблица.Грузополучатель.ТорговыйОбъект КАК ТорговыйОбъект,
			|	Таблица.Грузополучатель.Контрагент     КАК Контрагент,
			|	СтатусыДокументовЕГАИС.Статус          КАК Статус
			|ИЗ
			|	Документ.ТТНВходящаяЕГАИС КАК Таблица
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
			|		ПО СтатусыДокументовЕГАИС.Документ = Таблица.Ссылка
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
			ЗаписьТребуется = ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2(Выборка.Грузополучатель)
			                И (    Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден
			                   Или Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
		
		ИсточникСсылка = Источник.Ссылка;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СтатусыДокументовЕГАИС.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|ГДЕ
		|	СтатусыДокументовЕГАИС.Документ = &Ссылка
		|");
		
		Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаписьТребуется = ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2(Источник.Грузополучатель)
		                И (    Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден
		                   Или Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.ТорговыйОбъект;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ПередачаВРегистр2ЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс
//
Функция ЗапросСтатусаОформленияПередачаВРегистр2ЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		Возврат ЗапросСтатусаОформленияПередачаВРегистр2ЕГАИСНаОснованииТТНВходящаяЕГАИС(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияПередачаВРегистр2ЕГАИСНаОснованииТТНВходящаяЕГАИС(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыПередачаВРегистр2ЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Количество           КАК План,
	|	0                           КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.АлкогольнаяПродукция = &ПустаяСсылка) КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область ТТНИсходящаяЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусОформленияТТНИсходящаяЕГАИС
//
Процедура РассчитатьСтатусОформленияТТНИсходящаяЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьДокументаОснования = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Если ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Магазин       КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.ПередачаТоваровМеждуОрганизациями КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен           КАК Проведен,
				|	Таблица.Дата               КАК Дата,
				|	Таблица.Номер              КАК Номер,
				|	Таблица.Ответственный      КАК Ответственный,
				|	Таблица.МагазинОтправитель КАК ТорговыйОбъект,
				|	Таблица.Организация        КАК Контрагент
				|ИЗ
				|	Документ.ПеремещениеТоваров КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Магазин       КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.ВозвратТоваровПоставщику КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Склад         КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.РеализацияТоваров КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			Иначе
				ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНИсходящаяЕГАИС'");
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ИсточникСсылка  = Источник.Ссылка;
		ЗаписьДокументаОснования = Истина;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.МагазинОтправитель;
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваров") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		Иначе
			ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНИсходящаяЕГАИС'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ТТНИсходящаяЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ТТНИсходящаяЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	Если Не ЗаписьДокументаОснования Тогда
		
		ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
			ИсточникСсылка,
			Метаданные.Документы.ЧекЕГАИС);
		
		ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
			Метаданные.Документы.ЧекЕГАИС,
			ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	КонецЕсли;
		
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияТТНИсходящаяЕГАИС
//
Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииВозвратТоваровПоставщику(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииРеализацииТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииПеремещениеТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииПередачаТоваровМеждуОрганизациями(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииВозвратТоваровПоставщику(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыТТНИсходящаяЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииПеремещениеТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыТТНИсходящаяЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество                                  КАК План,
	|	0                                                          КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииПередачаТоваровМеждуОрганизациями(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыТТНИсходящаяЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции


#КонецОбласти

#Область ТТНВходящаяЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусОформленияТТНВходящаяЕГАИС
//
Процедура РассчитатьСтатусОформленияТТНВходящаяЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Если ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен              КАК Проведен,
				|	Таблица.Дата                  КАК Дата,
				|	Таблица.Номер                 КАК Номер,
				|	Таблица.Ответственный         КАК Ответственный,
				|	Таблица.Магазин               КАК ТорговыйОбъект,
				|	Таблица.ОрганизацияПолучатель КАК Контрагент
				|ИЗ
				|	Документ.ПередачаТоваровМеждуОрганизациями КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен              КАК Проведен,
				|	Таблица.Дата                  КАК Дата,
				|	Таблица.Номер                 КАК Номер,
				|	Таблица.Ответственный         КАК Ответственный,
				|	Таблица.МагазинПолучатель     КАК ТорговыйОбъект,
				|	Таблица.ОрганизацияПолучатель КАК Контрагент
				|ИЗ
				|	Документ.ПеремещениеТоваров КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Магазин       КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.ПоступлениеТоваров КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			Иначе
				ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНВходящаяЕГАИС'");
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
			ЗначенияРеквизитов.Контрагент     = Источник.ОрганизацияПолучатель;
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.МагазинПолучатель;
			ЗначенияРеквизитов.Контрагент     = Источник.ОрганизацияПолучатель;
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПоступлениеТоваров") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		Иначе
			ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНВходящаяЕГАИС'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ТТНВходящаяЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ТТНВходящаяЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияТТНВходящаяЕГАИС
//
Функция ЗапросСтатусаОформленияТТНВходящаяЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПриобретениеТоваровУслуг(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПеремещениеТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПередачаТоваровМеждуОрганизациями(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПриобретениеТоваровУслуг(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыТТНВходящаяЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПеремещениеТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыТТНВходящаяЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПередачаТоваровМеждуОрганизациями(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыТТНВходящаяЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииРеализацииТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыТТНВходящаяЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область ЧекЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс
//
Процедура РассчитатьСтатусОформленияЧекЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьДокументаОснования = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИС")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.ЧекЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Если ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
				
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Магазин       КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Организация
				|ИЗ
				|	Документ.РеализацияТоваров КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
				
			Иначе
				
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Магазин       КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Организация
				|ИЗ
				|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
				
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ЗаписьДокументаОснования = Истина;
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ЧекЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ЧекЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
	Если Не ЗаписьДокументаОснования Тогда
		
		ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
			ИсточникСсылка,
			Метаданные.Документы.АктСписанияЕГАИС);
		
		ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
			Метаданные.Документы.АктСписанияЕГАИС,
			ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс
//
Функция ЗапросСтатусаОформленияЧекЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияЧекЕГАИСНаОснованииРеализацияТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияЧекЕГАИСНаОснованииСборкаТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеТоваров") 
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСЧекЕГАИСНаОснованииСписаниеТоваров(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияЧекЕГАИСНаОснованииРеализацияТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК План,
	|	0 КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ТабличнаяЧасть.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	0,
	|	ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.Факт > 0
	|			И Т.План > 0) КАК ЕстьОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.Факт >= 0
	|			И Т.План > Т.Факт) КАК ЕстьНеОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.План <= Т.Факт) КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.План < Т.Факт) КАК ЕстьОшибкиОформления");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияЧекЕГАИСНаОснованииСборкаТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыЧекЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСЧекЕГАИСНаОснованииСписаниеТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументыЧекЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область ЧекЕГАИСВозврат

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс
//
Процедура РассчитатьСтатусОформленияЧекЕГАИСВозврат(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИСВозврат")
		ИЛИ ТипЗнч(Источник) = Тип("ДокументСсылка.ЧекЕГАИСВозврат") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Если ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
				
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Магазин       КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Организация
				|ИЗ
				|	Документ.ВозвратТоваровОтПокупателя КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
				
			Иначе
				
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Магазин       КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Организация
				|ИЗ
				|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
				
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.Магазин;
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ЧекЕГАИСВозврат);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ЧекЕГАИСВозврат,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс
//
Функция ЗапросСтатусаОформленияЧекЕГАИСВозврат(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Возврат ЗапросСтатусаОформленияЧекЕГАИСВозвратНаОснованииВозвратТоваровОтКлиента(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияЧекЕГАИСВозвратНаОснованииВозвратТоваровОтКлиента(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыЧекЕГАИСВозврат)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)	
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План <= Т.Факт)                       КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                                                                                   КАК ТребуетсяСопоставлениеНоменклатуры,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 Из Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|");
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура РассчитатьСтатусыОформленияДокументов(Параметры) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "РегистрСведений.СтатусыДокументовЕГАИС") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК МаркируемаяАлкогольнаяПродукция
	|ПОМЕСТИТЬ втАлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СправочникНоменклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Документ КАК Документ,
	|	ВложенныйЗапрос.Основание КАК Основание
	|ПОМЕСТИТЬ втДокументыДляОбработки
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.АктПостановкиНаБалансЕГАИС.ПустаяСсылка) КАК Документ,
	|		ТабличнаяЧасть.Ссылка КАК Основание
	|	ИЗ
	|		Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.АктПостановкиНаБалансЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.НоменклатураОприходование)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка),
	|		ТаблицаДокумента.Ссылка
	|	ИЗ
	|		Документ.СборкаТоваров КАК ТаблицаДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТаблицаДокумента.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ПоступлениеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ЧекЕГАИС.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|				И (СправочникНоменклатураАлкогольнаяПродукция.МаркируемаяАлкогольнаяПродукция)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ЧекЕГАИС.ПустаяСсылка),
	|		ТаблицаДокумента.Ссылка
	|	ИЗ
	|		Документ.СборкаТоваров КАК ТаблицаДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТаблицаДокумента.Номенклатура)
	|				И (СправочникНоменклатураАлкогольнаяПродукция.МаркируемаяАлкогольнаяПродукция)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗНАЧЕНИЕ(Документ.ЧекЕГАИСВозврат.ПустаяСсылка),
	|		ТабличнаяЧасть.Ссылка
	|	ИЗ
	|		Документ.ВозвратТоваровОтПокупателя.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|			ПО (СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура)
	|				И (СправочникНоменклатураАлкогольнаяПродукция.МаркируемаяАлкогольнаяПродукция)) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Магазин КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПересортицаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ОприходованиеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.СписаниеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.СборкаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНИсходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.ОрганизацияПолучатель
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНВходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.МагазинОтправитель,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНИсходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПеремещениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.МагазинПолучатель,
	|	ДанныеДокумента.ОрганизацияПолучатель
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНВходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПеремещениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ВозвратТоваровПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.РеализацияТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ,
	|	ДанныеДляОбработки.Основание,
	|	ДанныеДокумента.ВерсияДанных,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Магазин,
	|	ДанныеДокумента.Организация
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание)
	|ГДЕ
	|	НЕ ДанныеДокумента.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ВозвратТоваровОтПокупателя");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СтатусыОформленияДокументовЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Документ",  Выборка.Документ);
			ЭлементБлокировки.УстановитьЗначение("Основание", Выборка.Основание);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(Выборка.Основание.Метаданные().ПолноеИмя());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Основание);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ВерсияДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Основание, "ВерсияДанных");
			Если ВерсияДанных <> Выборка.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			МетаданныеДокумента = Выборка.Документ.Метаданные();
			
			ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
				Выборка.Основание,
				МетаданныеДокумента);
			
			РассчитатьСтатусОформленияДляОбновления(
				МетаданныеДокумента,
				Выборка.Основание, ЗначенияРеквизитов, ЗаписьТребуется);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать запись регистра сведений ""СтатусыОформленияДокументовЕГАИС""
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Метаданные.РегистрыСведений.СтатусыОформленияДокументовЕГАИС,
			                         Выборка.Основание,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьОснованиеТТНВходящейЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВходящаяТТН.Ссылка КАК ТТН,
	|	ВходящаяТТН.ВерсияДанных КАК ТТНВерсияДанных,
	|	ПоступлениеТоваров.Ссылка КАК ДокументОснование,
	|	ПоступлениеТоваров.ВерсияДанных КАК ДокументОснованиеВерсияДанных
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ВходящаяТТН
	|		ПО ПоступлениеТоваров.ТТНВходящаяЕГАИС = ВходящаяТТН.Ссылка
	|ГДЕ
	|	ВходящаяТТН.ДокументОснование = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВходящаяТТН.Ссылка,
	|	ВходящаяТТН.ВерсияДанных,
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.ВерсияДанных
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ВходящаяТТН
	|		ПО ПеремещениеТоваров.ТТНВходящаяЕГАИС = ВходящаяТТН.Ссылка
	|ГДЕ
	|	ВходящаяТТН.ДокументОснование = НЕОПРЕДЕЛЕНО";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНВходящаяЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ТТН);
			Блокировка.Заблокировать();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ." + Выборка.ДокументОснование.Метаданные().Имя);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ДокументОснование);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.ТТН.ПолучитьОбъект();
			
			Если ДокументОбъект = Неопределено Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Если ДокументОбъект.ВерсияДанных <> Выборка.ТТНВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ДокументОснованиеОбъект = Выборка.ДокументОснование.ПолучитьОбъект();
			
			Если ДокументОснованиеОбъект.ВерсияДанных <> Выборка.ДокументОснованиеВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ДокументОбъект.ДокументОснование = Выборка.ДокументОснование;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.ТТН);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ТТНВходящаяЕГАИС,
				Выборка.ТТН,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруТТНИсходящейЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Номенклатура.Имя));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТИсходящиеТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	(ТабличнаяЧасть.Номенклатура = &Номенклатура
	|			ИЛИ ТабличнаяЧасть.КоличествоУпаковок = 0
	|			ИЛИ ТабличнаяЧасть.КоличествоФакт <> 0
	|				И НЕ ТабличнаяЧасть.Ссылка.ЕстьРасхождения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИсходящиеТТН.Ссылка КАК Ссылка,
	|	ВТИсходящиеТТН.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	УдалитьСоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	УдалитьСоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ВТИсходящиеТТН КАК ВТИсходящиеТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|		ПО ВТИсходящиеТТН.Ссылка = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьСоответствиеНоменклатурыЕГАИС КАК УдалитьСоответствиеНоменклатурыЕГАИС
	|		ПО (ТабличнаяЧасть.АлкогольнаяПродукция = УдалитьСоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция)
	|ИТОГИ ПО
	|	Ссылка";
	
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНИсходящаяЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоДокументам.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект.ВерсияДанных <> ВыборкаПоДокументам.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ЕстьРасхождения = Ложь;
			Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
				Если СтрокаТЧ.КоличествоФакт <> 0 Тогда
					ЕстьРасхождения = Истина;
				КонецЕсли;
			КонецЦикла;
			
			ДокументОбъект.ЕстьРасхождения = ЕстьРасхождения;
			
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				СтрокаТЧ = ДокументОбъект.Товары[ВыборкаПоТоварам.НомерСтроки - 1];
				СтрокаТЧ.Номенклатура       = ВыборкаПоТоварам.Номенклатура;
				СтрокаТЧ.Характеристика     = ВыборкаПоТоварам.Характеристика;
				СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.Количество;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ТТНИсходящаяЕГАИС,
				ВыборкаПоДокументам.Ссылка,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьПорядокВСопоставленииНоменклатурыЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Порядок = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Порядок) КАК Порядок
	|ПОМЕСТИТЬ МаксимальныйПорядок
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанные КАК ИсходныеДанные
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ИсходныеДанные.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.Номенклатура КАК Номенклатура,
	|	ИсходныеДанные.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(МаксимальныйПорядок.Порядок, 0) КАК Порядок
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныйПорядок КАК МаксимальныйПорядок
	|		ПО ИсходныеДанные.АлкогольнаяПродукция = МаксимальныйПорядок.АлкогольнаяПродукция";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
		
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствиеНоменклатурыЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура"  , Выборка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Выборка.Характеристика);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Запись = НаборЗаписей[0];
			Запись.Порядок = Выборка.Порядок + 1;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать запись регистра сведений ""СоответствиеНоменклатурыЕГАИС""
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС,
			                         Выборка.Основание,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Порядок КАК Порядок,
	|	КОЛИЧЕСТВО(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК КоличествоЗаписей
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(СоответствиеНоменклатурыЕГАИС.Номенклатура) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанные КАК ИсходныеДанные
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ИсходныеДанные.АлкогольнаяПродукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|ИТОГИ ПО
	|	АлкогольнаяПродукция";
	
	ВыборкаИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтог.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
		
			Порядок = 0;
			
			Отказ = Ложь;
			
			Выборка = ВыборкаИтог.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствиеНоменклатурыЕГАИС");
				ЭлементБлокировки.УстановитьЗначение("Номенклатура"  , Выборка.Номенклатура);
				ЭлементБлокировки.УстановитьЗначение("Характеристика", Выборка.Характеристика);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();
				
				НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
				НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
				НаборЗаписей.Прочитать();
				
				Если НаборЗаписей.Количество() = 0 Тогда
					Отказ = Истина;
					Прервать;
				КонецЕсли;
				
				Порядок = Порядок + 1;
				
				Запись = НаборЗаписей[0];
				Запись.Порядок = Порядок;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЦикла;
			
			Если Отказ Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать запись регистра сведений ""СоответствиеНоменклатурыЕГАИС""
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС,
			                         Выборка.Основание,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюСоответствиеНоменклатуры(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.УдалитьНоменклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|");
	
	ЭлементыКлассификатора = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ЭлементыКлассификатора);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюСоответствиеНоменклатуры(Параметры) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Документ.ТТНИсходящаяЕГАИС") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ПолноеИмяОбъекта = "Справочник.КлассификаторАлкогольнойПродукцииЕГАИС";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Ссылка              КАК Ссылка,
	|	ДанныеДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	ВтСсылкиДляОбработки КАК ДанныеДляОбработки
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтСсылкиДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если СправочникОбъект = Неопределено Тогда
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				
				ЗафиксироватьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Если СправочникОбъект.ВерсияДанных <> Выборка.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(СправочникОбъект.УдалитьНоменклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(СправочникОбъект.УдалитьХарактеристика);
			НаборЗаписей.Отбор.АлкогольнаяПродукция.Установить(Выборка.Ссылка);
			
			ЗаписьНабора = НаборЗаписей.Добавить();
			ЗаписьНабора.АлкогольнаяПродукция = Выборка.Ссылка;
			ЗаписьНабора.Номенклатура         = СправочникОбъект.УдалитьНоменклатура;
			ЗаписьНабора.Характеристика       = СправочникОбъект.УдалитьХарактеристика;
			ЗаписьНабора.Порядок              = 1;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			СправочникОбъект.УдалитьНоменклатура   = Неопределено;
			СправочникОбъект.УдалитьХарактеристика = Неопределено;
			СправочникОбъект.УдалитьСопоставлено   = Ложь;
			СправочникОбъект.УдалитьУпаковки.Очистить();
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент справочника: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.КлассификаторАлкогольнойПродукцииЕГАИС,
				Выборка.Ссылка,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюТТНИсходящаяЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Номенклатура.Имя));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	(ТабличнаяЧасть.Номенклатура = &Номенклатура
	|	ИЛИ ТабличнаяЧасть.КоличествоУпаковок = 0
	|	ИЛИ (ТабличнаяЧасть.КоличествоФакт <> 0 И НЕ ТабличнаяЧасть.Ссылка.ЕстьРасхождения))
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюТТНИсходящаяЕГАИС(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ТТНИсходящаяЕГАИС";
	МетаданныеОбъекта = Метаданные.Документы.ТТНИсходящаяЕГАИС;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Ссылка                                    КАК Ссылка,
	|	ДанныеДляОбработки.Ссылка.ВерсияДанных                       КАК ВерсияДанных,
	|	ТабличнаяЧасть.НомерСтроки                                   КАК НомерСтроки,
	|	ТабличнаяЧасть.АлкогольнаяПродукция                          КАК АлкогольнаяПродукция,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.УдалитьНоменклатура   КАК Номенклатура,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.УдалитьХарактеристика КАК Характеристика
	|ИЗ
	|	ВтСсылкиДляОбработки КАК ДанныеДляОбработки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|		ПО ТабличнаяЧасть.Ссылка = ДанныеДляОбработки.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|	
	|ИТОГИ ПО
	|	ДанныеДляОбработки.Ссылка
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтСсылкиДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоДокументам.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоДокументам.Ссылка);
				
				ЗафиксироватьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Если ДокументОбъект.ВерсияДанных <> ВыборкаПоДокументам.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ЕстьРасхождения = Ложь;
			Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
				Если СтрокаТЧ.КоличествоФакт <> 0 Тогда
					ЕстьРасхождения = Истина;
				КонецЕсли;
			КонецЦикла;
			
			ДокументОбъект.ЕстьРасхождения = ЕстьРасхождения;
			
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				СтрокаТЧ = ДокументОбъект.Товары[ВыборкаПоТоварам.НомерСтроки - 1];
				СтрокаТЧ.Номенклатура       = ВыборкаПоТоварам.Номенклатура;
				СтрокаТЧ.Характеристика     = ВыборкаПоТоварам.Характеристика;
				СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.Количество;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ТТНИсходящаяЕГАИС,
				ВыборкаПоДокументам.Ссылка,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюСтатусыОформленияДокументовЕГАИС(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СтатусыОформленияДокументовЕГАИС";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка                              КАК Ссылка,
	|	ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК МаркируемаяАлкогольнаяПродукция
	|ПОМЕСТИТЬ втАлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|ИНДЕКСИРОВАТЬ ПО
	|	СправочникНоменклатура.Ссылка
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.АктПостановкиНаБалансЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                                      КАК Основание
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.АктПостановкиНаБалансЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                                      КАК Основание
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.НоменклатураОприходование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                            КАК Основание
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                            КАК Основание
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                            КАК Основание
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТаблицаДокумента.Ссылка                          КАК Основание
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТаблицаДокумента.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                          КАК Основание
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                          КАК Основание
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                          КАК Основание
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                           КАК Основание
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                           КАК Основание
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                           КАК Основание
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ЧекЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                           КАК Основание
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|		И СправочникНоменклатураАлкогольнаяПродукция.МаркируемаяАлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ЧекЕГАИС.ПустаяСсылка) КАК Документ,
	|	ТаблицаДокумента.Ссылка                          КАК Основание
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТаблицаДокумента.Номенклатура
	|		И СправочникНоменклатураАлкогольнаяПродукция.МаркируемаяАлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.ЧекЕГАИСВозврат.ПустаяСсылка) КАК Документ,
	|	ТабличнаяЧасть.Ссылка                          КАК Основание
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАлкогольнаяПродукция КАК СправочникНоменклатураАлкогольнаяПродукция
	|		ПО СправочникНоменклатураАлкогольнаяПродукция.Ссылка = ТабличнаяЧасть.Номенклатура
	|		И СправочникНоменклатураАлкогольнаяПродукция.МаркируемаяАлкогольнаяПродукция
	|");
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Таблица, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюСтатусыОформленияДокументовЕГАИС(Параметры) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "РегистрСведений.СтатусыДокументовЕГАИС") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		"РегистрСведений.СтатусыОформленияДокументовЕГАИС",
		МенеджерВременныхТаблиц, ДополнительныеПараметры);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 500
	|	ДанныеДляОбработки.Документ   КАК Документ,
	|	ДанныеДляОбработки.Основание  КАК Основание
	|ПОМЕСТИТЬ втДокументыДляОбработки
	|ИЗ
	|	&ВТДанныеДляОбработки КАК ДанныеДляОбработки
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДляОбработки.Основание.Дата УБЫВ
	|;
	|
	|/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ   КАК Документ,
	|	ДанныеДляОбработки.Основание  КАК Основание,
	|	ДанныеДокумента.ВерсияДанных  КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен      КАК Проведен,
	|	ДанныеДокумента.Дата          КАК Дата,
	|	ДанныеДокумента.Номер         КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад         КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация   КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПересортицаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ   КАК Документ,
	|	ДанныеДляОбработки.Основание  КАК Основание,
	|	ДанныеДокумента.ВерсияДанных  КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен      КАК Проведен,
	|	ДанныеДокумента.Дата          КАК Дата,
	|	ДанныеДокумента.Номер         КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад         КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация   КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ОприходованиеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ   КАК Документ,
	|	ДанныеДляОбработки.Основание  КАК Основание,
	|	ДанныеДокумента.ВерсияДанных  КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен      КАК Проведен,
	|	ДанныеДокумента.Дата          КАК Дата,
	|	ДанныеДокумента.Номер         КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Магазин       КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация   КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ   КАК Документ,
	|	ДанныеДляОбработки.Основание  КАК Основание,
	|	ДанныеДокумента.ВерсияДанных  КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен      КАК Проведен,
	|	ДанныеДокумента.Дата          КАК Дата,
	|	ДанныеДокумента.Номер         КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад         КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация   КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.СписаниеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ   КАК Документ,
	|	ДанныеДляОбработки.Основание  КАК Основание,
	|	ДанныеДокумента.ВерсияДанных  КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен      КАК Проведен,
	|	ДанныеДокумента.Дата          КАК Дата,
	|	ДанныеДокумента.Номер         КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад         КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация   КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.СборкаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен     КАК Проведен,
	|	ДанныеДокумента.Дата         КАК Дата,
	|	ДанныеДокумента.Номер        КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад        КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация  КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНИсходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен              КАК Проведен,
	|	ДанныеДокумента.Дата                  КАК Дата,
	|	ДанныеДокумента.Номер                 КАК Номер,
	|	ДанныеДокумента.Ответственный         КАК Ответственный,
	|	ДанныеДокумента.Склад                 КАК ТорговыйОбъект,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНВходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен         КАК Проведен,
	|	ДанныеДокумента.Дата             КАК Дата,
	|	ДанныеДокумента.Номер            КАК Номер,
	|	ДанныеДокумента.Ответственный    КАК Ответственный,
	|	ДанныеДокумента.СкладОтправитель КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация      КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНИсходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПеремещениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен              КАК Проведен,
	|	ДанныеДокумента.Дата                  КАК Дата,
	|	ДанныеДокумента.Номер                 КАК Номер,
	|	ДанныеДокумента.Ответственный         КАК Ответственный,
	|	ДанныеДокумента.СкладПолучатель       КАК ТорговыйОбъект,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Документ ССЫЛКА Документ.ТТНВходящаяЕГАИС
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПеремещениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен     КАК Проведен,
	|	ДанныеДокумента.Дата         КАК Дата,
	|	ДанныеДокумента.Номер        КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад        КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация  КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ПоступлениеТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен     КАК Проведен,
	|	ДанныеДокумента.Дата         КАК Дата,
	|	ДанныеДокумента.Номер        КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад        КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация  КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ВозвратТоваровПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен      КАК Проведен,
	|	ДанныеДокумента.Дата          КАК Дата,
	|	ДанныеДокумента.Номер         КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад         КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация   КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.РеализацияТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Документ  КАК Документ,
	|	ДанныеДляОбработки.Основание КАК Основание,
	|	ДанныеДокумента.ВерсияДанных КАК ВерсияДанных,
	|	ВЫБОР КОГДА ДанныеДокумента.Проведен ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОтметитьВыполнениеОбработки,
	|	ДанныеДокумента.Проведен      КАК Проведен,
	|	ДанныеДокумента.Дата          КАК Дата,
	|	ДанныеДокумента.Номер         КАК Номер,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Склад         КАК ТорговыйОбъект,
	|	ДанныеДокумента.Организация   КАК Контрагент
	|ИЗ
	|	втДокументыДляОбработки КАК ДанныеДляОбработки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ДанныеДокумента
	|	ПО ДанныеДокумента.Ссылка = ДанныеДляОбработки.Основание
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокировано КАК ДокументЗаблокировано
	|	ПО ДокументЗаблокировано.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДокументЗаблокировано.Ссылка ЕСТЬ NULL
	|	И ДанныеДляОбработки.Основание ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВТДанныеДляОбработки", Результат.ИмяВременнойТаблицы);
	
	ТаблицыДляЧтения = Новый Массив;
	ТаблицыДляЧтения.Добавить("Документ.ВозвратТоваровОтКлиента");
	ТаблицыДляЧтения.Добавить("Документ.РеализацияТоваровУслуг");
	ТаблицыДляЧтения.Добавить("Документ.ВозвратТоваровПоставщику");
	ТаблицыДляЧтения.Добавить("Документ.ПриобретениеТоваровУслуг");
	ТаблицыДляЧтения.Добавить("Документ.ПеремещениеТоваров");
	ТаблицыДляЧтения.Добавить("Документ.ВозвратТоваровМеждуОрганизациями");
	ТаблицыДляЧтения.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	ТаблицыДляЧтения.Добавить("Документ.СборкаТоваров");
	ТаблицыДляЧтения.Добавить("Документ.СписаниеНедостачТоваров");
	ТаблицыДляЧтения.Добавить("Документ.ОтчетОРозничныхПродажах");
	ТаблицыДляЧтения.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	ТаблицыДляЧтения.Добавить("Документ.ОприходованиеИзлишковТоваров");
	ТаблицыДляЧтения.Добавить("Документ.ПересортицаТоваров");
	
	РезультатЗаблокировано = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		ТаблицыДляЧтения,
		МенеджерВременныхТаблиц);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Если Выборка.ОтметитьВыполнениеОбработки Тогда
				
				НаборЗаписей = РегистрыСведений.СтатусыОформленияДокументовЕГАИС.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Основание.Установить(Выборка.Основание);
				НаборЗаписей.Отбор.Документ.Установить(Выборка.Документ);
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
				
				ЗафиксироватьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СтатусыОформленияДокументовЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Документ",  Выборка.Документ);
			ЭлементБлокировки.УстановитьЗначение("Основание", Выборка.Основание);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(Выборка.Основание.Метаданные().ПолноеИмя());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Основание);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ВерсияДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Основание, "ВерсияДанных");
			Если ВерсияДанных <> Выборка.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			МетаданныеДокумента = Выборка.Документ.Метаданные();
			
			ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
				Выборка.Основание,
				МетаданныеДокумента);
			
			РассчитатьСтатусОформленияДляОбновления(
				МетаданныеДокумента,
				Выборка.Основание, ЗначенияРеквизитов, ЗаписьТребуется);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать запись регистра сведений ""СтатусыОформленияДокументовЕГАИС""
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Метаданные.РегистрыСведений.СтатусыОформленияДокументовЕГАИС,
			                         Выборка.Основание,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "РегистрСведений.СтатусыОформленияДокументовЕГАИС");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПоступлениеТоваров - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПоступлениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	&ПустаяСерия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваров.Серии КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|			И (Сопоставлено.Серия <> &ПустаяСерия)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПоступлениеТоваров", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяСерия", 
		ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Имя));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Функция проверяет наличие расхождений между ТТН и товарами перемещения.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПеремещениеТоваров - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПеремещениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|			И (Сопоставлено.Серия <> &ПустаяСерия)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	&ПустаяСерия,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПеремещениеТоваров", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяСерия",
		ИнтеграцияЕГАИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Имя));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

Функция ЕстьМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура", ПродаетсяВРозлив = Неопределено)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|");
	
	Если ПродаетсяВРозлив <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ТабличнаяЧасть." + ИмяКолонки + ".ВидНоменклатуры.ПродаетсяВРозлив = &ПродаетсяВРозлив";
		Запрос.УстановитьПараметр("ПродаетсяВРозлив", ПродаетсяВРозлив);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьНеМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура", ПродаетсяВРозлив = Неопределено)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И НЕ ТабличнаяЧасть." + ИмяКолонки + ".ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|");
	
	Если ПродаетсяВРозлив <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ТабличнаяЧасть." + ИмяКолонки + ".ВидНоменклатуры.ПродаетсяВРозлив = &ПродаетсяВРозлив";
		Запрос.УстановитьПараметр("ПродаетсяВРозлив", ПродаетсяВРозлив);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьПереданныеЧекиЕГАИС(ДокументОснование, ЧекНаВозврат = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЧекЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекЕГАИС" + ?(ЧекНаВозврат, "Возврат", "") + " КАК ЧекЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ЧекЕГАИС.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ЧекЕГАИС.ДокументОснование = &ДокументОснование
	|	И СтатусыДокументовЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияЕГАИС.ПереданВУТМ)";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция СерийныйНомерККМ(Магазин = Неопределено)
	
	Если Магазин = Неопределено Тогда
		УстановитьПривилегированныйРежим(Истина);
		Магазин = ПараметрыСеанса.ТекущийМагазин;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Результат = "";
	
	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключаемоеОборудованиеПараметрыРегистрации.Ссылка КАК Ссылка,
	|	ПодключаемоеОборудованиеПараметрыРегистрации.НомерСтроки КАК НомерСтроки,
	|	ПодключаемоеОборудованиеПараметрыРегистрации.НаименованиеПараметра КАК НаименованиеПараметра,
	|	ПодключаемоеОборудованиеПараметрыРегистрации.ЗначениеПараметра КАК ЗначениеПараметра
	|ИЗ
	|	Справочник.ПодключаемоеОборудование.ПараметрыРегистрации КАК ПодключаемоеОборудованиеПараметрыРегистрации
	|ГДЕ
	|	ПодключаемоеОборудованиеПараметрыРегистрации.Ссылка.РабочееМесто = &РабочееМесто
	|	И ПодключаемоеОборудованиеПараметрыРегистрации.НаименованиеПараметра = ""ЗаводскойНомерФН""";
	
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		Результат = Выборка.ЗначениеПараметра;
		Если ЗначениеЗаполнено(Результат) Тогда
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	КассыККМ.СерийныйНомер КАК СерийныйНомер
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	НЕ КассыККМ.ПометкаУдаления
	|	И НЕ КассыККМ.Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|	И НЕ КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ККМOffline)
	|	И КассыККМ.РабочееМесто = &РабочееМестоККМ
	|	И КассыККМ.Магазин = &Магазин
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассыККМ.Наименование";
	
	Запрос.УстановитьПараметр("Магазин"        , Магазин);
	Запрос.УстановитьПараметр("РабочееМестоККМ", РабочееМесто);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Результат = РезультатЗапроса.Выгрузить()[0].СерийныйНомер;
	КонецЕсли;
	
	Возврат ?(ПустаяСтрока(Результат), "1", Результат);
	
КонецФункции

Процедура ДобавитьВРезультат(Результат, Приоритет, ДобавляемоеЗначение)
	
	Если ДобавляемоеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Значение = Результат.Получить(Приоритет);
	Если Значение = Неопределено Тогда
		Значение = Новый Массив();
	КонецЕсли;
	Значение.Добавить(ДобавляемоеЗначение);
	
	Результат.Вставить(Приоритет, Значение);
	
КонецПроцедуры

Функция СформироватьНомерИсходящейТТН(Номер, Дата)
	
	НомерБезПрефиксов = ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(Номер, Истина, Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаТТН", НачалоДня(Дата));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИС.НомерТТН КАК НомерТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ТТНИсходящаяЕГАИС.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.ДатаТТН = &ДатаТТН
	|	И НЕ ТТНИсходящаяЕГАИС.ПометкаУдаления";
	
	НомераТТН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НомерТТН");
	
	Результат = НомерБезПрефиксов;
	
	Сч = 0;
	Пока НомераТТН.Найти(Результат) <> Неопределено Цикл
		Сч = Сч + 1;
		Результат = НомерБезПрефиксов + "-" + Формат(Сч, "ЧГ=0");
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьДанныеПоАкцизнымМаркам(Организация, Магазин, Штрихкод, КлючСвязи, Номенклатура, Характеристика) Экспорт 
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
						Организация,
						Магазин);
	
	Если ОрганизацияЕГАИС = Неопределено Тогда 
		ВызватьИсключение НСтр("ru='Не найдена сопоставленная организация ЕГАИС'");	
	КонецЕсли;
	
	ДанныеШтрихкодаУпаковки = Справочники.ШтрихкодыУпаковокТоваров.НайтиШтрихкодыУпаковокПоСпискуШтрихкодов(
								Штрихкод, 
								ОрганизацияЕГАИС);
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("КодАкцизнойМарки", 	Штрихкод);
	СтруктураЗаполнения.Вставить("КлючСвязи", 			КлючСвязи);
	
	Если ДанныеШтрихкодаУпаковки.Количество() = 0 Тогда 
		УстановитьПривилегированныйРежим(Истина);
		ШтрихкодУпаковкиЕГАИС = Справочники.ШтрихкодыУпаковокТоваров.СгенерироватьАкцизнуюМарку(
									Штрихкод,
									Номенклатура,
									Характеристика);
		СтруктураЗаполнения.Вставить("АкцизнаяМарка", 		ШтрихкодУпаковкиЕГАИС);
		СтруктураЗаполнения.Вставить("ШтрихкодУпаковки", 	ШтрихкодУпаковкиЕГАИС);
		СтруктураЗаполнения.Вставить("Справка2", 			Справочники.Справки2ЕГАИС.ПустаяСсылка());
	Иначе
		ДанныеШтрихкода = ДанныеШтрихкодаУпаковки[Штрихкод][0];
		СтруктураЗаполнения.Вставить("АкцизнаяМарка", 		ДанныеШтрихкода.Ссылка);
		СтруктураЗаполнения.Вставить("ШтрихкодУпаковки", 	ДанныеШтрихкода.Ссылка);
		СтруктураЗаполнения.Вставить("Справка2", 			ДанныеШтрихкода.Справка2);
	КонецЕсли;
	
	Возврат СтруктураЗаполнения;
	
КонецФункции

// Заполняет реквизит "Серия" в товарной табличной части
//
// Параметры:
// 		ТабличнаяЧасть - ДанныеФормыКоллекция, ТабличнаяЧасть - Товарная табличная часть документа
// 		ВыделенныеСтроки - Массив - Массив выделенных строк
// 		ПараметрыЗаполнения - Структура - Структура параметров заполнения
// 			Обязательные поля:
// 				"ОрганизацияЕГАИС" - СправочникСсылка.КлассификаторОрганизацийЕГАИС - Организация
// 				"ЗаполнятьБезЗапросаСправок" - Булево - Принудительное заполнение серий без запроса справок 1
// 			Необязательные поля:
// 				"ПоляЗаполнения" - Строка - Строка с перечислением заполняемых полей в таблице. Значение по умолчанию: "Серия".
// 				"КолонкиПоЗначению" - Структура - Структура для передачи в качестве параметра "КолонкиПоЗначению" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений"
// 				"ДругиеИменаКолонок" - Структура - Структура для передачи в качестве параметра "НовыеИменаКолонок" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений"
// 		СтруктураДействий - Структура - Стандартная структура действий со строками для вызова "ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ"
// 		
// Возвращаемое значение:
//   Структура - Структура с результатом выполнения функции.
//
Функция ЗаполнитьСгенерироватьСерии(ТабличнаяЧасть, ВыделенныеСтроки = Неопределено, ПараметрыЗаполнения = Неопределено, СтруктураДействий = Неопределено) Экспорт
	
	// Инициализация результирующей структуры
	Результат = Новый Структура("АдресМассиваЗапросов, ЗаполнениеЗавершено, СписокОшибок",
	Неопределено,
	Ложь,
	Неопределено);
	
	ДополнительныеКолонки = "";
	
	// Получение структуры параметров по умолчанию
	Параметры = Новый Структура(
	"ПоляЗаполнения, КолонкиПоЗначению, ДругиеИменаКолонок",
	"Серия", Новый Структура, Новый Структура);
	ОбщегоНазначенияРТКлиентСервер.ДополнитьСтруктуру(Параметры, ПараметрыЗаполнения, Истина);
	
	// Получение выгрузки по табличной части
	Таблица = ОбщегоНазначенияРТ.ВыгрузитьТаблицуЗначений(
	ТабличнаяЧасть,
	ВыделенныеСтроки,
	"НомерСтроки, Номенклатура, Характеристика, АлкогольнаяПродукция, Серия, Справка2" + ДополнительныеКолонки,
	Параметры.КолонкиПоЗначению,
	Параметры.ДругиеИменаКолонок);
	
	СтрокиБезНоменклатуры = Таблица.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка()));
	Для каждого СтрокаБезНоменклатуры Из СтрокиБезНоменклатуры Цикл
		
		ТекстСообщения = НСтр("ru = 'Не указана номенклатура в строке %НомерСтроки%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаБезНоменклатуры.НомерСтроки);
		
		Результат.ЗаполнениеЗавершено = Ложь;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
		"Объект.Товары.Номенклатура",
		ТекстСообщения, 
		Неопределено);
		
	КонецЦикла;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Получение запроса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	Таблица.Справка2 КАК Справка2
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВидыНоменклатуры.АвтоматическиГенерироватьСерии КАК АвтоматическиГенерироватьСерии,
	|	ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВидыНоменклатуры.СрокГарантии КАК СрокГодности,
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ЕСТЬNULL(ВидыНоменклатуры.ТочностьУказанияСрокаГодностиСерии, ЗНАЧЕНИЕ(Перечисление.ТочностиУказанияСрокаГодности.СТочностьюДоДней)) КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ВтВидыНоменклатуры
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ГДЕ
	|	ВидыНоменклатуры.АвтоматическиГенерироватьСерии = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВтТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	ВтТовары.Серия КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	Справки2ЕГАИС.НомерСправки1 КАК НомерСправки1,
	|	ЕСТЬNULL(Справки1ЕГАИС.Ссылка, ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)) КАК Справка1,
	|	Справки1ЕГАИС.ДатаРозлива КАК Справка1ДатаРозлива,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК Производитель,
	|	ВтВидыНоменклатуры.СрокГодности КАК СрокГодности,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияСрокаГодности,
	|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтВидыНоменклатуры.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ТаблицаТоварыПолная
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО ВтТовары.Справка2 = Справки2ЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ВтТовары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ВтТовары.Номенклатура = СпрНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки1ЕГАИС КАК Справки1ЕГАИС
	|		ПО (Справки2ЕГАИС.НомерСправки1 = Справки1ЕГАИС.РегистрационныйНомер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВтТовары.Номенклатура,
	|	ВтТовары.Характеристика,
	|	ВтТовары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ГДЕ
	|	ВидыНоменклатуры.АвтоматическиГенерироватьСерии = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоварыПолная.НомерСправки1 КАК НомерСправки1
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ТаблицаТоварыПолная.Справка1 = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|	И (ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|			ИЛИ ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА)";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-1].Пустой() И НЕ ПараметрыЗаполнения.ЗаполнятьБезЗапросаСправок Тогда
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-1].Выбрать();
		
		МассивЗапросовСправок1 = Новый Массив;
		Пока Выборка.Следующий() Цикл
			
			ПараметрыЗапроса = Новый Структура;
			ПараметрыЗапроса.Вставить("Операция"         , Перечисления.ВидыДокументовЕГАИС.ЗапросСправки1);
			ПараметрыЗапроса.Вставить("ИмяПараметра"     , "");
			ПараметрыЗапроса.Вставить("ЗначениеПараметра", Выборка.НомерСправки1);
			ПараметрыЗапроса.Вставить("ОрганизацияЕГАИС" , ПараметрыЗаполнения.ОрганизацияЕГАИС);
			
			МассивЗапросовСправок1.Добавить(ПараметрыЗапроса);
			
		КонецЦикла;
		Результат.АдресМассиваЗапросов = ПоместитьВоВременноеХранилище(МассивЗапросовСправок1);
		Результат.ЗаполнениеЗавершено = Ложь;
		Возврат Результат
	КонецЕсли;
	
	Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-2].Пустой() Тогда
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-2].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = НСтр("ru = 'Для номенклатуры %Номенклатура% автоматическая генерация серий не настроена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", Выборка.Номенклатура);
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Номенклатура",
			ТекстСообщения, 
			Неопределено);
			
		КонецЦикла;
		Результат.ЗаполнениеЗавершено = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
	|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
	|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива,
	|	ТаблицаТоварыПолная.СрокГодности КАК СрокГодностиНоменклатуры,
	|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности,
	|	ТаблицаТоварыПолная.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтВидыНоменклатуры.ВидНоменклатуры,
	|	ТаблицаТоварыПолная.АлкогольнаяПродукция,
	|	ТаблицаТоварыПолная.Номенклатура,
	|	ТаблицаТоварыПолная.Характеристика,
	|	ТаблицаТоварыПолная.Справка2,
	|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива,
	|	ТаблицаТоварыПолная.СрокГодности,
	|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности,
	|	ТаблицаТоварыПолная.ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА
	|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)";
	
	ТаблицаСрокиГодности = Запрос.Выполнить().Выгрузить();
	//ТаблицаСрокиГодности.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
	//Для Каждого ТекСтрока Из ТаблицаСрокиГодности Цикл
	//	Если ЗначениеЗаполнено(ТекСтрока.Справка1ДатаРозлива) Тогда
	//		ТекСтрока.ГоденДо = ГоденДоПоДатеПроизводства(ТекСтрока.Справка1ДатаРозлива,
	//			ТекСтрока.СрокГодностиНоменклатуры,
	//			ТекСтрока.ЕдиницаИзмеренияСрокаГодности);
	//	КонецЕсли;
	//КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСрокиГодности", ТаблицаСрокиГодности);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСрокиГодности.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаСрокиГодности.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаСрокиГодности.Номенклатура КАК Номенклатура,
	|	ТаблицаСрокиГодности.Характеристика КАК Характеристика,
	|	ТаблицаСрокиГодности.Справка2 КАК Справка2,
	|	ТаблицаСрокиГодности.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
	|	ТаблицаСрокиГодности.СрокГодностиНоменклатуры КАК СрокГодностиНоменклатуры,
	//|	ТаблицаСрокиГодности.ГоденДо КАК ГоденДо,
	|	ТаблицаСрокиГодности.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности,
	|	ТаблицаСрокиГодности.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ВТГоденДо
	|ИЗ
	|	&ТаблицаСрокиГодности КАК ТаблицаСрокиГодности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаСрокиГодности.Номенклатура,
	|	ТаблицаСрокиГодности.Характеристика,
	|	ТаблицаСрокиГодности.АлкогольнаяПродукция,
	|	ТаблицаСрокиГодности.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	ВтТовары.Серия КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	ВЫБОР
	|		КОГДА ВтТовары.Справка1ДатаРозлива = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|			ТОГДА ВТГоденДо.Справка1ДатаРозлива
	|		ИНАЧЕ ВтТовары.Справка1ДатаРозлива
	|	КОНЕЦ КАК Справка1ДатаРозлива,
	//|	ВТГоденДо.ГоденДо КАК ГоденДо,
	|	ВтТовары.Производитель КАК Производитель,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтТовары.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ВтТоварыКонечная
	|ИЗ
	|	ТаблицаТоварыПолная КАК ВтТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоденДо КАК ВТГоденДо
	|		ПО ВтТовары.Номенклатура = ВТГоденДо.Номенклатура
	|			И ВтТовары.Характеристика = ВТГоденДо.Характеристика
	|			И ВтТовары.АлкогольнаяПродукция = ВТГоденДо.АлкогольнаяПродукция
	|			И ВтТовары.Справка2 = ВТГоденДо.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	ВтТовары.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
	//|	ВтТовары.ГоденДо КАК ГоденДо,
	|	ВтТовары.Производитель КАК Производитель,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтТовары.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ВтТоварыКонечная КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	//|			И (ВЫБОР
	//|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА
	//|					ТОГДА СерииНоменклатуры.ГоденДо = ВтТовары.ГоденДо
	//|				ИНАЧЕ ИСТИНА
	//|			КОНЕЦ)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|				ТОГДА ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	//|	И ВЫБОР
	//|			КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА
	//|				ТОГДА ВтТовары.ГоденДо <> &ПустаяДата
	//|			ИНАЧЕ ИСТИНА
	//|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.Справка2 КАК Справка2,
	|	ВтТовары.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
	//|	ВтТовары.ГоденДо КАК ГоденДо,
	|	ВтТовары.Производитель КАК Производитель,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтТовары.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ВтТоварыКонечная КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	//|			И (ВЫБОР
	//|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА
	//|					ТОГДА СерииНоменклатуры.ГоденДо = ВтТовары.ГоденДо
	//|				ИНАЧЕ ИСТИНА
	//|			КОНЕЦ)
	|ГДЕ
	|	СерииНоменклатуры.Ссылка ЕСТЬ NULL
	|	И ВЫБОР
	|			КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|				ТОГДА ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	//|	И ВЫБОР
	//|			КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА
	//|				ТОГДА ВтТовары.ГоденДо <> &ПустаяДата
	//|			ИНАЧЕ ИСТИНА
	//|		КОНЕЦ
	|";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаГенерацияСерий = ПакетРезультатов[ПакетРезультатов.Количество()-1].Выгрузить();
	ТаблицаГенерацияСерий.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаГенерацияСерий.Индексы.Добавить("ВидНоменклатуры, Справка2, Справка1ДатаРозлива, Производитель");
	Для Каждого ТекСтрока Из ТаблицаГенерацияСерий Цикл
		НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НоваяСерия.Заполнить(ТекСтрока);
		Попытка
			НоваяСерия.Записать();
			ТекСтрока.Серия = НоваяСерия.Ссылка;
			Результат.ЗаполнениеЗавершено = Истина;
		Исключение
			Результат.ЗаполнениеЗавершено = Ложь;
			
			ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.СерииНоменклатуры,
			НоваяСерия.Ссылка,
			ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Серия",
			ТекстСообщения, 
			Неопределено);
		КонецПопытки;
	КонецЦикла;
	
	ВыборкаЗаполнениеСерий = ПакетРезультатов[ПакетРезультатов.Количество()-2].Выбрать();
	Пока ВыборкаЗаполнениеСерий.Следующий() Цикл
		СтрокаТовары = ТабличнаяЧасть[ВыборкаЗаполнениеСерий.НомерСтроки-1];
		Если ЗначениеЗаполнено(ВыборкаЗаполнениеСерий.Серия) Тогда
			СтрокаТовары.Серия = ВыборкаЗаполнениеСерий.Серия;
			Результат.ЗаполнениеЗавершено = Истина;
		Иначе
			ПараметрыПоиска = Новый Структура("ВидНоменклатуры", ВыборкаЗаполнениеСерий.ВидНоменклатуры);
			Если ВыборкаЗаполнениеСерий.ИспользоватьДатуПроизводстваСерии Тогда
				ПараметрыПоиска.Вставить("Справка1ДатаРозлива", ВыборкаЗаполнениеСерий.Справка1ДатаРозлива);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьПроизводителяЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("Производитель", ВыборкаЗаполнениеСерий.Производитель);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСправку2ЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("Справка2", ВыборкаЗаполнениеСерий.Справка2);
			КонецЕсли;
			НайденныеСтроки = ТаблицаГенерацияСерий.НайтиСтроки(ПараметрыПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаТовары.Серия = НайденныеСтроки[0].Серия;
				Результат.ЗаполнениеЗавершено = Истина;
			Иначе
				Результат.ЗаполнениеЗавершено = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтрокаТовары, СтруктураДействий, Неопределено);
		
	КонецЦикла;
	
	Возврат Результат
	
КонецФункции

// Функция - Годен до по дате производства
//
// Параметры:
//  ДатаПрозводства					 - Дата 
//  СрокГодности					 - Число 
//  ЕдиницаИзмеренияСрокаГодности	 - ПеречислениеСсылка.ЕдиницыИзмеренияВремени 
// 
// Возвращаемое значение:
//  Дата 
//
Функция ГоденДоПоДатеПроизводства(ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности) Экспорт
	
	ГоденДо = '00010101';
	
	Если Не ЗначениеЗаполнено(ДатаПроизводства)
		Или Не ЗначениеЗаполнено(СрокГодности) Тогда
		Возврат ГоденДо;
	КонецЕсли;
		
	Возврат ГоденДо;
	
КонецФункции

// Заполняет служебные реквизиты в табличной части "Товары" в процедурах ПриСозданииНаСервере
//
// Параметры:
//  Форма				 - УправляемаяФорма - Форма
//  ИмяКолонкиКоличество - Строка - Имя колонки "Количество"
//
Процедура АкцизныеМаркиЗаполнитьСлужебныеРеквизиты(Форма, ИмяКолонкиКоличество = "Количество") Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Товары = Источник.Товары.Выгрузить();
	ДополнениеКИндексу = 0;
	Если Товары.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		
		ДополнениеКИндексу = 1;
		Товары.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		
		КоличествоСтрок = Товары.Количество() - 1;
		Для НомерСтроки = 0 По КоличествоСтрок Цикл
			Товары[НомерСтроки].НомерСтроки = НомерСтроки;
		КонецЦикла;
		
	КонецЕсли;
	
	ОрганизацияЕГАИС = Источник.ОрганизацияЕГАИС;
	
	ШтрихкодыУпаковок = АкцизныеМаркиЕГАИС.ШтрихкодыУпаковок(Источник, ОрганизацияЕГАИС, "НоменклатураЕГАИС");
	ШтрихкодыУпаковок.МаркированныеТовары.Индексы.Добавить("ИдентификаторСтроки");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки КАК НомерСтроки,
	|	Т.НоменклатураЕГАИС КАК АлкогольнаяПродукция,
	|	Т.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	КОНЕЦ КАК МаркируемаяАлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = Источник.Товары[Выборка.НомерСтроки - 1 + ДополнениеКИндексу];
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки);
		КоличествоАкцизныхМарок = ШтрихкодыУпаковок.МаркированныеТовары.НайтиСтроки(ПараметрыОтбора).Количество();
		
		СтрокаТЧ.МаркируемаяАлкогольнаяПродукция = Выборка.МаркируемаяАлкогольнаяПродукция;
		СтрокаТЧ.КоличествоАкцизныхМарок = КоличествоАкцизныхМарок;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(СтрокаТЧ, ИмяКолонкиКоличество);
		
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "АдресСоответствияАкцизныхМарок") Тогда
		
		ВложенныеШтрихкоды = Новый Соответствие;
		АкцизныеМаркиЕГАИС.ПроверитьИЗаполнитьВложенныеШтрихкоды(ШтрихкодыУпаковок.ДеревоУпаковок.Строки, ВложенныеШтрихкоды, Новый Соответствие);
		
		Если ЭтоАдресВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок) Тогда
			ПоместитьВоВременноеХранилище(ВложенныеШтрихкоды, Форма.АдресСоответствияАкцизныхМарок);
		Иначе
			Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(ВложенныеШтрихкоды, Форма.УникальныйИдентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыЧека(ДокументСсылка) Экспорт
	
	СтруктураКассыККМ = Новый Структура;
	СтруктураКассыККМ.Вставить("ИспользоватьБезПодключенияОборудования");
	СтруктураКассыККМ.Вставить("ТипОборудования");
	СтруктураКассыККМ.Вставить("ПодключаемоеОборудование");
	
	ПараметрыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,СтруктураКассыККМ);
	ПараметрыРегистрации = МенеджерОборудованияВызовСервера.ПолучитьПараметрыРегистрацииУстройства(ПараметрыКассыККМ.ПодключаемоеОборудование);
	Если ПараметрыРегистрации = Неопределено Тогда
		НомерЧека     = ДокументСсылка.НомерЧекаККМ;
		НомерСмены    = ДокументСсылка.НомерСменыККМ;
		СерийныйНомер = ПараметрыКассыККМ.ПодключаемоеОборудование.СерийныйНомер;
	Иначе
		НомерЧека     = ДокументСсылка.НомерЧекаККМ;
		НомерСмены    = ДокументСсылка.НомерСменыККМ;
		СерийныйНомер = ПараметрыРегистрации.ЗаводскойНомерФН;
	КонецЕсли;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НомерЧека",     НомерЧека);
	ВозвращаемоеЗначение.Вставить("НомерСмены",    НомерСмены);
	ВозвращаемоеЗначение.Вставить("СерийныйНомер", СерийныйНомер);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Процедура ОтменитьСтатусыУпаковок(ДокументСсылка) Экспорт 
	
	Для Каждого СтрокаТЧ Из ДокументСсылка.АкцизныеМарки Цикл
		
		ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
						ДокументСсылка.Организация,
						ДокументСсылка.Магазин);
		
		ДанныеЗаписиСтатуса = Справочники.ШтрихкодыУпаковокТоваров.СтруктураЗаписиСтатусаУпаковки();
		ДанныеЗаписиСтатуса.ОрганизацияЕГАИС     = ОрганизацияЕГАИС;
		ДанныеЗаписиСтатуса.АкцизнаяМарка        = СтрокаТЧ.АкцизнаяМарка;
		ДанныеЗаписиСтатуса.Справка2             = СтрокаТЧ.Справка2;
		ДанныеЗаписиСтатуса.АлкогольнаяПродукция = СтрокаТЧ.Справка2.АлкогольнаяПродукция;
		ДанныеЗаписиСтатуса.Статус               = Перечисления.СтатусыАкцизныхМарок.ВНаличии;
		
		ДанныеЗаписиСтатуса.Основание = ДокументСсылка;
		РегистрыСведений.АкцизныеМаркиЕГАИС.ВыполнитьЗаписьВРегистр(ДанныеЗаписиСтатуса);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СерииНоменклатуры

Функция ПараметрыУказанияСерийТТНИсходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНИсходящаяЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийТТНВходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНВходящаяЕГАИС";
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Магазины") Тогда
		
		ПараметрыУказанияСерий.ИмяПоляМагазин = "ТорговыйОбъект";
		ПараметрыСерийСклада = Новый Структура;
		ПараметрыСерийСклада.Вставить("ИспользоватьСерииНоменклатуры", ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры"));
		ПараметрыСерийСклада.Вставить("УчитыватьСебестоимостьПоСериям", Ложь);
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению;
		ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийТТНВходящейЕГАИС.ВозвратОтПокупателя Тогда
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента;
		Иначе
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаОтПоставщика;
		КонецЕсли;
	
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(СкладскаяОперация);
		
	Иначе
		
		ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = Ложь;
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИСВозврат(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИСВозврат";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктПостановкиНаБалансЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктПостановкиНаБалансЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктСписанияЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктСписанияЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийПередачаВРегистр2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПередачаВРегистр2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийВозвратИзРегистра2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратИзРегистра2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСопоставлениеКлассификаторовЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Обработка.СопоставлениеКлассификаторовЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийШтрихкодыУпаковокТоваров(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Справочник.ШтрихкодыУпаковокТоваров";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСоответствиеНоменклатурыЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 2
		|				ИНАЧЕ 21
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШтрихкодыУпаковокТоваров(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 13
		|				ИНАЧЕ 13
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСоответствиеНоменклатурыЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 13
		|				ИНАЧЕ 13
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТТНВходящаяЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары." + ПараметрыУказанияСерий.ИмяПоляКоличество + " КАК Количество,
	|	Товары.СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
	|					И &ПриемкаОтПоставщика
	|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоВозвратуОтКлиента
	|					И &ПриемкаПоВозвратуОтКлиента
	|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПеремещению
	|					И &ПриемкаПоПеремещению)
	|				ТОГДА ВЫБОР
	|						КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|							ТОГДА 2
	|						ИНАЧЕ 1
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
	|			ПО ПолитикиУчетаСерий.Магазин = Магазины.Ссылка
	|		ПО (ПолитикиУчетаСерий.Магазин = &Магазин)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ДанныеДокументаОснования

Процедура СформироватьДанныеДокументаОснования(ДокументОснование, ДокументЕГАИС, ТаблицаДанных) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		СформироватьДанныеОснованияВозвратаТоваровПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		СформироватьДанныеОснованияВозвратТоваровОтПокупателя(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		СформироватьДанныеОснованияОтчетаОРозничныхПродажах(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		СформироватьДанныеОснованияОприходованияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		СформироватьДанныеОснованияПередачаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		СформироватьДанныеОснованияПеремещенияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		
		СформироватьДанныеОснованияПересортицаТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		СформироватьДанныеОснованияРеализацияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		СформироватьДанныеОснованияСборкиТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		СформироватьДанныеОснованияСписаниеТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	КонецЕсли;
	
	ТаблицаДанных.Индексы.Добавить("Номенклатура, Характеристика");
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияСписаниеТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|			ПО (ТабличнаяЧасть.Номенклатура = ОформленныеТовары.Номенклатура)
	|				И (ТабличнаяЧасть.Характеристика = ОформленныеТовары.Характеристика)
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияСборкиТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.СборкаТоваров КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияРеализацияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.РеализацияТоваров.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.РеализацияТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияОприходованияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияПересортицаТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	МетаданныеДокументаЕГАИС = ДокументЕГАИС.Метаданные();
	ИмяДокументаЕГАИС = МетаданныеДокументаЕГАИС.Имя;
	
	ИмяТаблицыШапки  = "Документ." + ИмяДокументаЕГАИС;
	ИмяТаблицыТовары =  "Документ." + ИмяДокументаЕГАИС + ".Товары";
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	&ИмяТаблицыШапки КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		&ИмяТаблицыТовары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыШапки", ИмяТаблицыШапки);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыТовары", ИмяТаблицыТовары);
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы[ИмяДокументаЕГАИС].КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияПередачаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияОтчетаОРозничныхПродажах(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры 

Процедура СформироватьДанныеОснованияВозвратаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|		ТабличнаяЧасть.Характеристика КАК Характеристика,
		|		ТабличнаяЧасть.Серия КАК Серия,
		|		ТабличнаяЧасть.Количество КАК Количество
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		ТабличнаяЧасть.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия ";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияВозвратаТоваровПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияВозвратТоваровОтПокупателя(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	СУММА(ЕСТЬNULL(ТаблицаСерии.Количество, ТаблицаТовары.Количество)) КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Серии КАК ТаблицаСерии
	|		ПО (ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка)
	|			И (ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-СУММА(ОформленныеТовары.Количество)
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументыЧекЕГАИСВозврат КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия";
	
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ЧекЕГАИСВозврат.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияПеремещенияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

// Создается номенклатура
//
// Параметры:
//  АдресПараметровСозданияНоменклатуры - адрес временного хранилища
//
// Возращаемое значение:
//  Массив
//
Функция СоздатьНоменклатуру(АдресПараметровСозданияНоменклатуры) Экспорт
	
	СозданнаяНоменклатура = Новый Массив;
	
	ПараметрыСозданияНоменклатуры = ПолучитьИзВременногоХранилища(АдресПараметровСозданияНоменклатуры);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого АлкогольнаяПродукцияСписка Из ПараметрыСозданияНоменклатуры.МассивЭлементов Цикл
		
		РеквизитыАлкогольнойПродукции = ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукцияСписка);
		
		НоменклатураОбъект  = Справочники.Номенклатура.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоменклатураОбъект, РеквизитыАлкогольнойПродукции,, "Производитель");
		
		НоменклатураОбъект.Родитель             = ПараметрыСозданияНоменклатуры.Родитель;
		НоменклатураОбъект.АлкогольнаяПродукция = Истина;
		НоменклатураОбъект.ОсобенностьУчета     = Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция;
		НоменклатураОбъект.ВидНоменклатуры      = ПараметрыСозданияНоменклатуры.ВидНоменклатуры;
		НоменклатураОбъект.НаборУпаковок        = ПараметрыСозданияНоменклатуры.НаборУпаковок;
		НоменклатураОбъект.ЕдиницаИзмерения     = ПараметрыСозданияНоменклатуры.ЕдиницаИзмерения;
		НоменклатураОбъект.СтавкаНДС            = ПараметрыСозданияНоменклатуры.СтавкаНДС;
		НоменклатураОбъект.ТоварнаяГруппа       = ПараметрыСозданияНоменклатуры.ТоварнаяГруппа;
		НоменклатураОбъект.ЦеноваяГруппа        = ПараметрыСозданияНоменклатуры.ЦеноваяГруппа;
		НоменклатураОбъект.СтранаПроисхождения  = ПараметрыСозданияНоменклатуры.СтранаПроисхождения;
		
		ТекстОшибкиПроизводитель = "";
		ТекстОшибкиИмпортер = "";
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ПроизводительЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Производитель) Тогда
				Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
					НоменклатураОбъект.Производитель = РеквизитыАлкогольнойПродукции.Производитель;
				Иначе
					НоменклатураОбъект.ПроизводительИмпортерАлкогольнойПродукции = РеквизитыАлкогольнойПродукции.Производитель;
				КонецЕсли;
			Иначе
				ТекстОшибкиПроизводитель = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного производителя.'");
				ТекстОшибкиПроизводитель = СтрЗаменить(ТекстОшибкиПроизводитель, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Импортер) Тогда
				НоменклатураОбъект.ПроизводительИмпортерАлкогольнойПродукции = РеквизитыАлкогольнойПродукции.Импортер;
			Иначе
				ТекстОшибкиИмпортер = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного импортера.'");
				ТекстОшибкиИмпортер = СтрЗаменить(ТекстОшибкиИмпортер, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ОбъемДАЛ) Тогда
			ПродаетсяВРозлив = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСозданияНоменклатуры.ВидНоменклатуры, "ПродаетсяВРозлив");
			Если ПродаетсяВРозлив = Истина Тогда
				НоменклатураОбъект.ОбъемДАЛ = 0.1;
			КонецЕсли;
		КонецЕсли;
		
		НоменклатураОбъект.Записать();
		
		Если НЕ ПустаяСтрока(ТекстОшибкиПроизводитель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиПроизводитель, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстОшибкиИмпортер) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиИмпортер, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		Запись = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		Запись.Номенклатура = НоменклатураОбъект.Ссылка;
		Запись.АлкогольнаяПродукция = АлкогольнаяПродукцияСписка;
		Запись.Порядок = 1;
		Запись.Записать();
		
		СозданнаяНоменклатура.Добавить(НоменклатураОбъект.Ссылка);
		
	КонецЦикла;
	
	Возврат СозданнаяНоменклатура;
	
КонецФункции

Функция ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукция)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Наименование,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.НаименованиеПолное,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Объем / 10 КАК ОбъемДАЛ,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Крепость,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции КАК ВидАлкогольнойПродукцииЕГАИС,
	|	ВЫБОР
	|		КОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Производитель.Сопоставлено
	|			ТОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Производитель.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Производитель,
	|	ВЫБОР
	|		КОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Импортер.Сопоставлено
	|			ТОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Импортер.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Импортер,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК ПроизводительЕГАИС,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Импортер КАК ИмпортерЕГАИС
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
	
КонецФункции

// Функция - Поле коэффициент пересчета неупакованной продукции
//
// Параметры:
//  ИмяТаблицы - Строка - имя таблицы запроса-источника
// Возвращаемое значение:
//  Строка - Поле коэффициента пересчета неупакованной алкогольной продукции,
//  при вызове заполнения библиотечных документов
//
Функция ПолеКоэффициентПересчетаНеупакованнойПродукции(ИмяТаблицы) Экспорт
	
	Возврат СтрШаблон("ЕСТЬNULL(%1.Номенклатура.ОбъемДАЛ, 0)",ИмяТаблицы);
	
КонецФункции

#КонецОбласти

