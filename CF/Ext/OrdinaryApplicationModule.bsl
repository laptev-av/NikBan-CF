#Область ПеременныеМодуля

Перем глОбщиеЗначения Экспорт; // Переменная, хранящая кеш общих значений.

// ПодключаемоеОборудование
Перем глПодключаемоеОборудование Экспорт; // для кэширования на клиенте
// Конец ПодключаемоеОборудование

// ИнтеграцияЕГАИС
Перем глПодключаемоеОборудованиеСобытиеОбработано Экспорт;
// Конец ИнтеграцияЕГАИС

// СтандартныеПодсистемы

// Хранилище глобальных переменных.
//
// ПараметрыПриложения - Соответствие - хранилище переменных, где:
//   * Ключ - Строка - имя переменной в формате "ИмяБиблиотеки.ИмяПеременной";
//   * Значение - Произвольный - значение переменной.
//
// Инициализация (на примере СообщенияДляЖурналаРегистрации):
//   ИмяПараметра = "СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации";
//   Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
//     ПараметрыПриложения.Вставить(ИмяПараметра, Новый СписокЗначений);
//   КонецЕсли;
//  
// Использование (на примере СообщенияДляЖурналаРегистрации):
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"].Добавить(...);
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"] = ...;
Перем ПараметрыПриложения Экспорт; // Общая переменная

// Конец СтандартныеПодсистемы

// МаркетинговыеАкции
Перем ПорядковыйНомерПродажи Экспорт; // Используется для вычисления скидок по кратности номера продаж.
// Конец МаркетинговыеАкции

Перем НомерДокументаКассыККМ Экспорт; // Нумератор выданных документов (чеков) покупателю.

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Функция возвращает значение экспортных переменных модуля приложений.
//
// Параметры:
//  Имя - строка, содержит имя переменной целиком.
//
// Возвращаемое значение:
//   значение соответствующей экспортной переменной
Функция глЗначениеПеременной(Имя) Экспорт

	Возврат ОбщегоНазначенияРТКлиент.ПолучитьЗначениеПеременной(Имя, глОбщиеЗначения);
	
КонецФункции

// Процедура установки значения экспортных переменных модуля приложения.
//
// Параметры:
//  Имя - строка, содержит имя переменной целиком.
// 	Значение - значение переменной.
//
Процедура глЗначениеПеременнойУстановить(Имя, Значение, ОбновлятьВоВсехКэшах = Ложь) Экспорт
	
	ОбщегоНазначенияРТ.УстановитьЗначениеПеременной(Имя, глОбщиеЗначения, Значение, ОбновлятьВоВсехКэшах);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередНачаломРаботыСистемы(Отказ) 
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы();
	// Конец СтандартныеПодсистемы
	
	// ИнтернетПоддержкаПользователей
	ИнтернетПоддержкаПользователейКлиент.ПередНачаломРаботыСистемы();
	// Конец ИнтернетПоддержкаПользователей
		
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.ПередНачаломРаботыСистемы();
	// Конец ПодключаемоеОборудование

КонецПроцедуры

// Процедура выполняется перед началом работы системы.
//
Процедура ПриНачалеРаботыСистемы()
		
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы();
	// Конец СтандартныеПодсистемы
	
	ПорядковыйНомерПродажи = 1;
		
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.ПриНачалеРаботыСистемы();
	// Конец ПодключаемоеОборудование
	
	НомерДокументаКассыККМ = Новый Соответствие;

КонецПроцедуры

// Процедура выполняется перед завершением работы системы.
//
Процедура ПередЗавершениемРаботыСистемы(Отказ)
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ);
	// Конец СтандартныеПодсистемы
	
	Если НЕ Отказ Тогда
		
		// ПодключаемоеОборудование
		МенеджерОборудованияКлиент.ПередЗавершениемРаботыСистемы();
		// Конец ПодключаемоеОборудование
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Инициализация

// ИнтеграцияЕГАИС
глПодключаемоеОборудованиеСобытиеОбработано = Истина;
// Конец ИнтеграцияЕГАИС

#КонецОбласти