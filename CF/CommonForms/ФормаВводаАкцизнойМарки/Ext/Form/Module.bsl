
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ДанныеШтрихкода) = Тип("Структура") Тогда
		Если ДанныеШтрихкода.Свойство("Штрихкод") Тогда
			КодАкцизнойМарки = ДанныеШтрихкода.Штрихкод;
			Если ЗначениеЗаполнено(КодАкцизнойМарки) Тогда
				ЗакрытьФормуПриСканировании();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("КодыМаркировки") Тогда
		НадписьОтсканируйте = НСтр("ru = 'Отсканируйте код маркировки'");
		Элементы.СтраницыТиповЗапросов.ТекущаяСтраница = Элементы.СтраницаКодМаркировки;
		РежимЗапросаТабачныхКодов = Истина;
	Иначе
		НадписьОтсканируйте = НСтр("ru = 'Отсканируйте код акцизной марки'");
		Элементы.СтраницыТиповЗапросов.ТекущаяСтраница = Элементы.СтраницаАкциз;
		РежимЗапросаТабачныхКодов = Ложь;
	КонецЕсли;
	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекВызовСервера.ИспользоватьПодключаемоеОборудование();
	
	Если Параметры.Свойство("ТекущийКлючСвязи") Тогда
		ТекущийКлючСвязи = Параметры.ТекущийКлючСвязи;
	КонецЕсли;
	
	Если Параметры.Свойство("ПредставлениеНоменклатуры") Тогда
		ПредставлениеНоменклатуры = Параметры.ПредставлениеНоменклатуры;
		ЭтотОбъект.Заголовок = ПредставлениеНоменклатуры;
	КонецЕсли;
	
	Если Параметры.Свойство("Номенклатура") Тогда
		Номенклатура = Параметры.Номенклатура;
	КонецЕсли;
	
	Если Параметры.Свойство("Операция") Тогда
		Операция = Параметры.Операция;
	Иначе
		Операция = "Продажа";
	КонецЕсли;
	
	// Режим отладки
	РежимОтладки = ОбщегоНазначенияКлиентСервер.РежимОтладки()
	             И Пользователи.ЭтоПолноправныйПользователь();
	
	Элементы.ФормаПоискПоШтрихкоду.Видимость = РежимОтладки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);  
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, ЭтотОбъект, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
	Если РежимЗапросаТабачныхКодов Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.ДекорацияКартинкаМаркировка;
	Иначе
		ЭтотОбъект.ТекущийЭлемент = Элементы.ДекорацияКартинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(, ЭтотОбъект, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() И НЕ ТолькоПросмотр Тогда
		
		// Заменяем спец.символы, которе потом не сможем передать на сервер.
		РазделительGS1 = МенеджерОборудованияМаркировкаКлиентСервер.РазделительGS1();
		ЭкранированныйСимволGS1 = МенеджерОборудованияМаркировкаКлиентСервер.ЭкранированныйСимволGS1();
		Данные = СтрЗаменить(Данные, РазделительGS1, ЭкранированныйСимволGS1);
		
		ОписаниеСобытия = Новый Структура();
		ОписаниеОшибки  = "";
		ОписаниеСобытия.Вставить("Источник", Источник);
		ОписаниеСобытия.Вставить("Событие",  Событие);
		ОписаниеСобытия.Вставить("Данные",   Данные);
		
		Результат = МенеджерОборудованияКлиент.ПолучитьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
		Если Результат = Неопределено Тогда 
			ЗаголовокСообщения = НСтр("ru = 'При обработке внешнего события от устройства произошла ошибка:'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокСообщения, ОписаниеОшибки);
		Иначе
			Если Результат.Источник = "ПодключаемоеОборудование" Тогда
				Если Результат.ИмяСобытия = "ScanData" Тогда
					Если Результат.Параметр[1] = Неопределено Тогда
						КодАкцизнойМарки = Результат.Параметр[0];
					Иначе
						КодАкцизнойМарки = Результат.Параметр[1][1];
					КонецЕсли;
					ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании", 0.1, Истина);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияКартинкаНажатие(Элемент)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоискПоШтрихкодуВыполнить(Команда)
	
	ОчиститьСообщения();
	
	ШтрихкодированиеНоменклатурыЕГАИСКлиентПереопределяемый.ПоказатьВводШтрихкода(
		Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	
		
	Если РежимЗапросаТабачныхКодов Тогда
		ДанныеМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьКодМаркировки(КодАкцизнойМарки);
		Если НЕ ДанныеМаркировки.Разобран Тогда
			ЗаголовокИнформации = НСтр("ru = 'Штрихкод не соответствует формату.'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, КодАкцизнойМарки);
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ АкцизныеМаркиВызовСервера.ЭтоШтрихкодАкцизнойМарки(КодАкцизнойМарки) Тогда
			ЗаголовокИнформации = НСтр("ru = 'Штрихкод не соответствует формату.'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, КодАкцизнойМарки);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ШтрихкодМаркиПрисутствуетВЧеке() Тогда
		Если РежимЗапросаТабачныхКодов Тогда
			ЗаголовокИнформации = НСтр("ru = 'Код маркировки уже присутствует в чеке.'");
		Иначе
			ЗаголовокИнформации = НСтр("ru = 'Штрихкод марки уже присутствует в чеке.'");
		КонецЕсли;
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, КодАкцизнойМарки);
		Возврат;
	КонецЕсли;
	
	Если НЕ РежимЗапросаТабачныхКодов Тогда
		ТекстОшибки = "";
		Если НЕ ИнтеграцияЕГАИСРТВызовСервера.ПроверитьУникальностьАкцизнойМарки(Операция, КодАкцизнойМарки, ТекстОшибки) Тогда
			ЗаголовокИнформации = НСтр("ru = 'Контроль уникальности акцизных марок'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстОшибки);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Закрыть(КодАкцизнойМарки);
	
КонецПроцедуры

&НаКлиенте
Функция ШтрихкодМаркиПрисутствуетВЧеке()
	
	Если РежимЗапросаТабачныхКодов Тогда
		ИмяТаблицы = "КодыМаркировки";
		ИмяКолонки = "КодМаркировки";
	Иначе
		ИмяТаблицы = "АкцизныеМарки";
		ИмяКолонки = "КодАкцизнойМарки";
	КонецЕсли;
	МассивАкцизныхМарок = ВладелецФормы.Объект[ИмяТаблицы].НайтиСтроки(Новый Структура(ИмяКолонки, КодАкцизнойМарки));
	
	Для Каждого СтрокаМарки Из МассивАкцизныхМарок Цикл
		Если СтрокаМарки.КлючСвязи <> ТекущийКлючСвязи Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
