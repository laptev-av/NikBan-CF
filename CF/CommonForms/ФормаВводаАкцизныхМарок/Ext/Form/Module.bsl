
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ШтрихкодСоответствуетШаблону(Штрихкод) Тогда
		ЗаголовокИнформации = НСтр("ru = 'Штрихкод не соответствует формату.'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации);
		Возврат;
	КонецЕсли;
	
	РезультатПоискаМарки = ШтрихкодМаркиПрисутствуетВЧеке(Штрихкод);
	Если РезультатПоискаМарки = Неопределено Тогда
		ТекстОшибки = "";
		Если НЕ ИнтеграцияЕГАИСРТВызовСервера.ПроверитьУникальностьАкцизнойМарки(Операция, Штрихкод, ТекстОшибки) Тогда
			ЗаголовокИнформации = НСтр("ru='Контроль уникальности акцизных марок'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстОшибки);
			Возврат;
		КонецЕсли;
	
		ДобавитьМаркуНаСервере(Штрихкод, ДополнительныеПараметры);
	Иначе
		ЗаголовокИнформации = НСтр("ru = 'Штрихкод марки уже присутствует в чеке.'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации);
		Если РезультатПоискаМарки = -1 Тогда
			Возврат;
		Иначе
			Элементы.Марки.ТекущаяСтрока = РезультатПоискаМарки;
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ЗавершитьВвод;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьМаркуНаСервере(Штрихкод, ДополнительныеПараметры)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("КодАкцизнойМарки", Штрихкод);
	НайденныеСтроки = Марки.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() = 0 Тогда	
		НоваяСтрока = Марки.Добавить();
		НоваяСтрока.КодАкцизнойМарки = Штрихкод;
		ИдентификаторСтроки = НоваяСтрока.ПолучитьИдентификатор();
	Иначе
		ИдентификаторСтроки = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	Элементы.Марки.ТекущаяСтрока = ИдентификаторСтроки;
	
	КоличествоУпаковокВыбрано = Марки.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ДанныеШтрихкода) = Тип("Структура") Тогда
		Если ДанныеШтрихкода.Свойство("Штрихкод") Тогда
			Штрихкод = ДанныеШтрихкода.Штрихкод;
			Если ЗначениеЗаполнено(Штрихкод) Тогда
				Если НЕ ШтрихкодСоответствуетШаблону(Штрихкод) Тогда
					ЗаголовокИнформации = НСтр("ru = 'Штрихкод не соответствует формату.'");
					ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации);
					Возврат;
				КонецЕсли;
				
				РезультатПоискаМарки = ШтрихкодМаркиПрисутствуетВЧеке(Штрихкод);
				Если РезультатПоискаМарки = Неопределено Тогда
					ТекстОшибки = "";
					Если НЕ ИнтеграцияЕГАИСРТВызовСервера.ПроверитьУникальностьАкцизнойМарки(Операция, Штрихкод, ТекстОшибки) Тогда
						ЗаголовокИнформации = НСтр("ru='Контроль уникальности акцизных марок'");
						ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстОшибки);
						Возврат;
					КонецЕсли;
				
					ДобавитьМаркуНаСервере(Штрихкод, ДополнительныеПараметры);
				Иначе
					ЗаголовокИнформации = НСтр("ru = 'Штрихкод марки уже присутствует в чеке.'");
					ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации);
					Если РезультатПоискаМарки = -1 Тогда
						Возврат;
					Иначе
						Элементы.Марки.ТекущаяСтрока = РезультатПоискаМарки;
					КонецЕсли;
				КонецЕсли;
				
				ЭтаФорма.ТекущийЭлемент = Элементы.ЗавершитьВвод;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НадписьОтсканируйте = НСтр("ru = 'Отсканируйте код акцизной марки'");
	
	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекВызовСервера.ИспользоватьПодключаемоеОборудование();
	
	Если Параметры.Свойство("ТекущийКлючСвязи") Тогда
		ТекущийКлючСвязи = Параметры.ТекущийКлючСвязи;
	КонецЕсли;
	
	Если Параметры.Свойство("ПредставлениеНоменклатуры") Тогда
		ПредставлениеНоменклатуры = Параметры.ПредставлениеНоменклатуры;
		ЭтотОбъект.Заголовок = ПредставлениеНоменклатуры;
	КонецЕсли;
	
	Если Параметры.Свойство("Номенклатура") Тогда
		Номенклатура = Параметры.Номенклатура;
	КонецЕсли;
	
	Если Параметры.Свойство("Количество") Тогда
		КоличествоУпаковок = Параметры.Количество;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресВХранилище") Тогда
		МассивМарок = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		Для Каждого СтрокаМарки Из МассивМарок Цикл
			НоваяСтрока = Марки.Добавить();
			НоваяСтрока.КодАкцизнойМарки = СтрокаМарки.КодАкцизнойМарки;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗапретитьУдалениеМарки") Тогда
		ЗапретитьУдалениеМарки = Параметры.ЗапретитьУдалениеМарки;
	КонецЕсли;
	
	Если Параметры.Свойство("Операция") Тогда
		Операция = Параметры.Операция;
	Иначе
		Операция = "Продажа";
	КонецЕсли;
	
	Если ЗапретитьУдалениеМарки Тогда
		Элементы.МаркиУдалить.Видимость = Ложь;
	КонецЕсли;
	
	КоличествоУпаковокВыбрано = Марки.Количество();
	
	// Режим отладки
	РежимОтладки = ОбщегоНазначенияКлиентСервер.РежимОтладки()
	             И Пользователи.ЭтоПолноправныйПользователь();
	
	Элементы.ПоискПоШтрихкоду.Видимость = РежимОтладки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыМарки

&НаКлиенте
Процедура МаркиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МаркиПередУдалением(Элемент, Отказ)
	
	Если ЗапретитьУдалениеМарки Тогда
		Отказ = Истина;
	Иначе
		ТекущиеДанные = Элементы.Марки.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			УдаленныеМарки.Добавить(ТекущиеДанные.КодАкцизнойМарки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаркиПослеУдаления(Элемент)
	
	КоличествоУпаковокВыбрано = Марки.Количество();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВвод(Команда)
	
	АдресВХранилище = АдресМарокВХранилище();
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("АдресВХранилище", АдресВХранилище);
	Если Не Модифицированность Тогда
		Закрыть(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуВыполнить(Команда)
	
	ОчиститьСообщения();
	
	ШтрихкодированиеНоменклатурыЕГАИСКлиентПереопределяемый.ПоказатьВводШтрихкода(
		Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АдресМарокВХранилище()
	ТаблицаМарок = Марки.Выгрузить();
	АдресМарок = ПоместитьВоВременноеХранилище(ТаблицаМарок, Новый УникальныйИдентификатор);
	Возврат АдресМарок;
КонецФункции

&НаСервереБезКонтекста
Функция ШтрихкодСоответствуетШаблону(Штрихкод)
	
	ПространствоИмен = Перечисления.ВидыДокументовЕГАИС.ПространствоИмен(Перечисления.ВидыДокументовЕГАИС.ЧекККМ, Неопределено);
	Если ПространствоИмен = Неопределено Тогда
		Возврат Ложь;
	Иначе
		ТипШтрихкодМарки = ФабрикаXDTO.Тип(ПространствоИмен, "BK");
		Попытка
			ТипШтрихкодМарки.Проверить(Штрихкод);
		Исключение
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаКлиенте
Функция ШтрихкодМаркиПрисутствуетВЧеке(Штрихкод)
	
	СтруктураПоиска = Новый Структура("КодАкцизнойМарки", Штрихкод);
	
	НайденныеМарки = Марки.НайтиСтроки(СтруктураПоиска);
	Если НайденныеМарки.Количество() = 0 Тогда
		
		Если УдаленныеМарки.НайтиПоЗначению(Штрихкод) <> Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		НайденныеМарки = ВладелецФормы.Объект.АкцизныеМарки.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеМарки.Количество() = 0 Тогда
			Возврат Неопределено;
		Иначе 
			Возврат -1;
		КонецЕсли;
		
	Иначе
		
		ИдентификаторСтроки = НайденныеМарки[0].ПолучитьИдентификатор();
		Возврат ИдентификаторСтроки;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
