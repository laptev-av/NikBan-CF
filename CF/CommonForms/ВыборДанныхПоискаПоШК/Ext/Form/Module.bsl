
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиВыбора = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиВыбораДанныхПоискаПоШК", "");
	Если ТипЗнч(НастройкиВыбора) = Тип("Структура") Тогда
		Если НастройкиВыбора.Свойство("ПоказыватьОстатокНоменклатуры") Тогда
			ПоказыватьОстатокНоменклатуры = НастройкиВыбора.ПоказыватьОстатокНоменклатуры;
		КонецЕсли;
		Если НастройкиВыбора.Свойство("Магазин") Тогда
			Магазин = НастройкиВыбора.Магазин;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Магазин) Тогда
		Магазин = ПараметрыСеанса.ТекущийМагазин;
	КонецЕсли;
	
	Элементы.Магазин.Доступность = ПоказыватьОстатокНоменклатуры;
	Элементы.КолонкиОстатка.Видимость = ПоказыватьОстатокНоменклатуры;
	
	Если Параметры.Свойство("АдресВХранилище") Тогда
		
		СтруктураВХранилище = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		СтруктураВХранилище.Свойство("Штрихкод", Штрихкод);
		СтруктураВХранилище.Свойство("МагнитныйКод", МагнитныйКод);
		Элементы.ТаблицаВыбораВыбрана.Видимость = Ложь;
		Элементы.ТаблицаВыбораКодПоиска.Видимость = Ложь;
		СтрокаЗаголовка = "";
		Если ЗначениеЗаполнено(Штрихкод) Тогда
			СтрокаЗаголовка = НСтр("ru = 'Выбор данных поиска по штрихкоду %1'");
			СтрокаЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаЗаголовка, Штрихкод);
		Иначе
			СтрокаЗаголовка = НСтр("ru = 'Выбор данных поиска по магнитному коду %1'");
			СтрокаЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаЗаголовка, МагнитныйКод);
		КонецЕсли;
		ЭтотОбъект.Заголовок = СтрокаЗаголовка;
		ЭтотОбъект.АвтоЗаголовок = Ложь;
		ТаблицаВХранилище = СтруктураВХранилище.ТаблицаВыбора;
		СтрокиДерева = ДеревоВыбора.ПолучитьЭлементы();
		Для Каждого СтрокаХранилища Из ТаблицаВХранилище Цикл
			НоваяСтрока = СтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаХранилища);
			Если ЗначениеЗаполнено(СтрокаХранилища.Карта) Тогда
				НоваяСтрока.ПредставлениеОбъекта = "" + СтрокаХранилища.Карта + " (" + СтрокаХранилища.ТипКарты + ")";
				Если СтрокаХранилища.ТипКарты = Перечисления.ТипыИнформационныхКарт.Регистрационная Тогда
					НоваяСтрока.ЭтоРегистрационнаяКарта = Истина;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(СтрокаХранилища.СерийныйНомер) Тогда
				НоваяСтрока.ПредставлениеОбъекта = "" + СтрокаХранилища.СерийныйНомер + " (" + СтрокаХранилища.Номенклатура + ")";
			Иначе
				НоваяСтрока.ПредставлениеОбъекта = 
					"" + СтрокаХранилища.Номенклатура
					+ ", " + СтрокаХранилища.Характеристика
					+ ", " + СтрокаХранилища.Упаковка
					+ СтрокаХранилища.ШтрихкодУпаковкиЕГАИС;
				НоваяСтрокаНоменклатуры = ТаблицаНоменклатурыДляОстатков.Добавить();
				НоваяСтрокаНоменклатуры.Номенклатура = СтрокаХранилища.Номенклатура;
				НоваяСтрокаНоменклатуры.Характеристика= СтрокаХранилища.Характеристика;
				НоваяСтрокаНоменклатуры.Упаковка = СтрокаХранилища.Упаковка;
			КонецЕсли;
		КонецЦикла;
		Элементы.ТаблицаВыбора.ТолькоПросмотр = Истина;
	ИначеЕсли Параметры.Свойство("ПовторяющиесяШтрихкоды") Тогда
		
		ЕстьПовторяющиесяШтрихкоды = Истина;
		
		ЭтотОбъект.Заголовок = НСтр("ru = 'Выбор данных поиска'");
		ЭтотОбъект.АвтоЗаголовок = Ложь;
		ПовторяющиесяШтрихкоды = Параметры.ПовторяющиесяШтрихкоды;
		СтрокиДерева = ДеревоВыбора.ПолучитьЭлементы();
		ПоследнийШтрихкод = "";
		Для Каждого СтрокаШтрихкода Из ПовторяющиесяШтрихкоды.ЗначенияПоиска Цикл
			Если ПоследнийШтрихкод <> СтрокаШтрихкода.Штрихкод Тогда
				НоваяСтрокаРодитель = СтрокиДерева.Добавить();
				НоваяСтрокаРодитель.КодПоиска = СтрокаШтрихкода.Штрихкод;
				НоваяСтрокаРодитель.НомерСтрокиЗагрузки = СтрокаШтрихкода.НомерСтрокиЗагрузки;
				ПодчиненныеСтроки = НоваяСтрокаРодитель.ПолучитьЭлементы();
				ПоследнийШтрихкод = СтрокаШтрихкода.Штрихкод;
			КонецЕсли;
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.КодПоиска = СтрокаШтрихкода.Штрихкод;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаШтрихкода);
			Если СтрокаШтрихкода.Свойство("Карта") Тогда
				НоваяСтрока.ПредставлениеОбъекта = "" + СтрокаШтрихкода.Карта + " (" + СтрокаШтрихкода.ТипКарты + ")";
				Если СтрокаШтрихкода.ТипКарты = Перечисления.ТипыИнформационныхКарт.Регистрационная Тогда
					НоваяСтрока.ЭтоРегистрационнаяКарта = Истина;
				КонецЕсли;
			ИначеЕсли СтрокаШтрихкода.Свойство("СерийныйНомер") Тогда
				НоваяСтрока.ПредставлениеОбъекта = "" + СтрокаШтрихкода.СерийныйНомер + " (" + СтрокаШтрихкода.Номенклатура + ")";
			Иначе
				НоменклатураСтрока = ?(СтрокаШтрихкода.Свойство("Номенклатура"), СтрокаШтрихкода.Номенклатура, "");
				ХарактеристикаСтрока = ?(СтрокаШтрихкода.Свойство("Характеристика"), СтрокаШтрихкода.Характеристика, "");
				УпаковкаСтрока = ?(СтрокаШтрихкода.Свойство("Упаковка"), СтрокаШтрихкода.Упаковка, "");
				ШтрихкодУпаковкиЕГАИССтрока = ?(СтрокаШтрихкода.Свойство("ШтрихкодУпаковкиЕГАИС"), ", " + СтрокаШтрихкода.ШтрихкодУпаковкиЕГАИС, "");
				НоваяСтрока.ПредставлениеОбъекта = "" + НоменклатураСтрока + ", " + ХарактеристикаСтрока + ", " + УпаковкаСтрока + ШтрихкодУпаковкиЕГАИССтрока;
				
				НоваяСтрокаНоменклатуры = ТаблицаНоменклатурыДляОстатков.Добавить();
				НоваяСтрокаНоменклатуры.Номенклатура = СтрокаШтрихкода.Номенклатура;
				НоваяСтрокаНоменклатуры.Характеристика= СтрокаШтрихкода.Характеристика;
				НоваяСтрокаНоменклатуры.Упаковка = СтрокаШтрихкода.Упаковка;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПоказыватьОстатокНоменклатуры Тогда
		ОбновитьОстаткиНоменклатурыВДереве();
	КонецЕсли;
	
	ЭтотОбъект.ТекущийЭлемент = Элементы.ТаблицаВыбора;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	МагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОстатокНоменклатурыПриИзменении(Элемент)
	ПоказыватьОстатокНоменклатурыПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаВыбора

&НаКлиенте
Процедура ТаблицаВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НЕ ЕстьПовторяющиесяШтрихкоды Тогда
		Закрыть(ПодготовитьСтруктуруВыбора());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбораВыбранаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТаблицаВыбора.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПодчиненныеСтроки = ТекущаяСтрока.ПолучитьЭлементы();
		Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
			ПодчиненнаяСтрока.Выбрана = ТекущаяСтрока.Выбрана;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(ПодготовитьСтруктуруВыбора());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПодготовитьСтруктуруВыбора()
	
	СтруктураРезультат = ПодключаемоеОборудованиеРТВызовСервера.СтруктураДанныхПоиска();
	СтруктураРезультат.НеизвестныеДанныеПО = Ложь;
	
	Если ЕстьПовторяющиесяШтрихкоды Тогда
		СтрокиКодов = ДеревоВыбора.ПолучитьЭлементы();
		Для Каждого СтрокаКода Из СтрокиКодов Цикл
			ПодчиненныеСтроки = СтрокаКода.ПолучитьЭлементы();
			Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
				Если ПодчиненнаяСтрока.Выбрана Тогда
					СтруктураРезультат.ДанныеПО = СтрокаКода.КодПоиска;
					СтруктураРезультат.ТипДанныхПО = "Штрихкод";
					
					СтруктураСтроки = Новый Структура;
					СтруктураСтроки.Вставить("Штрихкод", СтрокаКода.КодПоиска);
					СтруктураСтроки.Вставить("МагнитныйКод", "");
					СтруктураСтроки.Вставить("ДанныеПО",  СтрокаКода.КодПоиска);
					СтруктураСтроки.Вставить("ТипШтрихкода", ПодчиненнаяСтрока.ТипШтрихкода);
					СтруктураСтроки.Вставить("НомерСтрокиЗагрузки", СтрокаКода.НомерСтрокиЗагрузки);
					
					Если ЗначениеЗаполнено(ПодчиненнаяСтрока.СерийныйНомер) Тогда
						СтруктураСтроки.Вставить("СерийныйНомер", ПодчиненнаяСтрока.СерийныйНомер);
						СтруктураСтроки.Вставить("Номенклатура", ПодчиненнаяСтрока.Номенклатура);
					ИначеЕсли ЗначениеЗаполнено(ПодчиненнаяСтрока.Карта) Тогда
						СтруктураСтроки.Вставить("Карта", ПодчиненнаяСтрока.Карта);
						СтруктураСтроки.Вставить("ВладелецКарты", ПодчиненнаяСтрока.ВладелецКарты);
						СтруктураСтроки.Вставить("ТипКарты", ПодчиненнаяСтрока.ТипКарты);
						СтруктураСтроки.Вставить("ЭтоРегистрационнаяКарта", ПодчиненнаяСтрока.ЭтоРегистрационнаяКарта);
					Иначе
						
						СтруктураСтроки.Вставить("Номенклатура", ПодчиненнаяСтрока.Номенклатура);
						СтруктураСтроки.Вставить("Характеристика", ПодчиненнаяСтрока.Характеристика);
						СтруктураСтроки.Вставить("Упаковка", ПодчиненнаяСтрока.Упаковка);
						СтруктураСтроки.Вставить("Количество", ПодчиненнаяСтрока.Количество);
						СтруктураСтроки.Вставить("ШтрихкодУпаковкиЕГАИС", ПодчиненнаяСтрока.ШтрихкодУпаковкиЕГАИС);
						СтруктураСтроки.Вставить("ТипУпаковки", ПодчиненнаяСтрока.ТипУпаковки);
						
						ДанныеМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьКодМаркировки(Штрихкод);
						Если ДанныеМаркировки.Разобран Тогда
							СтруктураСтроки.Вставить("ДанныеМаркировки", ДанныеМаркировки);
						КонецЕсли;
					КонецЕсли;
					
					СтруктураРезультат.ЗначенияПоиска.Добавить(СтруктураСтроки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Иначе
		ТекущиеДанные = Элементы.ТаблицаВыбора.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			
			СтруктураСтроки = Новый Структура;
			Если ЗначениеЗаполнено(Штрихкод) Тогда
				СтруктураСтроки.Вставить("Штрихкод", Штрихкод);
				СтруктураСтроки.Вставить("МагнитныйКод", "");
				СтруктураСтроки.Вставить("ДанныеПО", Штрихкод);
				
				СтруктураРезультат.ДанныеПО = Штрихкод;
				СтруктураРезультат.ТипДанныхПО = "Штрихкод";
			Иначе
				СтруктураСтроки.Вставить("Штрихкод", "");
				СтруктураСтроки.Вставить("МагнитныйКод", МагнитныйКод);
				СтруктураСтроки.Вставить("ДанныеПО", МагнитныйКод);
				СтруктураРезультат.ДанныеПО = МагнитныйКод;
				СтруктураРезультат.ТипДанныхПО = "МагнитныйКод";
			КонецЕсли;
			СтруктураСтроки.Вставить("ТипШтрихкода", ТекущиеДанные.ТипШтрихкода);
			
			Если ЗначениеЗаполнено(ТекущиеДанные.СерийныйНомер) Тогда
				СтруктураСтроки.Вставить("СерийныйНомер", ТекущиеДанные.СерийныйНомер);
				СтруктураСтроки.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
			ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.Карта) Тогда
				СтруктураСтроки.Вставить("Карта", ТекущиеДанные.Карта);
				СтруктураСтроки.Вставить("ВладелецКарты", ТекущиеДанные.ВладелецКарты);
				СтруктураСтроки.Вставить("ТипКарты", ТекущиеДанные.ТипКарты);
				СтруктураСтроки.Вставить("ЭтоРегистрационнаяКарта", ТекущиеДанные.ЭтоРегистрационнаяКарта);
			Иначе
				
				СтруктураСтроки.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
				СтруктураСтроки.Вставить("Характеристика", ТекущиеДанные.Характеристика);
				СтруктураСтроки.Вставить("Упаковка", ТекущиеДанные.Упаковка);
				СтруктураСтроки.Вставить("Количество", ТекущиеДанные.Количество);
				СтруктураСтроки.Вставить("ШтрихкодУпаковкиЕГАИС", ТекущиеДанные.ШтрихкодУпаковкиЕГАИС);
				СтруктураСтроки.Вставить("ТипУпаковки", ТекущиеДанные.ТипУпаковки);
				ДанныеМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьКодМаркировки(Штрихкод);
				Если ДанныеМаркировки.Разобран Тогда
					СтруктураСтроки.Вставить("ДанныеМаркировки", ДанныеМаркировки);
				КонецЕсли;
			КонецЕсли;
			
			СтруктураРезультат.ЗначенияПоиска.Добавить(СтруктураСтроки);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Процедура ПоказыватьОстатокНоменклатурыПриИзмененииНаСервере()
	
	Элементы.Магазин.Доступность = ПоказыватьОстатокНоменклатуры;
	Элементы.КолонкиОстатка.Видимость = ПоказыватьОстатокНоменклатуры;
	НастройкиВыбора = Новый Структура;
	НастройкиВыбора.Вставить("ПоказыватьОстатокНоменклатуры", ПоказыватьОстатокНоменклатуры);
	НастройкиВыбора.Вставить("Магазин", Магазин);
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("НастройкиВыбораДанныхПоискаПоШК", "", НастройкиВыбора);
	Если ПоказыватьОстатокНоменклатуры Тогда
		ОбновитьОстаткиНоменклатурыВДереве();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МагазинПриИзмененииНаСервере()
	ОбновитьОстаткиНоменклатурыВДереве();
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиНоменклатурыВДереве()
	
	ЗапросОстатки = Новый Запрос;
	ЗапросОстатки.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура КАК Номенклатура,
	|	Остатки.Характеристика КАК Характеристика,
	|	СУММА(Остатки.КоличествоОстаток) КАК Остаток,
	|	СУММА(Остатки.РезервОстаток) КАК Резерв
	|ПОМЕСТИТЬ ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Склад.Магазин = &Магазин
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|						ТаблицаНоменклатуры.Характеристика КАК Характеристика
	|					ИЗ
	|						ТаблицаНоменклатуры КАК ТаблицаНоменклатуры)) КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНоменклатуры.Упаковка.Коэффициент, 0) = 0
	|			ТОГДА Остатки.Остаток
	|		ИНАЧЕ Остатки.Остаток / ЕСТЬNULL(ТаблицаНоменклатуры.Упаковка.Коэффициент, 0)
	|	КОНЕЦ КАК Остаток,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаНоменклатуры.Упаковка.Коэффициент, 0) = 0
	|			ТОГДА Остатки.Резерв
	|		ИНАЧЕ Остатки.Резерв / ЕСТЬNULL(ТаблицаНоменклатуры.Упаковка.Коэффициент, 0)
	|	КОНЕЦ КАК Резерв
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры КАК Остатки
	|		ПО ТаблицаНоменклатуры.Номенклатура = Остатки.Номенклатура
	|			И ТаблицаНоменклатуры.Характеристика = Остатки.Характеристика
	|";
	ЗапросОстатки.УстановитьПараметр("ТаблицаНоменклатуры", ТаблицаНоменклатурыДляОстатков.Выгрузить());
	ЗапросОстатки.УстановитьПараметр("Магазин", Магазин);
	ТаблицаНоменклатурыДляОстатков.Загрузить(ЗапросОстатки.Выполнить().Выгрузить());
	
	ОбновитьОстаткиВСтроках();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОстаткиВСтроках(ТекущаяСтрока = Неопределено)
	Если ТекущаяСтрока = Неопределено Тогда
		СтрокиДерева = ДеревоВыбора.ПолучитьЭлементы();
	Иначе
		СтрокиДерева = ТекущаяСтрока.ПолучитьЭлементы();
	КонецЕсли;
	Для Каждого ПодчиненнаяСтрока Из СтрокиДерева Цикл
		Если ЗначениеЗаполнено(ПодчиненнаяСтрока.Номенклатура) И НЕ ЗначениеЗаполнено(ПодчиненнаяСтрока.СерийныйНомер) Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура", ПодчиненнаяСтрока.Номенклатура);
			СтруктураПоиска.Вставить("Характеристика", ПодчиненнаяСтрока.Характеристика);
			СтрокиОстатков = ТаблицаНоменклатурыДляОстатков.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаОстатка Из СтрокиОстатков Цикл
				ПодчиненнаяСтрока.Остаток = СтрокаОстатка.Остаток;
				ПодчиненнаяСтрока.Резерв = СтрокаОстатка.Резерв;
				Прервать;
			КонецЦикла;
			
		КонецЕсли;
		ОбновитьОстаткиВСтроках(ПодчиненнаяСтрока);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
