&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Заголовок = НСтр("ru = 'Номер таможенной декларации'");
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура КодПриИзменении(Элемент)
	ТекущийТекстНомераДекларации = Объект.Код;
	КодПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	КорректныйПериод = КорректныйПериодВводаДокументов();
	НачалоКорректногоПериода = КорректныйПериод.НачалоКорректногоПериода;
	КонецКорректногоПериода  = КорректныйПериод.КонецКорректногоПериода;
	ТекущийТекстНомераДекларации = Объект.Код;
	КодОшибки = НаличиеОшибокВНомереДекларации(ТекущийТекстНомераДекларации, НачалоКорректногоПериода, КонецКорректногоПериода);
	УправлениеПодсказками();

КонецПроцедуры

&НаСервере
Процедура КодПриИзмененииНаСервере()
	
	Реквизиты = Справочники.НомераГТД.РегистрационныйНомерИСтранаВвоза(ТекущийТекстНомераДекларации);
	Объект.СтранаВвозаНеРФ = Реквизиты.СтранаВвозаНеРФ;
	Объект.ПорядковыйНомерТовара = Реквизиты.ПорядковыйНомерТовара;
	Объект.РегистрационныйНомерДекларации = Реквизиты.РегистрационныйНомер;
	
	КодОшибки = НаличиеОшибокВНомереДекларации(ТекущийТекстНомераДекларации, НачалоКорректногоПериода, КонецКорректногоПериода);
	УправлениеПодсказками();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеПодсказками()
	
	Элементы.НомерОшибочнаяСтруктура.Видимость    = КодОшибки = 1;
	Элементы.КодТаможенногоОрганаДлина.Видимость  = КодОшибки = 2;
	Элементы.ДатаДекларацииДлина.Видимость        = КодОшибки = 3;
	Элементы.ДатаДекларацииОшибочная.Видимость    = КодОшибки = 4;
	Элементы.ПорядковыйНомерДлина.Видимость       = КодОшибки = 5;
	Элементы.ПорядковыйНомерТовараДлина.Видимость = КодОшибки = 6;
	
КонецПроцедуры

&НаСервере
Функция НаличиеОшибокВНомереДекларации(НомерТаможеннойДекларации, НачалоКорректногоПериода, КонецКорректногоПериода)
	
	НомерДекларацииНаТовары = СокрЛП(НомерТаможеннойДекларации);
	
	Если НЕ ЗначениеЗаполнено(НомерДекларацииНаТовары) Тогда
		// Пользователь еще ничего не ввел.
		Возврат 0;
	КонецЕсли;
	
	Если СтрДлина(НомерДекларацииНаТовары) < 23
	 ИЛИ СтрДлина(НомерДекларацииНаТовары) > 27 Тогда
		// Ошибочная длина номера.
		Возврат 1;
	КонецЕсли;
	
	МассивТД = СтрРазделить(НомерДекларацииНаТовары, "/");
	
	Если МассивТД.Количество() > 4
	 ИЛИ МассивТД.Количество() < 3 Тогда
		// Ошибочное количество элементов.
		Возврат 1;
	КонецЕсли;
	
	КодТаможенногоОргана = МассивТД[0];
	
	Если СтрДлина(КодТаможенногоОргана) <> 2
		И СтрДлина(КодТаможенногоОргана) <> 5
		И СтрДлина(КодТаможенногоОргана) <> 8 Тогда
		// Ошибочная длина кода таможенного органа.
		Возврат 2;
	КонецЕсли;
	
	ДатаПринятияДекларацииНаТовары = МассивТД[1];
	
	Если СтрДлина(ДатаПринятияДекларацииНаТовары) <> 6 Тогда
		// Ошибочная длина поля дата.
		Возврат 3;
	Иначе
		// Проверим корректность указания даты.
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ДатаПринятияДекларацииНаТовары) Тогда
			// Длина поля верная, но дата указана ошибочно.
			Возврат 3;
		КонецЕсли; 
		
		СтрокаВДату = СтроковыеФункцииКлиентСервер.СтрокаВДату(ДатаПринятияДекларацииНаТовары);
		Если НЕ ЗначениеЗаполнено(СтрокаВДату) Тогда
			// Длина поля верная, но дата указана ошибочно.
			Возврат 3;
		Иначе
			// Проверим год на корректность указания.
			
			Если СтрокаВДату < НачалоКорректногоПериода 
			 ИЛИ СтрокаВДату > КонецКорректногоПериода Тогда
				Возврат 4;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	ПорядковыйНомерДекларацииНаТовары = МассивТД[2];
	
	Если СтрДлина(ПорядковыйНомерДекларацииНаТовары) <> 7 Тогда
		// Ошибочная длина поля порядковый номер.
		Возврат 5;
	КонецЕсли;
	
	Если МассивТД.Количество() = 4 Тогда
		ПорядковыйНомерТовара = МассивТД[3];
		Если СтрДлина(ПорядковыйНомерТовара) > 3
		 ИЛИ СтрДлина(ПорядковыйНомерТовара) < 1 Тогда
			// Ошибочная длина поля порядковый номер товара.
			Возврат 6;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

&НаСервере
Функция КорректныйПериодВводаДокументов()
	
	// Контролируем ошибку на один разряд. Например, 0017 вместо 2017; 2071 вместо 2017.
	// Допустимым считаем ввод документов на 19 лет в будущем. Например, в 2020 году разрешаем
	// вводить даты в интервале с января 2000 по декабрь 2039.
	
	КонецКорректногоПериода = ДобавитьМесяц(КонецГода(ТекущаяДатаСеанса()), 19 * 12);
	
	КорректныйПериод = Новый Структура;
	КорректныйПериод.Вставить("НачалоКорректногоПериода", Дата(2000, 01, 01));
	КорректныйПериод.Вставить("КонецКорректногоПериода",  КонецКорректногоПериода);
	Возврат КорректныйПериод;
	
КонецФункции
