
#Область ПеременныеФормы

&НаСервере
Перем СКД;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СКД = Справочники.ИнформационныеКарты.ПолучитьМакет("ОсновнаяСхемаЗаполненияДатСледующегоОпроса");
	АдресСКД = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаКарт

&НаКлиенте
Процедура ТаблицаКартПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКартПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьКарты(Команда)
	
	ВыбратьКартыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьФлажки(Команда)
	
	Для каждого СтрокаТаблицыКарт Из ТаблицаКарт Цикл
	
		СтрокаТаблицыКарт.Пометка = НЕ СтрокаТаблицыКарт.Пометка;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)

	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройки выбора карт'");
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресСхемыКомпоновкиДанных",АдресСКД );
	ПараметрыОткрытия.Вставить("НеРедактироватьСхемуКомпоновкиДанных", Истина);
	ПараметрыОткрытия.Вставить("НеНастраиватьУсловноеОформление", Истина);
	ПараметрыОткрытия.Вставить("НеНастраиватьВыбор", Истина);
	ПараметрыОткрытия.Вставить("ИсточникШаблонов", Неопределено);
	ПараметрыОткрытия.Вставить("Заголовок", ЗаголовокФормыНастройкиСхемыКомпоновкиДанных);
	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьДатуСледующегоОпроса(Команда)
	Перем ТекстСообщения;
	
	Если НЕ ЗначениеЗаполнено(ДатаСледующегоОпроса) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнена дата следующего опроса'"),
			ЭтаФорма,
			"ДатаСледующегоОпроса");
		
	КонецЕсли;
	
	Если ТаблицаКарт.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Нужно выбрать карты'"),
			ЭтаФорма,
			"ТаблицаКарт");
		
	КонецЕсли;
	
	ПроставитьДатуСледующегоОпросаСервер(ТекстСообщения);
	
	ПоказатьОповещениеПользователя(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьФлажкиКлиент(Ложь)
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьФлажкиКлиент(Истина)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыбратьКартыСервер()
	
	СКД       = ПолучитьИзВременногоХранилища(АдресСКД);
	Настройки = СКД.НастройкиПоУмолчанию;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СКД,Настройки,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ТаблицаКарт.Загрузить(ТаблицаЗначений)
	
КонецПроцедуры

&НаСервере
Процедура ПроставитьДатуСледующегоОпросаСервер(ТекстСообщения)

	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Пометка", Истина);
	
	СтрокиТаблицы = ТаблицаКарт.НайтиСтроки(СтруктураПоиска);
	КоличествоОшибок = 0;
	КоличествоЗаписей = 0;
	Для каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
		
		ОбъектИнформационнаяКарта = СтрокаТаблицы.Карта.ПолучитьОбъект();
		
		Попытка
			ОбъектИнформационнаяКарта.ДатаСледующегоОпроса = ДатаСледующегоОпроса;
			СтрокаТаблицы.ДатаСледующегоОпроса = ДатаСледующегоОпроса;
			ОбъектИнформационнаяКарта.Записать();
			КоличествоЗаписей = КоличествоЗаписей + 1;
		Исключение
			КоличествоОшибок = КоличествоОшибок + 1;
		КонецПопытки;
		
	КонецЦикла;
	
	ТекстЗаписано = "";
	
	Если КоличествоЗаписей > 0 Тогда
		КоличествоПрописьюКратко    = ЧислоПрописью(КоличествоЗаписей, , НСтр("ru = ',,,ж,,,,,0'"));
		КоличествоПрописьюПолностью = ЧислоПрописью(КоличествоЗаписей, , НСтр("ru = 'дисконтная карта, дисконтные карты, дисконтных карт, ж,,,,,0'"));
		НадписьВСообщении = СтрЗаменить(КоличествоПрописьюПолностью, КоличествоПрописьюКратко, " ");
		ТекстЗаписано = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Записано: %1 %2'"),
			КоличествоЗаписей,
			НадписьВСообщении);
	КонецЕсли;
	
	ТекстОшибок = "";
	
	Если КоличествоОшибок > 0 Тогда
		
		ТекстОшибок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибок при записи: %1'"),
			КоличествоОшибок);
		
		Если КоличествоЗаписей > 0 Тогда
			ТекстОшибок = Символы.ПС + ТекстОшибок;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстСообщения = ТекстЗаписано + ТекстОшибок;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиКлиент(ПометкаФлага)
	
	Для каждого СтрокаТаблицыКарт Из ТаблицаКарт Цикл
	
		СтрокаТаблицыКарт.Пометка = ПометкаФлага;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
