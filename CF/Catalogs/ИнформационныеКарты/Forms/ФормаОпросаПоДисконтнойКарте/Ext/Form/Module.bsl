

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОтветНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипКонтактнойИнформации = Результат.Тип;
	
	Если ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда 
		
		СтандартнаяОбработка = Ложь;

		ФактическийАдресПредставление = Результат.Представление;
		ФактическийАдрес = Результат.КонтактнаяИнформация;
		
		Ответ = ФактическийАдресПредставление;
		
	ИначеЕсли ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда 
		
		СтандартнаяОбработка = Ложь;
		
		ТелефонПредставление = Результат.Представление;
		Телефон = Результат.КонтактнаяИнформация;
		
		Ответ = ТелефонПредставление;
		
	КонецЕсли;
	
	ОтветПриИзменении(Элементы.Ответ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Карта", Карта);
	
	Если НЕ ЗначениеЗаполнено(Карта) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	ВладелецКарты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Карта, "ВладелецКарты");
	Если ЗначениеЗаполнено(ВладелецКарты)
	   И НЕ ТипЗнч(ВладелецКарты) = Тип("СправочникСсылка.ФизическиеЛица")Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаголовокКарты = НСтр("ru = 'Карта - %1'");
	ЗаголовокКарты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокКарты, Карта);
	
	ЗаполнитьНеАнкетныеТипыДанных();
	
	ЗаполнитьТаблицуВопросов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВопрос();
	
	УправлениеИнтерфейсом();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица")
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Контрагенты") Тогда
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			ЗаписатьВладельцаКарты(ВыбранноеЗначение);
			ОбновитьВопрос();
			УправлениеИнтерфейсом();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФлагОтветаПриИзменении(Элемент)
	
	СтрокаТаблицыВопросов = ТаблицаВопросовИОтветов[НомерВопроса - 1];
	СтрокаТаблицыВопросов.Ответ = ФлагОтвета;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветПриИзменении(Элемент)
	
	СтрокаТаблицыВопросов = ТаблицаВопросовИОтветов[НомерВопроса - 1];
	Если ТипЗнч(СтрокаТаблицыВопросов.Вопрос) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		СтрокаТаблицыВопросов.Ответ = Ответ;
	ИначеЕсли СтрокаТаблицыВопросов.ВидКонтактнойИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресФизическогоЛица") Тогда
		СтрокаТаблицыВопросов.ЗначенияПолей = ФактическийАдрес;
		СтрокаТаблицыВопросов.Значение = ФактическийАдрес;
		СтрокаТаблицыВопросов.ПредопределенныйОтвет = Ответ;
	ИначеЕсли СтрокаТаблицыВопросов.ВидКонтактнойИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонФизическогоЛица") Тогда
		СтрокаТаблицыВопросов.ЗначенияПолей = Телефон;
		СтрокаТаблицыВопросов.Значение = Телефон;
		СтрокаТаблицыВопросов.ПредопределенныйОтвет = Ответ;
	Иначе 
		СтрокаТаблицыВопросов.ПредопределенныйОтвет = Ответ;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТипКИ = СокрЛП(ТипКИ);
	
	Если ТипКИ = "Адрес" Или ТипКИ = "Телефон" Тогда 
		
		СтандартнаяОбработка = Ложь;
		ТекстЭлемента = СокрЛП(Элемент.ТекстРедактирования);
		ПараметрыОткрытия = ЗаполнитьПараметрыОткрытияКИ(ТекстЭлемента);
		Оповещение = Новый ОписаниеОповещения("ОтветНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура);
		УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаВыборОтвета

&НаКлиенте
Процедура ТаблицаВыборОтветаПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаВыборОтвета.ТекущиеДанные;
	Если ТекущиеДанные.Пометка Тогда
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Вопрос", ТекущиеДанные.Вопрос);
		
		СтрокиТаблицыВыбора = ТаблицаВыборОтвета.НайтиСтроки(СтруктураПоиска);
		
		Для каждого СтрокаТаблицы Из СтрокиТаблицыВыбора Цикл
			Если Не СтрокаТаблицы.Ответ = ТекущиеДанные.Ответ Тогда
				СтрокаТаблицы.Пометка = Ложь;
			КонецЕсли;
		КонецЦикла;
		СтрокаТаблицыВопросов = ТаблицаВопросовИОтветов[НомерВопроса - 1];
		СтрокаТаблицыВопросов.Ответ = ТекущиеДанные.Ответ;
	Иначе
		СтрокаТаблицыВопросов = ТаблицаВопросовИОтветов[НомерВопроса - 1];
		СтрокаТаблицыВопросов.Ответ = ПредопределенноеЗначение("Справочник.ЗначенияСвойствОбъектов.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВладельца(Команда)
	
	Если ЗначениеЗаполнено(ВладелецКарты)  Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ВладелецКарты);
		
		ОткрытьФорму("Справочник.ФизическиеЛица.ФормаОбъекта", ПараметрыФормы);
		
	Иначе
		
		ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбора", , ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарту(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Карта);
	
	ОткрытьФорму("Справочник.ИнформационныеКарты.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущийРаздел(Команда)
	
	Если НомерВопроса > 1 Тогда
		НомерВопроса = НомерВопроса - 1;
		
		ОбновитьВопрос();
		
		УправлениеИнтерфейсом();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СледующийРаздел(Команда)
	
	Если НомерВопроса < ТаблицаВопросовИОтветов.Количество() Тогда
		НомерВопроса = НомерВопроса + 1;
		
		ОбновитьВопрос();
		
		УправлениеИнтерфейсом();
	Иначе
		
		ЗаписатьДанныеОпроса();
		
		Закрыть();
		
		Оповестить("ОпросВладельцаКарт", Неопределено, "ФормаОпросаВладельцаКарт");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьВладельцаКарты(ВыбранноеЗначение, ЗаполнятьТаблицуВопросов = Истина)
	
	КартаОбъект = Карта.ПолучитьОбъект();
	ВладелецКарты = ВыбранноеЗначение;
	КартаОбъект.ВладелецКарты = ВладелецКарты;
	Если ЗначениеЗаполнено(КартаОбъект.КодКарты) Тогда
		КартаОбъект.Наименование = КартаОбъект.КодКарты + " (" + СокрЛП(ВладелецКарты) + ")";
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Штрихкоды.Штрихкод КАК Штрихкод
		               |ИЗ
		               |	РегистрСведений.Штрихкоды КАК Штрихкоды
		               |ГДЕ
		               |	Штрихкоды.Владелец = &Владелец";
		Запрос.УстановитьПараметр("Владелец", Карта);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			КартаОбъект.Наименование = Выборка.Штрихкод + " (" + СокрЛП(ВладелецКарты) + ")";
		Иначе
			КартаОбъект.Наименование = "(" + СокрЛП(ВладелецКарты) + ")";
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(КартаОбъект.ДатаОткрытия) Тогда
		КартаОбъект.ДатаОткрытия = ТекущаяДатаСеанса();
	КонецЕсли;
	КартаОбъект.Записать();
	
	Если ЗаполнятьТаблицуВопросов Тогда
		ЗаполнитьТаблицуВопросов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеОпроса()
	
	// Дополнительные реквизиты
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ЭтоДополнительноеСведение", Ложь);
	
	СтрокиТаблицы = ТаблицаВопросовИОтветов.НайтиСтроки(СтруктураПоиска);
	Если ЗначениеЗаполнено(ВладелецКарты) Тогда
		ВладелецОбъект = ВладелецКарты.ПолучитьОбъект();
	Иначе
		ВладелецОбъект = Справочники.ФизическиеЛица.СоздатьЭлемент();
		ГруппаВладельцаКарты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Карта, "ГруппаВладельцаКартыПоШаблону");
		Если ЗначениеЗаполнено(ГруппаВладельцаКарты) Тогда
			ВладелецОбъект.Родитель = ГруппаВладельцаКарты;
		КонецЕсли;
	КонецЕсли;
	
	Владелец_ДополнительныеРеквизиты = ВладелецОбъект.ДополнительныеРеквизиты;
	
	Для Каждого СтрокаТаблицыВопросов Из СтрокиТаблицы Цикл
		
		Если ТипЗнч(СтрокаТаблицыВопросов.Вопрос) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		
			СтрокаДополнительныхРеквизитовВладельца = Владелец_ДополнительныеРеквизиты.Найти(СтрокаТаблицыВопросов.Вопрос , "Свойство");
			
			Если СтрокаДополнительныхРеквизитовВладельца = Неопределено Тогда
				
				СтрокаДополнительныхРеквизитовВладельца = Владелец_ДополнительныеРеквизиты.Добавить();
				СтрокаДополнительныхРеквизитовВладельца.Свойство = СтрокаТаблицыВопросов.Вопрос;
				
			КонецЕсли;
			
			СтрокаДополнительныхРеквизитовВладельца.Значение = СтрокаТаблицыВопросов.Ответ;
			
			Если ОбщегоНазначенияРТ.ИспользоватьНеограниченнуюСтроку(СтрокаТаблицыВопросов.ТипЗначения, СтрокаТаблицыВопросов.МногострочноеПолеВвода) Тогда
				СтрокаДополнительныхРеквизитовВладельца.ТекстоваяСтрока = СтрокаДополнительныхРеквизитовВладельца.Значение;
			КонецЕсли;
		Иначе
			
			Если СтрокаТаблицыВопросов.Вопрос = НСтр("ru = 'Фамилия, Имя, Отчество'") Тогда
				Если ЗначениеЗаполнено(СтрокаТаблицыВопросов.ПредопределенныйОтвет) Тогда
					ВладелецОбъект.Наименование = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
				КонецЕсли;
			ИначеЕсли СтрокаТаблицыВопросов.Вопрос = НСтр("ru = 'Дата рождения'") Тогда
				Если ЗначениеЗаполнено(СтрокаТаблицыВопросов.ПредопределенныйОтвет) Тогда
					ВладелецОбъект.ДатаРождения = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
				КонецЕсли;
			ИначеЕсли СтрокаТаблицыВопросов.Вопрос = НСтр("ru = 'Пол'") Тогда
				Если ЗначениеЗаполнено(СтрокаТаблицыВопросов.ПредопределенныйОтвет) Тогда
					ВладелецОбъект.Пол = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицыВопросов.ВидКонтактнойИнформации) Тогда
				Если ЗначениеЗаполнено(СтрокаТаблицыВопросов.ПредопределенныйОтвет) Тогда
					
					СтрокаКонтактнойИнформации = ВладелецОбъект.КонтактнаяИнформация.Найти(СтрокаТаблицыВопросов.ВидКонтактнойИнформации, "Вид");
					Если СтрокаКонтактнойИнформации = Неопределено Тогда
						СтрокаКонтактнойИнформации = ВладелецОбъект.КонтактнаяИнформация.Добавить();
						СтрокаКонтактнойИнформации.Тип = СтрокаТаблицыВопросов.ТипКонтактнойИнформации;
						СтрокаКонтактнойИнформации.Вид = СтрокаТаблицыВопросов.ВидКонтактнойИнформации;
					КонецЕсли;
					
					ТипКонтактнойИнформации = СтрокаТаблицыВопросов.ТипКонтактнойИнформации;
					Если ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда 
						СтрокаКонтактнойИнформации.Представление = ФактическийАдресПредставление;
						СтрокаКонтактнойИнформации.ЗначенияПолей = ФактическийАдрес;
						СтрокаКонтактнойИнформации.Значение = ФактическийАдрес;
					ИначеЕсли ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда 
						СтрокаКонтактнойИнформации.Представление = ТелефонПредставление;
						СтрокаКонтактнойИнформации.ЗначенияПолей = Телефон;
						СтрокаКонтактнойИнформации.Значение = Телефон;
					КонецЕсли;
					
					СтрокаКонтактнойИнформации.Представление = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
					
					Если СтрокаТаблицыВопросов.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонФизическогоЛица Тогда
						НомерТелефона = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
						СтрокаЦифровыхСимволов = "0123456789";
						НомерТелефонаТолькоЦифры = "";
						ДлинаНомера = СтрДлина(НомерТелефона);
						Для Индекс = 1 По ДлинаНомера Цикл
							Символ = Сред(НомерТелефона, Индекс, 1);
							Если СтрНайти(СтрокаЦифровыхСимволов, Символ) > 0 Тогда
								НомерТелефонаТолькоЦифры = НомерТелефонаТолькоЦифры + Символ;
							КонецЕсли;
						КонецЦикла;
						СтрокаКонтактнойИнформации.НомерТелефона = НомерТелефонаТолькоЦифры;
						СтрокаКонтактнойИнформации.НомерТелефонаБезКодов = Сред(НомерТелефонаТолькоЦифры, 5);
					ИначеЕсли СтрокаТаблицыВопросов.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица Тогда
						СтрокаКонтактнойИнформации.АдресЭП = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
						ПозицияКомандногоПрефикса = СтрНайти(СтрокаКонтактнойИнформации.АдресЭП, "@");
						Если ПозицияКомандногоПрефикса <> 0 Тогда
							СтрокаКонтактнойИнформации.ДоменноеИмяСервера = Сред(СтрокаКонтактнойИнформации.АдресЭП, ПозицияКомандногоПрефикса + 1);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВладелецОбъект.Записать();
	ПолучитьИЗаписатьФИО(ВладелецОбъект);
	Если НЕ ЗначениеЗаполнено(ВладелецКарты) Тогда
		ЗаписатьВладельцаКарты(ВладелецОбъект.Ссылка, Ложь);
	КонецЕсли;
	
	// Дополнительные сведения
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ЭтоДополнительноеСведение", Истина);
	
	СтрокиТаблицы = ТаблицаВопросовИОтветов.НайтиСтроки(СтруктураПоиска);
	
	РегистрСведений = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
	
	РегистрСведений.Отбор.Объект.Установить(ВладелецКарты);
	РегистрСведений.Прочитать();
	
	Владелец_ДополнительныеСведения = РегистрСведений.Выгрузить();
	
	Для Каждого СтрокаТаблицыВопросов Из СтрокиТаблицы Цикл
		
		СтрокаДополнительныхСведений = Владелец_ДополнительныеСведения.Найти(СтрокаТаблицыВопросов.Вопрос , "Свойство");
		
		Если СтрокаДополнительныхСведений = Неопределено Тогда
			
			СтрокаДополнительныхСведений = Владелец_ДополнительныеСведения.Добавить();
			
		КонецЕсли;
		
		СтрокаДополнительныхСведений.Свойство = СтрокаТаблицыВопросов.Вопрос;
		СтрокаДополнительныхСведений.Значение = СтрокаТаблицыВопросов.Ответ;
		СтрокаДополнительныхСведений.Объект   = ВладелецКарты;
		
	КонецЦикла;
	
	РегистрСведений.Загрузить(Владелец_ДополнительныеСведения);
	РегистрСведений.Записать(Истина);
	
	КартаОбъект = Карта.ПолучитьОбъект();
	КартаОбъект.ДатаСледующегоОпроса = '00010101';
	КартаОбъект.ДатаПоследнегоОпроса = ТекущаяДатаСеанса();
	КартаОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНеАнкетныеТипыДанных()
	
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.Магазины"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.ТоварныеГруппы"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.Организации"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.Пользователи"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.СегментыНоменклатуры"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.Склады"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.СтраныМира"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.Файлы"));
	НеАнкетныеТипыВопросов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуВопросов()
	
	НомерВопроса = 0;
	
	ТаблицаВопросовИОтветов.Очистить();
	
	ЗаполнитьТаблицуВопросовИОтветов();
	
	Если ТаблицаВопросовИОтветов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НомерСтроки = 0;
	
	КоличествоЭлементовКоллекции = ТаблицаВопросовИОтветов.Количество();
	
	Для ОбратныйИндекс = 1 По КоличествоЭлементовКоллекции Цикл
		ЭлементКоллекции = ТаблицаВопросовИОтветов[КоличествоЭлементовКоллекции - ОбратныйИндекс];
		
		Если ТипЗнч(ЭлементКоллекции.Вопрос) = Тип("Строка") Тогда
			ЭлементКоллекции.ИмяСтраницыВопроса = "СтраницаПолеВвода";
		ИначеЕсли ЭлементКоллекции.Вопрос.ТипЗначения.Типы().Количество() = 1 Тогда
			ТипОтвета = ЭлементКоллекции.Вопрос.ТипЗначения.Типы().Получить(0);
			Если Не НеАнкетныеТипыВопросов.НайтиПоЗначению(ТипОтвета) = Неопределено Тогда
				ТаблицаВопросовИОтветов.Удалить(ЭлементКоллекции);
				Продолжить;
			КонецЕсли;
			ЭлементКоллекции.ТипЗначения = ЭлементКоллекции.Вопрос.ТипЗначения;
			Если ТипОтвета = Тип("Булево") Тогда
				ЭлементКоллекции.ИмяСтраницыВопроса = "СтраницаФлага";
			ИначеЕсли ТипОтвета = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
				Если НЕ ЕстьОтветНаВопрос(ЭлементКоллекции.Вопрос) Тогда
					ТаблицаВопросовИОтветов.Удалить(ЭлементКоллекции);
					Продолжить;
				КонецЕсли;
				ЭлементКоллекции.ИмяСтраницыВопроса = "СтраницаТаблицаВыбора";
			Иначе
				ЭлементКоллекции.ИмяСтраницыВопроса = "СтраницаПолеВвода";
			КонецЕсли;
		Иначе
			ТаблицаВопросовИОтветов.Удалить(ЭлементКоллекции);
		КонецЕсли;
	КонецЦикла;
	
	НомерСтроки = 0;
	
	Для каждого СтрокаТаблицыВопросов Из ТаблицаВопросовИОтветов Цикл
		
		НомерСтроки = НомерСтроки + 1;
		СтрокаТаблицыВопросов.НомерВопроса = НомерСтроки;
		
	КонецЦикла;
	
	НомерВопроса = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВопрос()
	
	Если НомерВопроса = 0 ИЛИ ТаблицаВопросовИОтветов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТипКИ = "";
	
	СтрокаТаблицыВопросов = ТаблицаВопросовИОтветов[НомерВопроса - 1];
	ДополнениеКВопросу = " (№"+НомерВопроса + " из "+ТаблицаВопросовИОтветов.Количество()+")";
	ТекстВопроса = "" + СтрокаТаблицыВопросов.Вопрос + ДополнениеКВопросу;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[СтрокаТаблицыВопросов.ИмяСтраницыВопроса];
	
	ЗаголовокВопроса = ТекстВопроса;
	
	Если СтрокаТаблицыВопросов.ИмяСтраницыВопроса = "СтраницаФлага" Тогда
		Элементы.ФлагОтвета.Заголовок = ТекстВопроса + "       ";
		ФлагОтвета = СтрокаТаблицыВопросов.Ответ;
		ЭтотОбъект.ТекущийЭлемент = Элементы.ФлагОтвета;
	ИначеЕсли СтрокаТаблицыВопросов.ИмяСтраницыВопроса = "СтраницаТаблицаВыбора" Тогда
		Элементы.ТаблицаВыборОтвета.ОтборСтрок = Новый ФиксированнаяСтруктура("Вопрос", СтрокаТаблицыВопросов.Вопрос);
		ЭтотОбъект.ТекущийЭлемент = Элементы.ТаблицаВыборОтветаЗначение;
	Иначе
		
		Если ТипЗнч(СтрокаТаблицыВопросов.Вопрос) = Тип("Строка")
			И НЕ СтрокаТаблицыВопросов.ЭтоДополнительноеСведение Тогда
			Ответ = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(ТипЗнч(Ответ));
			Если ТипЗнч(СтрокаТаблицыВопросов.ПредопределенныйОтвет) = Тип("Дата") Тогда
				Элементы.Ответ.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыДаты(ЧастиДаты.Дата));
			ИначеЕсли ТипЗнч(СтрокаТаблицыВопросов.ПредопределенныйОтвет) = Тип("ПеречислениеСсылка.ПолФизическогоЛица") Тогда 
				Элементы.Ответ.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
			Иначе
				Элементы.Ответ.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
				
				Элементы.Ответ.КнопкаВыбора = Неопределено;
				
				ВидКонтактнойИнформации = СтрокаТаблицыВопросов.ВидКонтактнойИнформации;
				
				Если ВидКонтактнойИнформации = 
					ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресФизическогоЛица") Тогда
					
					Элементы.Ответ.КнопкаВыбора = Истина;
					ФактическийАдрес = СтрокаТаблицыВопросов.Значение;
					ФактическийАдресПредставление = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
					
					ТипКИ = "Адрес";
					
				ИначеЕсли ВидКонтактнойИнформации = 
					ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонФизическогоЛица") Тогда
					
					Элементы.Ответ.КнопкаВыбора = Истина;
					Телефон = СтрокаТаблицыВопросов.Значение;
					ТелефонПредставление = СтрокаТаблицыВопросов.ПредопределенныйОтвет;
					
					ТипКИ = "Телефон";
					
				КонецЕсли;

			КонецЕсли;
		Иначе
			Ответ = СтрокаТаблицыВопросов.Ответ;
			Элементы.Ответ.ОграничениеТипа = СтрокаТаблицыВопросов.ТипЗначения;
			Ответ = Элементы.Ответ.ОграничениеТипа.ПривестиЗначение(Ответ);
		КонецЕсли;
		ЭтотОбъект.ТекущийЭлемент = Элементы.Ответ;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуВопросовИОтветов()
	
	НомерВопроса = 1;
	Если ЗначениеЗаполнено(ВладелецКарты) Тогда
		
		ЗапросДанныхВладельца = Новый Запрос;
		ЗапросДанныхВладельца.Текст = "ВЫБРАТЬ
		|	ФизическиеЛица.Представление КАК Представление,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	ФизическиеЛица.Пол КАК Пол,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес) КАК ТипКонтактнойИнформации,
		|	ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизическогоЛица) КАК ВидКонтактнойИнформации,
		|	ЕСТЬNULL(ФизическиеЛицаКонтактнаяИнформация.Представление, """") КАК ПредставлениеКонтакта,
		|	ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
		|	ФизическиеЛицаКонтактнаяИнформация.Значение КАК Значение
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизическогоЛица))
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ФизическиеЛица.Представление,
		|	ФизическиеЛица.ДатаРождения,
		|	ФизическиеЛица.Пол,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон),
		|	ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизическогоЛица),
		|	ЕСТЬNULL(ФизическиеЛицаКонтактнаяИнформация.Представление, """"),
		|	ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей,
		|	ФизическиеЛицаКонтактнаяИнформация.Значение
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизическогоЛица))
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ФизическиеЛица.Представление,
		|	ФизическиеЛица.ДатаРождения,
		|	ФизическиеЛица.Пол,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты),
		|	ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизическогоЛица),
		|	ЕСТЬNULL(ФизическиеЛицаКонтактнаяИнформация.Представление, """"),
		|	ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей,
		|	ФизическиеЛицаКонтактнаяИнформация.Значение
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизическогоЛица))
		|ГДЕ
		|	ФизическиеЛица.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТипКонтактнойИнформации";
		ЗапросДанныхВладельца.УстановитьПараметр("Ссылка", ВладелецКарты);
		ВыборкаВладелец = ЗапросДанныхВладельца.Выполнить().Выбрать();
		
		Пока ВыборкаВладелец.Следующий() Цикл
			Если НомерВопроса = 1 Тогда
				НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
				НоваяСтрока.Вопрос = НСтр("ru = 'Фамилия, Имя, Отчество'");
				НоваяСтрока.ПредопределенныйОтвет = ВыборкаВладелец.Представление;
				НоваяСтрока.НомерВопроса = 1;
				
				НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
				НоваяСтрока.Вопрос = НСтр("ru = 'Дата рождения'");
				НоваяСтрока.ПредопределенныйОтвет = ВыборкаВладелец.ДатаРождения;
				НоваяСтрока.НомерВопроса = 2;
				
				НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
				НоваяСтрока.Вопрос = НСтр("ru = 'Пол'");
				НоваяСтрока.ПредопределенныйОтвет = ВыборкаВладелец.Пол;
				НоваяСтрока.НомерВопроса = 3;
				
				НомерВопроса = 4;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
			НоваяСтрока.Вопрос = ВыборкаВладелец.ВидКонтактнойИнформации;
			НоваяСтрока.ТипКонтактнойИнформации = ВыборкаВладелец.ТипКонтактнойИнформации;
			НоваяСтрока.ВидКонтактнойИнформации = ВыборкаВладелец.ВидКонтактнойИнформации;
			НоваяСтрока.ПредопределенныйОтвет = ВыборкаВладелец.ПредставлениеКонтакта;
			НоваяСтрока.НомерВопроса = НомерВопроса;
			НоваяСтрока.ЗначенияПолей = ВыборкаВладелец.ЗначенияПолей;
			НоваяСтрока.Значение = ВыборкаВладелец.Значение;
			
			НомерВопроса = НомерВопроса + 1;
		КонецЦикла;
		
	Иначе
		НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
		НоваяСтрока.Вопрос = НСтр("ru = 'Фамилия, Имя, Отчество'");
		НоваяСтрока.ПредопределенныйОтвет = "";
		НоваяСтрока.НомерВопроса = 1;
		
		НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
		НоваяСтрока.Вопрос = НСтр("ru = 'Дата рождения'");
		НоваяСтрока.ПредопределенныйОтвет = Дата("00010101000000");
		НоваяСтрока.НомерВопроса = 2;
		
		НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
		НоваяСтрока.Вопрос = НСтр("ru = 'Пол'");
		НоваяСтрока.ПредопределенныйОтвет = Перечисления.ПолФизическогоЛица.ПустаяСсылка();
		НоваяСтрока.НомерВопроса = 3;
		
		НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
		НоваяСтрока.Вопрос = НСтр("ru = 'Фактический адрес'");
		НоваяСтрока.ПредопределенныйОтвет = "";
		НоваяСтрока.НомерВопроса = 4;
		НоваяСтрока.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес;
		НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ФактАдресФизическогоЛица;
		
		НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
		НоваяСтрока.Вопрос = НСтр("ru = 'Телефон'");
		НоваяСтрока.ПредопределенныйОтвет = "";
		НоваяСтрока.НомерВопроса = 5;
		НоваяСтрока.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонФизическогоЛица;
		
		НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
		НоваяСтрока.Вопрос = НСтр("ru = 'Адрес электронной почты'");
		НоваяСтрока.ПредопределенныйОтвет = "";
		НоваяСтрока.НомерВопроса = 6;
		НоваяСтрока.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяСтрока.ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица;
		
		НомерВопроса = 7;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Вопрос,
	|	ВложенныйЗапрос.Значение КАК Ответ,
	|	ЛОЖЬ КАК ЭтоДополнительноеСведение,
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство.МногострочноеПолеВвода КАК МногострочноеПолеВвода
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ФизическиеЛицаДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|			ФизическиеЛицаДополнительныеРеквизиты.Свойство КАК Свойство,
	|			ФизическиеЛицаДополнительныеРеквизиты.Значение КАК Значение
	|		ИЗ
	|			Справочник.ФизическиеЛица.ДополнительныеРеквизиты КАК ФизическиеЛицаДополнительныеРеквизиты
	|		ГДЕ
	|			ФизическиеЛицаДополнительныеРеквизиты.Ссылка = &Владелец) КАК ВложенныйЗапрос
	|		ПО НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство = ВложенныйЗапрос.Свойство
	|ГДЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ФизическиеЛица)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство,
	|	ВложенныйЗапрос.Значение,
	|	ИСТИНА,
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство.МногострочноеПолеВвода
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДополнительныеСведения.Объект КАК Объект,
	|			ДополнительныеСведения.Свойство КАК Свойство,
	|			ДополнительныеСведения.Значение КАК Значение
	|		ИЗ
	|			РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ГДЕ
	|			ДополнительныеСведения.Объект = &Владелец) КАК ВложенныйЗапрос
	|		ПО НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство = ВложенныйЗапрос.Свойство
	|ГДЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ФизическиеЛица)";
	
	Запрос.УстановитьПараметр("Владелец", ВладелецКарты);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаРезультата Из ТаблицаРезультат Цикл
		НоваяСтрока = ТаблицаВопросовИОтветов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультата);
		НоваяСтрока.НомерВопроса = НомерВопроса;
		НомерВопроса = НомерВопроса + 1;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаВопросовИОтветов.Вопрос,
	|	ТаблицаВопросовИОтветов.Ответ
	|ПОМЕСТИТЬ ТаблицаВопросовИОтветов
	|ИЗ
	|	&ТаблицаВопросовИОтветов КАК ТаблицаВопросовИОтветов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка КАК Ответ,
	|	ЗначенияСвойствОбъектов.Владелец КАК Вопрос
	|ПОМЕСТИТЬ ТаблицаЗначенийСвойств
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец В
	|			(ВЫБРАТЬ
	|				ТаблицаВопросовИОтветов.Вопрос
	|			ИЗ
	|				ТаблицаВопросовИОтветов КАК ТаблицаВопросовИОтветов)
	|	И (НЕ ЗначенияСвойствОбъектов.ЭтоГруппа)
	|	И (НЕ ЗначенияСвойствОбъектов.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗначенийСвойств.Ответ,
	|	ТаблицаЗначенийСвойств.Вопрос,
	|	ВЫБОР
	|		КОГДА ТаблицаВопросовИОтветов.Вопрос ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Пометка
	|ИЗ
	|	ТаблицаЗначенийСвойств КАК ТаблицаЗначенийСвойств
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВопросовИОтветов КАК ТаблицаВопросовИОтветов
	|		ПО ТаблицаЗначенийСвойств.Ответ = ТаблицаВопросовИОтветов.Ответ
	|			И ТаблицаЗначенийСвойств.Вопрос = ТаблицаВопросовИОтветов.Вопрос";
	
	Запрос.УстановитьПараметр("ТаблицаВопросовИОтветов", ТаблицаРезультат);
	
	Результат = Запрос.Выполнить();
	
	ТаблицаВыборОтвета.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ЕстьОтветНаВопрос(Вопрос)
	
	Возврат НЕ ТаблицаВыборОтвета.НайтиСтроки(Новый Структура("Вопрос", Вопрос)).Количество() = 0;
	
КонецФункции

&НаКлиенте
Процедура УправлениеИнтерфейсом()
	
	Если ЗначениеЗаполнено(ВладелецКарты) Тогда
		ЗаголовокВладелец = "" + ВладелецКарты;
		Элементы.ВыбратьВладельца.Заголовок = НСтр("ru = 'Открыть владельца'");
	Иначе
		ЗаголовокВладелец = НСтр("ru = 'Владелец не задан'");
		Элементы.ВыбратьВладельца.Заголовок = НСтр("ru = 'Выбрать владельца'");
	КонецЕсли;
	
	Если ТаблицаВопросовИОтветов.Количество() = 0  Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПустая;
		Элементы.ГруппаКнопкиПодвал.Доступность = Ложь;
		Элементы.ДекорацияНадписьОНастройкеВопросов.Видимость = ЗначениеЗаполнено(ВладелецКарты) И ТаблицаВопросовИОтветов.Количество() = 0;
	Иначе
		Элементы.ГруппаКнопкиПодвал.Доступность     = Истина;
		Элементы.ПредыдущийРазделПодвал.Доступность = НомерВопроса > 1;
		Элементы.СледующийРазделПодвал.Заголовок    = ?(НомерВопроса = ТаблицаВопросовИОтветов.Количество(),
															НСтр("ru = 'Записать'"),
															НСтр("ru = 'Следующий >>'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьИЗаписатьФИО(ВладелецОбъект)
	
	Пока Найти(ВладелецОбъект.Наименование, "  ") > 0 Цикл
		ВладелецОбъект.Наименование = СтрЗаменить(ВладелецОбъект.Наименование, "  ", " ");
	КонецЦикла;
	Наименование = ВладелецОбъект.Наименование;
	ЧислоВхождений = СтрЧислоВхождений(Наименование, " ");
	
	Если ЧислоВхождений = 0 Тогда
		Фамилия = Наименование;
		Имя = "";
		Отчество = "";
	ИначеЕсли ЧислоВхождений = 1 Тогда
		ПозицияСимволаПробела = Найти(Наименование, " ");
		Фамилия = Лев(Наименование, ПозицияСимволаПробела - 1);
		Имя = Сред(Наименование, ПозицияСимволаПробела + 1);
		Отчество = "";
	Иначе
		ЧислоПропусков = ЧислоВхождений - 2;
		НаименованиеВОбработке = Наименование;
		Для Индекс = 1 По ЧислоВхождений Цикл
			ПозицияСимволаПробела = Найти(НаименованиеВОбработке, " ");
			НаименованиеВОбработке = Сред(НаименованиеВОбработке, ПозицияСимволаПробела + 1);
			Если ЧислоПропусков > 0 Тогда
				ЧислоПропусков = ЧислоПропусков - 1;
			Иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ДлинаИмениИОтчества = СтрДлина(НаименованиеВОбработке);
		ДлинаНаименования   = СтрДлина(Наименование);
		ПозицияСимволаПробела = ДлинаНаименования - ДлинаИмениИОтчества;
		Фамилия     = Лев(Наименование, ПозицияСимволаПробела - 1);
		
		ПозицияСимволаПробела = Найти(НаименованиеВОбработке, " ");
		Имя      = Лев(НаименованиеВОбработке, ПозицияСимволаПробела - 1);
		Отчество = Сред(НаименованиеВОбработке, ПозицияСимволаПробела + 1)
	КонецЕсли;
	
	СтруктураЗаписи = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(ТекущаяДатаСеанса(),
																	Новый Структура("ФизЛицо", ВладелецОбъект.Ссылка));
	Если СтруктураЗаписи.Фамилия <> Фамилия
		ИЛИ СтруктураЗаписи.Отчество <> Отчество
		ИЛИ СтруктураЗаписи.Имя <> Имя Тогда
		МенеджерЗаписи = РегистрыСведений.ФИОФизЛиц.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ФизЛицо = ВладелецОбъект.Ссылка;
		МенеджерЗаписи.Период = ТекущаяДатаСеанса();
		МенеджерЗаписи.Фамилия = Фамилия;
		МенеджерЗаписи.Имя = Имя;
		МенеджерЗаписи.Отчество = Отчество;
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьПараметрыОткрытияКИ(ТекстЭлемента)
	
	ПараметрыОткрытия = Новый Структура;
	
	ТипКИ = СокрЛП(ТипКИ);
	
	Если ТипКИ = "Адрес" Тогда 
		
		ВидКИ = Новый Структура;
		ВидКИ.Вставить("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
		ВидКИ.Вставить("ТолькоНациональныйАдрес", Ложь);
		ВидКИ.Вставить("ВключатьСтрануВПредставление", Ложь);
		ВидКИ.Вставить("СкрыватьНеактуальныеАдреса", Ложь);
		
		ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ВидКИ);
		Если ЗначениеЗаполнено(ТекстЭлемента)
			И СокрЛП(ТекстЭлемента) <> ФактическийАдресПредставление Тогда
			Ответ = ТекстЭлемента;
			ПараметрыОткрытия.Вставить("Значение", ТекстЭлемента);
			ПараметрыОткрытия.Вставить("Представление", ТекстЭлемента);
			Ответ = ТекстЭлемента;
			ФактическийАдрес = ТекстЭлемента;
			ФактическийАдресПредставление = ТекстЭлемента;
		КонецЕсли;
		ПараметрыОткрытия.Вставить("Значение", ФактическийАдрес);
		ПараметрыОткрытия.Вставить("Представление", ФактическийАдресПредставление);
		ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru='Фактический адрес'"));
		
	ИначеЕсли ТипКИ = "Телефон" Тогда 
		
		ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", 
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонФизическогоЛица"));
		Если ЗначениеЗаполнено(ТекстЭлемента)
			И СокрЛП(ТекстЭлемента) <> ТелефонПредставление Тогда
			Ответ = ТекстЭлемента;
			Телефон = ТекстЭлемента;
			ТелефонПредставление = ТекстЭлемента;
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("Значение", Телефон);
		ПараметрыОткрытия.Вставить("Представление", ТелефонПредставление);
		ПараметрыОткрытия.Вставить("Заголовок", НСтр("ru='Телефон'"));
		
	КонецЕсли;
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

#КонецОбласти
