
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ИзменитьВидимостьЭлементов();
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Наименование = СформироватьАвтоНаименованиеНаСервере();
	Иначе
		СформироватьАвтоНаименованиеНаСервере();
	КонецЕсли;
	
	Для каждого ВариантНаименования Из Элементы.Наименование.СписокВыбора Цикл
		Если Объект.Наименование = ВариантНаименования.Значение Тогда
			ИспользуетсяАвтоНаименование = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеИзмененоПользователем = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если Ожидание = 0 Тогда
		СформироватьАвтоНаименованиеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СпособРасчетаПремийПриИзменении(Элемент)
	
	ИзменитьВидимостьЭлементов();
	ОбновитьАвтонаименование(Истина);

КонецПроцедуры

&НаСервере
Процедура ИзменитьВидимостьЭлементов()
	
	Если Объект.СпособРасчетаПремий = Перечисления.СпособыРасчетаПремий.Сумма Тогда
		Элементы.ДекорацияПроцент.Заголовок = НСтр("ru = 'руб.'");
		Элементы.ПорядокОкругления.Видимость = Ложь;
	ИначеЕсли Объект.СпособРасчетаПремий = Перечисления.СпособыРасчетаПремий.Процент Тогда
		Элементы.ДекорацияПроцент.Заголовок = НСтр("ru = '%'");
		Элементы.ПорядокОкругления.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАвтонаименование(Обновить = Истина)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) ИЛИ (Обновить И ИспользуетсяАвтоНаименование И Не НаименованиеИзмененоПользователем) Тогда
		Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
		ИспользуетсяАвтоНаименование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьАвтоНаименованиеНаКлиенте()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "";
	
	Если Объект.СпособРасчетаПремий = ПредопределенноеЗначение("Перечисление.СпособыРасчетаПремий.Процент") Тогда
		
		СтрокаНаименования = "" +НСтр("ru = 'Премия'")+ " " +Объект.ЗначениеРасчетаПремий +НСтр("ru = '%'")+ " " +НСтр("ru = 'от продаж'")
		+  ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыРасчетаПремий)," " + НСтр("ru = 'номенклатуры сегмента'")+ " " +Объект.СегментНоменклатурыРасчетаПремий,"");
		
	ИначеЕсли Объект.СпособРасчетаПремий = ПредопределенноеЗначение("Перечисление.СпособыРасчетаПремий.Сумма") Тогда
		
		СтрокаНаименования = "" +НСтр("ru = 'Фиксированная премия'")+ " " +Объект.ЗначениеРасчетаПремий+ " " +НСтр("ru = 'руб.'")+ " " +НСтр("ru = 'за продажи'")
		+  ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыРасчетаПремий)," " +НСтр("ru = 'номенклатуры сегмента'")+ " " +Объект.СегментНоменклатурыРасчетаПремий,"");
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.УсловияНачисленияПремий.Количество() = 1 Тогда
		СтрокаНаименования = СтрокаНаименования + " ("+Объект.УсловияНачисленияПремий[0].УсловиеНачисления+")";
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	ИначеЕсли Объект.УсловияНачисленияПремий.Количество() > 1 Тогда
		
		КоличествоУсловий = Объект.УсловияНачисленияПремий.Количество();
		
		Если КоличествоУсловий >= 2 Тогда
			СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(несколько условий)'");
			Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		КонецЕсли;
		
	ИначеЕсли Объект.УсловияНачисленияПремий.Количество() = 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'без условий'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Возврат СтрокаНаименования;
		
КонецФункции

&НаСервере
Функция СформироватьАвтоНаименованиеНаСервере()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "";
	
	Если Объект.СпособРасчетаПремий = Перечисления.СпособыРасчетаПремий.Процент Тогда
		
		СтрокаНаименования = "" +НСтр("ru = 'Премия'")+ " " +Объект.ЗначениеРасчетаПремий +НСтр("ru = '%'")+ " " +НСтр("ru = 'от продаж'")
		+  ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыРасчетаПремий)," " + НСтр("ru = 'номенклатуры сегмента'")+ " " +Объект.СегментНоменклатурыРасчетаПремий,"");
		
	ИначеЕсли Объект.СпособРасчетаПремий = Перечисления.СпособыРасчетаПремий.Сумма Тогда
		
		СтрокаНаименования = "" +НСтр("ru = 'Фиксированная премия'")+ " " +Объект.ЗначениеРасчетаПремий+ " " +НСтр("ru = 'руб.'")+ " " +НСтр("ru = 'за продажи'")
		+  ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыРасчетаПремий)," " +НСтр("ru = 'номенклатуры сегмента'")+ " " +Объект.СегментНоменклатурыРасчетаПремий,"");
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.УсловияНачисленияПремий.Количество() = 1 Тогда
		СтрокаНаименования = СтрокаНаименования + " ("+Объект.УсловияНачисленияПремий[0].УсловиеНачисления+")";
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	ИначеЕсли Объект.УсловияНачисленияПремий.Количество() > 1 Тогда
		
		КоличествоУсловий = Объект.УсловияНачисленияПремий.Количество();
		
		Если КоличествоУсловий >= 2 Тогда
			СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(несколько условий)'");
			Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		КонецЕсли;
		
	ИначеЕсли Объект.УсловияНачисленияПремий.Количество() = 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'без условий'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Возврат СтрокаНаименования;
		
КонецФункции

&НаКлиенте
Процедура ЗначениеРасчетаПремийПриИзменении(Элемент)
	
	ОбновитьАвтонаименование(Истина);

КонецПроцедуры

&НаКлиенте
Процедура СегментНоменклатурыРасчетаПремийПриИзменении(Элемент)
	
	ОбновитьАвтонаименование(Истина);

КонецПроцедуры

&НаКлиенте
Процедура УсловияНачисленияПремийПриИзменении(Элемент)
	
	ОбновитьАвтонаименование(Истина);

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти