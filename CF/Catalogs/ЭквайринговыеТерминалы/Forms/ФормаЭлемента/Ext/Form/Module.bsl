
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ИспользоватьПодключаемоеОборудование = ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование");
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеЭлементамиФормы();
		Если НЕ ИспользоватьПодключаемоеОборудование Тогда
			Объект.ИспользоватьБезПодключенияОборудования = Истина;
		КонецЕсли;
		
		ЗаполнитьТаблицуТарифов(Истина);
	КонецЕсли;
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		Элементы.ПодключаемоеОборудование.Доступность = Не Объект.ИспользоватьБезПодключенияОборудования;
	Иначе
		Элементы.ИспользоватьБезПодключенияОборудования.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	АвтоНаименованиеЭквайринговогоТерминала();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	УправлениеЭлементамиФормы();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеЭлементамиФормы();
	
	// Подсистема запрета редактирования ключевых реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьБезПодключенияОборудованияПриИзменении(Элемент)
	
	Если Объект.ИспользоватьБезПодключенияОборудования Тогда
		Элементы.ПодключаемоеОборудование.Доступность = Ложь;
		Объект.ПодключаемоеОборудование = Неопределено;
	Иначе
		Элементы.ПодключаемоеОборудование.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКассыПриИзменении(Элемент)
	
	ВидКассыПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ВидКассыПриИзмененииКлиент();
	АвтоНаименованиеЭквайринговогоТерминала();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭквайрерПриИзменении(Элемент)
	
	АвтоНаименованиеЭквайринговогоТерминала();
	
КонецПроцедуры

&НаКлиенте
Процедура НеДействителенПриИзменении(Элемент)
	
	НастроитьДоступностьЭлементов();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ТарифыЗаРасчетноеОбслуживаниеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		ИзменятьПроцентКомиссииОтмены = Истина;
	Иначе
		ТекущиеДанные = Элементы.ТарифыЗаРасчетноеОбслуживание.ТекущиеДанные;
		
		Если ТекущиеДанные.ПроцентКомиссииПриПродаже = - ТекущиеДанные.ПроцентКомиссииПриОтмене Тогда
			ИзменятьПроцентКомиссииОтмены = Истина;
		Иначе
			ИзменятьПроцентКомиссииОтмены = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТарифыЗаРасчетноеОбслуживаниеПроцентКомиссииПриПродажеПриИзменении(Элемент)
	
	Если ИзменятьПроцентКомиссииОтмены Тогда
		
		ТекущиеДанные = Элементы.ТарифыЗаРасчетноеОбслуживание.ТекущиеДанные;
		ТекущиеДанные.ПроцентКомиссииПриОтмене = - ТекущиеДанные.ПроцентКомиссииПриПродаже;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТарифыЗаРасчетноеОбслуживаниеПриАктивизацииСтроки(Элемент)
	
	ОписаниеКомиссииНТML()
	
КонецПроцедуры

&НаКлиенте
Процедура ТарифыЗаРасчетноеОбслуживаниеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НЕ ОтменаРедактирования Тогда
		ОписаниеКомиссииНТML();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьВсемиВидамиОплат(Команда)
	
	ЗаполнитьТаблицуТарифов();
	
КонецПроцедуры

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВидКассыПриИзмененииКлиент()
	
	Если ПустаяСтрока(ВидКассы) Тогда
		 ВидКассы = "Касса";
	КонецЕсли;
	
	Если ВидКассы = "КассаККМ" Тогда
		Элементы.Касса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.КассыККМ");
		Элементы.Касса.Заголовок = НСтр("ru = 'Касса ККМ'");
	Иначе
		Элементы.Касса.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Кассы");
		Элементы.Касса.Заголовок = НСтр("ru = 'Касса'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоНаименованиеЭквайринговогоТерминала()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "" + СокрЛП(Объект.Эквайрер) + "/" + СокрЛП(Объект.Организация);
	СтрокаНаименования = Лев(СтрокаНаименования, 100);
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
КонецПроцедуры

// В процедуре выполняется установка свойств элементов формы.
//
&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Элементы.ВидКассы.Видимость = Истина;
	
	Если ТипЗнч(Объект.Касса) = Тип("СправочникСсылка.Кассы") Тогда
		ВидКассы = "Касса";
		Элементы.Касса.Заголовок = НСтр("ru = 'Касса'");
	Иначе
		ВидКассы = "КассаККМ";
		Элементы.Касса.Заголовок = НСтр("ru = 'Касса ККМ'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуТарифов(ЗаполнятьЕслиТОлькоОдинВидОплаты = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыОплатЧекаККМ.Ссылка КАК ВидОплаты
	|ИЗ
	|	Справочник.ВидыОплатЧекаККМ КАК ВидыОплатЧекаККМ
	|ГДЕ
	|	ВидыОплатЧекаККМ.ТипОплаты = &ТипОплаты";
	
	Запрос.УстановитьПараметр("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта);
	
	Результат = Запрос.Выполнить();
	ТаблицаВидовОплат = Результат.Выгрузить();
	
	КоличествоВидовОплат = ТаблицаВидовОплат.Количество();
	
	ЗагрузитьДанные = Истина;
	
	Если ЗаполнятьЕслиТОлькоОдинВидОплаты И НЕ КоличествоВидовОплат = 1 Тогда
		ЗагрузитьДанные = Ложь;
	КонецЕсли;
	
	Если ЗагрузитьДанные Тогда
		Для каждого СтрокаВидаоОплат Из ТаблицаВидовОплат Цикл
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ВидОплаты", СтрокаВидаоОплат.ВидОплаты);
			
			СтрокиПоиска = Объект.ТарифыЗаРасчетноеОбслуживание.НайтиСтроки(СтруктураПоиска);
			
			Если СтрокиПоиска.Количество() = 0  Тогда
				
				СтрокаТЧ = Объект.ТарифыЗаРасчетноеОбслуживание.Добавить();
				СтрокаТЧ.ВидОплаты = СтрокаВидаоОплат.ВидОплаты;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеКомиссииНТML()
	
	ТекущиеДанные = Элементы.ТарифыЗаРасчетноеОбслуживание.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ОписаниеСтрокиКомиссии = Новый ФорматированныйДокумент;
		Возврат;
	КонецЕсли;
	
	ТекстНТML = "
	|<html><head>
	|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
	|<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"">
	|<meta name=""format-detection"" content=""telephone=no"">
	|<style type=""text/css"">
	|body{margin:0;padding:8px;overflow:auto;width:100%;height:100%;}
	|p{line-height:1.15;margin:0;}
	|ol,ul{margin-top:0;margin-bottom:0;}
	|img{border:none;}
	|</style>
	|<meta name=""GENERATOR"" content=""MSHTML 11.00.9600.17801""></head>
	|<body";
	
	ТекстНТML = ТекстНТML + "
	|<p><span style=""font-family: Times New Roman; font-size: 12pt;"">Вид оплаты: ";
	
	ТекстНТML = ТекстНТML + ТекущиеДанные.ВидОплаты + "</span></p>";
	ТекстНТML = ТекстНТML + СтрокаКомиссииНТML(НСтр("ru = 'продажи'"), ТекущиеДанные.ПроцентКомиссииПриПродаже);
	ТекстНТML = ТекстНТML + СтрокаКомиссииНТML(НСтр("ru = 'возврата до закрытия смены'"), ТекущиеДанные.ПроцентКомиссииПриОтмене);
	ТекстНТML = ТекстНТML + СтрокаКомиссииНТML(НСтр("ru = 'возврата после закрытия смены'"), ТекущиеДанные.ПроцентКомиссииПриВозврате);
	
	ТекстНТML = ТекстНТML + "
	|</body></html>";
	
	УстановитьОписаниеКомиссииНТML(ТекстНТML);
	
КонецПроцедуры

&НаКлиенте
Функция СтрокаКомиссииНТML(ВидОперации, ПроцентКомиссии)
	
	ТекстНТML = "
	|<p><span style=""font-family: Times New Roman; font-size: 12pt;"">При операции " + ВидОперации + НСтр("ru = ' комиссия '") + СтрокаПроцентКомиссииНТML(ПроцентКомиссии) + "</span></p>";
	
	Возврат ТекстНТML;
КонецФункции

&НаКлиенте
Функция СтрокаПроцентКомиссииНТML(ПроцентКомиссии)
	
	Если ПроцентКомиссии = 0 Тогда
		Возврат НСтр("ru = 'браться не будет'");
	ИначеЕсли ПроцентКомиссии > 0 Тогда
		СтрокаПроцент = Формат(ПроцентКомиссии, "ЧЦ=5; ЧДЦ=2");
		СтрокаHTML = "в пользу банка в размере </span><span style=""font-family: Times New Roman; font-size: 12pt; font-weight: bold;"">" + СтрокаПроцент + "</span><span style=""font-family: Times New Roman; font-size: 12pt;"">%";
		Возврат СтрокаHTML
	Иначе
		СтрокаПроцент = Формат(- ПроцентКомиссии, "ЧЦ=5; ЧДЦ=2");
		СтрокаHTML = "<font color=""#fa0000"">возвращается</font> банком в размере </span><span style=""font-family: Times New Roman; font-size: 12pt; font-weight: bold;"">" + СтрокаПроцент + "</span><span style=""font-family: Times New Roman; font-size: 12pt;"">%";
		Возврат СтрокаHTML
	КонецЕсли;
	
КонецФункции // СтрокаПроцентКомиссии()

&НаСервере
Процедура УстановитьОписаниеКомиссииНТML(ТекстНТML)
	
	ОписаниеСтрокиКомиссии.УстановитьHTML(ТекстНТML, Новый Структура);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДоступностьЭлементов()
	
	Если Объект.НеДействителен Тогда 
		Элементы.ГруппаОрганизация.Доступность 			= Ложь;
		Элементы.ГруппаКасса.Доступность				= Ложь;
		Элементы.ИспользоватьБезПодключенияОборудования.Доступность	= Ложь;
		Элементы.ГруппаТарифыЗаРасчетноеОбслуживание.Доступность = Ложь;
	Иначе 
		Элементы.ГруппаОрганизация.Доступность 			= Истина;
		Элементы.ГруппаКасса.Доступность				= Истина;
		Элементы.ИспользоватьБезПодключенияОборудования.Доступность	= Истина;
		Элементы.ГруппаТарифыЗаРасчетноеОбслуживание.Доступность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

