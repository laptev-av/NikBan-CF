#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ИспользованиеСПАРКРазрешено = СПАРКРиски.ИспользованиеРазрешено();
	
	Если ИспользованиеСПАРКРазрешено Тогда
		// Команды1СПАРКРиски
		СПАРКРиски.ДобавитьПодключаемыеКомандыКонтрагента(ЭтотОбъект, Список, Элементы.Подменю1СПАРКРиски);
		// Конец Команды1СПАРКРиски
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЭлементовЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ОрганизацияЕГАИСКод Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.ОрганизацияЕГАИС) Тогда
			ПоказатьЗначение(, Элементы.Список.ТекущиеДанные.ОрганизацияЕГАИС);
		Иначе
			ТекстВопроса = НСтр("ru = 'Организации %1 не сопоставлена организация ЕГАИС. Открыть форму сопоставления?'");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Элементы.Список.ТекущиеДанные.Наименование);
			
			МассивОрганизаций = Новый Массив();
			Для Каждого ВыделеннаяОрганизация Из Элементы.Список.ВыделенныеСтроки Цикл
				МассивОрганизаций.Добавить(ВыделеннаяОрганизация);
			КонецЦикла;
			ПараметрыОповещения = Новый Структура();
			ПараметрыОповещения.Вставить("МассивОрганизаций", МассивОрганизаций);
			
			ОписаниеОтвета = Новый ОписаниеОповещения("ПослеОтветаОткрытиеСопоставления", ЭтотОбъект, ПараметрыОповещения);
			ПоказатьВопрос(ОписаниеОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.Организации.Форма.ФормаЭлемента.СозданиеНового");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Команды1СПАРКРиски

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду1СПАРКРиски(Команда)
	СПАРКРискиКлиент.ВыполнитьПодключаемуюКоманду(Команда, ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец Команды1СПАРКРиски

&НаКлиенте
Процедура СопоставитьОрганизации(Команда)
	
	Если не Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		МассивОрганизаций = Новый Массив();
		Для Каждого ВыделеннаяОрганизация Из Элементы.Список.ВыделенныеСтроки Цикл
			МассивОрганизаций.Добавить(ВыделеннаяОрганизация);
		КонецЦикла;
		СопоставитьОрганизацииВыполнить(МассивОрганизаций);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовЕГАИС()
	
	ВидимостьЭлементовЕГАИС = Ложь;
	Если ИнтеграцияЕГАИСРТ.НужноРаботатьСЕГАИС() Тогда
		ВидимостьЭлементовЕГАИС = Истина;
	КонецЕсли;
	
	Элементы.СписокСопоставитьОрганизации.Видимость = ВидимостьЭлементовЕГАИС;
	Элементы.ОрганизацияЕГАИСКод.Видимость = ВидимостьЭлементовЕГАИС;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьОрганизацииВыполнить(МассивОрганизаций)
	
	ПараметрыСопоставления = Новый Структура();
	ПараметрыСопоставления.Вставить("РежимСопоставленияОрганизаций", Истина);
	
	АдресВХ = ПоместитьВоВременноеХранилище(Новый Структура("ОрганизацииЕГАИС", МассивОрганизаций), УникальныйИдентификатор);
	ПараметрыСопоставления.Вставить("АдресВХранилище", АдресВХ);
	
	ОповещениеСопоставления = Новый ОписаниеОповещения("ПослеСопоставленияОрганизаций", ЭтотОбъект);
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Обработка.СопоставлениеОрганизацийЕГАИСРТ.Форма.Форма.Открытие");

	ОткрытьФорму("Обработка.СопоставлениеОрганизацийЕГАИСРТ.Форма", ПараметрыСопоставления,,,,, ОповещениеСопоставления, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСопоставленияОрганизаций(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаОткрытиеСопоставления(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СопоставитьОрганизацииВыполнить(ДополнительныеПараметры.МассивОрганизаций);
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
