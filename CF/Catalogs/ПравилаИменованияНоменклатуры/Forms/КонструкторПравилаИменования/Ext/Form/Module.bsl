#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Правило"	  ,		Правило);
	Параметры.Свойство("НаборыСвойств",		НаборыСвойств);
	Параметры.Свойство("Номенклатура" ,		Номенклатура);
	Параметры.Свойство("ВидНоменклатуры",	ВидНоменклатуры);
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		НаборыСвойств.Очистить();
		НаборыСвойств.Добавить(ВидНоменклатуры.НаборСвойств);
	КонецЕсли;
		
	Если НаборыСвойств.Количество() = 0 Тогда  
		РаботаСПравиламиИменованияВызовСервера.ЗаполнитьНаборыСвойств(НаборыСвойств);		
	КонецЕсли;
	
	УстановитьПараметрыВыбораНоменклатуры();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	ОбновитьДеревоРеквизитовИСведений();
	
	Если ЗначениеЗаполнено(Правило) и ЗначениеЗаполнено(Номенклатура) Тогда
		ПриИзмененииНоменклатурыКлиент();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ПриИзмененииНоменклатурыКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыИСведения

&НаКлиенте
Процедура РеквизитыИСведенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПутьКДанным = Элемент.ТекущиеДанные.ПутьКДанным;
	
	Если ЗначениеЗаполнено(ПутьКДанным) Тогда
		
		ВставитьПараметрВПравило(ПолучитьТекстДляВставкиПараметра(ПутьКДанным));
		
		ОбновитьНаборыСвойств(ПутьКДанным);
		
		ОбновитьДеревоРеквизитовИСведений();

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыИСведенияНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ПутьКДанным = Элемент.ТекущиеДанные.ПутьКДанным;
	Если ЗначениеЗаполнено(ПутьКДанным) Тогда
		ПараметрыПеретаскивания.Значение = ПолучитьТекстДляВставкиПараметра(ПутьКДанным);
	Иначе
		Выполнение = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РеквизитыИСведенияОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
		
	ОбновитьНаборыСвойств(Элемент.ТекущиеДанные.ПутьКДанным);
	
	ОбновитьДеревоРеквизитовИСведений();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте                                                                                           
Процедура Проверить(Команда)
	
	ПроверитьЗаполнениеПравила();
		
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПроверитьЗаполнениеПравила(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьУказатьПутьКДаннымНажатие(Элемент)
	
	ЗаполнитьИменаДополнительныхРеквизитовИСведений();	
	ОбновитьДеревоРеквизитовИСведений();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьЗаполнениеПравила(ЗакрыватьФорму = Ложь)
	
	ОчиститьСообщения();
	СтруктураПравила = ПолучитьСтруктуруПравила();
	Если СтруктураПравила.ЕстьОшибки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Обнаружены ошибки:'"));
		Для Каждого Ошибка Из СтруктураПравила.ОписаниеОшибок Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
		КонецЦикла;
	Иначе
		Если ЗакрыватьФорму Тогда
			СтруктураПравила.Вставить("Номенклатура",Номенклатура);
			Закрыть(СтруктураПравила);
		Иначе
			ЗагрузитьДоступныеПараметры(СтруктураПравила);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДоступныеПараметры(СтруктураПравила)
	
	ТаблицаДоступныхПараметров.Загрузить(СтруктураПравила.ТаблицаДоступныхПараметров.Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНоменклатурыКлиент()
	
	СтруктураПравила = ПолучитьСтруктуруПравила();
	
	Если СтруктураПравила.ЕстьОшибки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Обнаружены ошибки:'"));
		Для Каждого Ошибка Из СтруктураПравила.ОписаниеОшибок Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка);
		КонецЦикла;
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьТаблицуНоменклатураДополнительныеРеквизитыИСведения(СтруктураПравила.ПараметрыПравила);

	СформироватьНаименование(СтруктураПравила);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНаборыСвойств(ПутьКДанным)
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСПравиламиИменованияКлиент.ОбновитьНаборыСвойств(ПутьКДанным,НаборыСвойств,ТаблицаДоступныхПараметров);
		
КонецПроцедуры

&НаКлиенте
Процедура ВставитьПараметрВПравило(ТекстДляВставки)
	
	СтрокаНач = 0;
	СтрокаКон = 0;
	КолонкаНач = 0;
	КолонкаКон = 0;
	
	Элементы.Правило.ПолучитьГраницыВыделения(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон);
	
	Если (КолонкаКон = КолонкаНач) И (КолонкаКон + СтрДлина(ТекстДляВставки)) > Элементы.Правило.Ширина / 8 Тогда
		Элементы.Правило.ВыделенныйТекст = "";
	КонецЕсли;
		
	Элементы.Правило.ВыделенныйТекст = ТекстДляВставки;
			
	ТекущийЭлемент = Элементы.Правило;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоПриИзменении(Элемент)
		
	СтруктураПравила = ПолучитьСтруктуруПравила();
	
	Если СтруктураПравила.ЕстьОшибки Тогда
		Для Каждого Ошибка Из СтруктураПравила.ОписаниеОшибок Цикл
			Если Ошибка <> НСтр("ru = 'В правило необходимо добавить хотя бы один параметр;'") Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СформироватьНаименование(СтруктураПравила);

	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		Возврат;
	КонецЕсли;
	
	НаборыСвойствТекущие = СтруктураПравила.НаборыСвойств;
	
	Если НаборыСвойств.Количество() = НаборыСвойствТекущие.Количество() Тогда	
		ОбновитьДерево = Ложь;
		Для Сч = 0 По НаборыСвойств.Количество() - 1 Цикл
			Если НаборыСвойств[Сч ].Значение <> НаборыСвойствТекущие[Сч].Значение Тогда
				ОбновитьДерево = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе			
		ОбновитьДерево = Истина;
	КонецЕсли;	
	
	Если ОбновитьДерево Тогда
		НаборыСвойств.ЗагрузитьЗначения(НаборыСвойствТекущие.ВыгрузитьЗначения());
		ОбновитьДеревоРеквизитовИСведений();
		УстановитьПараметрыВыбораНоменклатуры();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПравила()
	
	Возврат РаботаСПравиламиИменованияКлиент.ПолучитьСтруктуруПравилаИменования(Правило,НаборыСвойств,ТаблицаДоступныхПараметров);
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекстДляВставкиПараметра(ПутьКДанным)
	
	Возврат РаботаСПравиламиИменованияКлиент.ПолучитьТекстДляВставкиПараметра(ПутьКДанным); 
	
КонецФункции

&НаСервере
Процедура ОбновитьДеревоРеквизитовИСведенийСервер()
	
	ДеревоРеквизитовИСведений = РаботаСПравиламиИменования.ПолучитьДеревоРеквизитовИСведений(НаборыСвойств,ТаблицаДоступныхПараметров);
	ЗначениеВРеквизитФормы(ДеревоРеквизитовИСведений,"РеквизитыИСведения");
	
	СвойстваКОбработке.Очистить();
	ТаблицаСвойствКОбработке = ТаблицаДоступныхПараметров.Выгрузить(,"Свойство");
	ТаблицаСвойствКОбработке.Свернуть("Свойство");
	Для Каждого Строка из ТаблицаСвойствКОбработке Цикл
		Если Строка.Свойство.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		СвойстваКОбработке.Добавить(Строка.Свойство);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьДеревоРеквизитовИСведений()
	
	МассивРазвернутыхЭлементов = Новый Массив;
	
	ЗаполнитьРазвернутыеЭлементыДерева(МассивРазвернутыхЭлементов);
	
	ОбновитьДеревоРеквизитовИСведенийСервер();
		
	Если СвойстваКОбработке.Количество() > 0 Тогда
		Элементы.НадписьУказатьПутьКДанным.Заголовок = "Указать путь к данным (" + СвойстваКОбработке.Количество() + ")";
		Элементы.НадписьУказатьПутьКДанным.Видимость = Истина;
	Иначе
		Элементы.НадписьУказатьПутьКДанным.Видимость = Ложь;
	КонецЕсли;
	
	РазвернутьЭлементыДерева(МассивРазвернутыхЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазвернутыеЭлементыДерева(МассивРазвернутыхЭлементов)
	
	Для каждого ЭлементКоллекции Из РеквизитыИСведения.ПолучитьЭлементы() Цикл
		
		ИдентификаторЭлемента = ЭлементКоллекции.ПолучитьИдентификатор(); 
			
		Если Элементы.РеквизитыИСведения.Развернут(ИдентификаторЭлемента) Тогда
			МассивРазвернутыхЭлементов.Добавить(ЭлементКоллекции.ИмяПараметра);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьЭлементыДерева(МассивРазвернуть)
	
	Для каждого ЭлементКоллекции Из РеквизитыИСведения.ПолучитьЭлементы() Цикл
		
		ИдентификаторЭлемента = ЭлементКоллекции.ПолучитьИдентификатор(); 
		
		Если МассивРазвернуть.Найти(ЭлементКоллекции.ИмяПараметра) <> Неопределено Тогда
			Элементы.РеквизитыИСведения.Развернуть(ИдентификаторЭлемента);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатураДополнительныеРеквизитыИСведения(ПараметрыПравила)
		
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		НоменклатураДополнительныеРеквизитыИСведения.Очистить();
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	НоменклатураДополнительныеРеквизиты.Свойство.Имя КАК ПутьКДанным,
	               |	НоменклатураДополнительныеРеквизиты.Значение КАК ДанныеПараметра
	               |ИЗ
	               |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	               |ГДЕ
	               |	НоменклатураДополнительныеРеквизиты.Ссылка = &Номенклатура";
				   
				   
	НоменклатураДополнительныеРеквизитыИСведения.Загрузить(Запрос.Выполнить().Выгрузить());			   
				   
	НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Номенклатура);
	НаборЗаписей.Прочитать();
	Для Каждого Запись Из НаборЗаписей Цикл
		СтрокаДопСведение = НоменклатураДополнительныеРеквизитыИСведения.Добавить();
		СтрокаДопСведение.ПутьКДанным = Запись.Свойство.Имя;
		СтрокаДопСведение.ДанныеПараметра = Запись.Значение;
	КонецЦикла;
		
	МассивИмен = Новый Массив;
	Для Каждого ПараметрПравила из ПараметрыПравила Цикл	
		МассивСтрок = НоменклатураДополнительныеРеквизитыИСведения.НайтиСтроки(Новый Структура("ПутьКДанным",ПараметрПравила.ПутьКДанным));
		Если МассивСтрок.Количество() = 0 Тогда
			МассивИмен.Добавить(ПараметрПравила.ПутьКДанным);	
		КонецЕсли;
	КонецЦикла;
	
	Если МассивИмен.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеРеквизитыИСведения.Имя КАК Имя,
	               |	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения
	               |ИЗ
	               |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	               |ГДЕ
	               |	НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления
	               |	И ДополнительныеРеквизитыИСведения.НаборСвойств В ИЕРАРХИИ(ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура))
	               |	И ДополнительныеРеквизитыИСведения.Имя В(&МассивИмен)";
	Запрос.УстановитьПараметр("МассивИмен",МассивИмен);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДопСвойство = НоменклатураДополнительныеРеквизитыИСведения.Добавить();
		СтрокаДопСвойство.ПутьКДанным = Выборка.Имя;
		СтрокаДопСвойство.ДанныеПараметра = Выборка.ТипЗначения.ПривестиЗначение();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаименование(СтруктураПравила)

	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		ПримерНаименования = "";
		Возврат;
	КонецЕсли;	
		
	Для Каждого Параметр из СтруктураПравила.ПараметрыПравила Цикл
		
		ДанныеПараметра = "";
		
		Если СтрНайти(Параметр.ПутьКДанным,"Номенклатура.") > 0 Тогда
			ИмяРеквизита = Прав(Параметр.ПутьКДанным,СтрДлина(Параметр.ПутьКДанным) - 13);
			ДанныеПараметра = Формат(Номенклатура[ИмяРеквизита],"ДЛФ=Д; БЛ='Ложь'; БИ='" + Параметр.ИмяПараметра + "'");
		Иначе
			СтрокиДопРеквизитыИСведения = НоменклатураДополнительныеРеквизитыИСведения.НайтиСтроки(Новый Структура("ПутьКДанным",Параметр.ПутьКДанным));
			Если СтрокиДопРеквизитыИСведения.Количество() > 0 Тогда
				ДанныеПараметра = Формат(СтрокиДопРеквизитыИСведения[0].ДанныеПараметра,"ДЛФ=Д; БЛ='Ложь'; БИ='" + Параметр.ИмяПараметра + "'");
			КонецЕсли;			
		КонецЕсли;
		Параметр.Вставить("ДанныеПараметра",ДанныеПараметра);		
	КонецЦикла;
	
	ПримерНаименования = РаботаСПравиламиИменованияКлиентСервер.ПреобразоватьСтрокуПоПравилу(Правило,СтруктураПравила.ПараметрыПравила,"ПутьКДанным","ДанныеПараметра");
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИменаДополнительныхРеквизитовИСведений()
	
	РаботаСПравиламиИменования.ЗаполнитьИменаДополнительныхРеквизитовИСведений();

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораНоменклатуры()
	
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления",Ложь));

	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ВидНоменклатуры", ВидНоменклатуры));	
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		
		Запрос = Новый Запрос;	
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры
		               |ИЗ
		               |	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		               |ГДЕ
		               |	ВидыНоменклатуры.НаборСвойств В(&НаборСвойств)";
						
		Запрос.УстановитьПараметр("НаборСвойств",НаборыСвойств);
		
		Выборка = Запрос.Выполнить().Выбрать();
		МассивДоступныхВидовНоменклатуры = Новый Массив;
		Пока Выборка.Следующий() Цикл
			МассивДоступныхВидовНоменклатуры.Добавить(Выборка.ВидНоменклатуры);
		КонецЦикла;
		
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ВидНоменклатуры", Новый ФиксированныйМассив(МассивДоступныхВидовНоменклатуры)));

	КонецЕсли;
		
	ПараметрыВыбораНоменклатуры = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	Элементы.Номенклатура.ПараметрыВыбора = ПараметрыВыбораНоменклатуры;
	
КонецПроцедуры

#КонецОбласти

