#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция определяет банковский счет выбранного контрагента или физического лица.
//
// Возвращает банковский счет получателя, если найден один банковский счет.
// Возвращает Неопределено, если банковский счет не найден или счетов больше одного.
//
// Параметры:
//  Получатель - СправочникСсылка.Контрагенты или СправочникСсылка.ФизическиеЛица - Ссылка на получателя.
//	Валюта - СправочникСсылка.Валюты - Валюта банковского счета.
//
// Возвращаемое значение:
//	СправочникСсылка.БанковскиеСчетаКонтрагентов - Найденный банковский счет получателя.
//
Функция ПолучитьБанковскийСчетПоУмолчанию(Получатель) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	БанковскиеСчетаКонтрагентов.Ссылка КАК БанковскийСчетПолучателя
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|ГДЕ
	|	НЕ БанковскиеСчетаКонтрагентов.ПометкаУдаления
	|	И БанковскиеСчетаКонтрагентов.Владелец = &Получатель
	|");
	
	Запрос.УстановитьПараметр("Получатель", Получатель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		БанковскийСчетПолучателя = Выборка.БанковскийСчетПолучателя;
	Иначе
		БанковскийСчетПолучателя = Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	Возврат БанковскийСчетПолучателя;

КонецФункции // ПолучитьБанковскийСчетПоУмолчанию()

// Функция получает реквизиты банковского счета.
//
// Параметры:
//  БанковскийСчетОрганизации - СправочникСсылка.БанковскиеСчетаОрганизаций - Ссылка на банковский счет.
//
// Возвращаемое значение:
//	Структура - Организация и валюта банковского счета.
//
Функция ПолучитьРеквизитыБанковскогоСчета(БанковскийСчет) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	БанковскиеСчетаКонтрагентов.НомерСчета КАК НомерСчета,
	|	БанковскиеСчетаКонтрагентов.Банк КАК Банк,
	|
	|	ВЫБОР
	|		КОГДА БанковскиеСчетаКонтрагентов.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчетаКонтрагентов.БИКБанка
	|		ИНАЧЕ БанковскиеСчетаКонтрагентов.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	ВЫБОР
	|		КОГДА БанковскиеСчетаКонтрагентов.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчетаКонтрагентов.КоррСчетБанка
	|		ИНАЧЕ БанковскиеСчетаКонтрагентов.Банк.КоррСчет
	|	КОНЕЦ КАК КоррСчет
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|ГДЕ
	|	БанковскиеСчетаКонтрагентов.Ссылка = &БанковскийСчет
	|");
	
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НомерСчета = Выборка.НомерСчета;
		Банк = Выборка.Банк;
		БИК = Выборка.БИК;
		КоррСчет = Выборка.КоррСчет;
	Иначе
		НомерСчета = "";
		Банк = Неопределено;
		БИК = "";
		КоррСчет = "";
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("НомерСчета, Банк, БИК, КоррСчет",
		НомерСчета,
		Банк,
		БИК,
		КоррСчет
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
