#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец") Тогда
		Если ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.Организации") Тогда
			ТекстЗаголовка = "";
			АвтоЗаголовок  = Ложь;
			ТекстЗаголовка = НСтр("ru = 'Кассы (%Владелец%)'");
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
			Заголовок      = ТекстЗаголовка;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗапретитьИзменениеМагазина", ЗапретитьИзменениеМагазина) Тогда
		Элементы.ГруппаОтбор.Видимость = Ложь;
	КонецЕсли;
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбновитьЭлементыФормы();
	
	Элементы.КассаУправляющейСистемы.Видимость = Константы.ИспользуетсяОбменСУправлениемТорговлей.Получить();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Элементы.ОтборОрганизация.Видимость = Ложь;
		Элементы.Владелец.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Магазин = Настройки.Получить("Магазин");
	Если НЕ ЗапретитьИзменениеМагазина Тогда
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин));
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		Возврат;
	КонецЕсли;
	
	Организация = Настройки.Получить("Организация");
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Владелец", Организация, ЗначениеЗаполнено(Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.Кассы.Форма.ФормаЭлемента.Открытие");

КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.Кассы.Форма.ФормаЭлемента.СозданиеНового");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборМагазинПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Владелец", Организация, ЗначениеЗаполнено(Организация));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьЭлементыФормы()
	Перем МассивВсехРеквизитов, МассивРеквизитов;
	
	ДополнительныеСкрываемыеЭлементы = Новый Структура;
	
	Если НЕ Параметры.Отбор.Свойство("Владелец") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ДополнительныеСкрываемыеЭлементы", ДополнительныеСкрываемыеЭлементы);
	
	Справочники.Кассы.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
		Список,
		МассивВсехРеквизитов,
		МассивРеквизитов,
		ДополнительныеСкрываемыеЭлементы);
		
	ОбщегоНазначенияРТ.УстановитьВидимостьЭлементовПоМассиву(
		Элементы,
		МассивВсехРеквизитов,
		МассивРеквизитов);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти