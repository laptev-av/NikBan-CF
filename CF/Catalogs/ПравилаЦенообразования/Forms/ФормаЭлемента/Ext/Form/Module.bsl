&НаКлиенте
Перем КэшированныеЗначения;

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ЗаполнитьВидЦенВыделенныхСтрокЦеновыеГруппыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ЗаполнитьВидЦенВыделенныхСтрокЦеновыеГруппыСервер(Результат);
		
		ОбновитьСвойстваРеквизитаЦенаВключаетНДС();
		
		ТекстОповещения = НСтр("ru= 'Вид цен ""%1"" в таблице Ценовые группы заполнен.'");
		ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОповещения, Результат);
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Вид цен заполнен'"),
			,
			ТекстОповещения,
			БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ИспользуютсяВалюты = ЦенообразованиеПереопределяемый.ИспользуютсяВалюты(); 
	ИспользуютсяЦеновыеГруппы = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
	ИспользуетсяАссортимент = ПолучитьФункциональнуюОпцию("УстанавливатьВидыЦенВАссортименте");
	
	МассивСвязей  = Новый Массив;
	
	Если ИспользуютсяВалюты Тогда 
		
		ВалютаУчета   = ЦенообразованиеПереопределяемый.ПолучитьВалютуРегламентированногоУчета();
		СвязьПоВалюте = Новый СвязьПараметраВыбора("Отбор.ВалютаЦены", "ВалютаУчета", РежимИзмененияСвязанногоЗначения.Очищать);
		МассивСвязей.Добавить(СвязьПоВалюте);
	
	КонецЕсли;
	
	Если ИспользуютсяЦеновыеГруппы Тогда
		
		СвязьПоЦенаВключаетНДС = Новый СвязьПараметраВыбора("Отбор.ЦенаВключаетНДС", "Объект.ЦенаВключаетНДС", РежимИзмененияСвязанногоЗначения.Очищать);		
		МассивСвязей.Добавить(СвязьПоЦенаВключаетНДС);
		
	КонецЕсли;
	
	Если ИспользуютсяЦеновыеГруппы
		ИЛИ ИспользуютсяВалюты Тогда
		
		Элементы.ВидЦен.СвязиПараметровВыбора              = Новый ФиксированныйМассив(МассивСвязей);
		Элементы.ЦеновыеГруппыВидЦен.СвязиПараметровВыбора = Элементы.ВидЦен.СвязиПараметровВыбора;
			
	КонецЕсли;
	
	Элементы.ПояснениеЦеновыхГрупп.Видимость = ИспользуютсяЦеновыеГруппы И ИспользуетсяАссортимент;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСвойстваРеквизитаЦенаВключаетНДС();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидЦенПриИзменении(Элемент)
	
	ОбновитьСвойстваРеквизитаЦенаВключаетНДС();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаВключаетНДСПриИзменении(Элемент)
	
	Если НЕ Объект.ЦенаВключаетНДС Тогда
		СтрокаСообщения = НСтр("ru = 'В соответствии с п. 6 статьи 168 НК РФ рекомендуется включать НДС в цену продажи (даже если организация не является плательщиком НДС).'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, , "ЦенаВключаетНДС", "Объект");
	КонецЕсли;
	ОбновитьСвойстваРеквизитаЦенаВключаетНДС();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЦеновыеГруппы

&НаКлиенте
Процедура ЦеновыеГруппыВидЦенПриИзменении(Элемент)
	
	ОбновитьСвойстваРеквизитаЦенаВключаетНДС();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеновыеГруппыПослеУдаления(Элемент)
	
	ОбновитьСвойстваРеквизитаЦенаВключаетНДС();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьВидЦенВыделенныхСтрокЦеновыеГруппы(Команда)
	
	Если Объект.ЦеновыеГруппы.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'В документе не заполнена таблица Ценовые группы. Вид цен не может быть заполнен'"));
		Возврат;
		
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ЦенаВключаетНДС", Объект.ЦенаВключаетНДС);
	Если ИспользуютсяВалюты Тогда
		СтруктураОтбора.Вставить("ВалютаЦены", ВалютаУчета);
	КонецЕсли;	
	ПараметрыОткрытия = Новый Структура("Отбор", СтруктураОтбора);
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ЗаполнитьВидЦенВыделенныхСтрокЦеновыеГруппыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Справочник.ВидыЦен.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма, , , , ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьВсемиВлияющими(Команда)
	ДополнитьНаСервере("Влияющие");
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьВсемиЗависимыми(Команда)
	ДополнитьНаСервере("Зависимые");
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Перезаполняет вид цен в выделенных строках тч ЦеновыеГруппы документа в соответствии с выбранным видом цен.
//
// Параметры:
// ВидЦен - СправочникСсылка.ВидыЦен - Вид цен, по которому будут заполнены цены в тч Товары.
//
&НаСервере
Процедура ЗаполнитьВидЦенВыделенныхСтрокЦеновыеГруппыСервер(ВидЦен)

	Для Каждого ТекущаяСтрока Из Элементы.ЦеновыеГруппы.ВыделенныеСтроки Цикл
		
		СтрокаТаблицы = Объект.ЦеновыеГруппы.НайтиПоИдентификатору(ТекущаяСтрока);
		
		Если СтрокаТаблицы = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы.ВидЦен = ВидЦен;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСвойстваРеквизитаЦенаВключаетНДС()
	
	ВидыЦенЗаполнены = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ВидЦен) Тогда
		ВидыЦенЗаполнены = Истина;
	КонецЕсли;
	
	Если НЕ ВидыЦенЗаполнены Тогда
		Для Каждого СтрокаЦеновойГруппы Из Объект.ЦеновыеГруппы Цикл
			Если ЗначениеЗаполнено(СтрокаЦеновойГруппы.ВидЦен) Тогда
				ВидыЦенЗаполнены = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидыЦенЗаполнены Тогда
		Элементы.ЦенаВключаетНДС.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ЦенаВключаетНДС.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьНаСервере(Режим)
	
	ВыбранныеЦены = Новый Массив;
	ВыбранныеЦены.Добавить(Объект.ВидЦен);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы") Тогда
		Для Каждого СтрокаЦены Из Объект.ЦеновыеГруппы Цикл
			ВыбранныеЦены.Добавить(СтрокаЦены.ВидЦен);
		КонецЦикла;
	КонецЕсли;
	ДополнительныеЦены = Новый Массив;
	Для Каждого СтрокаЦены Из Объект.ДополнительныеВидыЦен Цикл
		ДополнительныеЦены.Добавить(СтрокаЦены.ВидЦен);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Если Режим = "Влияющие" Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВлияющиеВидыЦен.ВлияющийВидЦен КАК ВидЦен
		|ИЗ
		|	Справочник.ВидыЦен.ВлияющиеВидыЦен КАК ВлияющиеВидыЦен
		|ГДЕ
		|	ВлияющиеВидыЦен.Ссылка В(&ВыбранныеЦены)
		|	И НЕ ВлияющиеВидыЦен.ВлияющийВидЦен В(&ДополнительныеЦены)
		|";
	ИначеЕсли Режим = "Зависимые" Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВлияющиеВидыЦен.Ссылка КАК ВидЦен
		|ИЗ
		|	Справочник.ВидыЦен.ВлияющиеВидыЦен КАК ВлияющиеВидыЦен
		|ГДЕ
		|	ВлияющиеВидыЦен.ВлияющийВидЦен В(&ВыбранныеЦены)
		|	И НЕ ВлияющиеВидыЦен.Ссылка В(&ДополнительныеЦены)
		|";
	Иначе
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("ВыбранныеЦены", ВыбранныеЦены);
	Запрос.УстановитьПараметр("ДополнительныеЦены", ДополнительныеЦены);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ДополнительныеВидыЦен.Добавить();
		НоваяСтрока.ВидЦен = Выборка.ВидЦен;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

