#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Рассчитывает GTIN, записываемый эмитентом в КиЗ ГИСМ
//
// Параметры:
//  Номенклатура	 - СправочникСсылка.Номенклатура 
//  Характеристика	 - СправочникСсылка.ХарактеристикиНоменклатуры
// 
// Возвращаемое значение:
// 		Строка 
//
Функция GTINКиЗ(Номенклатура, Характеристика) Экспорт
	
	Если ЗначениеЗаполнено(Характеристика) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Характеристика ,"КиЗГИСМGTIN");
	Иначе
		
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, "КиЗГИСМGTIN,ВидНоменклатуры.ИспользоватьХарактеристики");
		
		Если РеквизитыНоменклатуры.ВидНоменклатурыИспользоватьХарактеристики = Истина Тогда
			ТекстИсключения = НСтр("ru = 'Невозможно определить GTIN КиЗ, т.к. не передана характеристика.'");
			ВызватьИсключение ТекстИсключения;
		Иначе
			Возврат РеквизитыНоменклатуры.КиЗГИСМGTIN;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Возвращает список реквизитов, которые не нужно редактировать
// с помощью обработки группового изменения объектов.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	
	НеРедактируемыеРеквизиты.Добавить("Наименование");
	НеРедактируемыеРеквизиты.Добавить("ФайлКартинки");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

// Проверяет используются ли характеристики для переденной номенклатуры
//	Параметры:
//		Номенклатура - СправочникСсылка.Номенклатура - проверяемая номенклатура
//	Возвращаемое значение:
//		Булево - ИСТИНА, если характеристики используются
//
Функция ХарактеристикиИспользуются(Номенклатура) Экспорт
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.ХарактеристикиИспользуются;
	
КонецФункции

// Проверяет, используются ли характеристики номенклатуры.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура.
//
Функция ПроверитьИспользованиеХарактеристик(Номенклатура) Экспорт
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.ХарактеристикиИспользуются;
	
КонецФункции

// Функция возвращает структуру со реквизитами номенклатуры.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура.
//  Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры.
//  Упаковка - СправочникСсылка.УпаковкиНоменклатуры.
//
// Возвращаемое значение:
//  Структура с ключами:
//  Характеристика             - Булево.
//  Упаковка                   - Булево.
//  ХарактеристикиИспользуются - Булево.
//
Функция ПроверитьПринадлежностьХарактеристикиИУпаковкиВладельцу(Номенклатура, Характеристика, Упаковка) Экспорт

	СтруктураВозврата = Новый Структура("Характеристика, Упаковка, ХарактеристикиИспользуются");
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		СтруктураВозврата.Характеристика             = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		СтруктураВозврата.Упаковка                   = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
		СтруктураВозврата.ХарактеристикиИспользуются = Ложь;
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(СпрУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(СпрХарактеристики.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|		ПО (ВЫБОР
	|				КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|					ТОГДА СпрНоменклатура.ВидНоменклатуры
	|				КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ = СпрХарактеристики.Владелец)
	|			И (СпрХарактеристики.Ссылка = &Характеристика)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК СпрУпаковки
	|		ПО (ВЫБОР
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ СпрНоменклатура.НаборУпаковок
	|			КОНЕЦ = СпрУпаковки.Владелец)
	|			И (СпрУпаковки.Ссылка = &Упаковка)
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Упаковка", Упаковка);
	
    Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	
	Возврат СтруктураВозврата;

КонецФункции

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ВидНоменклатуры");
	Результат.Добавить("ДоговорПлатежногоАгента");
	Результат.Добавить("Родитель");
	Результат.Добавить("Артикул");
	Результат.Добавить("СтавкаНДС");
	Результат.Добавить("НаборУпаковок");
	Результат.Добавить("ЕдиницаИзмерения");
	Результат.Добавить("ТоварнаяГруппа");
	Результат.Добавить("ЦеноваяГруппа");
	Результат.Добавить("Вес");
	Результат.Добавить("Весовой");
	Результат.Добавить("ТоварнаяКатегория");
	Результат.Добавить("Марка");
	Результат.Добавить("ТипСерийногоНомера");
	Результат.Добавить("ИспользоватьСерийныеНомера");
	Результат.Добавить("Номинал");
	Результат.Добавить("ДатаОкончанияДействия");
	Результат.Добавить("ТипСрокаДействия");
	Результат.Добавить("Периодичность");
	Результат.Добавить("КоличествоПериодовДействия");
	Результат.Добавить("СерийныеНомера;СерийныеНомера,СерийныеНомераЗаполнитьСерийныеНомера,ПовторнаяАктивацияПодарочногоСертификата");
	Результат.Добавить("СтранаПроисхождения");
	Результат.Добавить("Производитель");
	Результат.Добавить("ВидАлкогольнойПродукцииЕГАИС");
	Результат.Добавить("ПроизводительИмпортерАлкогольнойПродукции");
	Результат.Добавить("ОбъемДАЛ");
	Результат.Добавить("РазрешитьВводДробногоКоличества");
	
	Возврат Результат;

КонецФункции

// Функция возвращает структуру со реквизитами номенклатуры.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура.
//
// Возвращаемое значение:
//  Структура с ключами:
//  СтавкаНДС               - ПеречислениеСсылка.СтавкиНДС.
//  ЭтоУслуга               - Булево.
//  ЭтоПодарочныйСертификат - Булево.
//
Функция ПолучитьРеквизитыНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПодарочныйСертификат
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура");
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		СтавкаНДС               = Выборка.СтавкаНДС;
		ЭтоУслуга               = Выборка.ЭтоУслуга;
		ЭтоПодарочныйСертификат = Выборка.ЭтоПодарочныйСертификат;
	Иначе
		
		СтавкаНДС               = Перечисления.СтавкиНДС.БезНДС;
		ЭтоУслуга               = Неопределено;
		ЭтоПодарочныйСертификат = Неопределено;
		
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("СтавкаНДС, ЭтоУслуга, ЭтоПодарочныйСертификат",
		СтавкаНДС,
		ЭтоУслуга,
		ЭтоПодарочныйСертификат);
	
	Возврат СтруктураРеквизитов;

КонецФункции // ПолучитьРеквизитыНоменклатуры()

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	РедактируемыеРеквизиты = Новый Массив;
	
	РедактируемыеРеквизиты.Добавить("СтавкаНДС");
	РедактируемыеРеквизиты.Добавить("ЦеноваяГруппа");
	РедактируемыеРеквизиты.Добавить("СтранаПроисхождения");
	РедактируемыеРеквизиты.Добавить("ТоварнаяГруппа");
	РедактируемыеРеквизиты.Добавить("ТоварнаяКатегория");
	РедактируемыеРеквизиты.Добавить("Марка");
	РедактируемыеРеквизиты.Добавить("РазрешитьВводДробногоКоличества");
	
	Возврат РедактируемыеРеквизиты;
	
КонецФункции

// Проверяет, используются ли подарочные сертификаты.
//
Функция ИспользуютсяПодарочныеСертификаты() Экспорт
	
	ИспользуютсяПодарочныеСертификаты = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.ЭтоГруппа";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ИспользуютсяПодарочныеСертификаты = Ложь;
	КонецЕсли;
	
	Возврат ИспользуютсяПодарочныеСертификаты;
	
КонецФункции

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

//
Процедура ОбновитьПризнакиНоменклатуры(Форма, Ответ = "") Экспорт
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ТипНоменклатуры", "ТипНоменклатуры");
	СтруктураРеквизитов.Вставить("АгентскиеУслуги", "АгентскиеУслуги");
	СтруктураРеквизитов.Вставить("АлкогольнаяПродукция", "АлкогольнаяПродукция");
	СтруктураРеквизитов.Вставить("ВидАлкогольнойПродукцииЕГАИС", "ВидАлкогольнойПродукцииЕГАИС");
	СтруктураРеквизитов.Вставить("ИмпортнаяАлкогольнаяПродукция", "ИмпортнаяАлкогольнаяПродукция");
	СтруктураРеквизитов.Вставить("ЕдиницаИзмерения", "ЕдиницаИзмерения");
	СтруктураРеквизитов.Вставить("НаборУпаковок", "НаборУпаковок");
	СтруктураРеквизитов.Вставить("СтавкаНДС", "СтавкаНДС");
	СтруктураРеквизитов.Вставить("ЦеноваяГруппа", "ЦеноваяГруппа");
	СтруктураРеквизитов.Вставить("ТоварнаяГруппа", "ТоварнаяГруппа");
	СтруктураРеквизитов.Вставить("ОсобенностьУчета", "ОсобенностьУчета");
	СтруктураРеквизитов.Вставить("ПродукцияМаркируемаяДляГИСМ", "ПродукцияМаркируемаяДляГИСМ");
	СтруктураРеквизитов.Вставить("КиЗГИСМ", "КиЗГИСМ");
	СтруктураРеквизитов.Вставить("ИспользоватьRFIDМеткиСерии", "ИспользоватьRFIDМеткиСерии");
	СтруктураРеквизитов.Вставить("ИспользоватьНомерКИЗГИСМСерии", "ИспользоватьНомерКИЗГИСМСерии");
	СтруктураРеквизитов.Вставить("ИспользоватьВидКИЗГИСМСерии", "ИспользоватьВидКИЗГИСМСерии");
	СтруктураРеквизитов.Вставить("СтранаПроисхождения", "СтранаПроисхождения");
	СтруктураРеквизитов.Вставить("Производитель", "Производитель");
	СтруктураРеквизитов.Вставить("Марка", "Марка");
	СтруктураРеквизитов.Вставить("ТипСрокаДействия", "ТипСрокаДействия");
	СтруктураРеквизитов.Вставить("ТоварнаяКатегория", "ТоварнаяКатегория");
	СтруктураРеквизитов.Вставить("ВидМехаГИСМ", "ВидМехаГИСМ");
	СтруктураРеквизитов.Вставить("КодТНВЭД", "КодТНВЭД");
	
	СтруктураВидаНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
									Форма.Объект.ВидНоменклатуры,
									СтруктураРеквизитов);
									
	// Тип номенклатуры
	Форма.Объект.ТипНоменклатуры = СтруктураВидаНоменклатуры.ТипНоменклатуры;
				
	Если Форма.Объект.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар Тогда
		Форма.Объект.НаборУпаковок = Справочники.НаборыУпаковок.ПустаяСсылка();
	КонецЕсли;
	
	Если Форма.Объект.Весовой
		И (Форма.Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга
		ИЛИ Форма.Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат) Тогда
		Форма.Объект.Весовой = Ложь;
	КонецЕсли;
	
	Если Форма.Объект.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат
		И Форма.Объект.ИспользоватьСерийныеНомера Тогда
		Форма.Объект.ИспользоватьСерийныеНомера = Ложь;
	КонецЕсли;
		
	Если Форма.Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		Форма.Объект.СтранаПроисхождения = Справочники.СтраныМира.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.Объект.ТоварнаяКатегория) Тогда
		ВладелецКатегории = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Объект.ТоварнаяКатегория, "Владелец");
		Если ВладелецКатегории <> Форма.Объект.ВидНоменклатуры Тогда
			Форма.Объект.ТоварнаяКатегория = Справочники.ТоварныеКатегории.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		Если НЕ СтруктураВидаНоменклатуры.АгентскиеУслуги Тогда
			Форма.Объект.ДоговорПлатежногоАгента = Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Форма.Объект.ДоговорПлатежногоАгента = Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка();
	КонецЕсли;
	
	Форма.Объект.ОсобенностьУчета             = СтруктураВидаНоменклатуры.ОсобенностьУчета;
	Форма.Объект.АлкогольнаяПродукция         = (СтруктураВидаНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция);
	Форма.Объект.ПродукцияМаркируемаяДляГИСМ  = (СтруктураВидаНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ);
	Форма.Объект.КиЗГИСМ                      = (СтруктураВидаНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ);
	Форма.Объект.ПодконтрольнаяПродукцияВЕТИС = (СтруктураВидаНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС);
	Форма.Объект.ТабачнаяПродукция            = (СтруктураВидаНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция);
	Форма.Объект.ОбувнаяПродукция             = (СтруктураВидаНоменклатуры.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция);
	
	// Алкогольная продукция
	Если Форма.Объект.АлкогольнаяПродукция Тогда
		Если НЕ ЗначениеЗаполнено(Форма.Объект.ВидАлкогольнойПродукцииЕГАИС) Тогда
			Форма.Объект.ВидАлкогольнойПродукцииЕГАИС = СтруктураВидаНоменклатуры.ВидАлкогольнойПродукцииЕГАИС;
		КонецЕсли;
		
		Если Форма.Объект.СтранаПроисхождения = Справочники.СтраныМира.Россия Тогда
			Форма.Объект.ИмпортнаяАлкогольнаяПродукция = Ложь;
		Иначе
			Форма.Объект.ИмпортнаяАлкогольнаяПродукция = СтруктураВидаНоменклатуры.ИмпортнаяАлкогольнаяПродукция;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Форма.Объект.ПроизводительИмпортерАлкогольнойПродукции) Тогда
			Форма.Объект.ПроизводительИмпортерАлкогольнойПродукции = Форма.Объект.Производитель;
		КонецЕсли;
	Иначе
		Форма.Объект.ВидАлкогольнойПродукцииЕГАИС = Справочники.ВидыАлкогольнойПродукции.ПустаяСсылка();
		Форма.Объект.ИмпортнаяАлкогольнаяПродукция = Ложь;
		Форма.Объект.ОбъемДАЛ = 0;
		Форма.Объект.Крепость = 0;
		Форма.Объект.ПроизводительИмпортерАлкогольнойПродукции = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	Если Ответ = СокрЛП("Да") Тогда
		Форма.Объект.СтавкаНДС = ЗначениеНастроекПовтИсп.ПолучитьСтавкуНДСНовыхНоменклатурныхПозицийПоУмолчанию(Пользователи.ТекущийПользователь());
		Если ЗначениеЗаполнено(Форма.Объект.СтавкаНДС) Тогда
			ЗаполнитьЗначенияСвойств(Форма.Объект, СтруктураВидаНоменклатуры,,"СтавкаНДС");
		Иначе
			ЗаполнитьЗначенияСвойств(Форма.Объект, СтруктураВидаНоменклатуры);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры


#КонецОбласти

#КонецЕсли
