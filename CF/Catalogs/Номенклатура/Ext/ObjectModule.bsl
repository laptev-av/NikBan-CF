#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события "ОбработкаПроверкиЗаполнения".
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			Если ВидНоменклатуры.ПродаетсяВРозлив И ОбъемДАЛ = 0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнен объем в декалитрах'"),
					ЭтотОбъект,
					"ОбъемДАЛ",, Отказ);
			КонецЕсли;
			Если ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ЕдиницаИзмерения");
			КонецЕсли;
		КонецЕсли;
		
		Если ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Номинал");
			МассивНепроверяемыхРеквизитов.Добавить("ТипСрокаДействия");
		КонецЕсли;
		
		Если НЕ ИспользоватьСерийныеНомера Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ТипСерийногоНомера");
		КонецЕсли;
		
		Если ТипСрокаДействия <> Перечисления.СрокДействияПодарочныхСертификатов.СОграничениемНаДату Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДатаОкончанияДействия");
		КонецЕсли;
		
		Если ТипСрокаДействия <> Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Периодичность");
			МассивНепроверяемыхРеквизитов.Добавить("КоличествоПериодовДействия");
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьТоварныеКатегорииИКвотыАссортимента") Тогда
			ВладелецКатегории = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТоварнаяКатегория, "Владелец");
			Если ЗначениеЗаполнено(ТоварнаяКатегория) И ВладелецКатегории <> ВидНоменклатуры Тогда
				ТекстСообщения = НСтр("ru = 'Владелец товарной категории не соответствует виду номенклатуры'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"ТоварнаяКатегория",
					,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		
		ЭтоАгентскаяУслуга = Ложь;
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			ЭтоАгентскаяУслуга = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "АгентскиеУслуги");
		КонецЕсли;
		Если НЕ ЭтоАгентскаяУслуга Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДоговорПлатежногоАгента");
			Если ЗначениеЗаполнено(ДоговорПлатежногоАгента) Тогда
				ТекстСообщения = НСтр("ru = 'Договор платежного агента указывается только для агентских услуг'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"ДоговорПлатежногоАгента",
					,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если Не КиЗГИСМ Тогда
			МассивНепроверяемыхРеквизитов.Добавить("КиЗГИСМВид");
			МассивНепроверяемыхРеквизитов.Добавить("КиЗГИСМСпособВыпускаВОборот");
			МассивНепроверяемыхРеквизитов.Добавить("КиЗГИСМGTIN");
			МассивНепроверяемыхРеквизитов.Добавить("КиЗГИСМРазмер");
		Иначе
			Если ЗначениеЗаполнено(КиЗГИСМGTIN)
				И Не МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(КиЗГИСМGTIN) Тогда
				ТекстСообщения = НСтр("ru = 'Указан некорректный GTIN.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "КиЗГИСМGTIN", "Объект", Отказ);
			КонецЕсли;
			
			МаркировкаТоваровГИСМРТ.ПроверкаУникальностиКиЗ(ЭтотОбъект, Отказ);
		КонецЕсли;
		
		Если Не ПродукцияМаркируемаяДляГИСМ Тогда
			МассивНепроверяемыхРеквизитов.Добавить("КодТНВЭД");
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;

	Если Не ЭтоГруппа Тогда
		Если ТипНоменклатуры <> ВидНоменклатуры.ТипНоменклатуры Тогда
			ТипНоменклатуры = ВидНоменклатуры.ТипНоменклатуры;
		КонецЕсли;
		
		Если ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
			ИспользоватьСерийныеНомера = Ложь;
		КонецЕсли;
			
		Если ЗначениеЗаполнено(НаборУпаковок)
			И НаборУпаковок <> Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры
			И ЕдиницаИзмерения <> НаборУпаковок.ЕдиницаИзмерения Тогда
			
			ЕдиницаИзмерения = НаборУпаковок.ЕдиницаИзмерения; 
			
		КонецЕсли;
			
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа Тогда
		
		Пользователь = Пользователи.ТекущийПользователь();
		
		ВидНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьВидНоменклатурыПоУмолчанию(Пользователь, ВидНоменклатуры);
		
		Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
			ТипНоменклатуры = ВидНоменклатуры.ТипНоменклатуры;
		КонецЕсли;
		
		ЕдиницаИзмерения = Справочники.БазовыеЕдиницыИзмерения.ПолучитьЕдиницуИзмеренияПоУмолчанию();
		
		СтавкаНДС = ЗначениеНастроекПовтИсп.ПолучитьСтавкуНДСНовыхНоменклатурныхПозицийПоУмолчанию(Пользователь, СтавкаНДС);
		
		Если Не ЗначениеЗаполнено(СтавкаНДС) Тогда
			СтавкаНДС = ВидНоменклатуры.СтавкаНДС;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ЭтоГруппа Тогда
		ФайлКартинки = Справочники.НоменклатураПрисоединенныеФайлы.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли



