#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если СкладУправляющейСистемы Тогда
		
		МассивНепроверяемыхРеквизитов = Новый Массив;
		МассивНепроверяемыхРеквизитов.Добавить("ПравилоЦенообразования");
		МассивНепроверяемыхРеквизитов.Добавить("СкладПоступления");
		МассивНепроверяемыхРеквизитов.Добавить("СкладПродажи");
		МассивНепроверяемыхРеквизитов.Добавить("ФорматМагазина");
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
		
	Иначе
		Если ЗначениеЗаполнено(ВидМинимальныхЦенПродажи)
			И ЗначениеЗаполнено(ПравилоЦенообразования) 
			И ВидМинимальныхЦенПродажи.ЦенаВключаетНДС <> ПравилоЦенообразования.ЦенаВключаетНДС Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'У вида минимальных цен продажи признак ""Цена включает НДС""
				|не совпадает с признаком ""Цена включает НДС"" правила ценообразования.
				|Измените вид минимальных цен продажи'"),
				ЭтотОбъект,
				"ВидМинимальныхЦенПродажи",
				,
				Отказ);
				
		КонецЕсли;
		
		МассивНепроверяемыхРеквизитов = Новый Массив;
		
		Если ЭтоНовый() Тогда
			МассивНепроверяемыхРеквизитов.Добавить("СкладПоступления");
			МассивНепроверяемыхРеквизитов.Добавить("СкладПродажи");
		КонецЕсли;
		
		ИспользоватьАссортимент = ПолучитьФункциональнуюОпцию("ИспользоватьАссортимент");
		Если ИспользоватьАссортимент Тогда
			Если НЕ КонтролироватьАссортимент Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ФорматМагазина");
			КонецЕсли;
		Иначе
			МассивНепроверяемыхРеквизитов.Добавить("ФорматМагазина");
		КонецЕсли;
		
		Если (ИспользоватьОрдернуюСхемуПриОтгрузке
			ИЛИ ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
			ИЛИ ИспользоватьОрдернуюСхемуПриПоступлении)
			И ЗначениеЗаполнено(Ссылка) Тогда
			ПроверитьОрдернуюСхемуИПолитикуСерий(Отказ);
		КонецЕсли;
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СкладПоступления = Справочники.Склады.ПустаяСсылка();
	СкладПродажи     = Справочники.Склады.ПустаяСсылка();
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("ЭтоНовый") Тогда
		ЗакупкиСервер.ОтразитьПоставщикаТоваровКакДействующего(Ссылка);
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьОрдернуюСхемуИПолитикуСерий(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыНоменклатурыПолитикиУчетаСерий.Ссылка КАК ВидНоменклатуры,
	|	ВидыНоменклатурыПолитикиУчетаСерий.Ссылка.Представление КАК Представление
	|ИЗ
	|	Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ВидыНоменклатурыПолитикиУчетаСерий
	|ГДЕ
	|	ВидыНоменклатурыПолитикиУчетаСерий.Магазин = &Ссылка
	|	И ВидыНоменклатурыПолитикиУчетаСерий.Ссылка.КиЗГИСМ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Текст = НСтр("ru = 'Для магазина настроен серийный учет контрольных (идентификационных) знаков. Для данного магазина нельзя использовать ордерную схему. Виды номенклатуры:'");
	Пока Выборка.Следующий() Цикл
	
		Текст = Текст + Символы.ПС + Выборка.Представление;
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтотОбъект,
			,
			,
			Отказ);
		
	
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
