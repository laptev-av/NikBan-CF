
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ЗначениеВладельца = Неопределено;
	Если (Параметры.Свойство("Владелец",ЗначениеВладельца)
		ИЛИ Параметры.Отбор.Свойство("Владелец",ЗначениеВладельца))
		И ЗначениеВладельца <> Неопределено Тогда
		Элементы.СписокВидовНоменклатуры.Видимость = Ложь;
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			Список,
			"Владелец",
			ЗначениеВладельца,
			Истина,
			ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		Элементы.СписокВидовНоменклатуры.Видимость = Истина;
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			Список,
			"Владелец",
			Справочники.ВидыНоменклатуры.ПустаяСсылка(),
			Ложь,
			ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.ТоварныеКатегории.Форма.ФормаЭлемента.Открытие");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.ТоварныеКатегории.Форма.ФормаСписка.Открытие");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокВидовНоменклатуры

&НаКлиенте
Процедура СписокВидовНоменклатурыПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрокаВида = Элемент.ТекущаяСтрока;
	ПодключитьОбработчикОжидания("УстановитьОтборПоТекущейСтрокеВидаНоменклатуры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВидовНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборПоТекущейСтрокеВидаНоменклатуры()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		"Владелец",
		ТекущаяСтрокаВида,
		Истина,
		ВидСравненияКомпоновкиДанных.Равно);
	
	СтрокаЗаголовка = НСтр("ru = 'Товарные категории (по виду номенклатуры ""%1"")'");
	СтрокаЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаЗаголовка, ТекущаяСтрокаВида);
	Элементы.Наименование.Заголовок = СтрокаЗаголовка;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти



