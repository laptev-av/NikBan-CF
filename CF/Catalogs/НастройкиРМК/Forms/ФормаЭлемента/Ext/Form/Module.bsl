&НаКлиенте
Перем КэшированныеЗначения;

// Хранит Акселератор кнопки для редактирования.
&НаКлиенте
Перем СтарыйАкселератор;

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеВопросОчиститьТаблицуКнопок(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоУмолчаниюНижнююПанельКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьКонструкторЗапроса(Текст, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		ТекстЗапроса.УстановитьТекст(Текст);
		
		ТЗ = ТекстЗапроса.ПолучитьТекст();
		
		Объект.ЗапросТабло = ТЗ;
		Модифицированность = Истина;
		
		Элементы.ДекорацияТекущийТовар.Заголовок = ВыполнитьТекстЗапроса(Номенклатура, Объект.ЗапросТабло);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаписатьЭлементПриОткрытииПалитры(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ЭтотОбъект.Записать() Тогда
			ПалитраБыстрыхТоваровОткрытиеЗавершение()
		КонецЕсли;
	Иначе
		ПалитраБыстрыхТоваровОткрытиеЗавершение()
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаписатьЭлементПриВыбореПалитры(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ЭтотОбъект.Записать() Тогда
			ПалитраБыстрыхТоваровНачалоВыбораЗавершение()
		КонецЕсли;
	Иначе
		ПалитраБыстрыхТоваровНачалоВыбораЗавершение()
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ПоРабочемуМесту.ЭтоРабочееМесто() Тогда
		Элементы.КонтролироватьОстаткиТоваровПриЗакрытииЧека.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаФункциональныеКнопкиНижнейПанели.Доступность = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	
	
	ЗаполнитьТаблицуКнопокИзМакета();
	
	Элементы.КнопкиНижнейПанелиКлавиша.СписокВыбора.ЗагрузитьЗначения(МассивКлавишДляАкселераторов());
	Элементы.КнопкиНижнейПанелиПредставлениеКнопки.СписокВыбора.ЗагрузитьЗначения(МассивПредставленийКнопок());
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ИспользоватьЛогированиеДействийКассираВРМК = ПолучитьФункциональнуюОпцию("ИспользоватьЛогированиеДействийКассираВРМК");
	ИспользоватьБонусныеПрограммыЛояльности    = ПолучитьФункциональнуюОпцию("ИспользоватьБонусныеПрограммыЛояльности");
	Если ИспользоватьЛогированиеДействийКассираВРМК И ИспользоватьБонусныеПрограммыЛояльности Тогда
		Элементы.СтраницыЛогированиеИБонусы.ТекущаяСтраница = Элементы.СтраницаЛогированиеИБонусы;
	ИначеЕсли ИспользоватьЛогированиеДействийКассираВРМК Тогда
		Элементы.СтраницыЛогированиеИБонусы.ТекущаяСтраница = Элементы.СтраницаЛогирование;
	ИначеЕсли ИспользоватьБонусныеПрограммыЛояльности Тогда
		Элементы.СтраницыЛогированиеИБонусы.ТекущаяСтраница = Элементы.СтраницаБонуснаяСистема;
	Иначе
		Элементы.СтраницыЛогированиеИБонусы.ТекущаяСтраница = Элементы.СтраницаДекорация
	КонецЕсли;
	
	ТекстЗапроса.УстановитьТекст(Объект.ЗапросТабло);
	
	Элементы.СтраницыТабло.ТекущаяСтраница = Элементы.СтраницаНастройкаТаблоВСписке;
	
	Если ЗначениеЗаполнено(Объект.ЗапросТабло)  Тогда
		РежимНастройкиТабло = 1;
	Иначе
		РежимНастройкиТабло = 0;
	КонецЕсли;
	
	ЗаполнитьВсеРеквизитыТабло();
	
	УстановитьВидимостьДоступностьЭлементовЕГАИС();
	
	ЗагрузитьШрифтИЦвет();
	
	Если Объект.КнопкиВерхнейПанели.Количество() = 0 Тогда 
		СформироватьИменаКнопокВерхнейПанели();
	КонецЕсли;
	
	ИспользоватьРасширеннуюНастройкуКнопокНижнейПанелиПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ДекорацияТекущийТовар.Заголовок = ВыполнитьТекстЗапроса(Номенклатура, Объект.ЗапросТабло);
	ПриИзмененииРежимаНастройкиТабло();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	РаботаСФайламиКлиент.ПоказатьПодтверждениеЗакрытияФормыСФайлами(ЭтотОбъект, Отказ, Ложь, Объект.Ссылка);
	СохранитьШрифтИЦвет();	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗагрузитьШрифтИЦвет();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьРасширеннуюНастройкуКнопокНижнейПанелиПриИзменении(Элемент)
	
	Элементы.ГруппаФункциональныеКнопкиНижнейПанели.Доступность = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	
	ИспользоватьРасширеннуюНастройкуКнопокНижнейПанелиПриИзмененииКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗапросаПриИзменении(Элемент)
	
	ТЗ = ТекстЗапроса.ПолучитьТекст();
	
	Объект.ЗапросТабло = ТЗ;
	Модифицированность = Истина;
	
	Элементы.ДекорацияТекущийТовар.Заголовок = ВыполнитьТекстЗапроса(Номенклатура, Объект.ЗапросТабло);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимНастройкиТаблоПриИзменении(Элемент)
	
	ПриИзмененииРежимаНастройкиТабло();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВсехРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ТаблицаВсехРеквизитов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		
		НеобходимостьПерезаполнитьТекстЗапроса = Ложь;
		ВыбратьРеквизитаДляТабло(ТекущиеДанные, НеобходимостьПерезаполнитьТекстЗапроса);
		Если НеобходимостьПерезаполнитьТекстЗапроса Тогда
			ЗаполнитьТекстЗапросаТабло();
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныхРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ТаблицаВыбранныхРеквизитов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		ТаблицаВыбранныхРеквизитовПередУдалениемКлиент(ТекущиеДанные);
		
		ТаблицаВыбранныхРеквизитов.Удалить(ТекущиеДанные);
		ЗаполнитьТекстЗапросаТабло();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныхРеквизитовПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элементы.ТаблицаВыбранныхРеквизитов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		ТаблицаВыбранныхРеквизитовПередУдалениемКлиент(ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныхРеквизитовПослеУдаления(Элемент)
	ЗаполнитьТекстЗапросаТабло();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныхРеквизитовПриИзменении(Элемент)
	
	ЗаполнитьТекстЗапросаТабло();
	
КонецПроцедуры

&НаКлиенте
Процедура ПалитраБыстрыхТоваровОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ПалитраБыстрыхТоваров) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Модифицированность 
			ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Отказ = Истина;
			ТекстВопроса = НСтр("ru = 'Для получения корректного визуального представления панели быстрых товаров рекомендуется записать настройку РМК. Записать?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ВопросЗаписатьЭлементПриОткрытииПалитры", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Да);
			Возврат;
		КонецЕсли;
		
		ПалитраБыстрыхТоваровОткрытиеЗавершение();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПалитраБыстрыхТоваровОткрытиеЗавершение()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.ПалитраБыстрыхТоваров);
	ПараметрыФормы.Вставить("НастройкаРМК", Объект.Ссылка);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("Справочник.ПалитраБыстрыхТоваров.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,,, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ПалитраБыстрыхТоваровНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Для получения корректного визуального представления панели быстрых товаров рекомендуется записать настройку РМК. Записать?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросЗаписатьЭлементПриВыбореПалитры", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ПалитраБыстрыхТоваровНачалоВыбораЗавершение();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурыПриИзменении(Элемент)
	
	ЗаполнитьТекстЗапросаТабло();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКнопкиНижнейПанели

&НаКлиенте
Процедура КнопкиНижнейПанелиПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	Если ТекущиеДанные.ИмяКнопки = "КнопкаВыход" Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		ТекущаяСтрока		= Элементы.КнопкиНижнейПанели.ТекущиеДанные;
		ИмяКнопки			= ТекущаяСтрока.ИмяКнопки;
		ТекущийНомерСтроки	= ТекущаяСтрока.НомерСтроки;
		ПредставлениеКнопки = ТекущаяСтрока.ПредставлениеКнопки;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ИмяКнопки", ИмяКнопки);
		
		СтрокиТаблицы = Объект.КнопкиНижнейПанели.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокиТаблицы Из СтрокиТаблицы Цикл
			Если Не СтрокиТаблицы.НомерСтроки = ТекущийНомерСтроки Тогда
				
				ТекстСообщения = НСтр("ru='Кнопка ""%ПредставлениеКнопки%"" уже есть в строке №%НомерСтроки%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеКнопки%", ПредставлениеКнопки);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокиТаблицы.НомерСтроки);
				
				ПолеСообщения = "КнопкиНижнейПанели[%ИндексСтроки%]";
				ПолеСообщения = СтрЗаменить(ПолеСообщения, "%ИндексСтроки%", ТекущийНомерСтроки-1);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,ПолеСообщения, "Объект");
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПередНачаломИзменения(Элемент, Отказ)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	СтарыйАкселератор = СтроковоеПредставленияАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиАкселераторAltПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиАкселераторCtrlПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиАкселераторShiftПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиКлавишаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	Если ПустаяСтрока(ТекущаяСтрока.Клавиша) Тогда
		ТекущаяСтрока.Клавиша = "Нет";
	КонецЕсли;
	
	Если ТекущаяСтрока.Клавиша = "Нет" Тогда
		ТекущаяСтрока.АкселераторAlt = Ложь;
		ТекущаяСтрока.АкселераторCtrl = Ложь;
		ТекущаяСтрока.АкселераторShift = Ложь;
	КонецЕсли;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПредставлениеКнопкиПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	ПредставлениеКнопки = ТекущаяСтрока.ПредставлениеКнопки;
	СтрокиИзМакета = ТаблицаДействииКнопокНижнейПанели.НайтиСтроки(Новый Структура("ПредставлениеКнопки",ПредставлениеКнопки));
	Если Не СтрокиИзМакета.Количество() = 0  Тогда
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокиИзМакета[0]);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКнопкиВерхнейПанели

&НаКлиенте
Процедура КнопкиВерхнейПанелиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КнопкиВерхнейПанелиДоступнаКнопкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.КнопкиВерхнейПанели.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.ДоступнаКоманда = ?(ТекущаяСтрока.ДоступнаКнопка, Истина, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюНижнююПанель(Команда)
	
	Если Объект.КнопкиНижнейПанели.Количество()>0 Тогда
		
		ТекстВопроса = НСтр("ru='Таблица кнопок заполнена. Очистить?'");
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеВопросОчиститьТаблицуКнопок", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПоУмолчаниюНижнююПанельКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Команда)
	
	ТЗ = ТекстЗапроса.ПолучитьТекст();
	
	Если ПустаяСтрока(ТЗ) Тогда 
		КонструкторЗапроса = Новый КонструкторЗапроса();
	Иначе
		КонструкторЗапроса = Новый КонструкторЗапроса(ТЗ);
	КонецЕсли;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьКонструкторЗапроса", ЭтотОбъект);
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	КонструкторЗапроса.Показать(ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Закомментировать(Команда)
	Перем ПерваяСтрока, ПерваяКолонка, ПоследняяСтрока, ПоследняяКолонка;
	
	Элемент = Элементы.ТекстЗапроса;
	Элемент.ПолучитьГраницыВыделения(ПерваяСтрока, ПерваяКолонка, ПоследняяСтрока, ПоследняяКолонка);

	ТекстДоИзменения = ТекстЗапроса.ПолучитьТекст();
	КоличествоСтрок = СтрЧислоСтрок(ТекстДоИзменения);
	ВыделенныйФрагмент = "";
	ДлинаПоследнейСтроки = 0;
	
	Если ПоследняяКолонка = 1 Тогда 
		ПоследняяСтрока = ПоследняяСтрока - 1;
	КонецЕсли;
	Если ПерваяСтрока >= ПоследняяСтрока И ПоследняяКолонка = 1 Тогда 
		ПоследняяКолонка = СтрДлина(СтрПолучитьСтроку(ТекстДоИзменения, ПерваяСтрока));
		ПоследняяСтрока = ПерваяСтрока;
	КонецЕсли;
	
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		Фрагмент = СтрПолучитьСтроку(ТекстДоИзменения, НомерСтроки);
		Если НомерСтроки >= ПерваяСтрока И
			НомерСтроки <= ПоследняяСтрока
			Тогда
			Если НомерСтроки = ПерваяСтрока Тогда 
				ВыделенныйФрагмент = ВыделенныйФрагмент + "//" + Фрагмент;
			Иначе
				ВыделенныйФрагмент = ВыделенныйФрагмент + Символы.ПС + "//" +Фрагмент;
			КонецЕсли;
			Если НомерСтроки = ПоследняяСтрока Тогда 
				ДлинаПоследнейСтроки = СтрДлина(Фрагмент) + 3;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПоследняяКолонка = 1 Тогда 
		ПоследняяСтрока = ПоследняяСтрока + 1;
		ДлинаПоследнейСтроки = 1;
		ВыделенныйФрагмент =  ВыделенныйФрагмент + Символы.ПС;
	КонецЕсли;

	Элемент.УстановитьГраницыВыделения(ПерваяСтрока, 1, ПоследняяСтрока, ДлинаПоследнейСтроки);
	Элемент.ВыделенныйТекст = ВыделенныйФрагмент;
	Элемент.УстановитьГраницыВыделения(ПерваяСтрока, 1, ПоследняяСтрока, ДлинаПоследнейСтроки);
	Элементы.ДекорацияТекущийТовар.Заголовок = ВыполнитьТекстЗапроса(Номенклатура, Объект.ЗапросТабло);
КонецПроцедуры

&НаКлиенте
Процедура Раскомментировать(Команда)
	Перем ПерваяСтрока, ПерваяКолонка, ПоследняяСтрока, ПоследняяКолонка;
	Элемент = Элементы.ТекстЗапроса;
	Элемент.ПолучитьГраницыВыделения(ПерваяСтрока, ПерваяКолонка, ПоследняяСтрока, ПоследняяКолонка);
	
	ТекстДоИзменения = ТекстЗапроса.ПолучитьТекст();
	КоличествоСтрок = СтрЧислоСтрок(ТекстДоИзменения);
	ВыделенныйФрагмент = "";
	ДлинаПоследнейСтроки = ПоследняяКолонка;
	
	Если ПоследняяКолонка = 1 Тогда 
		ПоследняяСтрока = ПоследняяСтрока - 1;
	КонецЕсли;
	Если ПерваяСтрока >= ПоследняяСтрока И ПоследняяКолонка = 1 Тогда 
		ПоследняяКолонка = СтрДлина(СтрПолучитьСтроку(ТекстДоИзменения, ПерваяСтрока));
		ПоследняяСтрока = ПерваяСтрока;
	КонецЕсли;

	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		Фрагмент = СтрПолучитьСтроку(ТекстДоИзменения, НомерСтроки);
		Если НомерСтроки >= ПерваяСтрока И НомерСтроки <= ПоследняяСтрока Тогда
			Если Лев(СокрЛ(Фрагмент), 2) = "//" Тогда
				Позиция = Найти(Фрагмент, "//");
				Фрагмент = Лев(Фрагмент, Позиция - 1) + Сред(Фрагмент, Позиция + 2);
			КонецЕсли;
			Если НомерСтроки = ПерваяСтрока Тогда 
				ВыделенныйФрагмент = ВыделенныйФрагмент + Фрагмент;
			Иначе
				ВыделенныйФрагмент = ВыделенныйФрагмент + Символы.ПС + Фрагмент;
			КонецЕсли;
			Если НомерСтроки = ПоследняяСтрока Тогда 
				ДлинаПоследнейСтроки = СтрДлина(Фрагмент) + 3;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПоследняяКолонка = 1 Тогда 
		ПоследняяСтрока = ПоследняяСтрока + 1;
		ДлинаПоследнейСтроки = 1;
		ВыделенныйФрагмент =  ВыделенныйФрагмент + Символы.ПС;
	КонецЕсли;

	Элемент.УстановитьГраницыВыделения(ПерваяСтрока, 1, ПоследняяСтрока, ДлинаПоследнейСтроки);
	Элемент.ВыделенныйТекст = ВыделенныйФрагмент;
	Элемент.УстановитьГраницыВыделения(ПерваяСтрока, 1, ПоследняяСтрока, ДлинаПоследнейСтроки);
	Элементы.ДекорацияТекущийТовар.Заголовок = ВыполнитьТекстЗапроса(Номенклатура, Объект.ЗапросТабло);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРеквизитыДляТабло(Команда)
	
	НеобходимостьПерезаполнитьТекстЗапроса = Ложь;
	Для каждого ИндексСтроки Из Элементы.ТаблицаВсехРеквизитов.ВыделенныеСтроки Цикл
		ВыбраннаяСтрока = ТаблицаВсехРеквизитов.НайтиПоИдентификатору(ИндексСтроки);
		ВыбратьРеквизитаДляТабло(ВыбраннаяСтрока, НеобходимостьПерезаполнитьТекстЗапроса);
	КонецЦикла;
	
	Если НеобходимостьПерезаполнитьТекстЗапроса Тогда
		ЗаполнитьТекстЗапросаТабло();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьРеквизитыДляТабло(Команда)
	Для каждого ИндексСтроки Из Элементы.ТаблицаВыбранныхРеквизитов.ВыделенныеСтроки Цикл
		ВыбраннаяСтрока = ТаблицаВыбранныхРеквизитов.НайтиПоИдентификатору(ИндексСтроки);
		ТаблицаВыбранныхРеквизитовПередУдалениемКлиент(ВыбраннаяСтрока);
		
		ТаблицаВыбранныхРеквизитов.Удалить(ВыбраннаяСтрока);
	КонецЦикла;
	
	ЗаполнитьТекстЗапросаТабло();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗапрос(Команда)
	
	Элементы.ДекорацияТекущийТовар.Заголовок = ВыполнитьТекстЗапроса(Номенклатура, Объект.ЗапросТабло);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заменяет в заголовке наименование акселератора.
//
// Параметры:
//  ТекущиеДанные - Строка таблицы кнопок нижней панели.
//
&НаКлиенте
Процедура ЗаменитьНаименованиеАкселератора(ТекущаяСтрока)
	
	ТекущийАкселератор = СтроковоеПредставленияАкселератора(ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(СтарыйАкселератор) И ЗначениеЗаполнено(ТекущийАкселератор) Тогда
		
		ТекущаяСтрока.ЗаголовокКнопки = СтрЗаменить(ТекущаяСтрока.ЗаголовокКнопки, СтарыйАкселератор, ТекущийАкселератор);
		
	ИначеЕсли ЗначениеЗаполнено(СтарыйАкселератор) Тогда
		
		ТекущаяСтрока.ЗаголовокКнопки = СтрЗаменить(ТекущаяСтрока.ЗаголовокКнопки, СтарыйАкселератор, "");
		ТекущаяСтрока.ЗаголовокКнопки = СтрЗаменить(ТекущаяСтрока.ЗаголовокКнопки, "()", "");
		
	ИначеЕсли ЗначениеЗаполнено(ТекущийАкселератор) Тогда
		
		ТекущаяСтрока.ЗаголовокКнопки = ТекущаяСтрока.ЗаголовокКнопки+ " ("+ТекущийАкселератор+")"
		
	КонецЕсли;
	
	СтарыйАкселератор = ТекущийАкселератор;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКнопокИзМакета()

	Макет = Справочники.НастройкиРМК.ПолучитьМакет("СтандартныеДействияКнопокНижнейПанели");
	
	ТаблицаДействииКнопокНижнейПанели.Очистить();
	
	КолСтрок = Макет.ВысотаТаблицы;
	
	Для НомерСтрокиМакета = 2 По КолСтрок Цикл
		
		СтрокаТаблицы = ТаблицаДействииКнопокНижнейПанели.Добавить();
		СтрокаТаблицы.ПредставлениеКнопки = Макет.Область(НомерСтрокиМакета,1,НомерСтрокиМакета,1).Текст;
		СтрокаТаблицы.ИмяКоманды          = Макет.Область(НомерСтрокиМакета,2,НомерСтрокиМакета,2).Текст;
		СтрокаТаблицы.ИмяКнопки           = Макет.Область(НомерСтрокиМакета,3,НомерСтрокиМакета,3).Текст;
		СтрокаТаблицы.ЗаголовокКнопки     = Макет.Область(НомерСтрокиМакета,4,НомерСтрокиМакета,4).Текст;
		СтрокаТаблицы.ПроцедураКнопки     = Макет.Область(НомерСтрокиМакета,5,НомерСтрокиМакета,5).Текст;
		СтрокаТаблицы.Клавиша             = Макет.Область(НомерСтрокиМакета,6,НомерСтрокиМакета,6).Текст;
		СтрокаТаблицы.АкселераторAlt      = Булево(Макет.Область(НомерСтрокиМакета,7,НомерСтрокиМакета,7).Текст);
		СтрокаТаблицы.АкселераторCtrl     = Булево(Макет.Область(НомерСтрокиМакета,8,НомерСтрокиМакета,8).Текст);
		СтрокаТаблицы.АкселераторShift    = Булево(Макет.Область(НомерСтрокиМакета,9,НомерСтрокиМакета,9).Текст);
		СтрокаТаблицы.ПоУмолчанию         = Булево(Макет.Область(НомерСтрокиМакета,10,НомерСтрокиМакета,10).Текст);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьТаблицуКнопокИзМакета()

// Возвращает массив клавиш для акселераторов.
//
// Параметры:
//
// Возвращаемое значение:
//  Массив
//
&НаСервере
Функция МассивКлавишДляАкселераторов()
	
	МассивКлавиш = Новый Массив;
	
	// 0 ... 9
	Для Счетчик= 0 По 9 Цикл
		МассивКлавиш.Добавить("_"+Счетчик);
	КонецЦикла;
	
	// A...Z
	Для Счетчик= 65 По 90 Цикл
		МассивКлавиш.Добавить(Символ(Счетчик));
	КонецЦикла;
	
	МассивКлавиш.Добавить(Строка(Клавиша.BackSpace));
	
	// F1..F12
	Для Счетчик= 1 По 12 Цикл
		МассивКлавиш.Добавить("F"+Счетчик);
	КонецЦикла;
	
	// Num0 ... Num9 
	Для Счетчик= 0 По 9 Цикл
		МассивКлавиш.Добавить("Num"+Счетчик);
	КонецЦикла;
	
	МассивКлавиш.Добавить(Строка(Клавиша.NumAdd));
	МассивКлавиш.Добавить(Строка(Клавиша.NumDecimal));
	МассивКлавиш.Добавить(Строка(Клавиша.NumDivide));
	МассивКлавиш.Добавить(Строка(Клавиша.NumMultiply));
	МассивКлавиш.Добавить(Строка(Клавиша.NumSubtract));
	МассивКлавиш.Добавить(Строка(Клавиша.Space));
	МассивКлавиш.Добавить(Строка(Клавиша.Нет));
	
	Возврат МассивКлавиш;
	
КонецФункции

// Получает массив из таблицы действии кнопок нижней панели.
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//   Массив
//
&НаСервере
Функция МассивПредставленийКнопок()
	
	Возврат ТаблицаДействииКнопокНижнейПанели.Выгрузить().ВыгрузитьКолонку("ПредставлениеКнопки");
	
КонецФункции

// Возвращает по строке строковое представление Акселератора.
//
// Параметры:
//  ТекущиеДанные - Строка таблицы кнопок нижней панели.
//
// Возвращаемое значение:
//  Строка
//
&НаКлиенте
Функция СтроковоеПредставленияАкселератора(ТекущаяСтрока)
	
	Акселератор = "";
	
	Если Не ТекущаяСтрока.Клавиша = "Нет" Тогда
		Если ТекущаяСтрока.АкселераторCtrl Тогда
			Акселератор = Акселератор + "Ctrl+"
		КонецЕсли;
		
		Если ТекущаяСтрока.АкселераторAlt Тогда
			Акселератор = Акселератор + "Alt+"
		КонецЕсли;
		
		Если ТекущаяСтрока.АкселераторShift Тогда
			Акселератор = Акселератор + "Shift+"
		КонецЕсли;
		
		Акселератор = Акселератор + Строка(ТекущаяСтрока.Клавиша);
		
		Акселератор = СтрЗаменить(Акселератор, "_", "");
		Акселератор = СтрЗаменить(Акселератор, "NumAdd", "+");
		Акселератор = СтрЗаменить(Акселератор, "NumDecimal", ",");
		Акселератор = СтрЗаменить(Акселератор, "NumDivide", "/");
		Акселератор = СтрЗаменить(Акселератор, "NumMultiply", "*");
		Акселератор = СтрЗаменить(Акселератор, "NumSubtract", "-");
		Акселератор = СтрЗаменить(Акселератор, "Num", "");
	КонецЕсли;
	
	Возврат Акселератор;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюНижнююПанельКлиент()
	
	Объект.КнопкиНижнейПанели.Очистить();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ПоУмолчанию", Истина);
	СтрокиТаблицы = ТаблицаДействииКнопокНижнейПанели.НайтиСтроки(СтруктураПоиска);
	
	Для каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
		ТекущиеДанные = Объект.КнопкиНижнейПанели.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтрокаТаблицы);
	КонецЦикла;
	
	Объект.МаксимальноеКоличествоКнопокВОдномРяду = 10;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьТекстЗапроса(Номенклатура, ЗапросТабло)
	
	Попытка
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			Если ЗначениеЗаполнено(ЗапросТабло) Тогда
				ПостроительЗапроса = Новый ПостроительЗапроса;
				ПостроительЗапроса.Текст = ЗапросТабло;
				ПостроительЗапроса.ЗаполнитьНастройки();
				
				Запрос = Новый Запрос;
				Запрос.Текст = ЗапросТабло;
				Запрос.УстановитьПараметр("Ссылка", Номенклатура);
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				
				ТекстНадписи = "";
				Если Выборка.Следующий() Тогда
					Разделитель = "";
					Для каждого ДоступноеПоле Из ПостроительЗапроса.ДоступныеПоля Цикл
						Значение = Выборка[ДоступноеПоле.Имя];
						ТекстНадписи = ТекстНадписи + Разделитель + Строка(Значение);
						Разделитель = " ";
					КонецЦикла;
					
				КонецЕсли;
				
			Иначе
				ТекстНадписи = Строка(Номенклатура)
			КонецЕсли;
		Иначе
			Возврат "";
		КонецЕсли;
	Исключение
		ТекстНадписи = НСтр("ru = 'Ошибка запроса'") ;
	КонецПопытки;
	
	Возврат ТекстНадписи;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииРежимаНастройкиТабло()
	
	Если РежимНастройкиТабло = 0 Тогда
		Элементы.СтраницыТабло.ТекущаяСтраница = Элементы.СтраницаНастройкаТаблоВСписке;
	Иначе
		Элементы.СтраницыТабло.ТекущаяСтраница = Элементы.СтраницаНастройкаТаблоВКонструкторе;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция МассивНеВыбираемыхРеквизитовТабло()
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("Весовой");
	МассивРеквизитов.Добавить("ИспользоватьСерийныеНомера");
	МассивРеквизитов.Добавить("КоличествоПериодовДействия");
	МассивРеквизитов.Добавить("Периодичность");
	МассивРеквизитов.Добавить("ТипСерийногоНомера");
	МассивРеквизитов.Добавить("ТипСрокаДействия");
	МассивРеквизитов.Добавить("ФайлКартинки");
	
	Возврат МассивРеквизитов;
КонецФункции // МассивНеВыбираемыхРеквизитовТабло()

&НаСервере
Процедура ЗаполнитьВсеРеквизитыТабло()
	
	ТаблицаВсехРеквизитов.Очистить();
	ВыбратьНаименованиеПринудительно = НЕ ЗначениеЗаполнено(Объект.ЗапросТабло);
	
	СтрокТаблицы = ТаблицаВсехРеквизитов.Добавить();
	СтрокТаблицы.Реквизит = "Код";
	СтрокТаблицы.ТипРеквизита = "РеквизитСправочника";
	СтрокТаблицы.ПредставлениеРеквизита = "Код";
	
	СтрокТаблицы = ТаблицаВсехРеквизитов.Добавить();
	СтрокТаблицы.Реквизит = "Наименование";
	СтрокТаблицы.ТипРеквизита = "РеквизитСправочника";
	СтрокТаблицы.ПредставлениеРеквизита = "Наименование";
	Если ВыбратьНаименованиеПринудительно Тогда
		СтрокаТаблицыВыбранных = ТаблицаВыбранныхРеквизитов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыВыбранных, СтрокТаблицы);
		
		СтрокТаблицы.Выбрано = Истина;
	КонецЕсли;
	
	МассивНеВыбираемыхРеквизитовТабло = МассивНеВыбираемыхРеквизитовТабло();
	
	Для каждого Реквизит Из Метаданные.Справочники.Номенклатура.Реквизиты Цикл
		
		Если МассивНеВыбираемыхРеквизитовТабло.Найти(Реквизит.Имя) = Неопределено Тогда
			СтрокТаблицы = ТаблицаВсехРеквизитов.Добавить();
			СтрокТаблицы.Реквизит = Реквизит.Имя;
			СтрокТаблицы.ТипРеквизита = "РеквизитСправочника";
			СтрокТаблицы.ПредставлениеРеквизита = Реквизит.Синоним;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныхРеквизитовПередУдалениемКлиент(ТекущиеДанные)
	СтруктураПоиска = Новый Структура("Реквизит, ТипРеквизита, ПредставлениеРеквизита");
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекущиеДанные);
	
	СтрокиТаблицы = ТаблицаВсехРеквизитов.НайтиСтроки(СтруктураПоиска);
	
	Для каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
		СтрокаТаблицы.Выбрано = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекстЗапросаТабло()
	
	Если ТаблицаВыбранныхРеквизитов.Количество() > 0 Тогда
		Текст = НСтр("ru = 'ВЫБРАТЬ '");
		НомерСтроки = 0;
		Разредитель = "";
		Для каждого СтрокаТаблицы Из ТаблицаВыбранныхРеквизитов Цикл
			НомерСтроки = НомерСтроки + 1;
			Текст = Текст + Разредитель + Символы.ПС + НСтр("ru = '	Номенклатура.'") + СтрокаТаблицы.Реквизит + " КАК Поле" + Формат(НомерСтроки, "ЧЦ=2; ЧВН=");
			Разредитель = ",";
		КонецЦикла;
		
		Текст = Текст + Символы.ПС;
		Текст = Текст + НСтр("ru = 'ИЗ'") + Символы.ПС;
		Текст = Текст + НСтр("ru = '	Справочник.Номенклатура КАК Номенклатура'") + Символы.ПС;
		Текст = Текст + НСтр("ru = 'ГДЕ'") + Символы.ПС;
		Текст = Текст + НСтр("ru = '	Номенклатура.Ссылка = &Ссылка'");
		
		Объект.ЗапросТабло = Текст;
	Иначе
		Объект.ЗапросТабло = "";
	КонецЕсли;
	
	ТекстЗапроса.УстановитьТекст(Объект.ЗапросТабло);
	
	Модифицированность = Истина;
	Элементы.ДекорацияТекущийТовар.Заголовок = ВыполнитьТекстЗапроса(Номенклатура, Объект.ЗапросТабло);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьРеквизитаДляТабло(ВыбраннаяСтрока, НеобходимостьПерезаполнитьТекстЗапроса)
	Если НЕ ВыбраннаяСтрока.Выбрано Тогда
		СтрокаТаблицы = ТаблицаВыбранныхРеквизитов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыбраннаяСтрока);
		
		ВыбраннаяСтрока.Выбрано = Истина;
		
		НеобходимостьПерезаполнитьТекстЗапроса = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПалитраБыстрыхТоваровНачалоВыбораЗавершение()
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.ПалитраБыстрыхТоваров.Форма.ФормаВыбора.Открытие");

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкаРМК", Объект.Ссылка);
	
	ОткрытьФорму("Справочник.ПалитраБыстрыхТоваров.ФормаВыбора", ПараметрыФормы, Элементы.ПалитраБыстрыхТоваров,,,,,);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовЕГАИС()
	
	УчетАлкоголя = ИнтеграцияЕГАИСРТ.НужноРаботатьСЕГАИС();
	
	Элементы.ПоказыватьКрепостьНоменклатуры.Видимость = УчетАлкоголя;
	Элементы.ПоказыватьОбъемНоменклатуры.Видимость = УчетАлкоголя;
	Элементы.ПоказыватьПроизводителяНоменклатуры.Видимость = УчетАлкоголя;
	Элементы.ВсегдаОткрыватьФормуМножественногоВводаАкцизныхМарок.Видимость = УчетАлкоголя;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьШрифтИЦвет()
	
	Для Каждого Строка Из Объект.КнопкиНижнейПанели Цикл 
		Строка.Шрифт = ОбщегоНазначения.ЗначениеВСтрокуXML(Строка.ШрифтФорма);
		Строка.Цвет = ОбщегоНазначения.ЗначениеВСтрокуXML(Строка.ЦветФорма);
	КонецЦикла;
	Для Каждого Строка Из Объект.КнопкиВерхнейПанели Цикл 
		Строка.Шрифт = ОбщегоНазначения.ЗначениеВСтрокуXML(Строка.ШрифтФорма);
		Строка.Цвет = ОбщегоНазначения.ЗначениеВСтрокуXML(Строка.ЦветФорма);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьШрифтИЦвет()
	
	Для Каждого Строка Из Объект.КнопкиНижнейПанели Цикл
		Если ЗначениеЗаполнено(Строка.Шрифт) Тогда 
			Строка.ШрифтФорма = ОбщегоНазначения.ЗначениеИзСтрокиXML(Строка.Шрифт);
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.Цвет) Тогда 
			Строка.ЦветФорма = ОбщегоНазначения.ЗначениеИзСтрокиXML(Строка.Цвет);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из Объект.КнопкиВерхнейПанели Цикл
		Если ЗначениеЗаполнено(Строка.Шрифт) Тогда 
			Строка.ШрифтФорма = ОбщегоНазначения.ЗначениеИзСтрокиXML(Строка.Шрифт);
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.Цвет) Тогда 
			Строка.ЦветФорма = ОбщегоНазначения.ЗначениеИзСтрокиXML(Строка.Цвет);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьИменаКнопокВерхнейПанели()
	
	Макет = Справочники.НастройкиРМК.ПолучитьМакет("СтандартныеДействияКнопокВерхнейПанели");
	КолСтрок = Макет.ВысотаТаблицы;
	
	Для НомерСтрокиМакета = 2 По КолСтрок Цикл
		СтрокаТаблицы = Объект.КнопкиВерхнейПанели.Добавить();
		СтрокаТаблицы.ИмяКоманды          = Макет.Область(НомерСтрокиМакета,1,НомерСтрокиМакета,1).Текст;	
		СтрокаТаблицы.ИмяКнопки           = Макет.Область(НомерСтрокиМакета,2,НомерСтрокиМакета,2).Текст;
		СтрокаТаблицы.ЗаголовокКнопки     = Макет.Область(НомерСтрокиМакета,3,НомерСтрокиМакета,3).Текст;
		СтрокаТаблицы.ДоступнаКнопка      = Булево(Макет.Область(НомерСтрокиМакета,4,НомерСтрокиМакета,4).Текст);
		СтрокаТаблицы.ДоступнаКоманда     = Булево(Макет.Область(НомерСтрокиМакета,5,НомерСтрокиМакета,5).Текст);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИспользоватьРасширеннуюНастройкуКнопокНижнейПанелиПриИзмененииСервер()
	
	Элементы.МаксимальноеКоличествоКнопокВОдномРяду.АвтоОтметкаНезаполненного = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	Элементы.МаксимальноеКоличествоКнопокВОдномРяду.ОтметкаНезаполненного     = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРасширеннуюНастройкуКнопокНижнейПанелиПриИзмененииКлиент()
	
	Элементы.МаксимальноеКоличествоКнопокВОдномРяду.АвтоОтметкаНезаполненного = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	Элементы.МаксимальноеКоличествоКнопокВОдномРяду.ОтметкаНезаполненного     = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	
КонецПроцедуры

#КонецОбласти
