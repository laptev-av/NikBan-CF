#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ЭтоГруппа Тогда
		Если НЕ ОграничениеРазмераПодчиненныхСкидок Тогда
			МассивНепроверяемыхРеквизитов.Добавить("СпособПредоставления");	
			МассивНепроверяемыхРеквизитов.Добавить("ЗначениеСкидкиНаценки");
		КонецЕсли;
	Иначе
	
		Если СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.КоличествоБонусныхБаллов
			ИЛИ СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыВВидеБонусныхБаллов Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ВариантСовместногоПрименения");
			МассивНепроверяемыхРеквизитов.Добавить("ВидЦены");
			МассивНепроверяемыхРеквизитов.Добавить("ОбластьПредоставления");
			МассивНепроверяемыхРеквизитов.Добавить("КоличествоПодарковИзКорзиныПокупателя");
			МассивНепроверяемыхРеквизитов.Добавить("ТекстСообщения");
			МассивНепроверяемыхРеквизитов.Добавить("МоментВыдачиСообщения");
			МассивНепроверяемыхРеквизитов.Добавить("ЦеновыеГруппы.ЦеноваяГруппа");
			МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков");
			МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.Номенклатура");
			МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.Характеристика");
			МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.КоличествоУпаковок");
			МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.Количество");
			Если КоличествоПериодовДействия = 0 Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ПериодДействия");
			КонецЕсли;
			Если КоличествоПериодовОтсрочкиНачалаДействия = 0 Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ПериодОтсрочкиНачалаДействия");
			КонецЕсли;
			
			
		Иначе
			МассивНепроверяемыхРеквизитов.Добавить("БонуснаяПрограммаЛояльности");
			МассивНепроверяемыхРеквизитов.Добавить("ПериодДействия");
			МассивНепроверяемыхРеквизитов.Добавить("ПериодОтсрочкиНачалаДействия");
			
			Если СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сообщение 
				ИЛИ СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ОбластьПредоставления");
				МассивНепроверяемыхРеквизитов.Добавить("ЗначениеСкидкиНаценки");
			КонецЕсли;
			
			Если СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВидЦены Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ЗначениеСкидкиНаценки");
			Иначе
				МассивНепроверяемыхРеквизитов.Добавить("ВидЦены");
			КонецЕсли;
			
			ИспользуютсяВалюты = ЦенообразованиеПереопределяемый.ИспользуютсяВалюты(); 
			
			Если    НЕ СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма 
				ИЛИ НЕ ИспользуютсяВалюты Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ВалютаПредоставления");
			КонецЕсли;
			
			Если СпособПредоставления <> Перечисления.СпособыПредоставленияСкидокНаценок.Подарок 
				ИЛИ ПодарокИзКорзиныПокупателя Тогда
				МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков");
				МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.Номенклатура");
				МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.Количество");
				МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.КоличествоУпаковок");
				МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.Характеристика");
			Иначе		
				МассивНепроверяемыхРеквизитов.Добавить("НаборПодарков.Характеристика");
				ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, Новый Массив, Отказ, Новый Структура("ИмяТЧ","НаборПодарков"));	
			КонецЕсли;
			
			Если НЕ ПодарокИзКорзиныПокупателя ИЛИ СпособПредоставления <> Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
				МассивНепроверяемыхРеквизитов.Добавить("КоличествоПодарковИзКорзиныПокупателя");
			КонецЕсли;
			
			Если СпособПредоставления <> Перечисления.СпособыПредоставленияСкидокНаценок.Сообщение Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ТекстСообщения");
				МассивНепроверяемыхРеквизитов.Добавить("МоментВыдачиСообщения");
			КонецЕсли;
			
			Если СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки Тогда
				УсловиеНайдено = Ложь;
				Для Каждого СтрокаУсловия Из УсловияПредоставления Цикл
					ДанныеУсловия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаУсловия.УсловиеПредоставления,
																				"ВариантОпределенияПериодаНакопительнойСкидки, УсловиеПредоставления");
					Если ДанныеУсловия.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаНакопленныйОбъемПродаж
						И ДанныеУсловия.ВариантОпределенияПериодаНакопительнойСкидки = Перечисления.ВариантОпределенияПериодаНакопительнойСкидки.ПредыдущаяПокупка Тогда
						УсловиеНайдено = Истина;
					КонецЕсли;
				КонецЦикла;
				Если НЕ УсловиеНайдено Тогда
					Отказ = Истина;
					ТекстСообщения = НСтр("ru = 'Для использования скидки ""%1"" необходимо выбрать условие ""За накопленный объем продаж за предыдущую покупку"".'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СпособПредоставления);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"УсловияПредоставления",
					,
					Ложь);
				КонецЕсли;
			ИначеЕсли СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
				
				МассивНепроверяемыхРеквизитов.Добавить("ЗначениеСкидкиНаценки");
				
				Если НЕ ЗначениеЗаполнено(СегментНоменклатурыПредоставления) Тогда
					ТекстСообщения = НСтр("ru='Не указан сегмент номенклатуры предоставления'");
					Отказ = Истина;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"СегментНоменклатурыПредоставления",
					,
					Истина);
				КонецЕсли;
				
				ТекстСообщения = "";
				Если УсловияПредоставления.Количество() = 0 Тогда
					Отказ = Истина;
					ТекстСообщения = НСтр("ru='Если не заданы временные условия, то запрет продаж не будет действовать.'");
				Иначе
					ЕстьВременноеУсловие = Ложь;
					Для Каждого СтрокаУсловия Из УсловияПредоставления Цикл
						Если СтрокаУсловия.УсловиеПредоставления.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ЗаВремяПродажи Тогда
							ЕстьВременноеУсловие = Истина;
						КонецЕсли;
					КонецЦикла;
					Если НЕ ЕстьВременноеУсловие Тогда
						Отказ = Истина;
						ТекстСообщения = НСтр("ru='Если не заданы временные условия, то запрет продаж не будет действовать.'");
					КонецЕсли;
				КонецЕсли;
				Если ЗначениеЗаполнено(ТекстСообщения) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"УсловияПредоставления",
					,
					Истина);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВнешняяОбработка Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗначениеСкидкиНаценки");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ВнешняяОбработка");
	КонецЕсли;
	
	ЕстьОдноразовыйКод = Ложь;
	Для Каждого СтрокаУсловия Из УсловияПредоставления Цикл
		Если СтрокаУсловия.УсловиеПредоставления.УсловиеПредоставления = Перечисления.УсловияПредоставленияСкидокНаценок.ОдноразовыйКод Тогда
			ЕстьОдноразовыйКод = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьОдноразовыйКод И НЕ Управляемая Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='Если задано условие по одноразовому коду, то скидка должна назначаться вручную.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект,
			"Управляемая",
			,
			Истина);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ОчиститьНеиспользуемыеРеквизиты();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьНеиспользуемыеРеквизиты()

	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВидЦены Тогда
		
		ВалютаПредоставления = Неопределено;
		ЗначениеСкидкиНаценки = Неопределено;
		
		ЦеновыеГруппы.Очистить();
		
	ИначеЕсли СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Процент Тогда
		
		ВалютаПредоставления = Неопределено;
		ВидЦены              = Неопределено;
		
	ИначеЕсли СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма Тогда
		
		ВидЦены = Неопределено;
		
		Если ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе Тогда
			
			ЦеновыеГруппы.Очистить();
			
		ИначеЕсли ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке Тогда
			
			
		Иначе
			
			ЦеновыеГруппы.Очистить();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если  СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
	
		ВалютаПредоставления  = Неопределено;
		ЗначениеСкидкиНаценки = Неопределено;
		ВидЦены               = Неопределено;
		
		ЦеновыеГруппы.Очистить();
		
		Если ПодарокИзКорзиныПокупателя Тогда
			НаборПодарков.Очистить();
		Иначе
			КоличествоПодарковИзКорзиныПокупателя = 0;
		КонецЕсли;
	Иначе
		
		НаборПодарков.Очистить();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
