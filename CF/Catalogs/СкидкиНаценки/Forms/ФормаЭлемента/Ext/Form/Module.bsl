
&НаКлиенте
Перем КэшированныеЗначения;

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработкаРазблокированияРеквизитовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		ИспользоватьОтсрочкуНачалаДействияПриИзмененииСервер();
		ИспользоватьПериодДействияПриИзмененииСервер();
		Элементы.ВидЦены.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьУсловияПредоставленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Объект.УсловияПредоставления.Очистить();
		
		Для Каждого СтрокаУсловия Из Результат Цикл
			
			НоваяСтрока = Объект.УсловияПредоставления.Добавить();
			НоваяСтрока.УсловиеПредоставления = СтрокаУсловия.Значение;
			
		КонецЦикла;
		
		ОбновитьАвтонаименование(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзмененыНастройкиВнешнейОбработки(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		ПараметрыВнешнейОбработки = ПолучитьИзВременногоХранилища(Результат.АдресНастроекВнешнейОбработки);
		АдресНастроекВнешнейОбработки = Результат.АдресНастроекВнешнейОбработки;
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСозданиеИВыборНовойХарактеристики(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Объект.НаборПодарков.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторТекущейСтроки);
	ТекущаяСтрока.Характеристика = Результат;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	СкидкиНаценкиСервер.ЗаполнитьСписокЗначенийСпособовПредоставленияСкидки(Элементы.СпособПредоставления.СписокВыбора);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// Новый объект
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ПриСозданииЧтенииНаСервере(ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбновитьАвтонаименование(Модифицированность);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ПараметрыВнешнейОбработки = Новый ХранилищеЗначения(ПараметрыВнешнейОбработки);
	
КонецПроцедуры
	
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.НаборПодарков);
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеСкидкиНаценкиПриИзменении(Элемент)
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Процент")
		ИЛИ Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки") Тогда
		Если Объект.ЗначениеСкидкиНаценки > 100 Тогда
			ТекстСообщения = НСтр("ru = 'Процент скидки не может превышать 100%'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ЗначениеСкидкиНаценки","Объект");
			Объект.ЗначениеСкидкиНаценки = 0;
		КонецЕсли;
	КонецЕсли;
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если Ожидание = 0 Тогда
		СформироватьАвтоНаименованиеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеИзмененоПользователем = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьПредоставленияПриИзменении(Элемент)
	
	ИзменитьВидимостьЭлементов();
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодарокИзКорзиныПокупателяПриИзменении(Элемент)
	
	ИзменитьВидимостьЭлементов();
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СегментНоменклатурыПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СпособПредоставленияПриИзменении(Элемент)
	
	Объект.ЗначениеСкидкиНаценки = 0;
	ИзменитьВидимостьЭлементов();
	СпособПредоставленияПриИзмененииСервер();
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УправляемаяПриИзменении(Элемент)
	УправляемаяПриИзмененииСервер();
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура БонуснаяПрограммаЛояльностиПриИзменении(Элемент)
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПериодДействияПриИзменении(Элемент)
	
	Объект.КоличествоПериодовДействия = ИспользоватьПериодДействия;
	ИспользоватьПериодДействияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтсрочкуНачалаДействияПриИзменении(Элемент)
	
	Объект.КоличествоПериодовОтсрочкиНачалаДействия = ИспользоватьОтсрочкуНачалаДействия;
	ИспользоватьОтсрочкуНачалаДействияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешняяОбработкаПриИзменении(Элемент)
	
	ВнешняяОбработкаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СегментНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.СегментыНоменклатуры.Форма.ФормаВыбора.Открытие");

КонецПроцедуры

&НаКлиенте
Процедура БонуснаяПрограммаЛояльностиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
  
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.БонусныеПрограммыЛояльности.Форма.ФормаВыбора.Открытие");
                   
КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
	         Истина, "Справочник.СкидкиНаценки.Форма.ФормаВыбора.Открытие");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЦеновыеГруппы

&НаКлиенте
Процедура ЦеновыеГруппыПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУсловияПредоставления

&НаКлиенте
Процедура УсловияПредоставленияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура УсловияПредоставленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.УсловияПредоставленияСкидокНаценок.Форма.ФормаВыбора.Открытие");
          
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборПодарков

&НаКлиенте
Процедура НаборПодарковНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.НаборПодарков.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.НаборПодарков, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьХарактеристикуНоменклатуры(ЭтаФорма, Элемент, СтандартнаяОбработка, Элементы.НаборПодарков.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковХарактеристикаСоздание(Элемент, СтандартнаяОбработка)
	
	ОбработкаТабличнойЧастиТоварыКлиент.СоздатьХарактеристикуНоменклатуры(ЭтотОбъект, Элемент, СтандартнаяОбработка, Элементы.НаборПодарков.ТекущиеДанные, "НаборПодарков");
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковУпаковкаПриИзменении(Элемент)
	
	ПриИзмененииУпаковки(Элементы.НаборПодарков.ТекущиеДанные)
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьУпаковкуНоменклатуры(ДанныеВыбора, СтандартнаяОбработка, Элементы.НаборПодарков.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.НаборПодарков.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(
		Объект.НаборПодарков, 
		ТекущаяСтрока, 
		СтруктураДействий, 
		КэшированныеЗначения);	
	
	ПриИзмененииУпаковки(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
           
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.Номенклатура.Форма.ФормаВыбора.Открытие");
                 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ДополнительныеПараметры = Новый Структура;
		ОбработчикОповещения = Новый ОписаниеОповещения("ОбработкаРазблокированияРеквизитовЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, ОбработчикОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьУсловияПредоставления(Команда)
	
	СписокУсловийПредоставления = Новый СписокЗначений();
	Для Каждого ТекСтрока Из Объект.УсловияПредоставления Цикл
		СписокУсловийПредоставления.Добавить(ТекСтрока.УсловиеПредоставления);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Документ",      Объект.Ссылка);
	ПараметрыФормы.Вставить("УсловияПредоставления", СписокУсловийПредоставления);
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи") Тогда
		СтруктураОтбораУсловий = Новый Структура;
		СтруктураОтбораУсловий.Вставить("УсловиеПредоставления", ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаВремяПродажи"));
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбораУсловий);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ПодобратьУсловияПредоставленияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.УсловияПредоставленияСкидокНаценок.Форма.ФормаПодбора.Открытие");
        
	ОткрытьФорму("Справочник.УсловияПредоставленияСкидокНаценок.Форма.ФормаПодбора",
					ПараметрыФормы,
					ЭтаФорма,
					,
					,
					,
					ОбработчикОповещения,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура НастройкаВнешнейОбработки(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресНастроекВнешнейОбработки", АдресНастроекВнешнейОбработки);
	ОткрытьФорму(
		ИмяФормыНастроекВнешнейОбработки,
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ИзмененыНастройкиВнешнейОбработки", ЭтотОбъект));
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменитьВидимостьЭлементов()
	
	НачислениеБаллов = Ложь;
	ЗаголовокДекорацииБаллов = "";
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВидЦены Тогда
			
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; // В виде цен есть собственные ценовые группы.
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость           = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		
		Элементы.ВидЦены.Видимость               = Истина;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		Элементы.СтраницаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ОбластьПредоставления.Видимость = Истина;
		Элементы.СегментНоменклатуры.Видимость = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		Элементы.УсловияПредоставления.ОтметкаНезаполненного = Ложь;
		
		Элементы.СтраницаБонусы.Видимость = Ложь;
		Элементы.КратноКоличествуУсловий.Доступность = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.СтраницаУсловияПредоставления.Видимость = Истина;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Процент
		ИЛИ Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки Тогда
		
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ДекорацияПроцент.Видимость      = Истина;
		ДекорацияПроцент = НСтр("ru = '%'");
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		Элементы.ЗначениеСкидкиНаценки.ТолькоПросмотр = Элементы.СпособПредоставления.ТолькоПросмотр;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Процент;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		Элементы.СтраницаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ОбластьПредоставления.Видимость = Истина;
		Элементы.СегментНоменклатуры.Видимость = Истина;
		Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки Тогда
			Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Истина;
			Элементы.УсловияПредоставления.ОтметкаНезаполненного = Истина;
		Иначе
			Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
			Элементы.УсловияПредоставления.ОтметкаНезаполненного = Ложь;
		КонецЕсли;
		
		Элементы.СтраницаБонусы.Видимость = Ложь;
		Элементы.КратноКоличествуУсловий.Доступность = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.СтраницаУсловияПредоставления.Видимость = Истина;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма Тогда
		
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		
		Элементы.ДекорацияПроцент.Видимость = Истина;
		ДекорацияПроцент = НСтр("ru = 'руб.'");
		
		Если Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе Тогда
			
			Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
			
		ИначеЕсли Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке Тогда
			
			Элементы.ГруппаЦеновыеГруппы.Видимость = Истина;
			
		Иначе
			
			Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
			
		КонецЕсли;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		Элементы.СтраницаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ОбластьПредоставления.Видимость = Истина;
		Элементы.СегментНоменклатуры.Видимость = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		Элементы.УсловияПредоставления.ОтметкаНезаполненного = Ложь;
		
		Элементы.СтраницаБонусы.Видимость = Ложь;
		Элементы.КратноКоличествуУсловий.Доступность = Истина;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.СтраницаУсловияПредоставления.Видимость = Истина;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
		
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; 
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ОбластьПредоставления.Видимость = Истина;
		Элементы.СегментНоменклатуры.Видимость = Истина;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Истина;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Истина;
		
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Доступность = Объект.ПодарокИзКорзиныПокупателя;
		
		Элементы.СтраницаНаборПодарков.Видимость   = НЕ Объект.ПодарокИзКорзиныПокупателя; 
		
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		Элементы.УсловияПредоставления.ОтметкаНезаполненного = Ложь;
		
		Элементы.СтраницаБонусы.Видимость = Ложь;
		Элементы.КратноКоличествуУсловий.Доступность = Истина;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.СтраницаУсловияПредоставления.Видимость = Истина;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сообщение Тогда
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; 
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ОбластьПредоставления.Видимость = Ложь;
		Элементы.СегментНоменклатуры.Видимость = Ложь;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		Элементы.СтраницаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Истина;
		Элементы.ГруппаСообщение.Видимость       = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		Элементы.УсловияПредоставления.ОтметкаНезаполненного = Ложь;
		
		Элементы.СтраницаБонусы.Видимость = Ложь;
		Элементы.КратноКоличествуУсловий.Доступность = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.СтраницаУсловияПредоставления.Видимость = Истина;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; 
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ОбластьПредоставления.Видимость = Ложь;
		Элементы.СегментНоменклатуры.Видимость = Истина;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		Элементы.СтраницаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Истина;
		Элементы.УсловияПредоставления.ОтметкаНезаполненного = Истина;
		
		Элементы.СтраницаБонусы.Видимость = Ложь;
		Элементы.КратноКоличествуУсловий.Доступность = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.СтраницаУсловияПредоставления.Видимость = Истина;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВнешняяОбработка Тогда
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; 
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ОбластьПредоставления.Видимость = Ложь;
		Элементы.СегментНоменклатуры.Видимость = Ложь;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		Элементы.СтраницаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Истина;
		Элементы.УсловияПредоставления.ОтметкаНезаполненного = Истина;
		
		Элементы.СтраницаБонусы.Видимость = Ложь;
		Элементы.КратноКоличествуУсловий.Доступность = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Истина;
		Элементы.СтраницаУсловияПредоставления.Видимость = Ложь;
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.КоличествоБонусныхБаллов
		ИЛИ Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыВВидеБонусныхБаллов Тогда
		
		ЭтоКоличество = Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.КоличествоБонусныхБаллов;
		
		Элементы.СтраницаБонусы.Видимость = Истина;
		Элементы.ДекорацияПроцент.Видимость = НЕ ЭтоКоличество;
		ДекорацияПроцент = НСтр("ru = '%'");
		
		Элементы.ВидЦены.Видимость               = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		
		Если Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе Тогда
			Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
		ИначеЕсли Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке Тогда
			Элементы.ГруппаЦеновыеГруппы.Видимость = Истина;
		Иначе
			Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.ПодарокИзКорзиныПокупателя.Видимость            = Ложь;
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Ложь;
		Элементы.СтраницаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ОбластьПредоставления.Видимость = Истина;
		Элементы.СегментНоменклатуры.Видимость = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		Элементы.УсловияПредоставления.ОтметкаНезаполненного = Ложь;
		
		Элементы.КратноКоличествуУсловий.Доступность = ЭтоКоличество;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.СтраницаУсловияПредоставления.Видимость = Истина;
		
		НачислениеБаллов = Истина;
		
		ИспользоватьОтсрочкуНачалаДействияПриИзмененииСервер();
		ИспользоватьПериодДействияПриИзмененииСервер();
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИспользоватьОтсрочкуНачалаДействияПриИзмененииСервер()
	
	ДоступностьПериода = ИспользоватьОтсрочкуНачалаДействия = 1;
	
	Элементы.КоличествоПериодовОтсрочкиНачалаДействия.ТолькоПросмотр = НЕ ДоступностьПериода;
	Элементы.КоличествоПериодовОтсрочкиНачалаДействия.АвтоОтметкаНезаполненного = ДоступностьПериода;
	Элементы.КоличествоПериодовОтсрочкиНачалаДействия.ОтметкаНезаполненного = ДоступностьПериода;
	
	Элементы.ПериодОтсрочкиНачалаДействия.ТолькоПросмотр = НЕ ДоступностьПериода;
	Элементы.ПериодОтсрочкиНачалаДействия.АвтоОтметкаНезаполненного = ДоступностьПериода;
	Элементы.ПериодОтсрочкиНачалаДействия.ОтметкаНезаполненного = ДоступностьПериода;
	
КонецПроцедуры

&НаСервере
Процедура ИспользоватьПериодДействияПриИзмененииСервер()
	
	ДоступностьПериода = ИспользоватьПериодДействия = 1;
	
	Элементы.КоличествоПериодовДействия.ТолькоПросмотр = НЕ ДоступностьПериода;
	Элементы.КоличествоПериодовДействия.АвтоОтметкаНезаполненного = ДоступностьПериода;
	Элементы.КоличествоПериодовДействия.ОтметкаНезаполненного = ДоступностьПериода;
	
	Элементы.ПериодДействия.ТолькоПросмотр = НЕ ДоступностьПериода;
	Элементы.ПериодДействия.АвтоОтметкаНезаполненного = ДоступностьПериода;
	Элементы.ПериодДействия.ОтметкаНезаполненного = ДоступностьПериода;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАвтонаименование(Обновить = Истина)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) ИЛИ (Обновить И ИспользуетсяАвтоНаименование И Не НаименованиеИзмененоПользователем) Тогда
		Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
		ИспользуетсяАвтоНаименование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КоэффициентУпаковки(Упаковка)

	Возврат Упаковка.Коэффициент

КонецФункции

&НаКлиенте
Процедура ПриИзмененииУпаковки(ТекДанные)

	Если ЗначениеЗаполнено(ТекДанные.Упаковка)  Тогда
	
		Коэффициент = КоэффициентУпаковки(ТекДанные.Упаковка);
		
	Иначе
		
		Коэффициент = 1;
	
	КонецЕсли;
	
	ТекДанные.Количество = Коэффициент * ТекДанные.КоличествоУпаковок;

КонецПроцедуры

&НаКлиенте
Функция СформироватьАвтоНаименованиеНаКлиенте()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "";
	
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Процент") Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + НСтр("ru = '%'")
		+ ?(Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"),
			?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " + НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
			" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,""));
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сумма") Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки
		+ ?(Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"),
			?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
			" " +НСтр("ru = 'на строку'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,""));
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ВидЦены") Тогда
		
		СтрокаНаименования = НСтр("ru = 'Вид цены'") + " " + Объект.ВидЦены
		+ ?(Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"),
			?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
			" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,""));
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Подарок") Тогда
		
		СтрокаНаименования = НСтр("ru = 'Подарок'");
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сообщение")  Тогда
		
		СтрокаНаименования = НСтр("ru = 'Сообщение кассиру'");
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки") Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + НСтр("ru = '% от суммы предыдущей покупки'");
		Если Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе") Тогда
			СтрокаНаименования = СтрокаНаименования
				+ ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " + НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,"");
		Иначе
			СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'в строке'")
				+ ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления), НСтр("ru = ', если номенклатура входит в сегмент'")+ " " + Объект.СегментНоменклатурыПредоставления, "");
		КонецЕсли;
		
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи") Тогда
		
		СтрокаНаименования = НСтр("ru = 'Запрет розничной продажи алкоголя'");
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.КоличествоБонусныхБаллов")
		ИЛИ Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыВВидеБонусныхБаллов") Тогда
		СтрокаНаименования = СтрокаНаименования + НСтр("ru = 'Начисление бонусных баллов по программе лояльности: %1'");
		СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаНаименования, Объект.БонуснаяПрограммаЛояльности);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Если Объект.Управляемая Тогда
		СтрокаНаименования = НСтр("ru = 'Назначается вручную:'") + " " + СтрокаНаименования;
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.УсловияПредоставления.Количество() = 1 Тогда
		СтрокаНаименования = СтрокаНаименования + " ("+Объект.УсловияПредоставления[0].УсловиеПредоставления+")";
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	ИначеЕсли Объект.УсловияПредоставления.Количество() > 1 Тогда
		
		КоличествоУсловий = Объект.УсловияПредоставления.Количество();
		
		Если КоличествоУсловий >= 2 Тогда
			СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(несколько условий)'");
			Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		КонецЕсли;
		
	ИначеЕсли Объект.УсловияПредоставления.Количество() = 0 И ЗначениеЗаполнено(СтрокаНаименования) Тогда
		СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'без условий'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Если Объект.ЦеновыеГруппы.Количество() > 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(с уточнением по ценовым группам)'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Возврат СтрокаНаименования;

КонецФункции

&НаСервере
Функция СформироватьАвтоНаименованиеНаСервере()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "";
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Процент Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + НСтр("ru = '%'")
		+ ?(Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе,
			?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " + НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
			" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,""));
		
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки
		+ ?(Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе,
			?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
			" " +НСтр("ru = 'на строку'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,""));
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВидЦены Тогда
		
		СтрокаНаименования = НСтр("ru = 'Вид цены'") + " " + Объект.ВидЦены
		+ ?(Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе,
			?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
			" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,""));
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
		
		СтрокаНаименования = НСтр("ru = 'Подарок'");
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сообщение Тогда
		
		СтрокаНаименования = НСтр("ru = 'Сообщение кассиру'");
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		
		СтрокаНаименования = НСтр("ru = 'Запрет розничной продажи алкоголя'");
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.КоличествоБонусныхБаллов
		ИЛИ Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыВВидеБонусныхБаллов Тогда
		СтрокаНаименования = СтрокаНаименования + НСтр("ru = 'Начисление бонусных баллов по программе лояльности: %1'");
		СтрокаНаименования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаНаименования, Объект.БонуснаяПрограммаЛояльности);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Если Объект.Управляемая Тогда
		СтрокаНаименования = НСтр("ru = 'Назначается вручную:'") + " " + СтрокаНаименования;
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.УсловияПредоставления.Количество() = 1 Тогда
		СтрокаНаименования = СтрокаНаименования + " ("+Объект.УсловияПредоставления[0].УсловиеПредоставления+")";
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	ИначеЕсли Объект.УсловияПредоставления.Количество() > 1 Тогда
		
		КоличествоУсловий = Объект.УсловияПредоставления.Количество();
		
		Если КоличествоУсловий >= 2 Тогда
			СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(несколько условий)'");
			Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		КонецЕсли;
		
	ИначеЕсли Объект.УсловияПредоставления.Количество() = 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'без условий'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Если Объект.ЦеновыеГруппы.Количество() > 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(с уточнением по ценовым группам)'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	
	Возврат СтрокаНаименования;

КонецФункции

&НаСервере
Процедура УправляемаяПриИзмененииСервер()
	Если Объект.Управляемая
		И Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПустаяСсылка();
		ТекстСообщения = НСтр("ru = 'Запрет розничной продажи используется только в автоматических скидках'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			Объект,
			"Объект.СпособПредоставления",
			,
			Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СпособПредоставленияПриИзмененииСервер()
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		Элементы.Управляемая.Доступность = Ложь;
		Если Объект.Управляемая Тогда
			Объект.Управляемая = Ложь;
			ТекстСообщения = НСтр("ru = 'Запрет розничной продажи используется только в автоматических скидках'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Объект,
				"Объект.Управляемая",
				,
				Истина);
		КонецЕсли;
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВнешняяОбработка Тогда
		Объект.УсловияПредоставления.Очистить();
	Иначе
		Элементы.Управляемая.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВнешняяОбработкаПриИзмененииСервер()
	
	Элементы.НастройкаВнешнейОбработки.Доступность = ЗначениеЗаполнено(Объект.ВнешняяОбработка);
	ПараметрыВнешнейОбработки = Неопределено;
	АдресНастроекВнешнейОбработки = "";
	ОбновитьИмяФормыВнешнейОбработки();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИмяФормыВнешнейОбработки()
	
	Если ЗначениеЗаполнено(Объект.ВнешняяОбработка)
		И Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВнешняяОбработка Тогда 
		ИмяФормыНастроекВнешнейОбработки = СкидкиНаценкиВызовСервера.ИмяФормыНастроекВнешнейОбработки(
			Объект.ВнешняяОбработка,
			АдресНастроекВнешнейОбработки);
	Иначе
		ИмяФормыНастроекВнешнейОбработки = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере(ТекущийОбъект = Неопределено)
	
	ИспользоватьПериодДействия = ЗначениеЗаполнено(Объект.КоличествоПериодовДействия);
	ИспользоватьОтсрочкуНачалаДействия = ЗначениеЗаполнено(Объект.КоличествоПериодовОтсрочкиНачалаДействия);
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.НаборПодарков);
	
	ИзменитьВидимостьЭлементов();
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		Элементы.Управляемая.Доступность = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВнешняяОбработка)
		И Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВнешняяОбработка Тогда
		Если ТекущийОбъект = Неопределено Тогда
			ПараметрыВнешнейОбработки = Неопределено;
			АдресНастроекВнешнейОбработки = "";
		Иначе
			ПараметрыВнешнейОбработки = ТекущийОбъект.ПараметрыВнешнейОбработки.Получить();
			Если ПараметрыВнешнейОбработки <> Неопределено Тогда
				АдресНастроекВнешнейОбработки = ПоместитьВоВременноеХранилище(ПараметрыВнешнейОбработки, УникальныйИдентификатор);
			Иначе
				АдресНастроекВнешнейОбработки = "";
			КонецЕсли;
		КонецЕсли;
		ОбновитьИмяФормыВнешнейОбработки();
		Элементы.НастройкаВнешнейОбработки.Доступность = Истина;
	Иначе
		ПараметрыВнешнейОбработки = Неопределено;
		АдресНастроекВнешнейОбработки = "";
		Элементы.НастройкаВнешнейОбработки.Доступность = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Наименование) Тогда
		СформироватьАвтоНаименованиеНаСервере();
	Иначе
		Объект.Наименование = СформироватьАвтоНаименованиеНаСервере();
	КонецЕсли;
	Для Каждого ВариантНаименования Из Элементы.Наименование.СписокВыбора Цикл
		Если Объект.Наименование = ВариантНаименования.Значение Тогда
			ИспользуетсяАвтоНаименование = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

