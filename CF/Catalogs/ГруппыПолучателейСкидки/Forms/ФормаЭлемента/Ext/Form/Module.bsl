
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработкаРедактированияОписания(ИзмененныйТекст, ДополнительныеПараметры) Экспорт
	
	Если ИзмененныйТекст <> Неопределено
		И Объект.Описание <> ИзмененныйТекст Тогда
		Объект.Описание = ИзмененныйТекст;
		ЭтотОбъект.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьГруппуОбработкаВопроса(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Записать() Тогда
			СформироватьГруппуЗавершение();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОткрытияНастройкиСКД(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЭтотОбъект.Модифицированность = Истина;
		Объект.ИмяШаблонаСКД = Результат.ИмяТекущегоШаблонаСКД;
		Если Объект.ИмяШаблонаСКД = "ФизическиеЛица"
			ИЛИ Объект.ИмяШаблонаСКД = "ФизическиеЛицаДержателиКартПоВидуКарты"
			ИЛИ Объект.ИмяШаблонаСКД = "ФизическиеЛицаДержателиКартПоОбъемамНакоплений" Тогда
			Объект.ТипПолучателей = ПредопределенноеЗначение("Перечисление.ТипыПолучателейСкидок.ФизическиеЛица");
		ИначеЕсли Объект.ИмяШаблонаСКД = "Контрагенты" Тогда
			Объект.ТипПолучателей = ПредопределенноеЗначение("Перечисление.ТипыПолучателейСкидок.Контрагенты");
		Иначе
			Объект.ТипПолучателей = ПредопределенноеЗначение("Перечисление.ТипыПолучателейСкидок.СмешанныйСписок");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект.Ссылка.СхемаКомпоновкиДанных) Тогда
			СКД = Объект.Ссылка.СхемаКомпоновкиДанных.Получить();
		Иначе
			СКД = Справочники.ГруппыПолучателейСкидки.ПолучитьМакет("ФизическиеЛица");
			Объект.ТипПолучателей = Перечисления.ТипыПолучателейСкидок.ФизическиеЛица;
			Объект.ИмяШаблонаСКД = "ФизическиеЛица";
		КонецЕсли;
	Иначе
		СКД = Справочники.ГруппыПолучателейСкидки.ПолучитьМакет("ФизическиеЛица");
		Объект.ТипПолучателей = Перечисления.ТипыПолучателейСкидок.ФизическиеЛица;
		Объект.ИмяШаблонаСКД = "ФизическиеЛица";
	КонецЕсли;
	АдресСКД = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор);

	УстановитьДоступностьКомандыСформироватьСервер();
	Элементы.СпособФормирования.СписокВыбора.Добавить(Перечисления.СпособыФормированияСегментов.ПериодическиОбновлять);
	Элементы.СпособФормирования.СписокВыбора.Добавить(Перечисления.СпособыФормированияСегментов.ФормироватьВручную);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьДоступностьКомандыСформироватьСервер();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.СхемаКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСКД));
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ИмяШаблонаСКД) Тогда
		ТекущийОбъект.ИмяШаблонаСКД = "ФизическиеЛица";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбработкаРедактированияОписания", ЭтотОбъект, ДополнительныеПараметры);
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
		ОбработчикОповещения,
		Элемент.ТекстРедактирования,
		НСтр("ru = 'Описание группы'"));
	
КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияПриИзменении(Элемент)
	
	Если Объект.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически") Тогда
		Объект.СпособФормирования = ПредыдущийСпособФормирования;
		ТекстСообщения = НСтр("ru = 'Динамическое формирование групп не поддерживается'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,
			"СпособФормирования",
			"Объект");
	КонецЕсли;
	УстановитьДоступностьКомандыСформироватьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПредыдущийСпособФормирования = Объект.СпособФормирования;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если Объект.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Формирование доступно только для нединамических групп.'"));
		Возврат;
	КонецЕсли;
	
	Если (НЕ ЗначениеЗаполнено(Объект.Ссылка))
		ИЛИ ЭтотОбъект.Модифицированность Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("СформироватьГруппуОбработкаВопроса", ЭтотОбъект);
		ПоказатьВопрос(ОбработчикОповещения, НСтр("ru = 'Перед формированием необходимо записать группу. Записать?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		СформироватьГруппуЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиСКД(Команда)
	
	ЗаголовокФормыСКД = НСтр("ru = 'Настройки группы получателей скидки ""%1""'");
	ЗаголовокФормыСКД = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокФормыСКД, Объект.Наименование);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресСхемыКомпоновкиДанных", АдресСКД);
	ПараметрыОткрытия.Вставить("ИсточникШаблонов", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("Заголовок", ЗаголовокФормыСКД);
	ПараметрыОткрытия.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("ИмяШаблонаСКД", Объект.ИмяШаблонаСКД);
	ПараметрыОткрытия.Вставить("ВозвращатьИмяТекущегоШаблонаСКД", Истина);
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОбработкаОткрытияНастройкиСКД", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных", ПараметрыОткрытия, ЭтотОбъект, , , , ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьГруппуЗавершение()
	
	СегментыВызовСервера.СформироватьГруппуПолучателейСкидки(Объект.Ссылка);
	ПоказатьОповещениеПользователя(
		НСтр("ru='Формирование группы получателей скидки'"),,
		НСтр("ru='Группа сформирована.'"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКомандыСформироватьСервер()
	
	Элементы.Сформировать.Доступность = НЕ Объект.СпособФормирования = Перечисления.СпособыФормированияСегментов.ФормироватьДинамически;
	Если Элементы.Сформировать.Доступность Тогда
		Элементы.Сформировать.Доступность = НЕ ЭтотОбъект.ТолькоПросмотр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандыСформироватьКлиент()
	
	Элементы.Сформировать.Доступность = НЕ Объект.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически");
	Если Элементы.Сформировать.Доступность Тогда
		Элементы.Сформировать.Доступность = НЕ ЭтотОбъект.ТолькоПросмотр;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

