#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события "ПриКопировании".
//
Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ОбъектКопирования.ЭтоГруппа Тогда
		НаборСвойств              = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
		НаборСвойствХарактеристик = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

// В обработчике события "ПередЗаписью" объекта выполняется:
// - проверка корректности реквизита ТипНоменклатуры.
// - Проверка корректности реквизита ИспользованиеХарактеристик.
// - Проверка корректности реквизита ИспользованиеУпаковок.
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);

	// При необходимости создадим или изменим соответствующий набор свойств.
	Если Не Отказ Тогда
		ОбновитьРеквизитНаборСвойств();
		ОбновитьРеквизитНаборСвойствХарактеристик();
	КонецЕсли;
	
	// Подсистема Свойства
	УправлениеСвойствами.ПередЗаписьюВидаОбъекта(ЭтотОбъект, "Справочник_Номенклатура");
	
	Если Не ИспользоватьХарактеристики Тогда
		ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать;
	КонецЕсли;
	
	АлкогольнаяПродукция        = ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция;
	ПродукцияМаркируемаяДляГИСМ = ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ;
	КиЗГИСМ                     = ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ;
	
	Если Не ИспользоватьСерии Тогда
		ПолитикиУчетаСерий.Очистить();
		ИспользоватьНомерСерии             = Ложь;
		ИспользоватьСрокГодностиСерии      = Ложь;
		ИспользоватьКоличествоСерии        = Ложь;
		ИспользоватьRFIDМеткиСерии         = Ложь;
		ИспользоватьНомерКИЗГИСМСерии      = Ложь;
		ИспользоватьВидКИЗГИСМСерии        = Ложь;
		ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.ПустаяСсылка();
		НастройкаИспользованияСерий   = Перечисления.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка();
	Иначе
		ИспользоватьНомерКИЗГИСМСерии = (ПродукцияМаркируемаяДляГИСМ
											Или КиЗГИСМ);
		ИспользоватьВидКИЗГИСМСерии   = ПродукцияМаркируемаяДляГИСМ;
		
		Если ПродукцияМаркируемаяДляГИСМ
				Или КиЗГИСМ Тогда
			НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара;
		КонецЕсли;
			
		ИспользоватьКоличествоСерии = (НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ПартияТоваров);
		
		Если НастройкаИспользованияСерий <> Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара Тогда
			ИспользоватьRFIDМеткиСерии = Ложь;
		КонецЕсли;
		
		Если Не ИспользоватьСрокГодностиСерии Тогда
			ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	
	Если ЗначениеЗаполнено(ПравилоИменования) Тогда
		РаботаСПравиламиИменования.ДобавитьНоменклатуруКПереименованию(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ЭтоГруппа Тогда
		
		Если ИспользоватьСерии Тогда
			
			Если Не ИспользоватьСрокГодностиСерии Тогда
				
				МассивНепроверяемыхРеквизитов.Добавить("ТочностьУказанияСрокаГодностиСерии");
				
			КонецЕсли;
			
			КлючевыеРеквизиты = Новый Массив;
			КлючевыеРеквизиты.Добавить("Магазин");
			
			ОбщегоНазначенияРТ.ПроверитьНаличиеДублейСтрокТЧ(ЭтотОбъект,"ПолитикиУчетаСерий",КлючевыеРеквизиты,Отказ);
		Иначе
			МассивНепроверяемыхРеквизитов.Добавить("ТочностьУказанияСрокаГодностиСерии");
			МассивНепроверяемыхРеквизитов.Добавить("НастройкаИспользованияСерий");
			МассивНепроверяемыхРеквизитов.Добавить("ПолитикиУчетаСерий");
		КонецЕсли;
		
		Если (ПродукцияМаркируемаяДляГИСМ
			Или КиЗГИСМ)
			И Не ИспользоватьСерии Тогда
			
			Отказ = Истина;
			
			ТекстСообщения = НСтр("ru = 'Для маркируемой в ГИСМ продукции и для контрольных знаков ГИСМ должен быть обязательно включен учет серий.'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		Если КиЗГИСМ Тогда
			ПроверитьИспользованиеОрдернойСистемы(Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если НЕ ЭтоГруппа Тогда
		Если НЕ Перечисления.ТипыНоменклатуры.ВключеныФООсобенностейУчетаНоменклатуры() Тогда
			ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар;
		КонецЕсли;
		Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар И НЕ ЗначениеЗаполнено(ОсобенностьУчета) Тогда
			ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
			ПризнакПредметаРасчета = Справочники.ПризнакиПредметовРасчета.Товар;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьРеквизитНаборСвойств()
	
	Если Не ЗначениеЗаполнено(НаборСвойств) Тогда
		ОбъектНабора = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
	Иначе
		
		Если Не НаборСвойствНужноИзменить(НаборСвойств) Тогда
			Возврат;
		КонецЕсли;
		
		ОбъектНабора = НаборСвойств.ПолучитьОбъект();
		
	КонецЕсли;
	
	ОбъектНабора.Наименование    = Наименование;
	ОбъектНабора.Родитель        = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура;
	ОбъектНабора.ПометкаУдаления = ПометкаУдаления;
	ОбъектНабора.Используется = НЕ ПометкаУдаления;
	ОбъектНабора.Записать();
	
	РаботаСПравиламиИменования.ОбновитьПравилаИменованияПоНаборуСвойств(ОбъектНабора.Ссылка);
	
	НаборСвойств = ОбъектНабора.Ссылка;
	
КонецПроцедуры // ОбновитьРеквизитНаборСвойств()

Процедура ОбновитьРеквизитНаборСвойствХарактеристик()
	
	Если ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры
		ИЛИ ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры Тогда
	
		Если НЕ ЗначениеЗаполнено(НаборСвойствХарактеристик) Тогда
			ОбъектНабора = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		Иначе
			
			Если Не НаборСвойствНужноИзменить(НаборСвойствХарактеристик) Тогда
				Возврат;
			КонецЕсли;
			
			ОбъектНабора = НаборСвойствХарактеристик.ПолучитьОбъект();
			
		КонецЕсли;
		
		ОбъектНабора.Наименование    = Наименование + НСтр("ru = '(Для характеристик)'");
		ОбъектНабора.Родитель        = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры;
		ОбъектНабора.ПометкаУдаления = ПометкаУдаления;
		ОбъектНабора.Используется = НЕ ПометкаУдаления;
		ОбъектНабора.Записать();
		
		НаборСвойствХарактеристик = ОбъектНабора.Ссылка;
	
	Иначе
		
		Если ЗначениеЗаполнено(НаборСвойствХарактеристик) Тогда
			
			ОбъектНабора = НаборСвойствХарактеристик.ПолучитьОбъект();
			
			ОбъектНабора.Наименование    = Наименование + НСтр("ru = '(Для характеристик)'");
			ОбъектНабора.Родитель        = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры;
			ОбъектНабора.ПометкаУдаления = Истина;
			ОбъектНабора.Используется = Ложь;
			ОбъектНабора.Записать();
			
			НаборСвойствХарактеристик = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьРеквизитНаборСвойствХарактеристик()

Функция НаборСвойствНужноИзменить(НаборСвойств)
	
	Результат = ОбщегоНазначенияРТ.ПолучитьЗначенияРеквизитовОбъекта(НаборСвойств,
																	 Новый Структура("Наименование,ПометкаУдаления"));
	
	Возврат (Результат.Наименование <> Наименование) ИЛИ (Результат.ПометкаУдаления <> ПометкаУдаления);
	
КонецФункции // НаборСвойствНужноИзменить()

Процедура ПроверитьИспользованиеОрдернойСистемы(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНоменклатурыПолитикиУчетаСерий.Магазин,
	|	ВидыНоменклатурыПолитикиУчетаСерий.НомерСтроки
	|ПОМЕСТИТЬ ТаблицаЗапроса
	|ИЗ
	|	&ПолитикиУчетаСерий КАК ВидыНоменклатурыПолитикиУчетаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаЗапроса.Магазин КАК Справочник.Магазины) КАК Магазин,
	|	ТаблицаЗапроса.НомерСтроки
	|ПОМЕСТИТЬ ВидыНоменклатурыПолитикиУчетаСерий
	|ИЗ
	|	ТаблицаЗапроса КАК ТаблицаЗапроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыНоменклатурыПолитикиУчетаСерий.Магазин,
	|	ВидыНоменклатурыПолитикиУчетаСерий.НомерСтроки
	|ИЗ
	|	ВидыНоменклатурыПолитикиУчетаСерий КАК ВидыНоменклатурыПолитикиУчетаСерий
	|ГДЕ
	|	(ВидыНоменклатурыПолитикиУчетаСерий.Магазин.ИспользоватьОрдернуюСхемуПриОтгрузке
	|			ИЛИ ВидыНоменклатурыПолитикиУчетаСерий.Магазин.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|			ИЛИ ВидыНоменклатурыПолитикиУчетаСерий.Магазин.ИспользоватьОрдернуюСхемуПриПоступлении)";
	
	Запрос.УстановитьПараметр("ПолитикиУчетаСерий", ЭтотОбъект["ПолитикиУчетаСерий"].Выгрузить());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для контрольных идентификационных знаков не должен использоваться магазин (%1), работающий на ордерной схеме (строка №%2).'"),
			Выборка.Магазин,
			Выборка.НомерСтроки);
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ЭтотОбъект,
			"ПолитикиУчетаСерий[" + (Выборка.НомерСтроки - 1) + "].Номенклатура" ,
			,
			Отказ);
		
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
