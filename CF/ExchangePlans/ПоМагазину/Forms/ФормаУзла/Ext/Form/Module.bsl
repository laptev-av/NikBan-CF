
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяУзла = ОбменДаннымиПовтИсп.ПолучитьИмяПланаОбмена(Объект.Ссылка);
	ПредопределенныйУзел = ОбменДаннымиПовтИсп.ПолучитьЭтотУзелПланаОбмена(ИмяУзла);
	ЭтоПредопределенныйУзелПланаОбмена = ПредопределенныйУзел = Объект.Ссылка;
	
	Если ЭтоПредопределенныйУзелПланаОбмена 
		ИЛИ ПланыОбмена.ГлавныйУзел() = Объект.Ссылка Тогда
		
		Элементы.СтраницыФормы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		
	Иначе
		
		Элементы.МагазиныТолькоОстатки.Видимость = Объект.РежимВыгрузкиИнформативныхОстатков = Перечисления.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка;
		
	КонецЕсли;
	
	Если НЕ ЭтоПредопределенныйУзелПланаОбмена Тогда
		ЗаполнитьМагазины();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ИмяУзла = ОбменДаннымиПовтИсп.ПолучитьИмяПланаОбмена(Объект.Ссылка);
	ПредопределенныйУзел = ОбменДаннымиПовтИсп.ПолучитьЭтотУзелПланаОбмена(ИмяУзла);
	Если ПредопределенныйУзел <> Объект.Ссылка Тогда
		
		Если Магазины.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'В списке """"Магазины"""" нет ни одной строки'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Магазины",,
			Отказ);
			
		КонецЕсли;
		
		ЕстьОграничения = Ложь;
		
		Для каждого СтрокаТовары Из Магазины Цикл
			
			Если СтрокаТовары.ПередаватьДанные Тогда
				
				ЕстьОграничения = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ЕстьОграничения Тогда
			
			ТекстОшибки = НСтр("ru = 'В списке """"Магазины"""" не выбраны магазины,
			|для которых будут передаваться данные'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Магазины",,
			Отказ);
			
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			
			ТекущийОбъект.Магазины.Очистить();
			ТекущийОбъект.МагазиныИнформативныхОстатков.Очистить();
			КоличествоСтрок = Магазины.Количество() - 1;
			Для Индекс = 0 По КоличествоСтрок Цикл
				
				ТекущаяСтрока = Магазины[КоличествоСтрок - Индекс];
				Если НЕ ТекущаяСтрока.ПередаватьДанные Тогда
					
					Если ТекущаяСтрока.ТолькоОстатки 
						И Объект.РежимВыгрузкиИнформативныхОстатков = Перечисления.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка Тогда
						
						СтрокаОстатков = ТекущийОбъект.МагазиныИнформативныхОстатков.Добавить();
						СтрокаОстатков.Магазин = ТекущаяСтрока.Магазин;
						
					КонецЕсли;
					
				Иначе
					
					СтрокаМагазинов = ТекущийОбъект.Магазины.Добавить();
					СтрокаМагазинов.Магазин = ТекущаяСтрока.Магазин;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ОбменДаннымиСервер.ФормаУзлаПриЗаписиНаСервере(ТекущийОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("Запись_УзелПланаОбмена");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимВыгрузкиИнформативныхОстатковПриИзменении(Элемент)
	
	Если Объект.РежимВыгрузкиИнформативныхОстатков <> ПредопределенноеЗначение("Перечисление.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка") Тогда
		
		Для каждого ТекущаяСтрока Из Магазины Цикл
			
			Если ТекущаяСтрока.ТолькоОстатки Тогда
				
				ТекущаяСтрока.ТолькоОстатки = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
		
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПередаватьДанныеПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Магазины.ТекущиеДанные;
	
	Если ТекущаяСтрока.ПередаватьДанные 
		И ТекущаяСтрока.ТолькоОстатки Тогда
		
		ТекущаяСтрока.ТолькоОстатки = Ложь;
			
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныТолькоОстаткиПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Магазины.ТекущиеДанные;
	
	Если ТекущаяСтрока.ПередаватьДанные 
		И ТекущаяСтрока.ТолькоОстатки Тогда
		
		ТекущаяСтрока.ПередаватьДанные = Ложь;
			
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыгрузку(Команда)
	СинхронизацияНаСервере(Ложь, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	СинхронизацияНаСервере(Истина, Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьМагазины()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодЗапрос.Магазин,
	|	МАКСИМУМ(ПодЗапрос.ПередаватьДанные) КАК ПередаватьДанные,
	|	МАКСИМУМ(ПодЗапрос.ТолькоОстатки) КАК ТолькоОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		Магазины.Ссылка КАК Магазин,
	|		ЛОЖЬ КАК ПередаватьДанные,
	|		ЛОЖЬ КАК ТолькоОстатки
	|	ИЗ
	|		Справочник.Магазины КАК Магазины
	|	ГДЕ
	|		(НЕ Магазины.СкладУправляющейСистемы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТЧМагазины.Магазин,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		ПланОбмена.ПоМагазину.Магазины КАК ТЧМагазины
	|	ГДЕ
	|		ТЧМагазины.Ссылка = &ЭтотУзел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТЧМагазины.Магазин,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		ПланОбмена.ПоМагазину.МагазиныИнформативныхОстатков КАК ТЧМагазины
	|	ГДЕ
	|		ТЧМагазины.Ссылка = &ЭтотУзел) КАК ПодЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодЗапрос.Магазин
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодЗапрос.Магазин.Наименование");
	
	Запрос.УстановитьПараметр("ЭтотУзел", Объект.Ссылка);
		
	Магазины.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Если Объект.РежимВыгрузкиИнформативныхОстатков = ПредопределенноеЗначение("Перечисление.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка") Тогда
		
		Если НЕ Элементы.МагазиныТолькоОстатки.Видимость Тогда
			
			Элементы.МагазиныТолькоОстатки.Видимость = Истина;
		
		КонецЕсли;
		
	ИначеЕсли Элементы.МагазиныТолькоОстатки.Видимость Тогда
		
		Элементы.МагазиныТолькоОстатки.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СинхронизацияНаСервере(ВыполнятьЗагрузку = Ложь, ВыполнятьВыгрузку = Ложь)
	ПараметрыОбмена = ОбменДаннымиСервер.ПараметрыОбмена();
	ПараметрыОбмена.ВыполнятьЗагрузку = ВыполнятьЗагрузку;
	ПараметрыОбмена.ВыполнятьВыгрузку = ВыполнятьВыгрузку;
	ОбменДаннымиСервер.ВыполнитьОбменДаннымиДляУзлаИнформационнойБазы(Объект.Ссылка, ПараметрыОбмена, Ложь)
КонецПроцедуры

#КонецОбласти