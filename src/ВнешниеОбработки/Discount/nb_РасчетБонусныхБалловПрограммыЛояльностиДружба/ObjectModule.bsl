////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = СкидкиНаценкиСервер.ПараметрыРегистрацииВнешнейОбработкиСкидкиНаценки(
		НСтр("ru = 'Расчет бонусных баллов программы лояльности Дружба'"),
		НСтр("ru = 'Расчет бонусных баллов программы лояльности Дружба'"));
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Возвращает способ применения скидки (наценки)
//
// Возвращаемое значение:
//	Перечисления.СпособыПримененияСкидокНаценок - способ применения скидки (наценки)
//
Функция СпособПрименения() Экспорт
	
	СпособПрименения = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыВВидеБонусныхБаллов;	
	Возврат СпособПрименения;
	
КонецФункции

Функция Рассчитать(СтрокаДереваСкидок, ПараметрыВнешнейОбработки, ПараметрыРасчета) Экспорт
	
	РезультатРасчета = Новый Структура;
	
	ТаблицаСкидок = СкидкиНаценкиСервер.ПустаяТаблицаСкидок();
	ТаблицаПодарков = СкидкиНаценкиСервер.ПустаяТаблицаПодарков();
	
	РезультатРасчета.Вставить("ТаблицаСкидок", ТаблицаСкидок);
	РезультатРасчета.Вставить("ТаблицаПодарков", ТаблицаПодарков);
	
	Если НЕ ПараметрыРасчета.ДисконтнаяКартаПредъявлена Тогда
		Возврат РезультатРасчета;
	КонецЕсли;	
	
	ДисконтнаяКарта = ПараметрыРасчета.ДисконтныеКарты[0];
	ТоварыСегмента = СтрокаДереваСкидок.СтруктураДополнительныхДанных.ТаблицаТоваровПоСегментам;
	
	ПараметрыРасчетаБонусов = Новый Структура;
	ПараметрыРасчетаБонусов.Вставить("СкидкаНаценка", СтрокаДереваСкидок.СкидкаНаценка);
	ПараметрыРасчетаБонусов.Вставить("ДатаНачисления", ПараметрыРасчета.ТекущаяДата);
	
	nb_ПрограммаЛояльностиДружбаСервер.РассчитатьБонусныеБаллыПоПрограммеДружбаПоТоварам(ДисконтнаяКарта, СтрокаДереваСкидок, ПараметрыРасчета, ТоварыСегмента, ТаблицаСкидок);
	
	
	
	
	РезультатРасчета.Вставить("ТаблицаСкидок", ТаблицаСкидок);
	РезультатРасчета.Вставить("ТаблицаПодарков", ТаблицаПодарков);
	
	Возврат РезультатРасчета;
	
КонецФункции

// Возвращает имя формы внешней обработки,
// предназначенной для настройки условия предоставления 
//
// Возвращаемое значение:
//	Строка - Имя формы
//
Функция ИмяФормыНастроек() Экспорт
	
	Возврат "Настройки";
	
КонецФункции

// Возвращает расширенное описание условия предоставления с учетом настроек
//
// Параметры:
//	Настройки - Структура - Значения настроек условия предоставления
//
// Возвращаемое значение:
//	Строка - Расширенное описание
//
Функция ОписаниеДействия(Настройки) Экспорт
	
	Попытка
		Если Настройки <> Неопределено Тогда
			Описание = НСтр("ru = 'Начисляются бонусные баллы программы лояльности Дружба'");
		Иначе
			Описание = НСтр("ru = 'Не заданы настройки начисления'");
		КонецЕсли;
	Исключение
		Описание = НСтр("ru = 'Настройки не загружены.
		           |При загрузке настроек скидки произошла ошибка:
		           |'") + ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Описание;
	
КонецФункции

// Возвращает заголовок условия предоставления с учетом настроек
//
// Параметры:
//	Настройки - Структура - Значения настроек условия предоставления
//
// Возвращаемое значение:
//	Строка - Наименование условия
//
Функция Автонаименование(Настройки) Экспорт
	
	Возврат НСтр("ru = 'Расчет бонусных баллов программы лояльности Дружба'");
	
КонецФункции
